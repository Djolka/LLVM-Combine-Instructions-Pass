/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace Mips {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_VALUE_LIST	= 14,
    DBG_INSTR_REF	= 15,
    DBG_PHI	= 16,
    DBG_LABEL	= 17,
    REG_SEQUENCE	= 18,
    COPY	= 19,
    BUNDLE	= 20,
    LIFETIME_START	= 21,
    LIFETIME_END	= 22,
    PSEUDO_PROBE	= 23,
    ARITH_FENCE	= 24,
    STACKMAP	= 25,
    FENTRY_CALL	= 26,
    PATCHPOINT	= 27,
    LOAD_STACK_GUARD	= 28,
    PREALLOCATED_SETUP	= 29,
    PREALLOCATED_ARG	= 30,
    STATEPOINT	= 31,
    LOCAL_ESCAPE	= 32,
    FAULTING_OP	= 33,
    PATCHABLE_OP	= 34,
    PATCHABLE_FUNCTION_ENTER	= 35,
    PATCHABLE_RET	= 36,
    PATCHABLE_FUNCTION_EXIT	= 37,
    PATCHABLE_TAIL_CALL	= 38,
    PATCHABLE_EVENT_CALL	= 39,
    PATCHABLE_TYPED_EVENT_CALL	= 40,
    ICALL_BRANCH_FUNNEL	= 41,
    MEMBARRIER	= 42,
    G_ASSERT_SEXT	= 43,
    G_ASSERT_ZEXT	= 44,
    G_ASSERT_ALIGN	= 45,
    G_ADD	= 46,
    G_SUB	= 47,
    G_MUL	= 48,
    G_SDIV	= 49,
    G_UDIV	= 50,
    G_SREM	= 51,
    G_UREM	= 52,
    G_SDIVREM	= 53,
    G_UDIVREM	= 54,
    G_AND	= 55,
    G_OR	= 56,
    G_XOR	= 57,
    G_IMPLICIT_DEF	= 58,
    G_PHI	= 59,
    G_FRAME_INDEX	= 60,
    G_GLOBAL_VALUE	= 61,
    G_CONSTANT_POOL	= 62,
    G_EXTRACT	= 63,
    G_UNMERGE_VALUES	= 64,
    G_INSERT	= 65,
    G_MERGE_VALUES	= 66,
    G_BUILD_VECTOR	= 67,
    G_BUILD_VECTOR_TRUNC	= 68,
    G_CONCAT_VECTORS	= 69,
    G_PTRTOINT	= 70,
    G_INTTOPTR	= 71,
    G_BITCAST	= 72,
    G_FREEZE	= 73,
    G_INTRINSIC_FPTRUNC_ROUND	= 74,
    G_INTRINSIC_TRUNC	= 75,
    G_INTRINSIC_ROUND	= 76,
    G_INTRINSIC_LRINT	= 77,
    G_INTRINSIC_ROUNDEVEN	= 78,
    G_READCYCLECOUNTER	= 79,
    G_LOAD	= 80,
    G_SEXTLOAD	= 81,
    G_ZEXTLOAD	= 82,
    G_INDEXED_LOAD	= 83,
    G_INDEXED_SEXTLOAD	= 84,
    G_INDEXED_ZEXTLOAD	= 85,
    G_STORE	= 86,
    G_INDEXED_STORE	= 87,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 88,
    G_ATOMIC_CMPXCHG	= 89,
    G_ATOMICRMW_XCHG	= 90,
    G_ATOMICRMW_ADD	= 91,
    G_ATOMICRMW_SUB	= 92,
    G_ATOMICRMW_AND	= 93,
    G_ATOMICRMW_NAND	= 94,
    G_ATOMICRMW_OR	= 95,
    G_ATOMICRMW_XOR	= 96,
    G_ATOMICRMW_MAX	= 97,
    G_ATOMICRMW_MIN	= 98,
    G_ATOMICRMW_UMAX	= 99,
    G_ATOMICRMW_UMIN	= 100,
    G_ATOMICRMW_FADD	= 101,
    G_ATOMICRMW_FSUB	= 102,
    G_ATOMICRMW_FMAX	= 103,
    G_ATOMICRMW_FMIN	= 104,
    G_ATOMICRMW_UINC_WRAP	= 105,
    G_ATOMICRMW_UDEC_WRAP	= 106,
    G_FENCE	= 107,
    G_BRCOND	= 108,
    G_BRINDIRECT	= 109,
    G_INVOKE_REGION_START	= 110,
    G_INTRINSIC	= 111,
    G_INTRINSIC_W_SIDE_EFFECTS	= 112,
    G_ANYEXT	= 113,
    G_TRUNC	= 114,
    G_CONSTANT	= 115,
    G_FCONSTANT	= 116,
    G_VASTART	= 117,
    G_VAARG	= 118,
    G_SEXT	= 119,
    G_SEXT_INREG	= 120,
    G_ZEXT	= 121,
    G_SHL	= 122,
    G_LSHR	= 123,
    G_ASHR	= 124,
    G_FSHL	= 125,
    G_FSHR	= 126,
    G_ROTR	= 127,
    G_ROTL	= 128,
    G_ICMP	= 129,
    G_FCMP	= 130,
    G_SELECT	= 131,
    G_UADDO	= 132,
    G_UADDE	= 133,
    G_USUBO	= 134,
    G_USUBE	= 135,
    G_SADDO	= 136,
    G_SADDE	= 137,
    G_SSUBO	= 138,
    G_SSUBE	= 139,
    G_UMULO	= 140,
    G_SMULO	= 141,
    G_UMULH	= 142,
    G_SMULH	= 143,
    G_UADDSAT	= 144,
    G_SADDSAT	= 145,
    G_USUBSAT	= 146,
    G_SSUBSAT	= 147,
    G_USHLSAT	= 148,
    G_SSHLSAT	= 149,
    G_SMULFIX	= 150,
    G_UMULFIX	= 151,
    G_SMULFIXSAT	= 152,
    G_UMULFIXSAT	= 153,
    G_SDIVFIX	= 154,
    G_UDIVFIX	= 155,
    G_SDIVFIXSAT	= 156,
    G_UDIVFIXSAT	= 157,
    G_FADD	= 158,
    G_FSUB	= 159,
    G_FMUL	= 160,
    G_FMA	= 161,
    G_FMAD	= 162,
    G_FDIV	= 163,
    G_FREM	= 164,
    G_FPOW	= 165,
    G_FPOWI	= 166,
    G_FEXP	= 167,
    G_FEXP2	= 168,
    G_FLOG	= 169,
    G_FLOG2	= 170,
    G_FLOG10	= 171,
    G_FNEG	= 172,
    G_FPEXT	= 173,
    G_FPTRUNC	= 174,
    G_FPTOSI	= 175,
    G_FPTOUI	= 176,
    G_SITOFP	= 177,
    G_UITOFP	= 178,
    G_FABS	= 179,
    G_FCOPYSIGN	= 180,
    G_IS_FPCLASS	= 181,
    G_FCANONICALIZE	= 182,
    G_FMINNUM	= 183,
    G_FMAXNUM	= 184,
    G_FMINNUM_IEEE	= 185,
    G_FMAXNUM_IEEE	= 186,
    G_FMINIMUM	= 187,
    G_FMAXIMUM	= 188,
    G_PTR_ADD	= 189,
    G_PTRMASK	= 190,
    G_SMIN	= 191,
    G_SMAX	= 192,
    G_UMIN	= 193,
    G_UMAX	= 194,
    G_ABS	= 195,
    G_LROUND	= 196,
    G_LLROUND	= 197,
    G_BR	= 198,
    G_BRJT	= 199,
    G_INSERT_VECTOR_ELT	= 200,
    G_EXTRACT_VECTOR_ELT	= 201,
    G_SHUFFLE_VECTOR	= 202,
    G_CTTZ	= 203,
    G_CTTZ_ZERO_UNDEF	= 204,
    G_CTLZ	= 205,
    G_CTLZ_ZERO_UNDEF	= 206,
    G_CTPOP	= 207,
    G_BSWAP	= 208,
    G_BITREVERSE	= 209,
    G_FCEIL	= 210,
    G_FCOS	= 211,
    G_FSIN	= 212,
    G_FSQRT	= 213,
    G_FFLOOR	= 214,
    G_FRINT	= 215,
    G_FNEARBYINT	= 216,
    G_ADDRSPACE_CAST	= 217,
    G_BLOCK_ADDR	= 218,
    G_JUMP_TABLE	= 219,
    G_DYN_STACKALLOC	= 220,
    G_STRICT_FADD	= 221,
    G_STRICT_FSUB	= 222,
    G_STRICT_FMUL	= 223,
    G_STRICT_FDIV	= 224,
    G_STRICT_FREM	= 225,
    G_STRICT_FMA	= 226,
    G_STRICT_FSQRT	= 227,
    G_READ_REGISTER	= 228,
    G_WRITE_REGISTER	= 229,
    G_MEMCPY	= 230,
    G_MEMCPY_INLINE	= 231,
    G_MEMMOVE	= 232,
    G_MEMSET	= 233,
    G_BZERO	= 234,
    G_VECREDUCE_SEQ_FADD	= 235,
    G_VECREDUCE_SEQ_FMUL	= 236,
    G_VECREDUCE_FADD	= 237,
    G_VECREDUCE_FMUL	= 238,
    G_VECREDUCE_FMAX	= 239,
    G_VECREDUCE_FMIN	= 240,
    G_VECREDUCE_ADD	= 241,
    G_VECREDUCE_MUL	= 242,
    G_VECREDUCE_AND	= 243,
    G_VECREDUCE_OR	= 244,
    G_VECREDUCE_XOR	= 245,
    G_VECREDUCE_SMAX	= 246,
    G_VECREDUCE_SMIN	= 247,
    G_VECREDUCE_UMAX	= 248,
    G_VECREDUCE_UMIN	= 249,
    G_SBFX	= 250,
    G_UBFX	= 251,
    ABSMacro	= 252,
    ADJCALLSTACKDOWN	= 253,
    ADJCALLSTACKUP	= 254,
    AND_V_D_PSEUDO	= 255,
    AND_V_H_PSEUDO	= 256,
    AND_V_W_PSEUDO	= 257,
    ATOMIC_CMP_SWAP_I16	= 258,
    ATOMIC_CMP_SWAP_I16_POSTRA	= 259,
    ATOMIC_CMP_SWAP_I32	= 260,
    ATOMIC_CMP_SWAP_I32_POSTRA	= 261,
    ATOMIC_CMP_SWAP_I64	= 262,
    ATOMIC_CMP_SWAP_I64_POSTRA	= 263,
    ATOMIC_CMP_SWAP_I8	= 264,
    ATOMIC_CMP_SWAP_I8_POSTRA	= 265,
    ATOMIC_LOAD_ADD_I16	= 266,
    ATOMIC_LOAD_ADD_I16_POSTRA	= 267,
    ATOMIC_LOAD_ADD_I32	= 268,
    ATOMIC_LOAD_ADD_I32_POSTRA	= 269,
    ATOMIC_LOAD_ADD_I64	= 270,
    ATOMIC_LOAD_ADD_I64_POSTRA	= 271,
    ATOMIC_LOAD_ADD_I8	= 272,
    ATOMIC_LOAD_ADD_I8_POSTRA	= 273,
    ATOMIC_LOAD_AND_I16	= 274,
    ATOMIC_LOAD_AND_I16_POSTRA	= 275,
    ATOMIC_LOAD_AND_I32	= 276,
    ATOMIC_LOAD_AND_I32_POSTRA	= 277,
    ATOMIC_LOAD_AND_I64	= 278,
    ATOMIC_LOAD_AND_I64_POSTRA	= 279,
    ATOMIC_LOAD_AND_I8	= 280,
    ATOMIC_LOAD_AND_I8_POSTRA	= 281,
    ATOMIC_LOAD_MAX_I16	= 282,
    ATOMIC_LOAD_MAX_I16_POSTRA	= 283,
    ATOMIC_LOAD_MAX_I32	= 284,
    ATOMIC_LOAD_MAX_I32_POSTRA	= 285,
    ATOMIC_LOAD_MAX_I64	= 286,
    ATOMIC_LOAD_MAX_I64_POSTRA	= 287,
    ATOMIC_LOAD_MAX_I8	= 288,
    ATOMIC_LOAD_MAX_I8_POSTRA	= 289,
    ATOMIC_LOAD_MIN_I16	= 290,
    ATOMIC_LOAD_MIN_I16_POSTRA	= 291,
    ATOMIC_LOAD_MIN_I32	= 292,
    ATOMIC_LOAD_MIN_I32_POSTRA	= 293,
    ATOMIC_LOAD_MIN_I64	= 294,
    ATOMIC_LOAD_MIN_I64_POSTRA	= 295,
    ATOMIC_LOAD_MIN_I8	= 296,
    ATOMIC_LOAD_MIN_I8_POSTRA	= 297,
    ATOMIC_LOAD_NAND_I16	= 298,
    ATOMIC_LOAD_NAND_I16_POSTRA	= 299,
    ATOMIC_LOAD_NAND_I32	= 300,
    ATOMIC_LOAD_NAND_I32_POSTRA	= 301,
    ATOMIC_LOAD_NAND_I64	= 302,
    ATOMIC_LOAD_NAND_I64_POSTRA	= 303,
    ATOMIC_LOAD_NAND_I8	= 304,
    ATOMIC_LOAD_NAND_I8_POSTRA	= 305,
    ATOMIC_LOAD_OR_I16	= 306,
    ATOMIC_LOAD_OR_I16_POSTRA	= 307,
    ATOMIC_LOAD_OR_I32	= 308,
    ATOMIC_LOAD_OR_I32_POSTRA	= 309,
    ATOMIC_LOAD_OR_I64	= 310,
    ATOMIC_LOAD_OR_I64_POSTRA	= 311,
    ATOMIC_LOAD_OR_I8	= 312,
    ATOMIC_LOAD_OR_I8_POSTRA	= 313,
    ATOMIC_LOAD_SUB_I16	= 314,
    ATOMIC_LOAD_SUB_I16_POSTRA	= 315,
    ATOMIC_LOAD_SUB_I32	= 316,
    ATOMIC_LOAD_SUB_I32_POSTRA	= 317,
    ATOMIC_LOAD_SUB_I64	= 318,
    ATOMIC_LOAD_SUB_I64_POSTRA	= 319,
    ATOMIC_LOAD_SUB_I8	= 320,
    ATOMIC_LOAD_SUB_I8_POSTRA	= 321,
    ATOMIC_LOAD_UMAX_I16	= 322,
    ATOMIC_LOAD_UMAX_I16_POSTRA	= 323,
    ATOMIC_LOAD_UMAX_I32	= 324,
    ATOMIC_LOAD_UMAX_I32_POSTRA	= 325,
    ATOMIC_LOAD_UMAX_I64	= 326,
    ATOMIC_LOAD_UMAX_I64_POSTRA	= 327,
    ATOMIC_LOAD_UMAX_I8	= 328,
    ATOMIC_LOAD_UMAX_I8_POSTRA	= 329,
    ATOMIC_LOAD_UMIN_I16	= 330,
    ATOMIC_LOAD_UMIN_I16_POSTRA	= 331,
    ATOMIC_LOAD_UMIN_I32	= 332,
    ATOMIC_LOAD_UMIN_I32_POSTRA	= 333,
    ATOMIC_LOAD_UMIN_I64	= 334,
    ATOMIC_LOAD_UMIN_I64_POSTRA	= 335,
    ATOMIC_LOAD_UMIN_I8	= 336,
    ATOMIC_LOAD_UMIN_I8_POSTRA	= 337,
    ATOMIC_LOAD_XOR_I16	= 338,
    ATOMIC_LOAD_XOR_I16_POSTRA	= 339,
    ATOMIC_LOAD_XOR_I32	= 340,
    ATOMIC_LOAD_XOR_I32_POSTRA	= 341,
    ATOMIC_LOAD_XOR_I64	= 342,
    ATOMIC_LOAD_XOR_I64_POSTRA	= 343,
    ATOMIC_LOAD_XOR_I8	= 344,
    ATOMIC_LOAD_XOR_I8_POSTRA	= 345,
    ATOMIC_SWAP_I16	= 346,
    ATOMIC_SWAP_I16_POSTRA	= 347,
    ATOMIC_SWAP_I32	= 348,
    ATOMIC_SWAP_I32_POSTRA	= 349,
    ATOMIC_SWAP_I64	= 350,
    ATOMIC_SWAP_I64_POSTRA	= 351,
    ATOMIC_SWAP_I8	= 352,
    ATOMIC_SWAP_I8_POSTRA	= 353,
    B	= 354,
    BAL_BR	= 355,
    BAL_BR_MM	= 356,
    BEQLImmMacro	= 357,
    BGE	= 358,
    BGEImmMacro	= 359,
    BGEL	= 360,
    BGELImmMacro	= 361,
    BGEU	= 362,
    BGEUImmMacro	= 363,
    BGEUL	= 364,
    BGEULImmMacro	= 365,
    BGT	= 366,
    BGTImmMacro	= 367,
    BGTL	= 368,
    BGTLImmMacro	= 369,
    BGTU	= 370,
    BGTUImmMacro	= 371,
    BGTUL	= 372,
    BGTULImmMacro	= 373,
    BLE	= 374,
    BLEImmMacro	= 375,
    BLEL	= 376,
    BLELImmMacro	= 377,
    BLEU	= 378,
    BLEUImmMacro	= 379,
    BLEUL	= 380,
    BLEULImmMacro	= 381,
    BLT	= 382,
    BLTImmMacro	= 383,
    BLTL	= 384,
    BLTLImmMacro	= 385,
    BLTU	= 386,
    BLTUImmMacro	= 387,
    BLTUL	= 388,
    BLTULImmMacro	= 389,
    BNELImmMacro	= 390,
    BPOSGE32_PSEUDO	= 391,
    BSEL_D_PSEUDO	= 392,
    BSEL_FD_PSEUDO	= 393,
    BSEL_FW_PSEUDO	= 394,
    BSEL_H_PSEUDO	= 395,
    BSEL_W_PSEUDO	= 396,
    B_MM	= 397,
    B_MMR6_Pseudo	= 398,
    B_MM_Pseudo	= 399,
    BeqImm	= 400,
    BneImm	= 401,
    BteqzT8CmpX16	= 402,
    BteqzT8CmpiX16	= 403,
    BteqzT8SltX16	= 404,
    BteqzT8SltiX16	= 405,
    BteqzT8SltiuX16	= 406,
    BteqzT8SltuX16	= 407,
    BtnezT8CmpX16	= 408,
    BtnezT8CmpiX16	= 409,
    BtnezT8SltX16	= 410,
    BtnezT8SltiX16	= 411,
    BtnezT8SltiuX16	= 412,
    BtnezT8SltuX16	= 413,
    BuildPairF64	= 414,
    BuildPairF64_64	= 415,
    CFTC1	= 416,
    CONSTPOOL_ENTRY	= 417,
    COPY_FD_PSEUDO	= 418,
    COPY_FW_PSEUDO	= 419,
    CTTC1	= 420,
    Constant32	= 421,
    DMULImmMacro	= 422,
    DMULMacro	= 423,
    DMULOMacro	= 424,
    DMULOUMacro	= 425,
    DROL	= 426,
    DROLImm	= 427,
    DROR	= 428,
    DRORImm	= 429,
    DSDivIMacro	= 430,
    DSDivMacro	= 431,
    DSRemIMacro	= 432,
    DSRemMacro	= 433,
    DUDivIMacro	= 434,
    DUDivMacro	= 435,
    DURemIMacro	= 436,
    DURemMacro	= 437,
    ERet	= 438,
    ExtractElementF64	= 439,
    ExtractElementF64_64	= 440,
    FABS_D	= 441,
    FABS_W	= 442,
    FEXP2_D_1_PSEUDO	= 443,
    FEXP2_W_1_PSEUDO	= 444,
    FILL_FD_PSEUDO	= 445,
    FILL_FW_PSEUDO	= 446,
    GotPrologue16	= 447,
    INSERT_B_VIDX64_PSEUDO	= 448,
    INSERT_B_VIDX_PSEUDO	= 449,
    INSERT_D_VIDX64_PSEUDO	= 450,
    INSERT_D_VIDX_PSEUDO	= 451,
    INSERT_FD_PSEUDO	= 452,
    INSERT_FD_VIDX64_PSEUDO	= 453,
    INSERT_FD_VIDX_PSEUDO	= 454,
    INSERT_FW_PSEUDO	= 455,
    INSERT_FW_VIDX64_PSEUDO	= 456,
    INSERT_FW_VIDX_PSEUDO	= 457,
    INSERT_H_VIDX64_PSEUDO	= 458,
    INSERT_H_VIDX_PSEUDO	= 459,
    INSERT_W_VIDX64_PSEUDO	= 460,
    INSERT_W_VIDX_PSEUDO	= 461,
    JALR64Pseudo	= 462,
    JALRHB64Pseudo	= 463,
    JALRHBPseudo	= 464,
    JALRPseudo	= 465,
    JAL_MMR6	= 466,
    JalOneReg	= 467,
    JalTwoReg	= 468,
    LDMacro	= 469,
    LDR_D	= 470,
    LDR_W	= 471,
    LD_F16	= 472,
    LOAD_ACC128	= 473,
    LOAD_ACC64	= 474,
    LOAD_ACC64DSP	= 475,
    LOAD_CCOND_DSP	= 476,
    LONG_BRANCH_ADDiu	= 477,
    LONG_BRANCH_ADDiu2Op	= 478,
    LONG_BRANCH_DADDiu	= 479,
    LONG_BRANCH_DADDiu2Op	= 480,
    LONG_BRANCH_LUi	= 481,
    LONG_BRANCH_LUi2Op	= 482,
    LONG_BRANCH_LUi2Op_64	= 483,
    LWM_MM	= 484,
    LoadAddrImm32	= 485,
    LoadAddrImm64	= 486,
    LoadAddrReg32	= 487,
    LoadAddrReg64	= 488,
    LoadImm32	= 489,
    LoadImm64	= 490,
    LoadImmDoubleFGR	= 491,
    LoadImmDoubleFGR_32	= 492,
    LoadImmDoubleGPR	= 493,
    LoadImmSingleFGR	= 494,
    LoadImmSingleGPR	= 495,
    LwConstant32	= 496,
    MFTACX	= 497,
    MFTC0	= 498,
    MFTC1	= 499,
    MFTDSP	= 500,
    MFTGPR	= 501,
    MFTHC1	= 502,
    MFTHI	= 503,
    MFTLO	= 504,
    MIPSeh_return32	= 505,
    MIPSeh_return64	= 506,
    MSA_FP_EXTEND_D_PSEUDO	= 507,
    MSA_FP_EXTEND_W_PSEUDO	= 508,
    MSA_FP_ROUND_D_PSEUDO	= 509,
    MSA_FP_ROUND_W_PSEUDO	= 510,
    MTTACX	= 511,
    MTTC0	= 512,
    MTTC1	= 513,
    MTTDSP	= 514,
    MTTGPR	= 515,
    MTTHC1	= 516,
    MTTHI	= 517,
    MTTLO	= 518,
    MULImmMacro	= 519,
    MULOMacro	= 520,
    MULOUMacro	= 521,
    MultRxRy16	= 522,
    MultRxRyRz16	= 523,
    MultuRxRy16	= 524,
    MultuRxRyRz16	= 525,
    NOP	= 526,
    NORImm	= 527,
    NORImm64	= 528,
    NOR_V_D_PSEUDO	= 529,
    NOR_V_H_PSEUDO	= 530,
    NOR_V_W_PSEUDO	= 531,
    OR_V_D_PSEUDO	= 532,
    OR_V_H_PSEUDO	= 533,
    OR_V_W_PSEUDO	= 534,
    PseudoCMPU_EQ_QB	= 535,
    PseudoCMPU_LE_QB	= 536,
    PseudoCMPU_LT_QB	= 537,
    PseudoCMP_EQ_PH	= 538,
    PseudoCMP_LE_PH	= 539,
    PseudoCMP_LT_PH	= 540,
    PseudoCVT_D32_W	= 541,
    PseudoCVT_D64_L	= 542,
    PseudoCVT_D64_W	= 543,
    PseudoCVT_S_L	= 544,
    PseudoCVT_S_W	= 545,
    PseudoDMULT	= 546,
    PseudoDMULTu	= 547,
    PseudoDSDIV	= 548,
    PseudoDUDIV	= 549,
    PseudoD_SELECT_I	= 550,
    PseudoD_SELECT_I64	= 551,
    PseudoIndirectBranch	= 552,
    PseudoIndirectBranch64	= 553,
    PseudoIndirectBranch64R6	= 554,
    PseudoIndirectBranchR6	= 555,
    PseudoIndirectBranch_MM	= 556,
    PseudoIndirectBranch_MMR6	= 557,
    PseudoIndirectHazardBranch	= 558,
    PseudoIndirectHazardBranch64	= 559,
    PseudoIndrectHazardBranch64R6	= 560,
    PseudoIndrectHazardBranchR6	= 561,
    PseudoMADD	= 562,
    PseudoMADDU	= 563,
    PseudoMADDU_MM	= 564,
    PseudoMADD_MM	= 565,
    PseudoMFHI	= 566,
    PseudoMFHI64	= 567,
    PseudoMFHI_MM	= 568,
    PseudoMFLO	= 569,
    PseudoMFLO64	= 570,
    PseudoMFLO_MM	= 571,
    PseudoMSUB	= 572,
    PseudoMSUBU	= 573,
    PseudoMSUBU_MM	= 574,
    PseudoMSUB_MM	= 575,
    PseudoMTLOHI	= 576,
    PseudoMTLOHI64	= 577,
    PseudoMTLOHI_DSP	= 578,
    PseudoMTLOHI_MM	= 579,
    PseudoMULT	= 580,
    PseudoMULT_MM	= 581,
    PseudoMULTu	= 582,
    PseudoMULTu_MM	= 583,
    PseudoPICK_PH	= 584,
    PseudoPICK_QB	= 585,
    PseudoReturn	= 586,
    PseudoReturn64	= 587,
    PseudoSDIV	= 588,
    PseudoSELECTFP_F_D32	= 589,
    PseudoSELECTFP_F_D64	= 590,
    PseudoSELECTFP_F_I	= 591,
    PseudoSELECTFP_F_I64	= 592,
    PseudoSELECTFP_F_S	= 593,
    PseudoSELECTFP_T_D32	= 594,
    PseudoSELECTFP_T_D64	= 595,
    PseudoSELECTFP_T_I	= 596,
    PseudoSELECTFP_T_I64	= 597,
    PseudoSELECTFP_T_S	= 598,
    PseudoSELECT_D32	= 599,
    PseudoSELECT_D64	= 600,
    PseudoSELECT_I	= 601,
    PseudoSELECT_I64	= 602,
    PseudoSELECT_S	= 603,
    PseudoTRUNC_W_D	= 604,
    PseudoTRUNC_W_D32	= 605,
    PseudoTRUNC_W_S	= 606,
    PseudoUDIV	= 607,
    ROL	= 608,
    ROLImm	= 609,
    ROR	= 610,
    RORImm	= 611,
    RetRA	= 612,
    RetRA16	= 613,
    SDC1_M1	= 614,
    SDIV_MM_Pseudo	= 615,
    SDMacro	= 616,
    SDivIMacro	= 617,
    SDivMacro	= 618,
    SEQIMacro	= 619,
    SEQMacro	= 620,
    SGE	= 621,
    SGEImm	= 622,
    SGEImm64	= 623,
    SGEU	= 624,
    SGEUImm	= 625,
    SGEUImm64	= 626,
    SGTImm	= 627,
    SGTImm64	= 628,
    SGTUImm	= 629,
    SGTUImm64	= 630,
    SLE	= 631,
    SLEImm	= 632,
    SLEImm64	= 633,
    SLEU	= 634,
    SLEUImm	= 635,
    SLEUImm64	= 636,
    SLTImm64	= 637,
    SLTUImm64	= 638,
    SNEIMacro	= 639,
    SNEMacro	= 640,
    SNZ_B_PSEUDO	= 641,
    SNZ_D_PSEUDO	= 642,
    SNZ_H_PSEUDO	= 643,
    SNZ_V_PSEUDO	= 644,
    SNZ_W_PSEUDO	= 645,
    SRemIMacro	= 646,
    SRemMacro	= 647,
    STORE_ACC128	= 648,
    STORE_ACC64	= 649,
    STORE_ACC64DSP	= 650,
    STORE_CCOND_DSP	= 651,
    STR_D	= 652,
    STR_W	= 653,
    ST_F16	= 654,
    SWM_MM	= 655,
    SZ_B_PSEUDO	= 656,
    SZ_D_PSEUDO	= 657,
    SZ_H_PSEUDO	= 658,
    SZ_V_PSEUDO	= 659,
    SZ_W_PSEUDO	= 660,
    SaaAddr	= 661,
    SaadAddr	= 662,
    SelBeqZ	= 663,
    SelBneZ	= 664,
    SelTBteqZCmp	= 665,
    SelTBteqZCmpi	= 666,
    SelTBteqZSlt	= 667,
    SelTBteqZSlti	= 668,
    SelTBteqZSltiu	= 669,
    SelTBteqZSltu	= 670,
    SelTBtneZCmp	= 671,
    SelTBtneZCmpi	= 672,
    SelTBtneZSlt	= 673,
    SelTBtneZSlti	= 674,
    SelTBtneZSltiu	= 675,
    SelTBtneZSltu	= 676,
    SltCCRxRy16	= 677,
    SltiCCRxImmX16	= 678,
    SltiuCCRxImmX16	= 679,
    SltuCCRxRy16	= 680,
    SltuRxRyRz16	= 681,
    TAILCALL	= 682,
    TAILCALL64R6REG	= 683,
    TAILCALLHB64R6REG	= 684,
    TAILCALLHBR6REG	= 685,
    TAILCALLR6REG	= 686,
    TAILCALLREG	= 687,
    TAILCALLREG64	= 688,
    TAILCALLREGHB	= 689,
    TAILCALLREGHB64	= 690,
    TAILCALLREG_MM	= 691,
    TAILCALLREG_MMR6	= 692,
    TAILCALL_MM	= 693,
    TAILCALL_MMR6	= 694,
    TRAP	= 695,
    TRAP_MM	= 696,
    UDIV_MM_Pseudo	= 697,
    UDivIMacro	= 698,
    UDivMacro	= 699,
    URemIMacro	= 700,
    URemMacro	= 701,
    Ulh	= 702,
    Ulhu	= 703,
    Ulw	= 704,
    Ush	= 705,
    Usw	= 706,
    XOR_V_D_PSEUDO	= 707,
    XOR_V_H_PSEUDO	= 708,
    XOR_V_W_PSEUDO	= 709,
    ABSQ_S_PH	= 710,
    ABSQ_S_PH_MM	= 711,
    ABSQ_S_QB	= 712,
    ABSQ_S_QB_MMR2	= 713,
    ABSQ_S_W	= 714,
    ABSQ_S_W_MM	= 715,
    ADD	= 716,
    ADDIUPC	= 717,
    ADDIUPC_MM	= 718,
    ADDIUPC_MMR6	= 719,
    ADDIUR1SP_MM	= 720,
    ADDIUR2_MM	= 721,
    ADDIUS5_MM	= 722,
    ADDIUSP_MM	= 723,
    ADDIU_MMR6	= 724,
    ADDQH_PH	= 725,
    ADDQH_PH_MMR2	= 726,
    ADDQH_R_PH	= 727,
    ADDQH_R_PH_MMR2	= 728,
    ADDQH_R_W	= 729,
    ADDQH_R_W_MMR2	= 730,
    ADDQH_W	= 731,
    ADDQH_W_MMR2	= 732,
    ADDQ_PH	= 733,
    ADDQ_PH_MM	= 734,
    ADDQ_S_PH	= 735,
    ADDQ_S_PH_MM	= 736,
    ADDQ_S_W	= 737,
    ADDQ_S_W_MM	= 738,
    ADDR_PS64	= 739,
    ADDSC	= 740,
    ADDSC_MM	= 741,
    ADDS_A_B	= 742,
    ADDS_A_D	= 743,
    ADDS_A_H	= 744,
    ADDS_A_W	= 745,
    ADDS_S_B	= 746,
    ADDS_S_D	= 747,
    ADDS_S_H	= 748,
    ADDS_S_W	= 749,
    ADDS_U_B	= 750,
    ADDS_U_D	= 751,
    ADDS_U_H	= 752,
    ADDS_U_W	= 753,
    ADDU16_MM	= 754,
    ADDU16_MMR6	= 755,
    ADDUH_QB	= 756,
    ADDUH_QB_MMR2	= 757,
    ADDUH_R_QB	= 758,
    ADDUH_R_QB_MMR2	= 759,
    ADDU_MMR6	= 760,
    ADDU_PH	= 761,
    ADDU_PH_MMR2	= 762,
    ADDU_QB	= 763,
    ADDU_QB_MM	= 764,
    ADDU_S_PH	= 765,
    ADDU_S_PH_MMR2	= 766,
    ADDU_S_QB	= 767,
    ADDU_S_QB_MM	= 768,
    ADDVI_B	= 769,
    ADDVI_D	= 770,
    ADDVI_H	= 771,
    ADDVI_W	= 772,
    ADDV_B	= 773,
    ADDV_D	= 774,
    ADDV_H	= 775,
    ADDV_W	= 776,
    ADDWC	= 777,
    ADDWC_MM	= 778,
    ADD_A_B	= 779,
    ADD_A_D	= 780,
    ADD_A_H	= 781,
    ADD_A_W	= 782,
    ADD_MM	= 783,
    ADD_MMR6	= 784,
    ADDi	= 785,
    ADDi_MM	= 786,
    ADDiu	= 787,
    ADDiu_MM	= 788,
    ADDu	= 789,
    ADDu_MM	= 790,
    ALIGN	= 791,
    ALIGN_MMR6	= 792,
    ALUIPC	= 793,
    ALUIPC_MMR6	= 794,
    AND	= 795,
    AND16_MM	= 796,
    AND16_MMR6	= 797,
    AND64	= 798,
    ANDI16_MM	= 799,
    ANDI16_MMR6	= 800,
    ANDI_B	= 801,
    ANDI_MMR6	= 802,
    AND_MM	= 803,
    AND_MMR6	= 804,
    AND_V	= 805,
    ANDi	= 806,
    ANDi64	= 807,
    ANDi_MM	= 808,
    APPEND	= 809,
    APPEND_MMR2	= 810,
    ASUB_S_B	= 811,
    ASUB_S_D	= 812,
    ASUB_S_H	= 813,
    ASUB_S_W	= 814,
    ASUB_U_B	= 815,
    ASUB_U_D	= 816,
    ASUB_U_H	= 817,
    ASUB_U_W	= 818,
    AUI	= 819,
    AUIPC	= 820,
    AUIPC_MMR6	= 821,
    AUI_MMR6	= 822,
    AVER_S_B	= 823,
    AVER_S_D	= 824,
    AVER_S_H	= 825,
    AVER_S_W	= 826,
    AVER_U_B	= 827,
    AVER_U_D	= 828,
    AVER_U_H	= 829,
    AVER_U_W	= 830,
    AVE_S_B	= 831,
    AVE_S_D	= 832,
    AVE_S_H	= 833,
    AVE_S_W	= 834,
    AVE_U_B	= 835,
    AVE_U_D	= 836,
    AVE_U_H	= 837,
    AVE_U_W	= 838,
    AddiuRxImmX16	= 839,
    AddiuRxPcImmX16	= 840,
    AddiuRxRxImm16	= 841,
    AddiuRxRxImmX16	= 842,
    AddiuRxRyOffMemX16	= 843,
    AddiuSpImm16	= 844,
    AddiuSpImmX16	= 845,
    AdduRxRyRz16	= 846,
    AndRxRxRy16	= 847,
    B16_MM	= 848,
    BADDu	= 849,
    BAL	= 850,
    BALC	= 851,
    BALC_MMR6	= 852,
    BALIGN	= 853,
    BALIGN_MMR2	= 854,
    BBIT0	= 855,
    BBIT032	= 856,
    BBIT1	= 857,
    BBIT132	= 858,
    BC	= 859,
    BC16_MMR6	= 860,
    BC1EQZ	= 861,
    BC1EQZC_MMR6	= 862,
    BC1F	= 863,
    BC1FL	= 864,
    BC1F_MM	= 865,
    BC1NEZ	= 866,
    BC1NEZC_MMR6	= 867,
    BC1T	= 868,
    BC1TL	= 869,
    BC1T_MM	= 870,
    BC2EQZ	= 871,
    BC2EQZC_MMR6	= 872,
    BC2NEZ	= 873,
    BC2NEZC_MMR6	= 874,
    BCLRI_B	= 875,
    BCLRI_D	= 876,
    BCLRI_H	= 877,
    BCLRI_W	= 878,
    BCLR_B	= 879,
    BCLR_D	= 880,
    BCLR_H	= 881,
    BCLR_W	= 882,
    BC_MMR6	= 883,
    BEQ	= 884,
    BEQ64	= 885,
    BEQC	= 886,
    BEQC64	= 887,
    BEQC_MMR6	= 888,
    BEQL	= 889,
    BEQZ16_MM	= 890,
    BEQZALC	= 891,
    BEQZALC_MMR6	= 892,
    BEQZC	= 893,
    BEQZC16_MMR6	= 894,
    BEQZC64	= 895,
    BEQZC_MM	= 896,
    BEQZC_MMR6	= 897,
    BEQ_MM	= 898,
    BGEC	= 899,
    BGEC64	= 900,
    BGEC_MMR6	= 901,
    BGEUC	= 902,
    BGEUC64	= 903,
    BGEUC_MMR6	= 904,
    BGEZ	= 905,
    BGEZ64	= 906,
    BGEZAL	= 907,
    BGEZALC	= 908,
    BGEZALC_MMR6	= 909,
    BGEZALL	= 910,
    BGEZALS_MM	= 911,
    BGEZAL_MM	= 912,
    BGEZC	= 913,
    BGEZC64	= 914,
    BGEZC_MMR6	= 915,
    BGEZL	= 916,
    BGEZ_MM	= 917,
    BGTZ	= 918,
    BGTZ64	= 919,
    BGTZALC	= 920,
    BGTZALC_MMR6	= 921,
    BGTZC	= 922,
    BGTZC64	= 923,
    BGTZC_MMR6	= 924,
    BGTZL	= 925,
    BGTZ_MM	= 926,
    BINSLI_B	= 927,
    BINSLI_D	= 928,
    BINSLI_H	= 929,
    BINSLI_W	= 930,
    BINSL_B	= 931,
    BINSL_D	= 932,
    BINSL_H	= 933,
    BINSL_W	= 934,
    BINSRI_B	= 935,
    BINSRI_D	= 936,
    BINSRI_H	= 937,
    BINSRI_W	= 938,
    BINSR_B	= 939,
    BINSR_D	= 940,
    BINSR_H	= 941,
    BINSR_W	= 942,
    BITREV	= 943,
    BITREV_MM	= 944,
    BITSWAP	= 945,
    BITSWAP_MMR6	= 946,
    BLEZ	= 947,
    BLEZ64	= 948,
    BLEZALC	= 949,
    BLEZALC_MMR6	= 950,
    BLEZC	= 951,
    BLEZC64	= 952,
    BLEZC_MMR6	= 953,
    BLEZL	= 954,
    BLEZ_MM	= 955,
    BLTC	= 956,
    BLTC64	= 957,
    BLTC_MMR6	= 958,
    BLTUC	= 959,
    BLTUC64	= 960,
    BLTUC_MMR6	= 961,
    BLTZ	= 962,
    BLTZ64	= 963,
    BLTZAL	= 964,
    BLTZALC	= 965,
    BLTZALC_MMR6	= 966,
    BLTZALL	= 967,
    BLTZALS_MM	= 968,
    BLTZAL_MM	= 969,
    BLTZC	= 970,
    BLTZC64	= 971,
    BLTZC_MMR6	= 972,
    BLTZL	= 973,
    BLTZ_MM	= 974,
    BMNZI_B	= 975,
    BMNZ_V	= 976,
    BMZI_B	= 977,
    BMZ_V	= 978,
    BNE	= 979,
    BNE64	= 980,
    BNEC	= 981,
    BNEC64	= 982,
    BNEC_MMR6	= 983,
    BNEGI_B	= 984,
    BNEGI_D	= 985,
    BNEGI_H	= 986,
    BNEGI_W	= 987,
    BNEG_B	= 988,
    BNEG_D	= 989,
    BNEG_H	= 990,
    BNEG_W	= 991,
    BNEL	= 992,
    BNEZ16_MM	= 993,
    BNEZALC	= 994,
    BNEZALC_MMR6	= 995,
    BNEZC	= 996,
    BNEZC16_MMR6	= 997,
    BNEZC64	= 998,
    BNEZC_MM	= 999,
    BNEZC_MMR6	= 1000,
    BNE_MM	= 1001,
    BNVC	= 1002,
    BNVC_MMR6	= 1003,
    BNZ_B	= 1004,
    BNZ_D	= 1005,
    BNZ_H	= 1006,
    BNZ_V	= 1007,
    BNZ_W	= 1008,
    BOVC	= 1009,
    BOVC_MMR6	= 1010,
    BPOSGE32	= 1011,
    BPOSGE32C_MMR3	= 1012,
    BPOSGE32_MM	= 1013,
    BREAK	= 1014,
    BREAK16_MM	= 1015,
    BREAK16_MMR6	= 1016,
    BREAK_MM	= 1017,
    BREAK_MMR6	= 1018,
    BSELI_B	= 1019,
    BSEL_V	= 1020,
    BSETI_B	= 1021,
    BSETI_D	= 1022,
    BSETI_H	= 1023,
    BSETI_W	= 1024,
    BSET_B	= 1025,
    BSET_D	= 1026,
    BSET_H	= 1027,
    BSET_W	= 1028,
    BZ_B	= 1029,
    BZ_D	= 1030,
    BZ_H	= 1031,
    BZ_V	= 1032,
    BZ_W	= 1033,
    BeqzRxImm16	= 1034,
    BeqzRxImmX16	= 1035,
    Bimm16	= 1036,
    BimmX16	= 1037,
    BnezRxImm16	= 1038,
    BnezRxImmX16	= 1039,
    Break16	= 1040,
    Bteqz16	= 1041,
    BteqzX16	= 1042,
    Btnez16	= 1043,
    BtnezX16	= 1044,
    CACHE	= 1045,
    CACHEE	= 1046,
    CACHEE_MM	= 1047,
    CACHE_MM	= 1048,
    CACHE_MMR6	= 1049,
    CACHE_R6	= 1050,
    CEIL_L_D64	= 1051,
    CEIL_L_D_MMR6	= 1052,
    CEIL_L_S	= 1053,
    CEIL_L_S_MMR6	= 1054,
    CEIL_W_D32	= 1055,
    CEIL_W_D64	= 1056,
    CEIL_W_D_MMR6	= 1057,
    CEIL_W_MM	= 1058,
    CEIL_W_S	= 1059,
    CEIL_W_S_MM	= 1060,
    CEIL_W_S_MMR6	= 1061,
    CEQI_B	= 1062,
    CEQI_D	= 1063,
    CEQI_H	= 1064,
    CEQI_W	= 1065,
    CEQ_B	= 1066,
    CEQ_D	= 1067,
    CEQ_H	= 1068,
    CEQ_W	= 1069,
    CFC1	= 1070,
    CFC1_MM	= 1071,
    CFC2_MM	= 1072,
    CFCMSA	= 1073,
    CINS	= 1074,
    CINS32	= 1075,
    CINS64_32	= 1076,
    CINS_i32	= 1077,
    CLASS_D	= 1078,
    CLASS_D_MMR6	= 1079,
    CLASS_S	= 1080,
    CLASS_S_MMR6	= 1081,
    CLEI_S_B	= 1082,
    CLEI_S_D	= 1083,
    CLEI_S_H	= 1084,
    CLEI_S_W	= 1085,
    CLEI_U_B	= 1086,
    CLEI_U_D	= 1087,
    CLEI_U_H	= 1088,
    CLEI_U_W	= 1089,
    CLE_S_B	= 1090,
    CLE_S_D	= 1091,
    CLE_S_H	= 1092,
    CLE_S_W	= 1093,
    CLE_U_B	= 1094,
    CLE_U_D	= 1095,
    CLE_U_H	= 1096,
    CLE_U_W	= 1097,
    CLO	= 1098,
    CLO_MM	= 1099,
    CLO_MMR6	= 1100,
    CLO_R6	= 1101,
    CLTI_S_B	= 1102,
    CLTI_S_D	= 1103,
    CLTI_S_H	= 1104,
    CLTI_S_W	= 1105,
    CLTI_U_B	= 1106,
    CLTI_U_D	= 1107,
    CLTI_U_H	= 1108,
    CLTI_U_W	= 1109,
    CLT_S_B	= 1110,
    CLT_S_D	= 1111,
    CLT_S_H	= 1112,
    CLT_S_W	= 1113,
    CLT_U_B	= 1114,
    CLT_U_D	= 1115,
    CLT_U_H	= 1116,
    CLT_U_W	= 1117,
    CLZ	= 1118,
    CLZ_MM	= 1119,
    CLZ_MMR6	= 1120,
    CLZ_R6	= 1121,
    CMPGDU_EQ_QB	= 1122,
    CMPGDU_EQ_QB_MMR2	= 1123,
    CMPGDU_LE_QB	= 1124,
    CMPGDU_LE_QB_MMR2	= 1125,
    CMPGDU_LT_QB	= 1126,
    CMPGDU_LT_QB_MMR2	= 1127,
    CMPGU_EQ_QB	= 1128,
    CMPGU_EQ_QB_MM	= 1129,
    CMPGU_LE_QB	= 1130,
    CMPGU_LE_QB_MM	= 1131,
    CMPGU_LT_QB	= 1132,
    CMPGU_LT_QB_MM	= 1133,
    CMPU_EQ_QB	= 1134,
    CMPU_EQ_QB_MM	= 1135,
    CMPU_LE_QB	= 1136,
    CMPU_LE_QB_MM	= 1137,
    CMPU_LT_QB	= 1138,
    CMPU_LT_QB_MM	= 1139,
    CMP_AF_D_MMR6	= 1140,
    CMP_AF_S_MMR6	= 1141,
    CMP_EQ_D	= 1142,
    CMP_EQ_D_MMR6	= 1143,
    CMP_EQ_PH	= 1144,
    CMP_EQ_PH_MM	= 1145,
    CMP_EQ_S	= 1146,
    CMP_EQ_S_MMR6	= 1147,
    CMP_F_D	= 1148,
    CMP_F_S	= 1149,
    CMP_LE_D	= 1150,
    CMP_LE_D_MMR6	= 1151,
    CMP_LE_PH	= 1152,
    CMP_LE_PH_MM	= 1153,
    CMP_LE_S	= 1154,
    CMP_LE_S_MMR6	= 1155,
    CMP_LT_D	= 1156,
    CMP_LT_D_MMR6	= 1157,
    CMP_LT_PH	= 1158,
    CMP_LT_PH_MM	= 1159,
    CMP_LT_S	= 1160,
    CMP_LT_S_MMR6	= 1161,
    CMP_SAF_D	= 1162,
    CMP_SAF_D_MMR6	= 1163,
    CMP_SAF_S	= 1164,
    CMP_SAF_S_MMR6	= 1165,
    CMP_SEQ_D	= 1166,
    CMP_SEQ_D_MMR6	= 1167,
    CMP_SEQ_S	= 1168,
    CMP_SEQ_S_MMR6	= 1169,
    CMP_SLE_D	= 1170,
    CMP_SLE_D_MMR6	= 1171,
    CMP_SLE_S	= 1172,
    CMP_SLE_S_MMR6	= 1173,
    CMP_SLT_D	= 1174,
    CMP_SLT_D_MMR6	= 1175,
    CMP_SLT_S	= 1176,
    CMP_SLT_S_MMR6	= 1177,
    CMP_SUEQ_D	= 1178,
    CMP_SUEQ_D_MMR6	= 1179,
    CMP_SUEQ_S	= 1180,
    CMP_SUEQ_S_MMR6	= 1181,
    CMP_SULE_D	= 1182,
    CMP_SULE_D_MMR6	= 1183,
    CMP_SULE_S	= 1184,
    CMP_SULE_S_MMR6	= 1185,
    CMP_SULT_D	= 1186,
    CMP_SULT_D_MMR6	= 1187,
    CMP_SULT_S	= 1188,
    CMP_SULT_S_MMR6	= 1189,
    CMP_SUN_D	= 1190,
    CMP_SUN_D_MMR6	= 1191,
    CMP_SUN_S	= 1192,
    CMP_SUN_S_MMR6	= 1193,
    CMP_UEQ_D	= 1194,
    CMP_UEQ_D_MMR6	= 1195,
    CMP_UEQ_S	= 1196,
    CMP_UEQ_S_MMR6	= 1197,
    CMP_ULE_D	= 1198,
    CMP_ULE_D_MMR6	= 1199,
    CMP_ULE_S	= 1200,
    CMP_ULE_S_MMR6	= 1201,
    CMP_ULT_D	= 1202,
    CMP_ULT_D_MMR6	= 1203,
    CMP_ULT_S	= 1204,
    CMP_ULT_S_MMR6	= 1205,
    CMP_UN_D	= 1206,
    CMP_UN_D_MMR6	= 1207,
    CMP_UN_S	= 1208,
    CMP_UN_S_MMR6	= 1209,
    COPY_S_B	= 1210,
    COPY_S_D	= 1211,
    COPY_S_H	= 1212,
    COPY_S_W	= 1213,
    COPY_U_B	= 1214,
    COPY_U_H	= 1215,
    COPY_U_W	= 1216,
    CRC32B	= 1217,
    CRC32CB	= 1218,
    CRC32CD	= 1219,
    CRC32CH	= 1220,
    CRC32CW	= 1221,
    CRC32D	= 1222,
    CRC32H	= 1223,
    CRC32W	= 1224,
    CTC1	= 1225,
    CTC1_MM	= 1226,
    CTC2_MM	= 1227,
    CTCMSA	= 1228,
    CVT_D32_S	= 1229,
    CVT_D32_S_MM	= 1230,
    CVT_D32_W	= 1231,
    CVT_D32_W_MM	= 1232,
    CVT_D64_L	= 1233,
    CVT_D64_S	= 1234,
    CVT_D64_S_MM	= 1235,
    CVT_D64_W	= 1236,
    CVT_D64_W_MM	= 1237,
    CVT_D_L_MMR6	= 1238,
    CVT_L_D64	= 1239,
    CVT_L_D64_MM	= 1240,
    CVT_L_D_MMR6	= 1241,
    CVT_L_S	= 1242,
    CVT_L_S_MM	= 1243,
    CVT_L_S_MMR6	= 1244,
    CVT_PS_PW64	= 1245,
    CVT_PS_S64	= 1246,
    CVT_PW_PS64	= 1247,
    CVT_S_D32	= 1248,
    CVT_S_D32_MM	= 1249,
    CVT_S_D64	= 1250,
    CVT_S_D64_MM	= 1251,
    CVT_S_L	= 1252,
    CVT_S_L_MMR6	= 1253,
    CVT_S_PL64	= 1254,
    CVT_S_PU64	= 1255,
    CVT_S_W	= 1256,
    CVT_S_W_MM	= 1257,
    CVT_S_W_MMR6	= 1258,
    CVT_W_D32	= 1259,
    CVT_W_D32_MM	= 1260,
    CVT_W_D64	= 1261,
    CVT_W_D64_MM	= 1262,
    CVT_W_S	= 1263,
    CVT_W_S_MM	= 1264,
    CVT_W_S_MMR6	= 1265,
    C_EQ_D32	= 1266,
    C_EQ_D32_MM	= 1267,
    C_EQ_D64	= 1268,
    C_EQ_D64_MM	= 1269,
    C_EQ_S	= 1270,
    C_EQ_S_MM	= 1271,
    C_F_D32	= 1272,
    C_F_D32_MM	= 1273,
    C_F_D64	= 1274,
    C_F_D64_MM	= 1275,
    C_F_S	= 1276,
    C_F_S_MM	= 1277,
    C_LE_D32	= 1278,
    C_LE_D32_MM	= 1279,
    C_LE_D64	= 1280,
    C_LE_D64_MM	= 1281,
    C_LE_S	= 1282,
    C_LE_S_MM	= 1283,
    C_LT_D32	= 1284,
    C_LT_D32_MM	= 1285,
    C_LT_D64	= 1286,
    C_LT_D64_MM	= 1287,
    C_LT_S	= 1288,
    C_LT_S_MM	= 1289,
    C_NGE_D32	= 1290,
    C_NGE_D32_MM	= 1291,
    C_NGE_D64	= 1292,
    C_NGE_D64_MM	= 1293,
    C_NGE_S	= 1294,
    C_NGE_S_MM	= 1295,
    C_NGLE_D32	= 1296,
    C_NGLE_D32_MM	= 1297,
    C_NGLE_D64	= 1298,
    C_NGLE_D64_MM	= 1299,
    C_NGLE_S	= 1300,
    C_NGLE_S_MM	= 1301,
    C_NGL_D32	= 1302,
    C_NGL_D32_MM	= 1303,
    C_NGL_D64	= 1304,
    C_NGL_D64_MM	= 1305,
    C_NGL_S	= 1306,
    C_NGL_S_MM	= 1307,
    C_NGT_D32	= 1308,
    C_NGT_D32_MM	= 1309,
    C_NGT_D64	= 1310,
    C_NGT_D64_MM	= 1311,
    C_NGT_S	= 1312,
    C_NGT_S_MM	= 1313,
    C_OLE_D32	= 1314,
    C_OLE_D32_MM	= 1315,
    C_OLE_D64	= 1316,
    C_OLE_D64_MM	= 1317,
    C_OLE_S	= 1318,
    C_OLE_S_MM	= 1319,
    C_OLT_D32	= 1320,
    C_OLT_D32_MM	= 1321,
    C_OLT_D64	= 1322,
    C_OLT_D64_MM	= 1323,
    C_OLT_S	= 1324,
    C_OLT_S_MM	= 1325,
    C_SEQ_D32	= 1326,
    C_SEQ_D32_MM	= 1327,
    C_SEQ_D64	= 1328,
    C_SEQ_D64_MM	= 1329,
    C_SEQ_S	= 1330,
    C_SEQ_S_MM	= 1331,
    C_SF_D32	= 1332,
    C_SF_D32_MM	= 1333,
    C_SF_D64	= 1334,
    C_SF_D64_MM	= 1335,
    C_SF_S	= 1336,
    C_SF_S_MM	= 1337,
    C_UEQ_D32	= 1338,
    C_UEQ_D32_MM	= 1339,
    C_UEQ_D64	= 1340,
    C_UEQ_D64_MM	= 1341,
    C_UEQ_S	= 1342,
    C_UEQ_S_MM	= 1343,
    C_ULE_D32	= 1344,
    C_ULE_D32_MM	= 1345,
    C_ULE_D64	= 1346,
    C_ULE_D64_MM	= 1347,
    C_ULE_S	= 1348,
    C_ULE_S_MM	= 1349,
    C_ULT_D32	= 1350,
    C_ULT_D32_MM	= 1351,
    C_ULT_D64	= 1352,
    C_ULT_D64_MM	= 1353,
    C_ULT_S	= 1354,
    C_ULT_S_MM	= 1355,
    C_UN_D32	= 1356,
    C_UN_D32_MM	= 1357,
    C_UN_D64	= 1358,
    C_UN_D64_MM	= 1359,
    C_UN_S	= 1360,
    C_UN_S_MM	= 1361,
    CmpRxRy16	= 1362,
    CmpiRxImm16	= 1363,
    CmpiRxImmX16	= 1364,
    DADD	= 1365,
    DADDi	= 1366,
    DADDiu	= 1367,
    DADDu	= 1368,
    DAHI	= 1369,
    DALIGN	= 1370,
    DATI	= 1371,
    DAUI	= 1372,
    DBITSWAP	= 1373,
    DCLO	= 1374,
    DCLO_R6	= 1375,
    DCLZ	= 1376,
    DCLZ_R6	= 1377,
    DDIV	= 1378,
    DDIVU	= 1379,
    DERET	= 1380,
    DERET_MM	= 1381,
    DERET_MMR6	= 1382,
    DEXT	= 1383,
    DEXT64_32	= 1384,
    DEXTM	= 1385,
    DEXTU	= 1386,
    DI	= 1387,
    DINS	= 1388,
    DINSM	= 1389,
    DINSU	= 1390,
    DIV	= 1391,
    DIVU	= 1392,
    DIVU_MMR6	= 1393,
    DIV_MMR6	= 1394,
    DIV_S_B	= 1395,
    DIV_S_D	= 1396,
    DIV_S_H	= 1397,
    DIV_S_W	= 1398,
    DIV_U_B	= 1399,
    DIV_U_D	= 1400,
    DIV_U_H	= 1401,
    DIV_U_W	= 1402,
    DI_MM	= 1403,
    DI_MMR6	= 1404,
    DLSA	= 1405,
    DLSA_R6	= 1406,
    DMFC0	= 1407,
    DMFC1	= 1408,
    DMFC2	= 1409,
    DMFC2_OCTEON	= 1410,
    DMFGC0	= 1411,
    DMOD	= 1412,
    DMODU	= 1413,
    DMT	= 1414,
    DMTC0	= 1415,
    DMTC1	= 1416,
    DMTC2	= 1417,
    DMTC2_OCTEON	= 1418,
    DMTGC0	= 1419,
    DMUH	= 1420,
    DMUHU	= 1421,
    DMUL	= 1422,
    DMULT	= 1423,
    DMULTu	= 1424,
    DMULU	= 1425,
    DMUL_R6	= 1426,
    DOTP_S_D	= 1427,
    DOTP_S_H	= 1428,
    DOTP_S_W	= 1429,
    DOTP_U_D	= 1430,
    DOTP_U_H	= 1431,
    DOTP_U_W	= 1432,
    DPADD_S_D	= 1433,
    DPADD_S_H	= 1434,
    DPADD_S_W	= 1435,
    DPADD_U_D	= 1436,
    DPADD_U_H	= 1437,
    DPADD_U_W	= 1438,
    DPAQX_SA_W_PH	= 1439,
    DPAQX_SA_W_PH_MMR2	= 1440,
    DPAQX_S_W_PH	= 1441,
    DPAQX_S_W_PH_MMR2	= 1442,
    DPAQ_SA_L_W	= 1443,
    DPAQ_SA_L_W_MM	= 1444,
    DPAQ_S_W_PH	= 1445,
    DPAQ_S_W_PH_MM	= 1446,
    DPAU_H_QBL	= 1447,
    DPAU_H_QBL_MM	= 1448,
    DPAU_H_QBR	= 1449,
    DPAU_H_QBR_MM	= 1450,
    DPAX_W_PH	= 1451,
    DPAX_W_PH_MMR2	= 1452,
    DPA_W_PH	= 1453,
    DPA_W_PH_MMR2	= 1454,
    DPOP	= 1455,
    DPSQX_SA_W_PH	= 1456,
    DPSQX_SA_W_PH_MMR2	= 1457,
    DPSQX_S_W_PH	= 1458,
    DPSQX_S_W_PH_MMR2	= 1459,
    DPSQ_SA_L_W	= 1460,
    DPSQ_SA_L_W_MM	= 1461,
    DPSQ_S_W_PH	= 1462,
    DPSQ_S_W_PH_MM	= 1463,
    DPSUB_S_D	= 1464,
    DPSUB_S_H	= 1465,
    DPSUB_S_W	= 1466,
    DPSUB_U_D	= 1467,
    DPSUB_U_H	= 1468,
    DPSUB_U_W	= 1469,
    DPSU_H_QBL	= 1470,
    DPSU_H_QBL_MM	= 1471,
    DPSU_H_QBR	= 1472,
    DPSU_H_QBR_MM	= 1473,
    DPSX_W_PH	= 1474,
    DPSX_W_PH_MMR2	= 1475,
    DPS_W_PH	= 1476,
    DPS_W_PH_MMR2	= 1477,
    DROTR	= 1478,
    DROTR32	= 1479,
    DROTRV	= 1480,
    DSBH	= 1481,
    DSDIV	= 1482,
    DSHD	= 1483,
    DSLL	= 1484,
    DSLL32	= 1485,
    DSLL64_32	= 1486,
    DSLLV	= 1487,
    DSRA	= 1488,
    DSRA32	= 1489,
    DSRAV	= 1490,
    DSRL	= 1491,
    DSRL32	= 1492,
    DSRLV	= 1493,
    DSUB	= 1494,
    DSUBu	= 1495,
    DUDIV	= 1496,
    DVP	= 1497,
    DVPE	= 1498,
    DVP_MMR6	= 1499,
    DivRxRy16	= 1500,
    DivuRxRy16	= 1501,
    EHB	= 1502,
    EHB_MM	= 1503,
    EHB_MMR6	= 1504,
    EI	= 1505,
    EI_MM	= 1506,
    EI_MMR6	= 1507,
    EMT	= 1508,
    ERET	= 1509,
    ERETNC	= 1510,
    ERETNC_MMR6	= 1511,
    ERET_MM	= 1512,
    ERET_MMR6	= 1513,
    EVP	= 1514,
    EVPE	= 1515,
    EVP_MMR6	= 1516,
    EXT	= 1517,
    EXTP	= 1518,
    EXTPDP	= 1519,
    EXTPDPV	= 1520,
    EXTPDPV_MM	= 1521,
    EXTPDP_MM	= 1522,
    EXTPV	= 1523,
    EXTPV_MM	= 1524,
    EXTP_MM	= 1525,
    EXTRV_RS_W	= 1526,
    EXTRV_RS_W_MM	= 1527,
    EXTRV_R_W	= 1528,
    EXTRV_R_W_MM	= 1529,
    EXTRV_S_H	= 1530,
    EXTRV_S_H_MM	= 1531,
    EXTRV_W	= 1532,
    EXTRV_W_MM	= 1533,
    EXTR_RS_W	= 1534,
    EXTR_RS_W_MM	= 1535,
    EXTR_R_W	= 1536,
    EXTR_R_W_MM	= 1537,
    EXTR_S_H	= 1538,
    EXTR_S_H_MM	= 1539,
    EXTR_W	= 1540,
    EXTR_W_MM	= 1541,
    EXTS	= 1542,
    EXTS32	= 1543,
    EXT_MM	= 1544,
    EXT_MMR6	= 1545,
    FABS_D32	= 1546,
    FABS_D32_MM	= 1547,
    FABS_D64	= 1548,
    FABS_D64_MM	= 1549,
    FABS_S	= 1550,
    FABS_S_MM	= 1551,
    FADD_D	= 1552,
    FADD_D32	= 1553,
    FADD_D32_MM	= 1554,
    FADD_D64	= 1555,
    FADD_D64_MM	= 1556,
    FADD_PS64	= 1557,
    FADD_S	= 1558,
    FADD_S_MM	= 1559,
    FADD_S_MMR6	= 1560,
    FADD_W	= 1561,
    FCAF_D	= 1562,
    FCAF_W	= 1563,
    FCEQ_D	= 1564,
    FCEQ_W	= 1565,
    FCLASS_D	= 1566,
    FCLASS_W	= 1567,
    FCLE_D	= 1568,
    FCLE_W	= 1569,
    FCLT_D	= 1570,
    FCLT_W	= 1571,
    FCMP_D32	= 1572,
    FCMP_D32_MM	= 1573,
    FCMP_D64	= 1574,
    FCMP_S32	= 1575,
    FCMP_S32_MM	= 1576,
    FCNE_D	= 1577,
    FCNE_W	= 1578,
    FCOR_D	= 1579,
    FCOR_W	= 1580,
    FCUEQ_D	= 1581,
    FCUEQ_W	= 1582,
    FCULE_D	= 1583,
    FCULE_W	= 1584,
    FCULT_D	= 1585,
    FCULT_W	= 1586,
    FCUNE_D	= 1587,
    FCUNE_W	= 1588,
    FCUN_D	= 1589,
    FCUN_W	= 1590,
    FDIV_D	= 1591,
    FDIV_D32	= 1592,
    FDIV_D32_MM	= 1593,
    FDIV_D64	= 1594,
    FDIV_D64_MM	= 1595,
    FDIV_S	= 1596,
    FDIV_S_MM	= 1597,
    FDIV_S_MMR6	= 1598,
    FDIV_W	= 1599,
    FEXDO_H	= 1600,
    FEXDO_W	= 1601,
    FEXP2_D	= 1602,
    FEXP2_W	= 1603,
    FEXUPL_D	= 1604,
    FEXUPL_W	= 1605,
    FEXUPR_D	= 1606,
    FEXUPR_W	= 1607,
    FFINT_S_D	= 1608,
    FFINT_S_W	= 1609,
    FFINT_U_D	= 1610,
    FFINT_U_W	= 1611,
    FFQL_D	= 1612,
    FFQL_W	= 1613,
    FFQR_D	= 1614,
    FFQR_W	= 1615,
    FILL_B	= 1616,
    FILL_D	= 1617,
    FILL_H	= 1618,
    FILL_W	= 1619,
    FLOG2_D	= 1620,
    FLOG2_W	= 1621,
    FLOOR_L_D64	= 1622,
    FLOOR_L_D_MMR6	= 1623,
    FLOOR_L_S	= 1624,
    FLOOR_L_S_MMR6	= 1625,
    FLOOR_W_D32	= 1626,
    FLOOR_W_D64	= 1627,
    FLOOR_W_D_MMR6	= 1628,
    FLOOR_W_MM	= 1629,
    FLOOR_W_S	= 1630,
    FLOOR_W_S_MM	= 1631,
    FLOOR_W_S_MMR6	= 1632,
    FMADD_D	= 1633,
    FMADD_W	= 1634,
    FMAX_A_D	= 1635,
    FMAX_A_W	= 1636,
    FMAX_D	= 1637,
    FMAX_W	= 1638,
    FMIN_A_D	= 1639,
    FMIN_A_W	= 1640,
    FMIN_D	= 1641,
    FMIN_W	= 1642,
    FMOV_D32	= 1643,
    FMOV_D32_MM	= 1644,
    FMOV_D64	= 1645,
    FMOV_D64_MM	= 1646,
    FMOV_D_MMR6	= 1647,
    FMOV_S	= 1648,
    FMOV_S_MM	= 1649,
    FMOV_S_MMR6	= 1650,
    FMSUB_D	= 1651,
    FMSUB_W	= 1652,
    FMUL_D	= 1653,
    FMUL_D32	= 1654,
    FMUL_D32_MM	= 1655,
    FMUL_D64	= 1656,
    FMUL_D64_MM	= 1657,
    FMUL_PS64	= 1658,
    FMUL_S	= 1659,
    FMUL_S_MM	= 1660,
    FMUL_S_MMR6	= 1661,
    FMUL_W	= 1662,
    FNEG_D32	= 1663,
    FNEG_D32_MM	= 1664,
    FNEG_D64	= 1665,
    FNEG_D64_MM	= 1666,
    FNEG_S	= 1667,
    FNEG_S_MM	= 1668,
    FNEG_S_MMR6	= 1669,
    FORK	= 1670,
    FRCP_D	= 1671,
    FRCP_W	= 1672,
    FRINT_D	= 1673,
    FRINT_W	= 1674,
    FRSQRT_D	= 1675,
    FRSQRT_W	= 1676,
    FSAF_D	= 1677,
    FSAF_W	= 1678,
    FSEQ_D	= 1679,
    FSEQ_W	= 1680,
    FSLE_D	= 1681,
    FSLE_W	= 1682,
    FSLT_D	= 1683,
    FSLT_W	= 1684,
    FSNE_D	= 1685,
    FSNE_W	= 1686,
    FSOR_D	= 1687,
    FSOR_W	= 1688,
    FSQRT_D	= 1689,
    FSQRT_D32	= 1690,
    FSQRT_D32_MM	= 1691,
    FSQRT_D64	= 1692,
    FSQRT_D64_MM	= 1693,
    FSQRT_S	= 1694,
    FSQRT_S_MM	= 1695,
    FSQRT_W	= 1696,
    FSUB_D	= 1697,
    FSUB_D32	= 1698,
    FSUB_D32_MM	= 1699,
    FSUB_D64	= 1700,
    FSUB_D64_MM	= 1701,
    FSUB_PS64	= 1702,
    FSUB_S	= 1703,
    FSUB_S_MM	= 1704,
    FSUB_S_MMR6	= 1705,
    FSUB_W	= 1706,
    FSUEQ_D	= 1707,
    FSUEQ_W	= 1708,
    FSULE_D	= 1709,
    FSULE_W	= 1710,
    FSULT_D	= 1711,
    FSULT_W	= 1712,
    FSUNE_D	= 1713,
    FSUNE_W	= 1714,
    FSUN_D	= 1715,
    FSUN_W	= 1716,
    FTINT_S_D	= 1717,
    FTINT_S_W	= 1718,
    FTINT_U_D	= 1719,
    FTINT_U_W	= 1720,
    FTQ_H	= 1721,
    FTQ_W	= 1722,
    FTRUNC_S_D	= 1723,
    FTRUNC_S_W	= 1724,
    FTRUNC_U_D	= 1725,
    FTRUNC_U_W	= 1726,
    GINVI	= 1727,
    GINVI_MMR6	= 1728,
    GINVT	= 1729,
    GINVT_MMR6	= 1730,
    HADD_S_D	= 1731,
    HADD_S_H	= 1732,
    HADD_S_W	= 1733,
    HADD_U_D	= 1734,
    HADD_U_H	= 1735,
    HADD_U_W	= 1736,
    HSUB_S_D	= 1737,
    HSUB_S_H	= 1738,
    HSUB_S_W	= 1739,
    HSUB_U_D	= 1740,
    HSUB_U_H	= 1741,
    HSUB_U_W	= 1742,
    HYPCALL	= 1743,
    HYPCALL_MM	= 1744,
    ILVEV_B	= 1745,
    ILVEV_D	= 1746,
    ILVEV_H	= 1747,
    ILVEV_W	= 1748,
    ILVL_B	= 1749,
    ILVL_D	= 1750,
    ILVL_H	= 1751,
    ILVL_W	= 1752,
    ILVOD_B	= 1753,
    ILVOD_D	= 1754,
    ILVOD_H	= 1755,
    ILVOD_W	= 1756,
    ILVR_B	= 1757,
    ILVR_D	= 1758,
    ILVR_H	= 1759,
    ILVR_W	= 1760,
    INS	= 1761,
    INSERT_B	= 1762,
    INSERT_D	= 1763,
    INSERT_H	= 1764,
    INSERT_W	= 1765,
    INSV	= 1766,
    INSVE_B	= 1767,
    INSVE_D	= 1768,
    INSVE_H	= 1769,
    INSVE_W	= 1770,
    INSV_MM	= 1771,
    INS_MM	= 1772,
    INS_MMR6	= 1773,
    J	= 1774,
    JAL	= 1775,
    JALR	= 1776,
    JALR16_MM	= 1777,
    JALR64	= 1778,
    JALRC16_MMR6	= 1779,
    JALRC_HB_MMR6	= 1780,
    JALRC_MMR6	= 1781,
    JALRS16_MM	= 1782,
    JALRS_MM	= 1783,
    JALR_HB	= 1784,
    JALR_HB64	= 1785,
    JALR_MM	= 1786,
    JALS_MM	= 1787,
    JALX	= 1788,
    JALX_MM	= 1789,
    JAL_MM	= 1790,
    JIALC	= 1791,
    JIALC64	= 1792,
    JIALC_MMR6	= 1793,
    JIC	= 1794,
    JIC64	= 1795,
    JIC_MMR6	= 1796,
    JR	= 1797,
    JR16_MM	= 1798,
    JR64	= 1799,
    JRADDIUSP	= 1800,
    JRC16_MM	= 1801,
    JRC16_MMR6	= 1802,
    JRCADDIUSP_MMR6	= 1803,
    JR_HB	= 1804,
    JR_HB64	= 1805,
    JR_HB64_R6	= 1806,
    JR_HB_R6	= 1807,
    JR_MM	= 1808,
    J_MM	= 1809,
    Jal16	= 1810,
    JalB16	= 1811,
    JrRa16	= 1812,
    JrcRa16	= 1813,
    JrcRx16	= 1814,
    JumpLinkReg16	= 1815,
    LB	= 1816,
    LB64	= 1817,
    LBE	= 1818,
    LBE_MM	= 1819,
    LBU16_MM	= 1820,
    LBUX	= 1821,
    LBUX_MM	= 1822,
    LBU_MMR6	= 1823,
    LB_MM	= 1824,
    LB_MMR6	= 1825,
    LBu	= 1826,
    LBu64	= 1827,
    LBuE	= 1828,
    LBuE_MM	= 1829,
    LBu_MM	= 1830,
    LD	= 1831,
    LDC1	= 1832,
    LDC164	= 1833,
    LDC1_D64_MMR6	= 1834,
    LDC1_MM_D32	= 1835,
    LDC1_MM_D64	= 1836,
    LDC2	= 1837,
    LDC2_MMR6	= 1838,
    LDC2_R6	= 1839,
    LDC3	= 1840,
    LDI_B	= 1841,
    LDI_D	= 1842,
    LDI_H	= 1843,
    LDI_W	= 1844,
    LDL	= 1845,
    LDPC	= 1846,
    LDR	= 1847,
    LDXC1	= 1848,
    LDXC164	= 1849,
    LD_B	= 1850,
    LD_D	= 1851,
    LD_H	= 1852,
    LD_W	= 1853,
    LEA_ADDiu	= 1854,
    LEA_ADDiu64	= 1855,
    LEA_ADDiu_MM	= 1856,
    LH	= 1857,
    LH64	= 1858,
    LHE	= 1859,
    LHE_MM	= 1860,
    LHU16_MM	= 1861,
    LHX	= 1862,
    LHX_MM	= 1863,
    LH_MM	= 1864,
    LHu	= 1865,
    LHu64	= 1866,
    LHuE	= 1867,
    LHuE_MM	= 1868,
    LHu_MM	= 1869,
    LI16_MM	= 1870,
    LI16_MMR6	= 1871,
    LL	= 1872,
    LL64	= 1873,
    LL64_R6	= 1874,
    LLD	= 1875,
    LLD_R6	= 1876,
    LLE	= 1877,
    LLE_MM	= 1878,
    LL_MM	= 1879,
    LL_MMR6	= 1880,
    LL_R6	= 1881,
    LSA	= 1882,
    LSA_MMR6	= 1883,
    LSA_R6	= 1884,
    LUI_MMR6	= 1885,
    LUXC1	= 1886,
    LUXC164	= 1887,
    LUXC1_MM	= 1888,
    LUi	= 1889,
    LUi64	= 1890,
    LUi_MM	= 1891,
    LW	= 1892,
    LW16_MM	= 1893,
    LW64	= 1894,
    LWC1	= 1895,
    LWC1_MM	= 1896,
    LWC2	= 1897,
    LWC2_MMR6	= 1898,
    LWC2_R6	= 1899,
    LWC3	= 1900,
    LWDSP	= 1901,
    LWDSP_MM	= 1902,
    LWE	= 1903,
    LWE_MM	= 1904,
    LWGP_MM	= 1905,
    LWL	= 1906,
    LWL64	= 1907,
    LWLE	= 1908,
    LWLE_MM	= 1909,
    LWL_MM	= 1910,
    LWM16_MM	= 1911,
    LWM16_MMR6	= 1912,
    LWM32_MM	= 1913,
    LWPC	= 1914,
    LWPC_MMR6	= 1915,
    LWP_MM	= 1916,
    LWR	= 1917,
    LWR64	= 1918,
    LWRE	= 1919,
    LWRE_MM	= 1920,
    LWR_MM	= 1921,
    LWSP_MM	= 1922,
    LWUPC	= 1923,
    LWU_MM	= 1924,
    LWX	= 1925,
    LWXC1	= 1926,
    LWXC1_MM	= 1927,
    LWXS_MM	= 1928,
    LWX_MM	= 1929,
    LW_MM	= 1930,
    LW_MMR6	= 1931,
    LWu	= 1932,
    LbRxRyOffMemX16	= 1933,
    LbuRxRyOffMemX16	= 1934,
    LhRxRyOffMemX16	= 1935,
    LhuRxRyOffMemX16	= 1936,
    LiRxImm16	= 1937,
    LiRxImmAlignX16	= 1938,
    LiRxImmX16	= 1939,
    LwRxPcTcp16	= 1940,
    LwRxPcTcpX16	= 1941,
    LwRxRyOffMemX16	= 1942,
    LwRxSpImmX16	= 1943,
    MADD	= 1944,
    MADDF_D	= 1945,
    MADDF_D_MMR6	= 1946,
    MADDF_S	= 1947,
    MADDF_S_MMR6	= 1948,
    MADDR_Q_H	= 1949,
    MADDR_Q_W	= 1950,
    MADDU	= 1951,
    MADDU_DSP	= 1952,
    MADDU_DSP_MM	= 1953,
    MADDU_MM	= 1954,
    MADDV_B	= 1955,
    MADDV_D	= 1956,
    MADDV_H	= 1957,
    MADDV_W	= 1958,
    MADD_D32	= 1959,
    MADD_D32_MM	= 1960,
    MADD_D64	= 1961,
    MADD_DSP	= 1962,
    MADD_DSP_MM	= 1963,
    MADD_MM	= 1964,
    MADD_Q_H	= 1965,
    MADD_Q_W	= 1966,
    MADD_S	= 1967,
    MADD_S_MM	= 1968,
    MAQ_SA_W_PHL	= 1969,
    MAQ_SA_W_PHL_MM	= 1970,
    MAQ_SA_W_PHR	= 1971,
    MAQ_SA_W_PHR_MM	= 1972,
    MAQ_S_W_PHL	= 1973,
    MAQ_S_W_PHL_MM	= 1974,
    MAQ_S_W_PHR	= 1975,
    MAQ_S_W_PHR_MM	= 1976,
    MAXA_D	= 1977,
    MAXA_D_MMR6	= 1978,
    MAXA_S	= 1979,
    MAXA_S_MMR6	= 1980,
    MAXI_S_B	= 1981,
    MAXI_S_D	= 1982,
    MAXI_S_H	= 1983,
    MAXI_S_W	= 1984,
    MAXI_U_B	= 1985,
    MAXI_U_D	= 1986,
    MAXI_U_H	= 1987,
    MAXI_U_W	= 1988,
    MAX_A_B	= 1989,
    MAX_A_D	= 1990,
    MAX_A_H	= 1991,
    MAX_A_W	= 1992,
    MAX_D	= 1993,
    MAX_D_MMR6	= 1994,
    MAX_S	= 1995,
    MAX_S_B	= 1996,
    MAX_S_D	= 1997,
    MAX_S_H	= 1998,
    MAX_S_MMR6	= 1999,
    MAX_S_W	= 2000,
    MAX_U_B	= 2001,
    MAX_U_D	= 2002,
    MAX_U_H	= 2003,
    MAX_U_W	= 2004,
    MFC0	= 2005,
    MFC0_MMR6	= 2006,
    MFC1	= 2007,
    MFC1_D64	= 2008,
    MFC1_MM	= 2009,
    MFC1_MMR6	= 2010,
    MFC2	= 2011,
    MFC2_MMR6	= 2012,
    MFGC0	= 2013,
    MFGC0_MM	= 2014,
    MFHC0_MMR6	= 2015,
    MFHC1_D32	= 2016,
    MFHC1_D32_MM	= 2017,
    MFHC1_D64	= 2018,
    MFHC1_D64_MM	= 2019,
    MFHC2_MMR6	= 2020,
    MFHGC0	= 2021,
    MFHGC0_MM	= 2022,
    MFHI	= 2023,
    MFHI16_MM	= 2024,
    MFHI64	= 2025,
    MFHI_DSP	= 2026,
    MFHI_DSP_MM	= 2027,
    MFHI_MM	= 2028,
    MFLO	= 2029,
    MFLO16_MM	= 2030,
    MFLO64	= 2031,
    MFLO_DSP	= 2032,
    MFLO_DSP_MM	= 2033,
    MFLO_MM	= 2034,
    MFTR	= 2035,
    MINA_D	= 2036,
    MINA_D_MMR6	= 2037,
    MINA_S	= 2038,
    MINA_S_MMR6	= 2039,
    MINI_S_B	= 2040,
    MINI_S_D	= 2041,
    MINI_S_H	= 2042,
    MINI_S_W	= 2043,
    MINI_U_B	= 2044,
    MINI_U_D	= 2045,
    MINI_U_H	= 2046,
    MINI_U_W	= 2047,
    MIN_A_B	= 2048,
    MIN_A_D	= 2049,
    MIN_A_H	= 2050,
    MIN_A_W	= 2051,
    MIN_D	= 2052,
    MIN_D_MMR6	= 2053,
    MIN_S	= 2054,
    MIN_S_B	= 2055,
    MIN_S_D	= 2056,
    MIN_S_H	= 2057,
    MIN_S_MMR6	= 2058,
    MIN_S_W	= 2059,
    MIN_U_B	= 2060,
    MIN_U_D	= 2061,
    MIN_U_H	= 2062,
    MIN_U_W	= 2063,
    MOD	= 2064,
    MODSUB	= 2065,
    MODSUB_MM	= 2066,
    MODU	= 2067,
    MODU_MMR6	= 2068,
    MOD_MMR6	= 2069,
    MOD_S_B	= 2070,
    MOD_S_D	= 2071,
    MOD_S_H	= 2072,
    MOD_S_W	= 2073,
    MOD_U_B	= 2074,
    MOD_U_D	= 2075,
    MOD_U_H	= 2076,
    MOD_U_W	= 2077,
    MOVE16_MM	= 2078,
    MOVE16_MMR6	= 2079,
    MOVEP_MM	= 2080,
    MOVEP_MMR6	= 2081,
    MOVE_V	= 2082,
    MOVF_D32	= 2083,
    MOVF_D32_MM	= 2084,
    MOVF_D64	= 2085,
    MOVF_I	= 2086,
    MOVF_I64	= 2087,
    MOVF_I_MM	= 2088,
    MOVF_S	= 2089,
    MOVF_S_MM	= 2090,
    MOVN_I64_D64	= 2091,
    MOVN_I64_I	= 2092,
    MOVN_I64_I64	= 2093,
    MOVN_I64_S	= 2094,
    MOVN_I_D32	= 2095,
    MOVN_I_D32_MM	= 2096,
    MOVN_I_D64	= 2097,
    MOVN_I_I	= 2098,
    MOVN_I_I64	= 2099,
    MOVN_I_MM	= 2100,
    MOVN_I_S	= 2101,
    MOVN_I_S_MM	= 2102,
    MOVT_D32	= 2103,
    MOVT_D32_MM	= 2104,
    MOVT_D64	= 2105,
    MOVT_I	= 2106,
    MOVT_I64	= 2107,
    MOVT_I_MM	= 2108,
    MOVT_S	= 2109,
    MOVT_S_MM	= 2110,
    MOVZ_I64_D64	= 2111,
    MOVZ_I64_I	= 2112,
    MOVZ_I64_I64	= 2113,
    MOVZ_I64_S	= 2114,
    MOVZ_I_D32	= 2115,
    MOVZ_I_D32_MM	= 2116,
    MOVZ_I_D64	= 2117,
    MOVZ_I_I	= 2118,
    MOVZ_I_I64	= 2119,
    MOVZ_I_MM	= 2120,
    MOVZ_I_S	= 2121,
    MOVZ_I_S_MM	= 2122,
    MSUB	= 2123,
    MSUBF_D	= 2124,
    MSUBF_D_MMR6	= 2125,
    MSUBF_S	= 2126,
    MSUBF_S_MMR6	= 2127,
    MSUBR_Q_H	= 2128,
    MSUBR_Q_W	= 2129,
    MSUBU	= 2130,
    MSUBU_DSP	= 2131,
    MSUBU_DSP_MM	= 2132,
    MSUBU_MM	= 2133,
    MSUBV_B	= 2134,
    MSUBV_D	= 2135,
    MSUBV_H	= 2136,
    MSUBV_W	= 2137,
    MSUB_D32	= 2138,
    MSUB_D32_MM	= 2139,
    MSUB_D64	= 2140,
    MSUB_DSP	= 2141,
    MSUB_DSP_MM	= 2142,
    MSUB_MM	= 2143,
    MSUB_Q_H	= 2144,
    MSUB_Q_W	= 2145,
    MSUB_S	= 2146,
    MSUB_S_MM	= 2147,
    MTC0	= 2148,
    MTC0_MMR6	= 2149,
    MTC1	= 2150,
    MTC1_D64	= 2151,
    MTC1_D64_MM	= 2152,
    MTC1_MM	= 2153,
    MTC1_MMR6	= 2154,
    MTC2	= 2155,
    MTC2_MMR6	= 2156,
    MTGC0	= 2157,
    MTGC0_MM	= 2158,
    MTHC0_MMR6	= 2159,
    MTHC1_D32	= 2160,
    MTHC1_D32_MM	= 2161,
    MTHC1_D64	= 2162,
    MTHC1_D64_MM	= 2163,
    MTHC2_MMR6	= 2164,
    MTHGC0	= 2165,
    MTHGC0_MM	= 2166,
    MTHI	= 2167,
    MTHI64	= 2168,
    MTHI_DSP	= 2169,
    MTHI_DSP_MM	= 2170,
    MTHI_MM	= 2171,
    MTHLIP	= 2172,
    MTHLIP_MM	= 2173,
    MTLO	= 2174,
    MTLO64	= 2175,
    MTLO_DSP	= 2176,
    MTLO_DSP_MM	= 2177,
    MTLO_MM	= 2178,
    MTM0	= 2179,
    MTM1	= 2180,
    MTM2	= 2181,
    MTP0	= 2182,
    MTP1	= 2183,
    MTP2	= 2184,
    MTTR	= 2185,
    MUH	= 2186,
    MUHU	= 2187,
    MUHU_MMR6	= 2188,
    MUH_MMR6	= 2189,
    MUL	= 2190,
    MULEQ_S_W_PHL	= 2191,
    MULEQ_S_W_PHL_MM	= 2192,
    MULEQ_S_W_PHR	= 2193,
    MULEQ_S_W_PHR_MM	= 2194,
    MULEU_S_PH_QBL	= 2195,
    MULEU_S_PH_QBL_MM	= 2196,
    MULEU_S_PH_QBR	= 2197,
    MULEU_S_PH_QBR_MM	= 2198,
    MULQ_RS_PH	= 2199,
    MULQ_RS_PH_MM	= 2200,
    MULQ_RS_W	= 2201,
    MULQ_RS_W_MMR2	= 2202,
    MULQ_S_PH	= 2203,
    MULQ_S_PH_MMR2	= 2204,
    MULQ_S_W	= 2205,
    MULQ_S_W_MMR2	= 2206,
    MULR_PS64	= 2207,
    MULR_Q_H	= 2208,
    MULR_Q_W	= 2209,
    MULSAQ_S_W_PH	= 2210,
    MULSAQ_S_W_PH_MM	= 2211,
    MULSA_W_PH	= 2212,
    MULSA_W_PH_MMR2	= 2213,
    MULT	= 2214,
    MULTU_DSP	= 2215,
    MULTU_DSP_MM	= 2216,
    MULT_DSP	= 2217,
    MULT_DSP_MM	= 2218,
    MULT_MM	= 2219,
    MULTu	= 2220,
    MULTu_MM	= 2221,
    MULU	= 2222,
    MULU_MMR6	= 2223,
    MULV_B	= 2224,
    MULV_D	= 2225,
    MULV_H	= 2226,
    MULV_W	= 2227,
    MUL_MM	= 2228,
    MUL_MMR6	= 2229,
    MUL_PH	= 2230,
    MUL_PH_MMR2	= 2231,
    MUL_Q_H	= 2232,
    MUL_Q_W	= 2233,
    MUL_R6	= 2234,
    MUL_S_PH	= 2235,
    MUL_S_PH_MMR2	= 2236,
    Mfhi16	= 2237,
    Mflo16	= 2238,
    Move32R16	= 2239,
    MoveR3216	= 2240,
    NLOC_B	= 2241,
    NLOC_D	= 2242,
    NLOC_H	= 2243,
    NLOC_W	= 2244,
    NLZC_B	= 2245,
    NLZC_D	= 2246,
    NLZC_H	= 2247,
    NLZC_W	= 2248,
    NMADD_D32	= 2249,
    NMADD_D32_MM	= 2250,
    NMADD_D64	= 2251,
    NMADD_S	= 2252,
    NMADD_S_MM	= 2253,
    NMSUB_D32	= 2254,
    NMSUB_D32_MM	= 2255,
    NMSUB_D64	= 2256,
    NMSUB_S	= 2257,
    NMSUB_S_MM	= 2258,
    NOR	= 2259,
    NOR64	= 2260,
    NORI_B	= 2261,
    NOR_MM	= 2262,
    NOR_MMR6	= 2263,
    NOR_V	= 2264,
    NOT16_MM	= 2265,
    NOT16_MMR6	= 2266,
    NegRxRy16	= 2267,
    NotRxRy16	= 2268,
    OR	= 2269,
    OR16_MM	= 2270,
    OR16_MMR6	= 2271,
    OR64	= 2272,
    ORI_B	= 2273,
    ORI_MMR6	= 2274,
    OR_MM	= 2275,
    OR_MMR6	= 2276,
    OR_V	= 2277,
    ORi	= 2278,
    ORi64	= 2279,
    ORi_MM	= 2280,
    OrRxRxRy16	= 2281,
    PACKRL_PH	= 2282,
    PACKRL_PH_MM	= 2283,
    PAUSE	= 2284,
    PAUSE_MM	= 2285,
    PAUSE_MMR6	= 2286,
    PCKEV_B	= 2287,
    PCKEV_D	= 2288,
    PCKEV_H	= 2289,
    PCKEV_W	= 2290,
    PCKOD_B	= 2291,
    PCKOD_D	= 2292,
    PCKOD_H	= 2293,
    PCKOD_W	= 2294,
    PCNT_B	= 2295,
    PCNT_D	= 2296,
    PCNT_H	= 2297,
    PCNT_W	= 2298,
    PICK_PH	= 2299,
    PICK_PH_MM	= 2300,
    PICK_QB	= 2301,
    PICK_QB_MM	= 2302,
    PLL_PS64	= 2303,
    PLU_PS64	= 2304,
    POP	= 2305,
    PRECEQU_PH_QBL	= 2306,
    PRECEQU_PH_QBLA	= 2307,
    PRECEQU_PH_QBLA_MM	= 2308,
    PRECEQU_PH_QBL_MM	= 2309,
    PRECEQU_PH_QBR	= 2310,
    PRECEQU_PH_QBRA	= 2311,
    PRECEQU_PH_QBRA_MM	= 2312,
    PRECEQU_PH_QBR_MM	= 2313,
    PRECEQ_W_PHL	= 2314,
    PRECEQ_W_PHL_MM	= 2315,
    PRECEQ_W_PHR	= 2316,
    PRECEQ_W_PHR_MM	= 2317,
    PRECEU_PH_QBL	= 2318,
    PRECEU_PH_QBLA	= 2319,
    PRECEU_PH_QBLA_MM	= 2320,
    PRECEU_PH_QBL_MM	= 2321,
    PRECEU_PH_QBR	= 2322,
    PRECEU_PH_QBRA	= 2323,
    PRECEU_PH_QBRA_MM	= 2324,
    PRECEU_PH_QBR_MM	= 2325,
    PRECRQU_S_QB_PH	= 2326,
    PRECRQU_S_QB_PH_MM	= 2327,
    PRECRQ_PH_W	= 2328,
    PRECRQ_PH_W_MM	= 2329,
    PRECRQ_QB_PH	= 2330,
    PRECRQ_QB_PH_MM	= 2331,
    PRECRQ_RS_PH_W	= 2332,
    PRECRQ_RS_PH_W_MM	= 2333,
    PRECR_QB_PH	= 2334,
    PRECR_QB_PH_MMR2	= 2335,
    PRECR_SRA_PH_W	= 2336,
    PRECR_SRA_PH_W_MMR2	= 2337,
    PRECR_SRA_R_PH_W	= 2338,
    PRECR_SRA_R_PH_W_MMR2	= 2339,
    PREF	= 2340,
    PREFE	= 2341,
    PREFE_MM	= 2342,
    PREFX_MM	= 2343,
    PREF_MM	= 2344,
    PREF_MMR6	= 2345,
    PREF_R6	= 2346,
    PREPEND	= 2347,
    PREPEND_MMR2	= 2348,
    PUL_PS64	= 2349,
    PUU_PS64	= 2350,
    RADDU_W_QB	= 2351,
    RADDU_W_QB_MM	= 2352,
    RDDSP	= 2353,
    RDDSP_MM	= 2354,
    RDHWR	= 2355,
    RDHWR64	= 2356,
    RDHWR_MM	= 2357,
    RDHWR_MMR6	= 2358,
    RDPGPR_MMR6	= 2359,
    RECIP_D32	= 2360,
    RECIP_D32_MM	= 2361,
    RECIP_D64	= 2362,
    RECIP_D64_MM	= 2363,
    RECIP_S	= 2364,
    RECIP_S_MM	= 2365,
    REPLV_PH	= 2366,
    REPLV_PH_MM	= 2367,
    REPLV_QB	= 2368,
    REPLV_QB_MM	= 2369,
    REPL_PH	= 2370,
    REPL_PH_MM	= 2371,
    REPL_QB	= 2372,
    REPL_QB_MM	= 2373,
    RINT_D	= 2374,
    RINT_D_MMR6	= 2375,
    RINT_S	= 2376,
    RINT_S_MMR6	= 2377,
    ROTR	= 2378,
    ROTRV	= 2379,
    ROTRV_MM	= 2380,
    ROTR_MM	= 2381,
    ROUND_L_D64	= 2382,
    ROUND_L_D_MMR6	= 2383,
    ROUND_L_S	= 2384,
    ROUND_L_S_MMR6	= 2385,
    ROUND_W_D32	= 2386,
    ROUND_W_D64	= 2387,
    ROUND_W_D_MMR6	= 2388,
    ROUND_W_MM	= 2389,
    ROUND_W_S	= 2390,
    ROUND_W_S_MM	= 2391,
    ROUND_W_S_MMR6	= 2392,
    RSQRT_D32	= 2393,
    RSQRT_D32_MM	= 2394,
    RSQRT_D64	= 2395,
    RSQRT_D64_MM	= 2396,
    RSQRT_S	= 2397,
    RSQRT_S_MM	= 2398,
    Restore16	= 2399,
    RestoreX16	= 2400,
    SAA	= 2401,
    SAAD	= 2402,
    SAT_S_B	= 2403,
    SAT_S_D	= 2404,
    SAT_S_H	= 2405,
    SAT_S_W	= 2406,
    SAT_U_B	= 2407,
    SAT_U_D	= 2408,
    SAT_U_H	= 2409,
    SAT_U_W	= 2410,
    SB	= 2411,
    SB16_MM	= 2412,
    SB16_MMR6	= 2413,
    SB64	= 2414,
    SBE	= 2415,
    SBE_MM	= 2416,
    SB_MM	= 2417,
    SB_MMR6	= 2418,
    SC	= 2419,
    SC64	= 2420,
    SC64_R6	= 2421,
    SCD	= 2422,
    SCD_R6	= 2423,
    SCE	= 2424,
    SCE_MM	= 2425,
    SC_MM	= 2426,
    SC_MMR6	= 2427,
    SC_R6	= 2428,
    SD	= 2429,
    SDBBP	= 2430,
    SDBBP16_MM	= 2431,
    SDBBP16_MMR6	= 2432,
    SDBBP_MM	= 2433,
    SDBBP_MMR6	= 2434,
    SDBBP_R6	= 2435,
    SDC1	= 2436,
    SDC164	= 2437,
    SDC1_D64_MMR6	= 2438,
    SDC1_MM_D32	= 2439,
    SDC1_MM_D64	= 2440,
    SDC2	= 2441,
    SDC2_MMR6	= 2442,
    SDC2_R6	= 2443,
    SDC3	= 2444,
    SDIV	= 2445,
    SDIV_MM	= 2446,
    SDL	= 2447,
    SDR	= 2448,
    SDXC1	= 2449,
    SDXC164	= 2450,
    SEB	= 2451,
    SEB64	= 2452,
    SEB_MM	= 2453,
    SEH	= 2454,
    SEH64	= 2455,
    SEH_MM	= 2456,
    SELEQZ	= 2457,
    SELEQZ64	= 2458,
    SELEQZ_D	= 2459,
    SELEQZ_D_MMR6	= 2460,
    SELEQZ_MMR6	= 2461,
    SELEQZ_S	= 2462,
    SELEQZ_S_MMR6	= 2463,
    SELNEZ	= 2464,
    SELNEZ64	= 2465,
    SELNEZ_D	= 2466,
    SELNEZ_D_MMR6	= 2467,
    SELNEZ_MMR6	= 2468,
    SELNEZ_S	= 2469,
    SELNEZ_S_MMR6	= 2470,
    SEL_D	= 2471,
    SEL_D_MMR6	= 2472,
    SEL_S	= 2473,
    SEL_S_MMR6	= 2474,
    SEQ	= 2475,
    SEQi	= 2476,
    SH	= 2477,
    SH16_MM	= 2478,
    SH16_MMR6	= 2479,
    SH64	= 2480,
    SHE	= 2481,
    SHE_MM	= 2482,
    SHF_B	= 2483,
    SHF_H	= 2484,
    SHF_W	= 2485,
    SHILO	= 2486,
    SHILOV	= 2487,
    SHILOV_MM	= 2488,
    SHILO_MM	= 2489,
    SHLLV_PH	= 2490,
    SHLLV_PH_MM	= 2491,
    SHLLV_QB	= 2492,
    SHLLV_QB_MM	= 2493,
    SHLLV_S_PH	= 2494,
    SHLLV_S_PH_MM	= 2495,
    SHLLV_S_W	= 2496,
    SHLLV_S_W_MM	= 2497,
    SHLL_PH	= 2498,
    SHLL_PH_MM	= 2499,
    SHLL_QB	= 2500,
    SHLL_QB_MM	= 2501,
    SHLL_S_PH	= 2502,
    SHLL_S_PH_MM	= 2503,
    SHLL_S_W	= 2504,
    SHLL_S_W_MM	= 2505,
    SHRAV_PH	= 2506,
    SHRAV_PH_MM	= 2507,
    SHRAV_QB	= 2508,
    SHRAV_QB_MMR2	= 2509,
    SHRAV_R_PH	= 2510,
    SHRAV_R_PH_MM	= 2511,
    SHRAV_R_QB	= 2512,
    SHRAV_R_QB_MMR2	= 2513,
    SHRAV_R_W	= 2514,
    SHRAV_R_W_MM	= 2515,
    SHRA_PH	= 2516,
    SHRA_PH_MM	= 2517,
    SHRA_QB	= 2518,
    SHRA_QB_MMR2	= 2519,
    SHRA_R_PH	= 2520,
    SHRA_R_PH_MM	= 2521,
    SHRA_R_QB	= 2522,
    SHRA_R_QB_MMR2	= 2523,
    SHRA_R_W	= 2524,
    SHRA_R_W_MM	= 2525,
    SHRLV_PH	= 2526,
    SHRLV_PH_MMR2	= 2527,
    SHRLV_QB	= 2528,
    SHRLV_QB_MM	= 2529,
    SHRL_PH	= 2530,
    SHRL_PH_MMR2	= 2531,
    SHRL_QB	= 2532,
    SHRL_QB_MM	= 2533,
    SH_MM	= 2534,
    SH_MMR6	= 2535,
    SIGRIE	= 2536,
    SIGRIE_MMR6	= 2537,
    SLDI_B	= 2538,
    SLDI_D	= 2539,
    SLDI_H	= 2540,
    SLDI_W	= 2541,
    SLD_B	= 2542,
    SLD_D	= 2543,
    SLD_H	= 2544,
    SLD_W	= 2545,
    SLL	= 2546,
    SLL16_MM	= 2547,
    SLL16_MMR6	= 2548,
    SLL64_32	= 2549,
    SLL64_64	= 2550,
    SLLI_B	= 2551,
    SLLI_D	= 2552,
    SLLI_H	= 2553,
    SLLI_W	= 2554,
    SLLV	= 2555,
    SLLV_MM	= 2556,
    SLL_B	= 2557,
    SLL_D	= 2558,
    SLL_H	= 2559,
    SLL_MM	= 2560,
    SLL_MMR6	= 2561,
    SLL_W	= 2562,
    SLT	= 2563,
    SLT64	= 2564,
    SLT_MM	= 2565,
    SLTi	= 2566,
    SLTi64	= 2567,
    SLTi_MM	= 2568,
    SLTiu	= 2569,
    SLTiu64	= 2570,
    SLTiu_MM	= 2571,
    SLTu	= 2572,
    SLTu64	= 2573,
    SLTu_MM	= 2574,
    SNE	= 2575,
    SNEi	= 2576,
    SPLATI_B	= 2577,
    SPLATI_D	= 2578,
    SPLATI_H	= 2579,
    SPLATI_W	= 2580,
    SPLAT_B	= 2581,
    SPLAT_D	= 2582,
    SPLAT_H	= 2583,
    SPLAT_W	= 2584,
    SRA	= 2585,
    SRAI_B	= 2586,
    SRAI_D	= 2587,
    SRAI_H	= 2588,
    SRAI_W	= 2589,
    SRARI_B	= 2590,
    SRARI_D	= 2591,
    SRARI_H	= 2592,
    SRARI_W	= 2593,
    SRAR_B	= 2594,
    SRAR_D	= 2595,
    SRAR_H	= 2596,
    SRAR_W	= 2597,
    SRAV	= 2598,
    SRAV_MM	= 2599,
    SRA_B	= 2600,
    SRA_D	= 2601,
    SRA_H	= 2602,
    SRA_MM	= 2603,
    SRA_W	= 2604,
    SRL	= 2605,
    SRL16_MM	= 2606,
    SRL16_MMR6	= 2607,
    SRLI_B	= 2608,
    SRLI_D	= 2609,
    SRLI_H	= 2610,
    SRLI_W	= 2611,
    SRLRI_B	= 2612,
    SRLRI_D	= 2613,
    SRLRI_H	= 2614,
    SRLRI_W	= 2615,
    SRLR_B	= 2616,
    SRLR_D	= 2617,
    SRLR_H	= 2618,
    SRLR_W	= 2619,
    SRLV	= 2620,
    SRLV_MM	= 2621,
    SRL_B	= 2622,
    SRL_D	= 2623,
    SRL_H	= 2624,
    SRL_MM	= 2625,
    SRL_W	= 2626,
    SSNOP	= 2627,
    SSNOP_MM	= 2628,
    SSNOP_MMR6	= 2629,
    ST_B	= 2630,
    ST_D	= 2631,
    ST_H	= 2632,
    ST_W	= 2633,
    SUB	= 2634,
    SUBQH_PH	= 2635,
    SUBQH_PH_MMR2	= 2636,
    SUBQH_R_PH	= 2637,
    SUBQH_R_PH_MMR2	= 2638,
    SUBQH_R_W	= 2639,
    SUBQH_R_W_MMR2	= 2640,
    SUBQH_W	= 2641,
    SUBQH_W_MMR2	= 2642,
    SUBQ_PH	= 2643,
    SUBQ_PH_MM	= 2644,
    SUBQ_S_PH	= 2645,
    SUBQ_S_PH_MM	= 2646,
    SUBQ_S_W	= 2647,
    SUBQ_S_W_MM	= 2648,
    SUBSUS_U_B	= 2649,
    SUBSUS_U_D	= 2650,
    SUBSUS_U_H	= 2651,
    SUBSUS_U_W	= 2652,
    SUBSUU_S_B	= 2653,
    SUBSUU_S_D	= 2654,
    SUBSUU_S_H	= 2655,
    SUBSUU_S_W	= 2656,
    SUBS_S_B	= 2657,
    SUBS_S_D	= 2658,
    SUBS_S_H	= 2659,
    SUBS_S_W	= 2660,
    SUBS_U_B	= 2661,
    SUBS_U_D	= 2662,
    SUBS_U_H	= 2663,
    SUBS_U_W	= 2664,
    SUBU16_MM	= 2665,
    SUBU16_MMR6	= 2666,
    SUBUH_QB	= 2667,
    SUBUH_QB_MMR2	= 2668,
    SUBUH_R_QB	= 2669,
    SUBUH_R_QB_MMR2	= 2670,
    SUBU_MMR6	= 2671,
    SUBU_PH	= 2672,
    SUBU_PH_MMR2	= 2673,
    SUBU_QB	= 2674,
    SUBU_QB_MM	= 2675,
    SUBU_S_PH	= 2676,
    SUBU_S_PH_MMR2	= 2677,
    SUBU_S_QB	= 2678,
    SUBU_S_QB_MM	= 2679,
    SUBVI_B	= 2680,
    SUBVI_D	= 2681,
    SUBVI_H	= 2682,
    SUBVI_W	= 2683,
    SUBV_B	= 2684,
    SUBV_D	= 2685,
    SUBV_H	= 2686,
    SUBV_W	= 2687,
    SUB_MM	= 2688,
    SUB_MMR6	= 2689,
    SUBu	= 2690,
    SUBu_MM	= 2691,
    SUXC1	= 2692,
    SUXC164	= 2693,
    SUXC1_MM	= 2694,
    SW	= 2695,
    SW16_MM	= 2696,
    SW16_MMR6	= 2697,
    SW64	= 2698,
    SWC1	= 2699,
    SWC1_MM	= 2700,
    SWC2	= 2701,
    SWC2_MMR6	= 2702,
    SWC2_R6	= 2703,
    SWC3	= 2704,
    SWDSP	= 2705,
    SWDSP_MM	= 2706,
    SWE	= 2707,
    SWE_MM	= 2708,
    SWL	= 2709,
    SWL64	= 2710,
    SWLE	= 2711,
    SWLE_MM	= 2712,
    SWL_MM	= 2713,
    SWM16_MM	= 2714,
    SWM16_MMR6	= 2715,
    SWM32_MM	= 2716,
    SWP_MM	= 2717,
    SWR	= 2718,
    SWR64	= 2719,
    SWRE	= 2720,
    SWRE_MM	= 2721,
    SWR_MM	= 2722,
    SWSP_MM	= 2723,
    SWSP_MMR6	= 2724,
    SWXC1	= 2725,
    SWXC1_MM	= 2726,
    SW_MM	= 2727,
    SW_MMR6	= 2728,
    SYNC	= 2729,
    SYNCI	= 2730,
    SYNCI_MM	= 2731,
    SYNCI_MMR6	= 2732,
    SYNC_MM	= 2733,
    SYNC_MMR6	= 2734,
    SYSCALL	= 2735,
    SYSCALL_MM	= 2736,
    Save16	= 2737,
    SaveX16	= 2738,
    SbRxRyOffMemX16	= 2739,
    SebRx16	= 2740,
    SehRx16	= 2741,
    ShRxRyOffMemX16	= 2742,
    SllX16	= 2743,
    SllvRxRy16	= 2744,
    SltRxRy16	= 2745,
    SltiRxImm16	= 2746,
    SltiRxImmX16	= 2747,
    SltiuRxImm16	= 2748,
    SltiuRxImmX16	= 2749,
    SltuRxRy16	= 2750,
    SraX16	= 2751,
    SravRxRy16	= 2752,
    SrlX16	= 2753,
    SrlvRxRy16	= 2754,
    SubuRxRyRz16	= 2755,
    SwRxRyOffMemX16	= 2756,
    SwRxSpImmX16	= 2757,
    TEQ	= 2758,
    TEQI	= 2759,
    TEQI_MM	= 2760,
    TEQ_MM	= 2761,
    TGE	= 2762,
    TGEI	= 2763,
    TGEIU	= 2764,
    TGEIU_MM	= 2765,
    TGEI_MM	= 2766,
    TGEU	= 2767,
    TGEU_MM	= 2768,
    TGE_MM	= 2769,
    TLBGINV	= 2770,
    TLBGINVF	= 2771,
    TLBGINVF_MM	= 2772,
    TLBGINV_MM	= 2773,
    TLBGP	= 2774,
    TLBGP_MM	= 2775,
    TLBGR	= 2776,
    TLBGR_MM	= 2777,
    TLBGWI	= 2778,
    TLBGWI_MM	= 2779,
    TLBGWR	= 2780,
    TLBGWR_MM	= 2781,
    TLBINV	= 2782,
    TLBINVF	= 2783,
    TLBINVF_MMR6	= 2784,
    TLBINV_MMR6	= 2785,
    TLBP	= 2786,
    TLBP_MM	= 2787,
    TLBR	= 2788,
    TLBR_MM	= 2789,
    TLBWI	= 2790,
    TLBWI_MM	= 2791,
    TLBWR	= 2792,
    TLBWR_MM	= 2793,
    TLT	= 2794,
    TLTI	= 2795,
    TLTIU_MM	= 2796,
    TLTI_MM	= 2797,
    TLTU	= 2798,
    TLTU_MM	= 2799,
    TLT_MM	= 2800,
    TNE	= 2801,
    TNEI	= 2802,
    TNEI_MM	= 2803,
    TNE_MM	= 2804,
    TRUNC_L_D64	= 2805,
    TRUNC_L_D_MMR6	= 2806,
    TRUNC_L_S	= 2807,
    TRUNC_L_S_MMR6	= 2808,
    TRUNC_W_D32	= 2809,
    TRUNC_W_D64	= 2810,
    TRUNC_W_D_MMR6	= 2811,
    TRUNC_W_MM	= 2812,
    TRUNC_W_S	= 2813,
    TRUNC_W_S_MM	= 2814,
    TRUNC_W_S_MMR6	= 2815,
    TTLTIU	= 2816,
    UDIV	= 2817,
    UDIV_MM	= 2818,
    V3MULU	= 2819,
    VMM0	= 2820,
    VMULU	= 2821,
    VSHF_B	= 2822,
    VSHF_D	= 2823,
    VSHF_H	= 2824,
    VSHF_W	= 2825,
    WAIT	= 2826,
    WAIT_MM	= 2827,
    WAIT_MMR6	= 2828,
    WRDSP	= 2829,
    WRDSP_MM	= 2830,
    WRPGPR_MMR6	= 2831,
    WSBH	= 2832,
    WSBH_MM	= 2833,
    WSBH_MMR6	= 2834,
    XOR	= 2835,
    XOR16_MM	= 2836,
    XOR16_MMR6	= 2837,
    XOR64	= 2838,
    XORI_B	= 2839,
    XORI_MMR6	= 2840,
    XOR_MM	= 2841,
    XOR_MMR6	= 2842,
    XOR_V	= 2843,
    XORi	= 2844,
    XORi64	= 2845,
    XORi_MM	= 2846,
    XorRxRxRy16	= 2847,
    YIELD	= 2848,
    INSTRUCTION_LIST_END = 2849
  };

} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace Mips {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    IIPseudo	= 1,
    II_B	= 2,
    II_BCCZAL	= 3,
    II_MTC1	= 4,
    II_MFC1	= 5,
    II_JALR	= 6,
    II_JAL	= 7,
    II_CVT	= 8,
    II_DMULT	= 9,
    II_DMULTU	= 10,
    II_DDIV	= 11,
    II_DDIVU	= 12,
    II_IndirectBranchPseudo	= 13,
    II_MADD	= 14,
    II_MADDU	= 15,
    II_MFHI_MFLO	= 16,
    II_MSUB	= 17,
    II_MSUBU	= 18,
    II_MTHI_MTLO	= 19,
    II_MULT	= 20,
    II_MULTU	= 21,
    II_ReturnPseudo	= 22,
    II_DIV	= 23,
    II_DIVU	= 24,
    II_J	= 25,
    II_JR	= 26,
    II_TRAP	= 27,
    II_ADD	= 28,
    II_ADDIUPC	= 29,
    II_ADDIU	= 30,
    II_ADDR_PS	= 31,
    II_ADDU	= 32,
    II_ADDI	= 33,
    II_ALIGN	= 34,
    II_ALUIPC	= 35,
    II_AND	= 36,
    II_ANDI	= 37,
    II_AUI	= 38,
    II_AUIPC	= 39,
    IIM16Alu	= 40,
    II_BADDU	= 41,
    II_BC	= 42,
    II_BALC	= 43,
    II_BBIT	= 44,
    II_BC1CCZ	= 45,
    II_BC1F	= 46,
    II_BC1FL	= 47,
    II_BC1T	= 48,
    II_BC1TL	= 49,
    II_BC2CCZ	= 50,
    II_BCC	= 51,
    II_BCCC	= 52,
    II_BCCZ	= 53,
    II_BCCZC	= 54,
    II_BCCZALS	= 55,
    II_BITSWAP	= 56,
    II_BREAK	= 57,
    II_CACHE	= 58,
    II_CACHEE	= 59,
    II_CEIL	= 60,
    II_CFC1	= 61,
    II_CFC2	= 62,
    II_INS	= 63,
    II_CLASS_D	= 64,
    II_CLASS_S	= 65,
    II_CLO	= 66,
    II_CLZ	= 67,
    II_CMP_CC_D	= 68,
    II_CMP_CC_S	= 69,
    II_CRC32B	= 70,
    II_CRC32CB	= 71,
    II_CRC32CD	= 72,
    II_CRC32CH	= 73,
    II_CRC32CW	= 74,
    II_CRC32D	= 75,
    II_CRC32H	= 76,
    II_CRC32W	= 77,
    II_CTC1	= 78,
    II_CTC2	= 79,
    II_C_CC_D	= 80,
    II_C_CC_S	= 81,
    II_DADD	= 82,
    II_DADDI	= 83,
    II_DADDIU	= 84,
    II_DADDU	= 85,
    II_DAHI	= 86,
    II_DALIGN	= 87,
    II_DATI	= 88,
    II_DAUI	= 89,
    II_DBITSWAP	= 90,
    II_DCLO	= 91,
    II_DCLZ	= 92,
    II_DERET	= 93,
    II_EXT	= 94,
    II_DI	= 95,
    II_DLSA	= 96,
    II_DMFC0	= 97,
    II_DMFC1	= 98,
    II_DMFC2	= 99,
    II_DMFGC0	= 100,
    II_DMOD	= 101,
    II_DMODU	= 102,
    II_DMT	= 103,
    II_DMTC0	= 104,
    II_DMTC1	= 105,
    II_DMTC2	= 106,
    II_DMTGC0	= 107,
    II_DMUH	= 108,
    II_DMUHU	= 109,
    II_DMUL	= 110,
    II_POP	= 111,
    II_DROTR	= 112,
    II_DROTR32	= 113,
    II_DROTRV	= 114,
    II_DSBH	= 115,
    II_DSHD	= 116,
    II_DSLL	= 117,
    II_DSLL32	= 118,
    II_DSLLV	= 119,
    II_DSRA	= 120,
    II_DSRA32	= 121,
    II_DSRAV	= 122,
    II_DSRL	= 123,
    II_DSRL32	= 124,
    II_DSRLV	= 125,
    II_DSUB	= 126,
    II_DSUBU	= 127,
    II_DVP	= 128,
    II_DVPE	= 129,
    II_EHB	= 130,
    II_EI	= 131,
    II_EMT	= 132,
    II_ERET	= 133,
    II_ERETNC	= 134,
    II_EVP	= 135,
    II_EVPE	= 136,
    II_ABS	= 137,
    II_SQRT_D	= 138,
    II_ADD_D	= 139,
    II_ADD_PS	= 140,
    II_ADD_S	= 141,
    II_DIV_D	= 142,
    II_DIV_S	= 143,
    II_FLOOR	= 144,
    II_MOV_D	= 145,
    II_MOV_S	= 146,
    II_MUL_D	= 147,
    II_MUL_PS	= 148,
    II_MUL_S	= 149,
    II_NEG	= 150,
    II_FORK	= 151,
    II_SQRT_S	= 152,
    II_SUB_D	= 153,
    II_SUB_PS	= 154,
    II_SUB_S	= 155,
    II_GINVI	= 156,
    II_GINVT	= 157,
    II_HYPCALL	= 158,
    II_JALR_HB	= 159,
    II_JALRC	= 160,
    II_JALRS	= 161,
    II_JALS	= 162,
    II_JIALC	= 163,
    II_JIC	= 164,
    II_JRADDIUSP	= 165,
    II_JRC	= 166,
    II_JR_HB	= 167,
    II_LB	= 168,
    II_LBE	= 169,
    II_LBU	= 170,
    II_LBUE	= 171,
    II_LD	= 172,
    II_LDC1	= 173,
    II_LDC2	= 174,
    II_LDC3	= 175,
    II_LDL	= 176,
    II_LDPC	= 177,
    II_LDR	= 178,
    II_LDXC1	= 179,
    II_LH	= 180,
    II_LHE	= 181,
    II_LHU	= 182,
    II_LHUE	= 183,
    II_LI	= 184,
    II_LL	= 185,
    II_LLD	= 186,
    II_LLE	= 187,
    II_LSA	= 188,
    II_LUI	= 189,
    II_LUXC1	= 190,
    II_LW	= 191,
    II_LWC1	= 192,
    II_LWC2	= 193,
    II_LWC3	= 194,
    II_LWE	= 195,
    II_LWL	= 196,
    II_LWLE	= 197,
    II_LWM	= 198,
    II_LWPC	= 199,
    II_LWP	= 200,
    II_LWR	= 201,
    II_LWRE	= 202,
    II_LWUPC	= 203,
    II_LWU	= 204,
    II_LWXC1	= 205,
    II_LWXS	= 206,
    II_MADDF_D	= 207,
    II_MADDF_S	= 208,
    II_MADD_D	= 209,
    II_MADD_S	= 210,
    II_MAX_D	= 211,
    II_MAXA_D	= 212,
    II_MAX_S	= 213,
    II_MAXA_S	= 214,
    II_MFC0	= 215,
    II_MFC2	= 216,
    II_MFGC0	= 217,
    II_MFHC0	= 218,
    II_MFHC1	= 219,
    II_MFHGC0	= 220,
    II_MFTR	= 221,
    II_MIN_S	= 222,
    II_MINA_D	= 223,
    II_MIN_D	= 224,
    II_MINA_S	= 225,
    II_MOD	= 226,
    II_MODU	= 227,
    II_MOVE	= 228,
    II_MOVF_D	= 229,
    II_MOVF	= 230,
    II_MOVF_S	= 231,
    II_MOVN_D	= 232,
    II_MOVN	= 233,
    II_MOVN_S	= 234,
    II_MOVT_D	= 235,
    II_MOVT	= 236,
    II_MOVT_S	= 237,
    II_MOVZ_D	= 238,
    II_MOVZ	= 239,
    II_MOVZ_S	= 240,
    II_MSUBF_D	= 241,
    II_MSUBF_S	= 242,
    II_MSUB_D	= 243,
    II_MSUB_S	= 244,
    II_MTC0	= 245,
    II_MTC2	= 246,
    II_MTGC0	= 247,
    II_MTHC0	= 248,
    II_MTHC1	= 249,
    II_MTHGC0	= 250,
    II_MTTR	= 251,
    II_MUH	= 252,
    II_MUHU	= 253,
    II_MUL	= 254,
    II_MULR_PS	= 255,
    II_MULU	= 256,
    II_NMADD_D	= 257,
    II_NMADD_S	= 258,
    II_NMSUB_D	= 259,
    II_NMSUB_S	= 260,
    II_NOR	= 261,
    II_NOT	= 262,
    II_OR	= 263,
    II_ORI	= 264,
    II_PAUSE	= 265,
    II_PREF	= 266,
    II_PREFE	= 267,
    II_RDHWR	= 268,
    II_RDPGPR	= 269,
    II_RECIP_D	= 270,
    II_RECIP_S	= 271,
    II_RINT_D	= 272,
    II_RINT_S	= 273,
    II_ROTR	= 274,
    II_ROTRV	= 275,
    II_ROUND	= 276,
    II_RSQRT_D	= 277,
    II_RSQRT_S	= 278,
    II_RESTORE	= 279,
    II_SB	= 280,
    II_SBE	= 281,
    II_SC	= 282,
    II_SCD	= 283,
    II_SCE	= 284,
    II_SD	= 285,
    II_SDBBP	= 286,
    II_SDC1	= 287,
    II_SDC2	= 288,
    II_SDC3	= 289,
    II_SDL	= 290,
    II_SDR	= 291,
    II_SDXC1	= 292,
    II_SEB	= 293,
    II_SEH	= 294,
    II_SELCCZ	= 295,
    II_SELCCZ_D	= 296,
    II_SELCCZ_S	= 297,
    II_SEL_D	= 298,
    II_SEL_S	= 299,
    II_SEQ_SNE	= 300,
    II_SEQI_SNEI	= 301,
    II_SH	= 302,
    II_SHE	= 303,
    II_SIGRIE	= 304,
    II_SLL	= 305,
    II_SLLV	= 306,
    II_SLT_SLTU	= 307,
    II_SLTI_SLTIU	= 308,
    II_SRA	= 309,
    II_SRAV	= 310,
    II_SRL	= 311,
    II_SRLV	= 312,
    II_SSNOP	= 313,
    II_SUB	= 314,
    II_SUBU	= 315,
    II_SUXC1	= 316,
    II_SW	= 317,
    II_SWC1	= 318,
    II_SWC2	= 319,
    II_SWC3	= 320,
    II_SWE	= 321,
    II_SWL	= 322,
    II_SWLE	= 323,
    II_SWM	= 324,
    II_SWP	= 325,
    II_SWR	= 326,
    II_SWRE	= 327,
    II_SWXC1	= 328,
    II_SYNC	= 329,
    II_SYNCI	= 330,
    II_SYSCALL	= 331,
    II_SAVE	= 332,
    II_TEQ	= 333,
    II_TEQI	= 334,
    II_TGE	= 335,
    II_TGEI	= 336,
    II_TGEIU	= 337,
    II_TGEU	= 338,
    II_TLBGINV	= 339,
    II_TLBGINVF	= 340,
    II_TLBGP	= 341,
    II_TLBGR	= 342,
    II_TLBGWI	= 343,
    II_TLBGWR	= 344,
    II_TLBINV	= 345,
    II_TLBINVF	= 346,
    II_TLBP	= 347,
    II_TLBR	= 348,
    II_TLBWI	= 349,
    II_TLBWR	= 350,
    II_TLT	= 351,
    II_TLTI	= 352,
    II_TTLTIU	= 353,
    II_TLTU	= 354,
    II_TNE	= 355,
    II_TNEI	= 356,
    II_TRUNC	= 357,
    II_WAIT	= 358,
    II_WRPGPR	= 359,
    II_WSBH	= 360,
    II_XOR	= 361,
    II_XORI	= 362,
    II_YIELD	= 363,
    AND	= 364,
    LUi	= 365,
    NOR	= 366,
    OR	= 367,
    SLTi_SLTiu	= 368,
    SUB	= 369,
    SUBu	= 370,
    XOR	= 371,
    SSNOP	= 372,
    NOP	= 373,
    B	= 374,
    BAL	= 375,
    BAL_BR_BGEZAL_BGEZALL_BLTZAL_BLTZALL	= 376,
    BEQ_BEQL_BNE_BNEL	= 377,
    BGEZ_BGEZL_BGTZ_BGTZL_BLEZ_BLEZL_BLTZ_BLTZL	= 378,
    BREAK	= 379,
    DERET	= 380,
    ERET	= 381,
    ERet_RetRA	= 382,
    ERETNC	= 383,
    J_TAILCALL	= 384,
    JR_TAILCALLREG_TAILCALLREGHB	= 385,
    JR_HB	= 386,
    PseudoIndirectBranch_PseudoIndirectHazardBranch	= 387,
    PseudoReturn	= 388,
    SDBBP	= 389,
    SYSCALL	= 390,
    TEQ	= 391,
    TEQI	= 392,
    TGE	= 393,
    TGEI	= 394,
    TGEIU	= 395,
    TGEU	= 396,
    TLT	= 397,
    TLTI	= 398,
    TLTU	= 399,
    TNE	= 400,
    TNEI	= 401,
    TRAP	= 402,
    TTLTIU	= 403,
    WAIT	= 404,
    PAUSE	= 405,
    JAL	= 406,
    JALR_JALRHBPseudo_JALRPseudo	= 407,
    JALR_HB	= 408,
    JALX	= 409,
    TLBINV	= 410,
    TLBINVF	= 411,
    TLBP	= 412,
    TLBR	= 413,
    TLBWI	= 414,
    TLBWR	= 415,
    MFC0	= 416,
    MTC0	= 417,
    MFC2	= 418,
    MTC2	= 419,
    HYPCALL	= 420,
    MFGC0	= 421,
    MFHGC0	= 422,
    MTGC0	= 423,
    MTHGC0	= 424,
    TLBGINV	= 425,
    TLBGINVF	= 426,
    TLBGP	= 427,
    TLBGR	= 428,
    TLBGWI	= 429,
    TLBGWR	= 430,
    LB	= 431,
    LBu	= 432,
    LH	= 433,
    LHu	= 434,
    LW	= 435,
    LL	= 436,
    LWC2	= 437,
    LWC3	= 438,
    LDC2	= 439,
    LDC3	= 440,
    LBE	= 441,
    LBuE	= 442,
    LHE	= 443,
    LHuE	= 444,
    LWE	= 445,
    LLE	= 446,
    LWPC	= 447,
    LWL	= 448,
    LWR	= 449,
    LWLE	= 450,
    LWRE	= 451,
    SB	= 452,
    SH	= 453,
    SW	= 454,
    SWC2	= 455,
    SWC3	= 456,
    SDC2	= 457,
    SDC3	= 458,
    SC	= 459,
    SBE	= 460,
    SHE	= 461,
    SWE	= 462,
    SCE	= 463,
    SWL	= 464,
    SWR	= 465,
    SWLE	= 466,
    SWRE	= 467,
    PREF	= 468,
    PREFE	= 469,
    CACHE	= 470,
    CACHEE	= 471,
    SYNC	= 472,
    SYNCI	= 473,
    CLO	= 474,
    CLZ	= 475,
    DI	= 476,
    EI	= 477,
    MFHI_MFLO_PseudoMFHI_PseudoMFLO	= 478,
    EHB	= 479,
    RDHWR	= 480,
    WSBH	= 481,
    MOVN_I_I	= 482,
    MOVZ_I_I	= 483,
    DIV_PseudoSDIV_SDIV	= 484,
    DIVU_PseudoUDIV_UDIV	= 485,
    MUL	= 486,
    MULT_PseudoMULT	= 487,
    MULTu_PseudoMULTu	= 488,
    MADD_PseudoMADD	= 489,
    MADDU_PseudoMADDU	= 490,
    MSUB_PseudoMSUB	= 491,
    MSUBU_PseudoMSUBU	= 492,
    MTHI_MTLO_PseudoMTLOHI	= 493,
    EXT	= 494,
    INS	= 495,
    ADD	= 496,
    ADDi	= 497,
    ADDiu	= 498,
    ANDi	= 499,
    ORi	= 500,
    ROTR	= 501,
    SEB	= 502,
    SEH	= 503,
    SLT_SLTu	= 504,
    SLL	= 505,
    SRA	= 506,
    SRL	= 507,
    XORi	= 508,
    ADDu	= 509,
    SLLV	= 510,
    SRAV	= 511,
    SRLV	= 512,
    LSA	= 513,
    COPY	= 514,
    VSHF_B_VSHF_D_VSHF_H_VSHF_W	= 515,
    BINSLI_B_BINSLI_D_BINSLI_H_BINSLI_W_BINSL_B_BINSL_D_BINSL_H_BINSL_W	= 516,
    BINSRI_B_BINSRI_D_BINSRI_H_BINSRI_W_BINSR_B_BINSR_D_BINSR_H_BINSR_W	= 517,
    INSERT_B_INSERT_D_INSERT_H_INSERT_W	= 518,
    SLDI_B_SLDI_D_SLDI_H_SLDI_W_SLD_B_SLD_D_SLD_H_SLD_W	= 519,
    BSETI_B_BSETI_D_BSETI_H_BSETI_W_BSET_B_BSET_D_BSET_H_BSET_W	= 520,
    BCLRI_B_BCLRI_D_BCLRI_H_BCLRI_W_BCLR_B_BCLR_D_BCLR_H_BCLR_W	= 521,
    BNEGI_B_BNEGI_D_BNEGI_H_BNEGI_W_BNEG_B_BNEG_D_BNEG_H_BNEG_W	= 522,
    BSELI_B_BSEL_V	= 523,
    BMNZI_B_BMNZ_V_BMZI_B_BMZ_V	= 524,
    BSEL_D_PSEUDO_BSEL_FD_PSEUDO_BSEL_FW_PSEUDO_BSEL_H_PSEUDO_BSEL_W_PSEUDO	= 525,
    PCNT_B_PCNT_D_PCNT_H_PCNT_W	= 526,
    SAT_S_B_SAT_S_D_SAT_S_H_SAT_S_W_SAT_U_B_SAT_U_D_SAT_U_H_SAT_U_W	= 527,
    BNZ_B_BNZ_D_BNZ_H_BNZ_V_BNZ_W_BZ_B_BZ_D_BZ_H_BZ_V_BZ_W	= 528,
    CFCMSA_CTCMSA	= 529,
    FABS_S_FABS_D32_FABS_D64	= 530,
    MOVF_D32_MOVF_D64	= 531,
    MOVF_S	= 532,
    MOVT_D32_MOVT_D64	= 533,
    MOVT_S	= 534,
    FMOV_D32_FMOV_D64	= 535,
    FMOV_S	= 536,
    FNEG_S_FNEG_D32_FNEG_D64	= 537,
    ADD_A_B_ADD_A_D_ADD_A_H_ADD_A_W	= 538,
    ADDS_A_B_ADDS_A_D_ADDS_A_H_ADDS_A_W_ADDS_S_B_ADDS_S_D_ADDS_S_H_ADDS_S_W_ADDS_U_B_ADDS_U_D_ADDS_U_H_ADDS_U_W	= 539,
    ADDVI_B_ADDVI_D_ADDVI_H_ADDVI_W_ADDV_B_ADDV_D_ADDV_H_ADDV_W	= 540,
    ASUB_S_B_ASUB_S_D_ASUB_S_H_ASUB_S_W_ASUB_U_B_ASUB_U_D_ASUB_U_H_ASUB_U_W	= 541,
    AVER_S_B_AVER_S_D_AVER_S_H_AVER_S_W_AVER_U_B_AVER_U_D_AVER_U_H_AVER_U_W_AVE_S_B_AVE_S_D_AVE_S_H_AVE_S_W_AVE_U_B_AVE_U_D_AVE_U_H_AVE_U_W	= 542,
    SHF_B_SHF_H_SHF_W	= 543,
    FILL_B_FILL_D_FILL_H_FILL_W	= 544,
    SPLATI_B_SPLATI_D_SPLATI_H_SPLATI_W_SPLAT_B_SPLAT_D_SPLAT_H_SPLAT_W	= 545,
    MOVE_V	= 546,
    LDI_B_LDI_D_LDI_H_LDI_W	= 547,
    AND_V_NOR_V_OR_V_XOR_V	= 548,
    ANDI_B_NORI_B_ORI_B_XORI_B	= 549,
    AND_V_D_PSEUDO_AND_V_H_PSEUDO_AND_V_W_PSEUDO_NOR_V_D_PSEUDO_NOR_V_H_PSEUDO_NOR_V_W_PSEUDO_OR_V_D_PSEUDO_OR_V_H_PSEUDO_OR_V_W_PSEUDO_XOR_V_D_PSEUDO_XOR_V_H_PSEUDO_XOR_V_W_PSEUDO	= 550,
    FILL_FD_PSEUDO_FILL_FW_PSEUDO	= 551,
    INSERT_FD_PSEUDO_INSERT_FW_PSEUDO	= 552,
    FEXP2_D_FEXP2_W	= 553,
    CLTI_S_B_CLTI_S_D_CLTI_S_H_CLTI_S_W_CLTI_U_B_CLTI_U_D_CLTI_U_H_CLTI_U_W_CLT_S_B_CLT_S_D_CLT_S_H_CLT_S_W_CLT_U_B_CLT_U_D_CLT_U_H_CLT_U_W	= 554,
    CLEI_S_B_CLEI_S_D_CLEI_S_H_CLEI_S_W_CLEI_U_B_CLEI_U_D_CLEI_U_H_CLEI_U_W_CLE_S_B_CLE_S_D_CLE_S_H_CLE_S_W_CLE_U_B_CLE_U_D_CLE_U_H_CLE_U_W	= 555,
    CEQI_B_CEQI_D_CEQI_H_CEQI_W_CEQ_B_CEQ_D_CEQ_H_CEQ_W	= 556,
    CMP_UN_D	= 557,
    CMP_UN_S	= 558,
    CMP_UEQ_D	= 559,
    CMP_UEQ_S	= 560,
    CMP_EQ_D	= 561,
    CMP_EQ_S	= 562,
    CMP_LT_D	= 563,
    CMP_LT_S	= 564,
    CMP_ULT_D	= 565,
    CMP_ULT_S	= 566,
    CMP_LE_D	= 567,
    CMP_LE_S	= 568,
    CMP_ULE_D	= 569,
    CMP_ULE_S	= 570,
    FSAF_D_FSAF_W_FSEQ_D_FSEQ_W_FSLE_D_FSLE_W_FSLT_D_FSLT_W_FSNE_D_FSNE_W_FSOR_D_FSOR_W	= 571,
    FSUEQ_D_FSUEQ_W	= 572,
    FSULE_D_FSULE_W	= 573,
    FSULT_D_FSULT_W	= 574,
    FSUNE_D_FSUNE_W	= 575,
    FSUN_D_FSUN_W	= 576,
    FCAF_D_FCAF_W	= 577,
    FCEQ_D_FCEQ_W	= 578,
    FCLE_D_FCLE_W	= 579,
    FCLT_D_FCLT_W	= 580,
    FCNE_D_FCNE_W	= 581,
    FCOR_D_FCOR_W	= 582,
    FCUEQ_D_FCUEQ_W	= 583,
    FCULE_D_FCULE_W	= 584,
    FCULT_D_FCULT_W	= 585,
    FCUNE_D_FCUNE_W	= 586,
    FCUN_D_FCUN_W	= 587,
    FABS_D_FABS_W	= 588,
    FFINT_S_D_FFINT_S_W_FFINT_U_D_FFINT_U_W	= 589,
    FFQL_D_FFQL_W	= 590,
    FFQR_D_FFQR_W	= 591,
    FTINT_S_D_FTINT_S_W_FTINT_U_D_FTINT_U_W	= 592,
    FRINT_D_FRINT_W	= 593,
    FTQ_H_FTQ_W	= 594,
    FTRUNC_S_D_FTRUNC_S_W_FTRUNC_U_D_FTRUNC_U_W	= 595,
    FEXDO_H_FEXDO_W	= 596,
    FEXUPL_D_FEXUPL_W	= 597,
    FEXUPR_D_FEXUPR_W	= 598,
    FCLASS_D_FCLASS_W	= 599,
    FMAX_A_D_FMAX_A_W	= 600,
    FMAX_D_FMAX_W	= 601,
    FMIN_A_D_FMIN_A_W	= 602,
    FMIN_D_FMIN_W	= 603,
    FLOG2_D_FLOG2_W	= 604,
    ILVL_B_ILVL_D_ILVL_H_ILVL_W_ILVR_B_ILVR_D_ILVR_H_ILVR_W	= 605,
    ILVEV_B_ILVEV_D_ILVEV_H_ILVEV_W_ILVOD_B_ILVOD_D_ILVOD_H_ILVOD_W	= 606,
    INSVE_B_INSVE_D_INSVE_H_INSVE_W	= 607,
    SUBS_S_B_SUBS_S_D_SUBS_S_H_SUBS_S_W_SUBS_U_B_SUBS_U_D_SUBS_U_H_SUBS_U_W	= 608,
    SUBSUS_U_B_SUBSUS_U_D_SUBSUS_U_H_SUBSUS_U_W	= 609,
    SUBSUU_S_B_SUBSUU_S_D_SUBSUU_S_H_SUBSUU_S_W	= 610,
    SUBVI_B_SUBVI_D_SUBVI_H_SUBVI_W	= 611,
    SUBV_B_SUBV_D_SUBV_H_SUBV_W	= 612,
    MOD_S_B_MOD_S_D_MOD_S_H_MOD_S_W_MOD_U_B_MOD_U_D_MOD_U_H_MOD_U_W	= 613,
    DIV_S_B_DIV_S_D_DIV_S_H_DIV_S_W_DIV_U_B_DIV_U_D_DIV_U_H_DIV_U_W	= 614,
    HADD_S_D_HADD_S_H_HADD_S_W_HADD_U_D_HADD_U_H_HADD_U_W	= 615,
    HSUB_S_D_HSUB_S_H_HSUB_S_W_HSUB_U_D_HSUB_U_H_HSUB_U_W	= 616,
    MAX_S_B_MAX_S_D_MAX_S_H_MAX_S_W_MIN_S_B_MIN_S_D_MIN_S_H_MIN_S_W	= 617,
    MAX_U_B_MAX_U_D_MAX_U_H_MAX_U_W_MIN_U_B_MIN_U_D_MIN_U_H_MIN_U_W	= 618,
    MAX_A_B_MAX_A_D_MAX_A_H_MAX_A_W_MIN_A_B_MIN_A_D_MIN_A_H_MIN_A_W	= 619,
    MAXI_S_B_MAXI_S_D_MAXI_S_H_MAXI_S_W_MAXI_U_B_MAXI_U_D_MAXI_U_H_MAXI_U_W_MINI_S_B_MINI_S_D_MINI_S_H_MINI_S_W_MINI_U_B_MINI_U_D_MINI_U_H_MINI_U_W	= 620,
    SRAI_B_SRAI_D_SRAI_H_SRAI_W_SRA_B_SRA_D_SRA_H_SRA_W	= 621,
    SRLI_B_SRLI_D_SRLI_H_SRLI_W_SRL_B_SRL_D_SRL_H_SRL_W	= 622,
    SRARI_B_SRARI_D_SRARI_H_SRARI_W_SRAR_B_SRAR_D_SRAR_H_SRAR_W	= 623,
    SRLRI_B_SRLRI_D_SRLRI_H_SRLRI_W_SRLR_B_SRLR_D_SRLR_H_SRLR_W	= 624,
    SLLI_B_SLLI_D_SLLI_H_SLLI_W_SLL_B_SLL_D_SLL_H_SLL_W	= 625,
    PCKEV_B_PCKEV_D_PCKEV_H_PCKEV_W_PCKOD_B_PCKOD_D_PCKOD_H_PCKOD_W	= 626,
    NLOC_B_NLOC_D_NLOC_H_NLOC_W_NLZC_B_NLZC_D_NLZC_H_NLZC_W	= 627,
    FADD_D32_FADD_D64	= 628,
    FADD_PS64	= 629,
    FADD_S	= 630,
    FMUL_D32_FMUL_D64	= 631,
    FMUL_PS64	= 632,
    FMUL_S	= 633,
    FSUB_D32_FSUB_D64	= 634,
    FSUB_PS64	= 635,
    FSUB_S	= 636,
    TRUNC_L_D64_TRUNC_L_S_TRUNC_W_D32_TRUNC_W_D64_TRUNC_W_S	= 637,
    CVT_D32_S_CVT_D32_W_CVT_D64_L_CVT_D64_S_CVT_D64_W_CVT_L_D64_CVT_L_S_CVT_S_D32_CVT_S_D64_CVT_S_L_CVT_S_W_CVT_W_D32_CVT_W_D64_CVT_W_S	= 638,
    CVT_PS_S64_CVT_S_PL64_CVT_S_PU64	= 639,
    C_EQ_D32_C_EQ_D64_C_F_D32_C_F_D64_C_LE_D32_C_LE_D64_C_LT_D32_C_LT_D64_C_NGE_D32_C_NGE_D64_C_NGLE_D32_C_NGLE_D64_C_NGL_D32_C_NGL_D64_C_NGT_D32_C_NGT_D64_C_OLE_D32_C_OLE_D64_C_OLT_D32_C_OLT_D64_C_SEQ_D32_C_SEQ_D64_C_SF_D32_C_SF_D64_C_UEQ_D32_C_UEQ_D64_C_ULE_D32_C_ULE_D64_C_ULT_D32_C_ULT_D64_C_UN_D32_C_UN_D64	= 640,
    C_EQ_S_C_F_S_C_LE_S_C_LT_S_C_NGE_S_C_NGLE_S_C_NGL_S_C_NGT_S_C_OLE_S_C_OLT_S_C_SEQ_S_C_SF_S_C_UEQ_S_C_ULE_S_C_ULT_S_C_UN_S	= 641,
    FCMP_D32_FCMP_D64	= 642,
    FCMP_S32	= 643,
    PseudoCVT_D32_W_PseudoCVT_D64_L_PseudoCVT_D64_W_PseudoCVT_S_L_PseudoCVT_S_W	= 644,
    PLL_PS64_PLU_PS64_PUL_PS64_PUU_PS64	= 645,
    FDIV_S	= 646,
    FDIV_D32_FDIV_D64	= 647,
    FSQRT_S	= 648,
    FSQRT_D32_FSQRT_D64	= 649,
    FRCP_D_FRCP_W	= 650,
    FRSQRT_D_FRSQRT_W	= 651,
    RECIP_D32_RECIP_D64	= 652,
    RSQRT_D32_RSQRT_D64	= 653,
    RECIP_S	= 654,
    RSQRT_S	= 655,
    FMADD_D_FMADD_W	= 656,
    FMSUB_D_FMSUB_W	= 657,
    FDIV_W	= 658,
    FDIV_D	= 659,
    FSQRT_W	= 660,
    FSQRT_D	= 661,
    FMUL_D_FMUL_W	= 662,
    FADD_D_FADD_W	= 663,
    FSUB_D_FSUB_W	= 664,
    DPADD_S_D_DPADD_S_H_DPADD_S_W_DPADD_U_D_DPADD_U_H_DPADD_U_W	= 665,
    DPSUB_S_D_DPSUB_S_H_DPSUB_S_W_DPSUB_U_D_DPSUB_U_H_DPSUB_U_W	= 666,
    DOTP_S_D_DOTP_S_H_DOTP_S_W_DOTP_U_D_DOTP_U_H_DOTP_U_W	= 667,
    MSUBV_B_MSUBV_D_MSUBV_H_MSUBV_W	= 668,
    MADDV_B_MADDV_D_MADDV_H_MADDV_W	= 669,
    MULV_B_MULV_D_MULV_H_MULV_W	= 670,
    MADDR_Q_H_MADDR_Q_W	= 671,
    MADD_Q_H_MADD_Q_W	= 672,
    MSUBR_Q_H_MSUBR_Q_W	= 673,
    MSUB_Q_H_MSUB_Q_W	= 674,
    MULR_Q_H_MULR_Q_W	= 675,
    MUL_Q_H_MUL_Q_W	= 676,
    MADD_D32_MADD_D64	= 677,
    MADD_S	= 678,
    MSUB_D32_MSUB_D64	= 679,
    MSUB_S	= 680,
    NMADD_D32_NMADD_D64	= 681,
    NMADD_S	= 682,
    NMSUB_D32_NMSUB_D64	= 683,
    NMSUB_S	= 684,
    CTC1	= 685,
    MTC1_MTC1_D64_BuildPairF64_BuildPairF64_64	= 686,
    MTHC1_D32_MTHC1_D64	= 687,
    COPY_U_B_COPY_U_H_COPY_U_W	= 688,
    COPY_S_B_COPY_S_D_COPY_S_H_COPY_S_W	= 689,
    BC1F	= 690,
    BC1FL	= 691,
    BC1T	= 692,
    BC1TL	= 693,
    CFC1	= 694,
    MFC1_MFC1_D64_ExtractElementF64_ExtractElementF64_64	= 695,
    MFHC1_D32_MFHC1_D64	= 696,
    MOVF_I	= 697,
    MOVT_I	= 698,
    SDC1_SDC164	= 699,
    SDXC1_SDXC164	= 700,
    SWC1	= 701,
    SWXC1	= 702,
    SUXC1_SUXC164	= 703,
    ST_B_ST_D_ST_H_ST_W	= 704,
    ST_F16	= 705,
    MOVN_I_D32_MOVN_I_D64	= 706,
    MOVN_I_S	= 707,
    MOVZ_I_D32_MOVZ_I_D64	= 708,
    MOVZ_I_S	= 709,
    LDC1_LDC164	= 710,
    LDXC1_LDXC164	= 711,
    LWC1	= 712,
    LWXC1	= 713,
    LUXC1_LUXC164	= 714,
    LD_B_LD_D_LD_H_LD_W	= 715,
    LD_F16	= 716,
    CEIL_L_D64_CEIL_L_S_CEIL_W_D32_CEIL_W_D64_CEIL_W_S	= 717,
    FLOOR_L_D64_FLOOR_L_S_FLOOR_W_D32_FLOOR_W_D64_FLOOR_W_S	= 718,
    ROUND_L_D64_ROUND_L_S_ROUND_W_D32_ROUND_W_D64_ROUND_W_S	= 719,
    ROTRV	= 720,
    ATOMIC_SWAP_I16_POSTRA_ATOMIC_SWAP_I32_POSTRA_ATOMIC_SWAP_I64_POSTRA_ATOMIC_SWAP_I8_POSTRA	= 721,
    ATOMIC_CMP_SWAP_I16_POSTRA_ATOMIC_CMP_SWAP_I32_POSTRA_ATOMIC_CMP_SWAP_I64_POSTRA_ATOMIC_CMP_SWAP_I8_POSTRA	= 722,
    ATOMIC_LOAD_ADD_I16_POSTRA_ATOMIC_LOAD_ADD_I32_POSTRA_ATOMIC_LOAD_ADD_I64_POSTRA_ATOMIC_LOAD_ADD_I8_POSTRA_ATOMIC_LOAD_AND_I16_POSTRA_ATOMIC_LOAD_AND_I32_POSTRA_ATOMIC_LOAD_AND_I64_POSTRA_ATOMIC_LOAD_AND_I8_POSTRA_ATOMIC_LOAD_MAX_I16_POSTRA_ATOMIC_LOAD_MAX_I32_POSTRA_ATOMIC_LOAD_MAX_I64_POSTRA_ATOMIC_LOAD_MAX_I8_POSTRA_ATOMIC_LOAD_MIN_I16_POSTRA_ATOMIC_LOAD_MIN_I32_POSTRA_ATOMIC_LOAD_MIN_I64_POSTRA_ATOMIC_LOAD_MIN_I8_POSTRA_ATOMIC_LOAD_NAND_I16_POSTRA_ATOMIC_LOAD_NAND_I32_POSTRA_ATOMIC_LOAD_NAND_I64_POSTRA_ATOMIC_LOAD_NAND_I8_POSTRA_ATOMIC_LOAD_OR_I16_POSTRA_ATOMIC_LOAD_OR_I32_POSTRA_ATOMIC_LOAD_OR_I64_POSTRA_ATOMIC_LOAD_OR_I8_POSTRA_ATOMIC_LOAD_SUB_I16_POSTRA_ATOMIC_LOAD_SUB_I32_POSTRA_ATOMIC_LOAD_SUB_I64_POSTRA_ATOMIC_LOAD_SUB_I8_POSTRA_ATOMIC_LOAD_UMAX_I16_POSTRA_ATOMIC_LOAD_UMAX_I32_POSTRA_ATOMIC_LOAD_UMAX_I64_POSTRA_ATOMIC_LOAD_UMAX_I8_POSTRA_ATOMIC_LOAD_UMIN_I16_POSTRA_ATOMIC_LOAD_UMIN_I32_POSTRA_ATOMIC_LOAD_UMIN_I64_POSTRA_ATOMIC_LOAD_UMIN_I8_POSTRA_ATOMIC_LOAD_XOR_I16_POSTRA_ATOMIC_LOAD_XOR_I32_POSTRA_ATOMIC_LOAD_XOR_I64_POSTRA_ATOMIC_LOAD_XOR_I8_POSTRA	= 723,
    LEA_ADDiu	= 724,
    ADDIUPC	= 725,
    ALIGN	= 726,
    ALUIPC	= 727,
    AUI	= 728,
    AUIPC	= 729,
    BITSWAP	= 730,
    CLO_R6	= 731,
    CLZ_R6	= 732,
    LSA_R6	= 733,
    SELEQZ_SELNEZ	= 734,
    AddiuRxImmX16_AddiuRxRxImm16_AddiuRxRxImmX16_AddiuRxRyOffMemX16_AddiuRxPcImmX16_AddiuSpImm16_AddiuSpImmX16_AdduRxRyRz16_AndRxRxRy16_CmpRxRy16_CmpiRxImm16_CmpiRxImmX16_LiRxImm16_LiRxImmX16_LiRxImmAlignX16_Move32R16_MoveR3216_Mfhi16_Mflo16_NegRxRy16_NotRxRy16_OrRxRxRy16_SebRx16_SehRx16_SllX16_SllvRxRy16_SltiRxImm16_SltiRxImmX16_SltiuRxImm16_SltiuRxImmX16_SltRxRy16_SltuRxRy16_SravRxRy16_SraX16_SrlvRxRy16_SrlX16_SubuRxRyRz16_XorRxRxRy16	= 735,
    SltiCCRxImmX16_SltiuCCRxImmX16_SltCCRxRy16_SltuRxRyRz16_SltuCCRxRy16	= 736,
    Constant32_LwConstant32_GotPrologue16_CONSTPOOL_ENTRY	= 737,
    ADDIUPC_MM_ADDIUR1SP_MM_ADDIUR2_MM_ADDIUS5_MM_ADDIUSP_MM_ADDiu_MM_LEA_ADDiu_MM	= 738,
    ADDU16_MM_ADDu_MM	= 739,
    ADD_MM	= 740,
    ADDi_MM	= 741,
    AND16_MM_ANDI16_MM_AND_MM	= 742,
    ANDi_MM	= 743,
    CLO_MM	= 744,
    CLZ_MM	= 745,
    EXT_MM	= 746,
    INS_MM	= 747,
    LI16_MM	= 748,
    LUi_MM	= 749,
    MOVE16_MM	= 750,
    MOVEP_MM	= 751,
    NOR_MM	= 752,
    NOT16_MM	= 753,
    OR16_MM_OR_MM	= 754,
    ORi_MM	= 755,
    ROTRV_MM	= 756,
    ROTR_MM	= 757,
    SEB_MM	= 758,
    SEH_MM	= 759,
    SLL16_MM_SLL_MM	= 760,
    SLLV_MM	= 761,
    SLT_MM_SLTu_MM	= 762,
    SLTi_MM_SLTiu_MM	= 763,
    SRAV_MM	= 764,
    SRA_MM	= 765,
    SRL16_MM_SRL_MM	= 766,
    SRLV_MM	= 767,
    SSNOP_MM	= 768,
    SUBU16_MM_SUBu_MM	= 769,
    SUB_MM	= 770,
    WSBH_MM	= 771,
    XOR16_MM_XOR_MM	= 772,
    XORi_MM	= 773,
    ADDIUPC_MMR6	= 774,
    ADDIU_MMR6	= 775,
    ADDU16_MMR6_ADDU_MMR6	= 776,
    ADD_MMR6	= 777,
    ALIGN_MMR6	= 778,
    ALUIPC_MMR6	= 779,
    AND16_MMR6_ANDI16_MMR6_AND_MMR6	= 780,
    ANDI_MMR6	= 781,
    AUIPC_MMR6	= 782,
    AUI_MMR6	= 783,
    BITSWAP_MMR6	= 784,
    CLO_MMR6	= 785,
    CLZ_MMR6	= 786,
    EXT_MMR6	= 787,
    INS_MMR6	= 788,
    LI16_MMR6	= 789,
    LSA_MMR6	= 790,
    LUI_MMR6	= 791,
    MOVE16_MMR6	= 792,
    NOR_MMR6	= 793,
    NOT16_MMR6	= 794,
    OR16_MMR6_OR_MMR6	= 795,
    ORI_MMR6	= 796,
    SELEQZ_MMR6_SELNEZ_MMR6	= 797,
    SLL16_MMR6_SLL_MMR6	= 798,
    SRL16_MMR6	= 799,
    SSNOP_MMR6	= 800,
    SUBU16_MMR6_SUBU_MMR6	= 801,
    SUB_MMR6	= 802,
    WSBH_MMR6	= 803,
    XOR16_MMR6_XOR_MMR6	= 804,
    XORI_MMR6	= 805,
    AND64_ANDi64	= 806,
    DEXT64_32	= 807,
    DSLL64_32	= 808,
    ORi64	= 809,
    SEB64	= 810,
    SEH64	= 811,
    SLL64_32_SLL64_64	= 812,
    SLT64_SLTu64	= 813,
    SLTi64_SLTiu64	= 814,
    XOR64_XORi64	= 815,
    DADD	= 816,
    DADDi	= 817,
    DADDiu	= 818,
    DADDu	= 819,
    DCLO	= 820,
    DCLZ	= 821,
    DEXT_DEXTM_DEXTU	= 822,
    DINS_DINSM_DINSU	= 823,
    DROTR	= 824,
    DROTR32	= 825,
    DROTRV	= 826,
    DSBH	= 827,
    DSHD	= 828,
    DSLL	= 829,
    DSLL32	= 830,
    DSLLV	= 831,
    DSRA	= 832,
    DSRA32	= 833,
    DSRAV	= 834,
    DSRL	= 835,
    DSRL32	= 836,
    DSRLV	= 837,
    DSUB	= 838,
    DSUBu	= 839,
    LEA_ADDiu64	= 840,
    LUi64	= 841,
    NOR64	= 842,
    OR64	= 843,
    DALIGN	= 844,
    DAHI	= 845,
    DATI	= 846,
    DAUI	= 847,
    DCLO_R6	= 848,
    DCLZ_R6	= 849,
    DBITSWAP	= 850,
    DLSA_DLSA_R6	= 851,
    SELEQZ64_SELNEZ64	= 852,
    MADD	= 853,
    MADDU	= 854,
    MSUB	= 855,
    MSUBU	= 856,
    PseudoMADD_MM	= 857,
    PseudoMADDU_MM	= 858,
    PseudoMSUB_MM	= 859,
    PseudoMSUBU_MM	= 860,
    PseudoMULT_MM	= 861,
    PseudoMULTu_MM	= 862,
    PseudoMULT	= 863,
    PseudoMULTu	= 864,
    PseudoSDIV_SDIV	= 865,
    PseudoUDIV_UDIV	= 866,
    PseudoMFHI_MM_PseudoMFLO_MM	= 867,
    PseudoMTLOHI_MM	= 868,
    MUH	= 869,
    MUHU	= 870,
    MULU	= 871,
    MUL_R6	= 872,
    MOD	= 873,
    MODU	= 874,
    MultRxRy16_MultuRxRy16_MultRxRyRz16_MultuRxRyRz16	= 875,
    DivRxRy16	= 876,
    DivuRxRy16	= 877,
    MULT_MM	= 878,
    MULTu_MM	= 879,
    MADD_MM	= 880,
    MADDU_MM	= 881,
    MSUB_MM	= 882,
    MSUBU_MM	= 883,
    MUL_MM	= 884,
    SDIV_MM_SDIV_MM_Pseudo	= 885,
    UDIV_MM_UDIV_MM_Pseudo	= 886,
    MFHI16_MM_MFLO16_MM_MFHI_MM_MFLO_MM	= 887,
    MOVF_I_MM	= 888,
    MOVT_I_MM	= 889,
    MTHI_MM_MTLO_MM	= 890,
    RDHWR_MM	= 891,
    MUHU_MMR6	= 892,
    MUH_MMR6	= 893,
    MULU_MMR6	= 894,
    MUL_MMR6	= 895,
    MODU_MMR6	= 896,
    MOD_MMR6	= 897,
    DIVU_MMR6	= 898,
    DIV_MMR6	= 899,
    RDHWR_MMR6	= 900,
    DMULU	= 901,
    DMULT_PseudoDMULT	= 902,
    DMULTu_PseudoDMULTu	= 903,
    DSDIV_PseudoDSDIV	= 904,
    DUDIV_PseudoDUDIV	= 905,
    MFHI64_MFLO64_PseudoMFHI64_PseudoMFLO64	= 906,
    PseudoMTLOHI64	= 907,
    MTHI64_MTLO64	= 908,
    RDHWR64	= 909,
    MOVN_I_I64_MOVN_I64_I_MOVN_I64_I64	= 910,
    MOVZ_I_I64_MOVZ_I64_I_MOVZ_I64_I64	= 911,
    DMUH	= 912,
    DMUHU	= 913,
    DMUL_R6	= 914,
    DDIV	= 915,
    DMOD	= 916,
    DDIVU	= 917,
    DMODU	= 918,
    BAL_BR_BLTZAL	= 919,
    BEQ_BNE	= 920,
    BGTZ_BGEZ_BLEZ_BLTZ	= 921,
    J	= 922,
    JR	= 923,
    ERet	= 924,
    BGEZAL	= 925,
    BALC	= 926,
    BEQZALC_BGEZALC_BGTZALC_BLEZALC_BLTZALC_BNEZALC	= 927,
    JIALC	= 928,
    BC	= 929,
    BC2EQZ_BC2NEZ	= 930,
    BEQC_BGEC_BGEUC_BLTC_BLTUC_BNEC_BNVC_BOVC	= 931,
    BEQZC_BGEZC_BGTZC_BLEZC_BLTZC_BNEZC	= 932,
    JIC	= 933,
    JR_HB_R6	= 934,
    SIGRIE	= 935,
    PseudoIndirectBranchR6_PseudoIndrectHazardBranchR6	= 936,
    TAILCALLR6REG_TAILCALLHBR6REG	= 937,
    SDBBP_R6	= 938,
    Bimm16_BimmX16_BeqzRxImm16_BeqzRxImmX16_BnezRxImm16_BnezRxImmX16_Bteqz16_BteqzX16_Btnez16_BtnezX16_JrRa16_JrcRa16_JrcRx16	= 939,
    BteqzT8CmpX16_BteqzT8CmpiX16_BteqzT8SltX16_BteqzT8SltuX16_BteqzT8SltiX16_BteqzT8SltiuX16_BtnezT8CmpX16_BtnezT8CmpiX16_BtnezT8SltX16_BtnezT8SltuX16_BtnezT8SltiX16_BtnezT8SltiuX16_RetRA16	= 940,
    Jal16_JalB16	= 941,
    JumpLinkReg16	= 942,
    Break16	= 943,
    SelBeqZ_SelTBteqZCmp_SelTBteqZCmpi_SelTBteqZSlt_SelTBteqZSlti_SelTBteqZSltu_SelTBteqZSltiu_SelBneZ_SelTBtneZCmp_SelTBtneZCmpi_SelTBtneZSlt_SelTBtneZSlti_SelTBtneZSltu_SelTBtneZSltiu	= 944,
    B16_MM_B_MM	= 945,
    BAL_BR_MM	= 946,
    BC1F_MM	= 947,
    BC1T_MM	= 948,
    BEQZ16_MM_BGEZ_MM_BGTZ_MM_BLEZ_MM_BLTZ_MM_BNEZ16_MM	= 949,
    BEQZC_MM_BNEZC_MM	= 950,
    BEQ_MM_BNE_MM	= 951,
    DERET_MM	= 952,
    ERET_MM	= 953,
    JR16_MM_JR_MM	= 954,
    J_MM	= 955,
    B_MM_Pseudo	= 956,
    BGEZALS_MM_BLTZALS_MM	= 957,
    BGEZAL_MM_BLTZAL_MM	= 958,
    JALR16_MM_JALR_MM	= 959,
    JALRS16_MM_JALRS_MM	= 960,
    JALS_MM	= 961,
    JALX_MM_JAL_MM	= 962,
    TAILCALLREG_MM	= 963,
    TAILCALL_MM	= 964,
    PseudoIndirectBranch_MM	= 965,
    BREAK16_MM_BREAK_MM	= 966,
    SDBBP16_MM_SDBBP_MM	= 967,
    SYSCALL_MM	= 968,
    TEQI_MM	= 969,
    TEQ_MM	= 970,
    TGEIU_MM	= 971,
    TGEI_MM	= 972,
    TGEU_MM	= 973,
    TGE_MM	= 974,
    TLTIU_MM	= 975,
    TLTI_MM	= 976,
    TLTU_MM	= 977,
    TLT_MM	= 978,
    TNEI_MM	= 979,
    TNE_MM	= 980,
    TRAP_MM	= 981,
    BC16_MMR6_BC_MMR6	= 982,
    BC1EQZC_MMR6_BC1NEZC_MMR6	= 983,
    BC2EQZC_MMR6_BC2NEZC_MMR6	= 984,
    BEQC_MMR6_BGEC_MMR6_BGEUC_MMR6_BLTC_MMR6_BLTUC_MMR6_BNEC_MMR6_BNVC_MMR6_BOVC_MMR6	= 985,
    BEQZC16_MMR6_BNEZC16_MMR6	= 986,
    BEQZC_MMR6_BGEZC_MMR6_BGTZC_MMR6_BLEZC_MMR6_BLTZC_MMR6_BNEZC_MMR6	= 987,
    DERET_MMR6	= 988,
    ERETNC_MMR6	= 989,
    JAL_MMR6	= 990,
    ERET_MMR6	= 991,
    JIC_MMR6	= 992,
    JRADDIUSP_JRCADDIUSP_MMR6	= 993,
    JRC16_MM	= 994,
    JRC16_MMR6	= 995,
    SIGRIE_MMR6	= 996,
    B_MMR6_Pseudo	= 997,
    PseudoIndirectBranch_MMR6	= 998,
    BALC_MMR6	= 999,
    BEQZALC_MMR6_BGEZALC_MMR6_BGTZALC_MMR6_BLEZALC_MMR6_BLTZALC_MMR6_BNEZALC_MMR6	= 1000,
    JALRC16_MMR6	= 1001,
    JALRC_HB_MMR6	= 1002,
    JALRC_MMR6	= 1003,
    JIALC_MMR6	= 1004,
    TAILCALLREG_MMR6	= 1005,
    TAILCALL_MMR6	= 1006,
    BREAK16_MMR6_BREAK_MMR6	= 1007,
    SDBBP_MMR6_SDBBP16_MMR6	= 1008,
    BEQ64_BNE64	= 1009,
    BGEZ64_BGTZ64_BLEZ64_BLTZ64	= 1010,
    JR64	= 1011,
    JALR64_JALR64Pseudo_JALRHB64Pseudo	= 1012,
    JALR_HB64	= 1013,
    JR_HB64	= 1014,
    TAILCALLREG64_TAILCALLREGHB64	= 1015,
    PseudoReturn64	= 1016,
    BEQC64_BGEC64_BGEUC64_BLTC64_BLTUC64_BNEC64	= 1017,
    BEQZC64_BGEZC64_BGTZC64_BLEZC64_BLTZC64_BNEZC64	= 1018,
    JIC64	= 1019,
    PseudoIndirectBranch64_PseudoIndirectHazardBranch64	= 1020,
    JIALC64	= 1021,
    JR_HB64_R6	= 1022,
    TAILCALL64R6REG_TAILCALLHB64R6REG	= 1023,
    PseudoIndirectBranch64R6_PseudoIndrectHazardBranch64R6	= 1024,
    EVP	= 1025,
    DVP	= 1026,
    TLBP_MM	= 1027,
    TLBR_MM	= 1028,
    TLBWI_MM	= 1029,
    TLBWR_MM	= 1030,
    DI_MM	= 1031,
    EI_MM	= 1032,
    EHB_MM	= 1033,
    PAUSE_MM	= 1034,
    WAIT_MM	= 1035,
    RDPGPR_MMR6	= 1036,
    WRPGPR_MMR6	= 1037,
    TLBINV_MMR6	= 1038,
    TLBINVF_MMR6	= 1039,
    MFHC0_MMR6	= 1040,
    MFC0_MMR6	= 1041,
    MFHC2_MMR6_MFC2_MMR6	= 1042,
    MTHC0_MMR6	= 1043,
    MTC0_MMR6	= 1044,
    MTHC2_MMR6_MTC2_MMR6	= 1045,
    EVP_MMR6	= 1046,
    DVP_MMR6	= 1047,
    DI_MMR6	= 1048,
    EI_MMR6	= 1049,
    EHB_MMR6	= 1050,
    PAUSE_MMR6	= 1051,
    WAIT_MMR6	= 1052,
    DMFC0	= 1053,
    DMTC0	= 1054,
    DMFC2	= 1055,
    DMTC2	= 1056,
    CFC2_MM	= 1057,
    CTC2_MM	= 1058,
    DMT	= 1059,
    DVPE	= 1060,
    EMT	= 1061,
    EVPE	= 1062,
    MFTR	= 1063,
    MTTR	= 1064,
    YIELD	= 1065,
    FORK	= 1066,
    DMFGC0	= 1067,
    DMTGC0	= 1068,
    HYPCALL_MM	= 1069,
    TLBGINVF_MM	= 1070,
    TLBGINV_MM	= 1071,
    TLBGP_MM	= 1072,
    TLBGR_MM	= 1073,
    TLBGWI_MM	= 1074,
    TLBGWR_MM	= 1075,
    MFGC0_MM	= 1076,
    MFHGC0_MM	= 1077,
    MTGC0_MM	= 1078,
    MTHGC0_MM	= 1079,
    SC_MMR6	= 1080,
    LDC2_R6	= 1081,
    LL_R6	= 1082,
    LWC2_R6	= 1083,
    SWC2_R6	= 1084,
    SDC2_R6	= 1085,
    SC_R6	= 1086,
    PREF_R6	= 1087,
    CACHE_R6	= 1088,
    GINVI	= 1089,
    GINVT	= 1090,
    LBE_MM	= 1091,
    LBuE_MM	= 1092,
    LHE_MM	= 1093,
    LHuE_MM	= 1094,
    LWE_MM	= 1095,
    LWLE_MM	= 1096,
    LWRE_MM	= 1097,
    LLE_MM	= 1098,
    SBE_MM	= 1099,
    SB_MM	= 1100,
    SHE_MM	= 1101,
    SWE_MM	= 1102,
    SWLE_MM	= 1103,
    SWRE_MM	= 1104,
    SCE_MM	= 1105,
    PREFE_MM	= 1106,
    CACHEE_MM	= 1107,
    Restore16_RestoreX16	= 1108,
    LbRxRyOffMemX16	= 1109,
    LbuRxRyOffMemX16	= 1110,
    LhRxRyOffMemX16	= 1111,
    LhuRxRyOffMemX16	= 1112,
    LwRxRyOffMemX16_LwRxSpImmX16_LwRxPcTcp16_LwRxPcTcpX16	= 1113,
    Save16_SaveX16	= 1114,
    SbRxRyOffMemX16	= 1115,
    ShRxRyOffMemX16	= 1116,
    SwRxRyOffMemX16_SwRxSpImmX16	= 1117,
    LBU16_MM_LBu_MM	= 1118,
    LB_MM	= 1119,
    LHU16_MM_LHu_MM	= 1120,
    LH_MM	= 1121,
    LL_MM	= 1122,
    LW16_MM_LWGP_MM_LWSP_MM_LW_MM	= 1123,
    LWL_MM	= 1124,
    LWM16_MM_LWM32_MM	= 1125,
    LWP_MM	= 1126,
    LWR_MM	= 1127,
    LWU_MM	= 1128,
    LWXS_MM	= 1129,
    SB16_MM	= 1130,
    SC_MM	= 1131,
    SH16_MM_SH_MM	= 1132,
    SW16_MM_SWSP_MM_SW_MM	= 1133,
    SWL_MM	= 1134,
    SWM16_MM_SWM32_MM	= 1135,
    SWM_MM	= 1136,
    SWP_MM	= 1137,
    SWR_MM	= 1138,
    PREF_MM_PREFX_MM	= 1139,
    CACHE_MM	= 1140,
    SYNC_MM	= 1141,
    SYNCI_MM	= 1142,
    GINVI_MMR6	= 1143,
    GINVT_MMR6	= 1144,
    LBU_MMR6	= 1145,
    LB_MMR6	= 1146,
    LDC2_MMR6	= 1147,
    LL_MMR6	= 1148,
    LWM16_MMR6	= 1149,
    LWC2_MMR6	= 1150,
    LWPC_MMR6	= 1151,
    LW_MMR6	= 1152,
    SB16_MMR6_SB_MMR6	= 1153,
    SDC2_MMR6	= 1154,
    SH16_MMR6_SH_MMR6	= 1155,
    SW16_MMR6_SWSP_MMR6_SW_MMR6	= 1156,
    SWC2_MMR6	= 1157,
    SWM16_MMR6	= 1158,
    SYNC_MMR6	= 1159,
    SYNCI_MMR6	= 1160,
    PREF_MMR6	= 1161,
    CACHE_MMR6	= 1162,
    LD	= 1163,
    LL64_LLD	= 1164,
    LWu	= 1165,
    LB64	= 1166,
    LBu64	= 1167,
    LH64	= 1168,
    LHu64	= 1169,
    LW64	= 1170,
    LWL64	= 1171,
    LWR64	= 1172,
    LDL	= 1173,
    LDR	= 1174,
    SD	= 1175,
    SC64_SCD	= 1176,
    SB64	= 1177,
    SH64	= 1178,
    SW64	= 1179,
    SWL64	= 1180,
    SWR64	= 1181,
    SDL	= 1182,
    SDR	= 1183,
    LWUPC	= 1184,
    LDPC	= 1185,
    LLD_R6	= 1186,
    LL64_R6	= 1187,
    SC64_R6	= 1188,
    SCD_R6	= 1189,
    CRC32B	= 1190,
    CRC32H	= 1191,
    CRC32W	= 1192,
    CRC32CB	= 1193,
    CRC32CH	= 1194,
    CRC32CW	= 1195,
    CRC32D	= 1196,
    CRC32CD	= 1197,
    BADDu	= 1198,
    BBIT0_BBIT032_BBIT1_BBIT132	= 1199,
    CINS_CINS32_CINS64_32_CINS_i32	= 1200,
    DMFC2_OCTEON	= 1201,
    DMTC2_OCTEON	= 1202,
    DPOP_POP	= 1203,
    EXTS_EXTS32	= 1204,
    MTM0_MTM1_MTM2_MTP0_MTP1_MTP2	= 1205,
    SEQ_SNE	= 1206,
    SEQi_SNEi	= 1207,
    V3MULU_VMM0_VMULU	= 1208,
    DMUL	= 1209,
    SAA_SAAD	= 1210,
    ADDR_PS64	= 1211,
    CVT_PS_PW64_CVT_PW_PS64	= 1212,
    MULR_PS64	= 1213,
    PseudoTRUNC_W_D_PseudoTRUNC_W_D32_PseudoTRUNC_W_S	= 1214,
    MOVT_I64	= 1215,
    MOVF_I64	= 1216,
    MOVZ_I64_S	= 1217,
    MOVN_I64_D64	= 1218,
    MOVN_I64_S	= 1219,
    MOVZ_I64_D64	= 1220,
    SELEQZ_S_SELNEZ_S	= 1221,
    SELEQZ_D_SELNEZ_D	= 1222,
    MAX_S_MAXA_S	= 1223,
    MAX_D_MAXA_D	= 1224,
    MIN_S_MINA_D	= 1225,
    MIN_D_MINA_S	= 1226,
    CLASS_S	= 1227,
    CLASS_D	= 1228,
    RINT_S	= 1229,
    RINT_D	= 1230,
    BC1EQZ_BC1NEZ	= 1231,
    SEL_D	= 1232,
    SEL_S	= 1233,
    MADDF_S	= 1234,
    MSUBF_S	= 1235,
    MADDF_D	= 1236,
    MSUBF_D	= 1237,
    MOVF_D32_MM	= 1238,
    MOVF_S_MM	= 1239,
    MOVN_I_D32_MM	= 1240,
    MOVN_I_S_MM	= 1241,
    MOVT_D32_MM	= 1242,
    MOVT_S_MM	= 1243,
    MOVZ_I_D32_MM	= 1244,
    MOVZ_I_S_MM	= 1245,
    CVT_D32_S_MM_CVT_D32_W_MM_CVT_D64_S_MM_CVT_D64_W_MM_CVT_L_D64_MM_CVT_L_S_MM_CVT_S_D32_MM_CVT_S_D64_MM_CVT_S_W_MM_CVT_W_D32_MM_CVT_W_D64_MM_CVT_W_S_MM	= 1246,
    CEIL_W_MM_CEIL_W_S_MM	= 1247,
    FLOOR_W_MM_FLOOR_W_S_MM	= 1248,
    NMADD_S_MM	= 1249,
    NMADD_D32_MM	= 1250,
    NMSUB_S_MM	= 1251,
    NMSUB_D32_MM	= 1252,
    MADD_S_MM	= 1253,
    MADD_D32_MM	= 1254,
    ROUND_W_MM_ROUND_W_S_MM	= 1255,
    TRUNC_W_MM_TRUNC_W_S_MM	= 1256,
    C_F_D32_MM_C_F_D64_MM	= 1257,
    C_F_S_MM	= 1258,
    C_EQ_D32_MM_C_EQ_D64_MM_C_LE_D32_MM_C_LE_D64_MM_C_LT_D32_MM_C_LT_D64_MM_C_SF_D32_MM_C_SF_D64_MM_C_UN_D32_MM_C_UN_D64_MM	= 1259,
    C_EQ_S_MM_C_LE_S_MM_C_LT_S_MM_C_SF_S_MM_C_UN_S_MM	= 1260,
    C_NGE_D32_MM_C_NGE_D64_MM_C_NGL_D32_MM_C_NGL_D64_MM_C_NGT_D32_MM_C_NGT_D64_MM_C_OLE_D32_MM_C_OLE_D64_MM_C_OLT_D32_MM_C_OLT_D64_MM_C_SEQ_D32_MM_C_SEQ_D64_MM_C_UEQ_D32_MM_C_UEQ_D64_MM_C_ULE_D32_MM_C_ULE_D64_MM_C_ULT_D32_MM_C_ULT_D64_MM	= 1261,
    C_NGE_S_MM_C_NGL_S_MM_C_NGT_S_MM_C_OLE_S_MM_C_OLT_S_MM_C_SEQ_S_MM_C_UEQ_S_MM_C_ULE_S_MM_C_ULT_S_MM	= 1262,
    C_NGLE_D32_MM_C_NGLE_D64_MM	= 1263,
    C_NGLE_S_MM	= 1264,
    FCMP_S32_MM	= 1265,
    FCMP_D32_MM	= 1266,
    MFC1_MM	= 1267,
    MFHC1_D32_MM_MFHC1_D64_MM	= 1268,
    MTC1_MM_MTC1_D64_MM	= 1269,
    MTHC1_D32_MM_MTHC1_D64_MM	= 1270,
    FABS_D32_MM_FABS_D64_MM	= 1271,
    FABS_S_MM	= 1272,
    FNEG_D32_MM_FNEG_D64_MM_FNEG_S_MM	= 1273,
    FADD_D32_MM_FADD_D64_MM	= 1274,
    FADD_S_MM	= 1275,
    FMOV_D32_MM_FMOV_D64_MM	= 1276,
    FMOV_S_MM	= 1277,
    FMUL_D32_MM_FMUL_D64_MM	= 1278,
    FMUL_S_MM	= 1279,
    FSUB_D32_MM_FSUB_D64_MM	= 1280,
    FSUB_S_MM	= 1281,
    MSUB_S_MM	= 1282,
    MSUB_D32_MM	= 1283,
    FDIV_S_MM	= 1284,
    FDIV_D32_MM_FDIV_D64_MM	= 1285,
    FSQRT_S_MM	= 1286,
    FSQRT_D32_MM_FSQRT_D64_MM	= 1287,
    RECIP_S_MM_RSQRT_S_MM	= 1288,
    RECIP_D32_MM_RECIP_D64_MM_RSQRT_D32_MM_RSQRT_D64_MM	= 1289,
    SDC1_MM_D32_SDC1_MM_D64	= 1290,
    SWC1_MM	= 1291,
    SUXC1_MM	= 1292,
    SWXC1_MM	= 1293,
    CFC1_MM	= 1294,
    CTC1_MM	= 1295,
    LDC1_MM_D32_LDC1_MM_D64	= 1296,
    LUXC1_MM	= 1297,
    LWC1_MM	= 1298,
    LWXC1_MM	= 1299,
    FNEG_S_MMR6	= 1300,
    CMP_AF_D_MMR6_CMP_EQ_D_MMR6_CMP_LE_D_MMR6_CMP_LT_D_MMR6_CMP_UN_D_MMR6	= 1301,
    CMP_AF_S_MMR6_CMP_EQ_S_MMR6_CMP_LE_S_MMR6_CMP_LT_S_MMR6_CMP_UN_S_MMR6	= 1302,
    CMP_SAF_D_MMR6_CMP_SEQ_D_MMR6_CMP_SLE_D_MMR6_CMP_SLT_D_MMR6_CMP_SUN_D_MMR6_CMP_UEQ_D_MMR6_CMP_ULE_D_MMR6_CMP_ULT_D_MMR6	= 1303,
    CMP_SAF_S_MMR6_CMP_SEQ_S_MMR6_CMP_SLE_S_MMR6_CMP_SLT_S_MMR6_CMP_SUN_S_MMR6_CMP_UEQ_S_MMR6_CMP_ULE_S_MMR6_CMP_ULT_S_MMR6	= 1304,
    CMP_SUEQ_D_MMR6_CMP_SULE_D_MMR6_CMP_SULT_D_MMR6	= 1305,
    CMP_SUEQ_S_MMR6_CMP_SULE_S_MMR6_CMP_SULT_S_MMR6	= 1306,
    CVT_D_L_MMR6_CVT_L_D_MMR6_CVT_L_S_MMR6_CVT_S_L_MMR6_CVT_S_W_MMR6_CVT_W_S_MMR6	= 1307,
    TRUNC_L_D_MMR6_TRUNC_L_S_MMR6_TRUNC_W_D_MMR6_TRUNC_W_S_MMR6	= 1308,
    ROUND_L_D_MMR6_ROUND_L_S_MMR6_ROUND_W_D_MMR6_ROUND_W_S_MMR6	= 1309,
    FLOOR_L_D_MMR6_FLOOR_L_S_MMR6_FLOOR_W_D_MMR6_FLOOR_W_S_MMR6	= 1310,
    CEIL_L_D_MMR6_CEIL_L_S_MMR6_CEIL_W_D_MMR6_CEIL_W_S_MMR6	= 1311,
    MFC1_MMR6	= 1312,
    MTC1_MMR6	= 1313,
    CLASS_S_MMR6_CLASS_D_MMR6	= 1314,
    FADD_S_MMR6	= 1315,
    MAX_D_MMR6	= 1316,
    MAX_S_MMR6	= 1317,
    MIN_D_MMR6	= 1318,
    MIN_S_MMR6	= 1319,
    MAXA_D_MMR6	= 1320,
    MAXA_S_MMR6	= 1321,
    MINA_D_MMR6	= 1322,
    MINA_S_MMR6	= 1323,
    SELEQZ_D_MMR6_SELNEZ_D_MMR6	= 1324,
    SELEQZ_S_MMR6_SELNEZ_S_MMR6	= 1325,
    SEL_D_MMR6	= 1326,
    SEL_S_MMR6	= 1327,
    RINT_S_MMR6_RINT_D_MMR6	= 1328,
    MADDF_D_MMR6	= 1329,
    MADDF_S_MMR6	= 1330,
    MSUBF_D_MMR6	= 1331,
    MSUBF_S_MMR6	= 1332,
    FMOV_S_MMR6	= 1333,
    FMUL_S_MMR6	= 1334,
    FSUB_S_MMR6	= 1335,
    FMOV_D_MMR6	= 1336,
    FDIV_S_MMR6	= 1337,
    SDC1_D64_MMR6	= 1338,
    LDC1_D64_MMR6	= 1339,
    DMFC1	= 1340,
    DMTC1	= 1341,
    SWDSP	= 1342,
    LWDSP	= 1343,
    PseudoMTLOHI_DSP	= 1344,
    EXTRV_RS_W	= 1345,
    EXTRV_R_W	= 1346,
    EXTRV_S_H	= 1347,
    EXTRV_W	= 1348,
    EXTR_RS_W	= 1349,
    EXTR_R_W	= 1350,
    EXTR_S_H	= 1351,
    EXTR_W	= 1352,
    INSV	= 1353,
    MTHLIP	= 1354,
    MTHI_DSP	= 1355,
    MTLO_DSP	= 1356,
    ABSQ_S_PH	= 1357,
    ABSQ_S_W	= 1358,
    ADDQ_PH	= 1359,
    ADDQ_S_PH	= 1360,
    ADDQ_S_W	= 1361,
    ADDSC	= 1362,
    ADDU_QB	= 1363,
    ADDU_S_QB	= 1364,
    ADDWC	= 1365,
    BITREV	= 1366,
    BPOSGE32	= 1367,
    CMPGU_EQ_QB	= 1368,
    CMPGU_LE_QB	= 1369,
    CMPGU_LT_QB	= 1370,
    CMPU_EQ_QB	= 1371,
    CMPU_LE_QB	= 1372,
    CMPU_LT_QB	= 1373,
    CMP_EQ_PH	= 1374,
    CMP_LE_PH	= 1375,
    CMP_LT_PH	= 1376,
    DPAQ_SA_L_W	= 1377,
    DPAQ_S_W_PH	= 1378,
    DPAU_H_QBL	= 1379,
    DPAU_H_QBR	= 1380,
    DPSQ_SA_L_W	= 1381,
    DPSQ_S_W_PH	= 1382,
    DPSU_H_QBL	= 1383,
    DPSU_H_QBR	= 1384,
    EXTPDPV	= 1385,
    EXTPDP	= 1386,
    EXTPV	= 1387,
    EXTP	= 1388,
    LBUX	= 1389,
    LHX	= 1390,
    LWX	= 1391,
    MADDU_DSP	= 1392,
    MADD_DSP	= 1393,
    MAQ_SA_W_PHL	= 1394,
    MAQ_SA_W_PHR	= 1395,
    MAQ_S_W_PHL	= 1396,
    MAQ_S_W_PHR	= 1397,
    MFHI_DSP	= 1398,
    MFLO_DSP	= 1399,
    MODSUB	= 1400,
    MSUBU_DSP	= 1401,
    MSUB_DSP	= 1402,
    MULEQ_S_W_PHL	= 1403,
    MULEQ_S_W_PHR	= 1404,
    MULEU_S_PH_QBL	= 1405,
    MULEU_S_PH_QBR	= 1406,
    MULQ_RS_PH	= 1407,
    MULSAQ_S_W_PH	= 1408,
    MULTU_DSP	= 1409,
    MULT_DSP	= 1410,
    PACKRL_PH	= 1411,
    PICK_PH	= 1412,
    PICK_QB	= 1413,
    PRECEQU_PH_QBLA	= 1414,
    PRECEQU_PH_QBL	= 1415,
    PRECEQU_PH_QBRA	= 1416,
    PRECEQU_PH_QBR	= 1417,
    PRECEQ_W_PHL	= 1418,
    PRECEQ_W_PHR	= 1419,
    PRECEU_PH_QBLA	= 1420,
    PRECEU_PH_QBL	= 1421,
    PRECEU_PH_QBRA	= 1422,
    PRECEU_PH_QBR	= 1423,
    PRECRQU_S_QB_PH	= 1424,
    PRECRQ_PH_W	= 1425,
    PRECRQ_QB_PH	= 1426,
    PRECRQ_RS_PH_W	= 1427,
    RADDU_W_QB	= 1428,
    RDDSP	= 1429,
    REPLV_PH	= 1430,
    REPLV_QB	= 1431,
    REPL_PH	= 1432,
    REPL_QB	= 1433,
    SHILOV	= 1434,
    SHILO	= 1435,
    SHLLV_PH	= 1436,
    SHLLV_QB	= 1437,
    SHLLV_S_PH	= 1438,
    SHLLV_S_W	= 1439,
    SHLL_PH	= 1440,
    SHLL_QB	= 1441,
    SHLL_S_PH	= 1442,
    SHLL_S_W	= 1443,
    SHRAV_PH	= 1444,
    SHRAV_R_PH	= 1445,
    SHRAV_R_W	= 1446,
    SHRA_PH	= 1447,
    SHRA_R_PH	= 1448,
    SHRA_R_W	= 1449,
    SHRLV_QB	= 1450,
    SHRL_QB	= 1451,
    SUBQ_PH	= 1452,
    SUBQ_S_PH	= 1453,
    SUBQ_S_W	= 1454,
    SUBU_QB	= 1455,
    SUBU_S_QB	= 1456,
    WRDSP	= 1457,
    PseudoCMPU_EQ_QB_PseudoCMPU_LE_QB_PseudoCMPU_LT_QB_PseudoCMP_EQ_PH_PseudoCMP_LE_PH_PseudoCMP_LT_PH	= 1458,
    PseudoPICK_PH_PseudoPICK_QB	= 1459,
    ABSQ_S_QB	= 1460,
    ADDQH_PH	= 1461,
    ADDQH_R_PH	= 1462,
    ADDQH_R_W	= 1463,
    ADDQH_W	= 1464,
    ADDUH_QB	= 1465,
    ADDUH_R_QB	= 1466,
    ADDU_PH	= 1467,
    ADDU_S_PH	= 1468,
    APPEND	= 1469,
    BALIGN	= 1470,
    CMPGDU_EQ_QB	= 1471,
    CMPGDU_LE_QB	= 1472,
    CMPGDU_LT_QB	= 1473,
    DPA_W_PH	= 1474,
    DPAQX_SA_W_PH	= 1475,
    DPAQX_S_W_PH	= 1476,
    DPAX_W_PH	= 1477,
    DPS_W_PH	= 1478,
    DPSQX_S_W_PH	= 1479,
    DPSQX_SA_W_PH	= 1480,
    DPSX_W_PH	= 1481,
    MUL_PH	= 1482,
    MUL_S_PH	= 1483,
    MULQ_RS_W	= 1484,
    MULQ_S_PH	= 1485,
    MULQ_S_W	= 1486,
    MULSA_W_PH	= 1487,
    PRECR_QB_PH	= 1488,
    PRECR_SRA_PH_W	= 1489,
    PRECR_SRA_R_PH_W	= 1490,
    PREPEND	= 1491,
    SHRA_QB	= 1492,
    SHRA_R_QB	= 1493,
    SHRAV_QB	= 1494,
    SHRAV_R_QB	= 1495,
    SHRL_PH	= 1496,
    SHRLV_PH	= 1497,
    SUBQH_PH	= 1498,
    SUBQH_R_PH	= 1499,
    SUBQH_W	= 1500,
    SUBQH_R_W	= 1501,
    SUBU_PH	= 1502,
    SUBU_S_PH	= 1503,
    SUBUH_QB	= 1504,
    SUBUH_R_QB	= 1505,
    LWDSP_MM	= 1506,
    SWDSP_MM	= 1507,
    ABSQ_S_PH_MM	= 1508,
    ABSQ_S_W_MM	= 1509,
    ADDQ_PH_MM	= 1510,
    ADDQ_S_PH_MM	= 1511,
    ADDQ_S_W_MM	= 1512,
    ADDSC_MM	= 1513,
    ADDU_QB_MM	= 1514,
    ADDU_S_QB_MM	= 1515,
    ADDWC_MM	= 1516,
    BITREV_MM	= 1517,
    BPOSGE32_MM	= 1518,
    CMPGU_EQ_QB_MM	= 1519,
    CMPGU_LE_QB_MM	= 1520,
    CMPGU_LT_QB_MM	= 1521,
    CMPU_EQ_QB_MM	= 1522,
    CMPU_LE_QB_MM	= 1523,
    CMPU_LT_QB_MM	= 1524,
    CMP_EQ_PH_MM	= 1525,
    CMP_LE_PH_MM	= 1526,
    CMP_LT_PH_MM	= 1527,
    DPAQ_SA_L_W_MM	= 1528,
    DPAQ_S_W_PH_MM	= 1529,
    DPAU_H_QBL_MM	= 1530,
    DPAU_H_QBR_MM	= 1531,
    DPSQ_SA_L_W_MM	= 1532,
    DPSQ_S_W_PH_MM	= 1533,
    DPSU_H_QBL_MM	= 1534,
    DPSU_H_QBR_MM	= 1535,
    EXTPDPV_MM	= 1536,
    EXTPDP_MM	= 1537,
    EXTPV_MM	= 1538,
    EXTP_MM	= 1539,
    EXTRV_RS_W_MM	= 1540,
    EXTRV_R_W_MM	= 1541,
    EXTRV_S_H_MM	= 1542,
    EXTRV_W_MM	= 1543,
    EXTR_RS_W_MM	= 1544,
    EXTR_R_W_MM	= 1545,
    EXTR_S_H_MM	= 1546,
    EXTR_W_MM	= 1547,
    INSV_MM	= 1548,
    LBUX_MM	= 1549,
    LHX_MM	= 1550,
    LWX_MM	= 1551,
    MADDU_DSP_MM	= 1552,
    MADD_DSP_MM	= 1553,
    MAQ_SA_W_PHL_MM	= 1554,
    MAQ_SA_W_PHR_MM	= 1555,
    MAQ_S_W_PHL_MM	= 1556,
    MAQ_S_W_PHR_MM	= 1557,
    MFHI_DSP_MM	= 1558,
    MFLO_DSP_MM	= 1559,
    MODSUB_MM	= 1560,
    MOVEP_MMR6	= 1561,
    MOVN_I_MM	= 1562,
    MOVZ_I_MM	= 1563,
    MSUBU_DSP_MM	= 1564,
    MSUB_DSP_MM	= 1565,
    MTHI_DSP_MM	= 1566,
    MTHLIP_MM	= 1567,
    MTLO_DSP_MM	= 1568,
    MULEQ_S_W_PHL_MM	= 1569,
    MULEQ_S_W_PHR_MM	= 1570,
    MULEU_S_PH_QBL_MM	= 1571,
    MULEU_S_PH_QBR_MM	= 1572,
    MULQ_RS_PH_MM	= 1573,
    MULSAQ_S_W_PH_MM	= 1574,
    MULTU_DSP_MM	= 1575,
    MULT_DSP_MM	= 1576,
    PACKRL_PH_MM	= 1577,
    PICK_PH_MM	= 1578,
    PICK_QB_MM	= 1579,
    PRECEQU_PH_QBLA_MM	= 1580,
    PRECEQU_PH_QBL_MM	= 1581,
    PRECEQU_PH_QBRA_MM	= 1582,
    PRECEQU_PH_QBR_MM	= 1583,
    PRECEQ_W_PHL_MM	= 1584,
    PRECEQ_W_PHR_MM	= 1585,
    PRECEU_PH_QBLA_MM	= 1586,
    PRECEU_PH_QBL_MM	= 1587,
    PRECEU_PH_QBRA_MM	= 1588,
    PRECEU_PH_QBR_MM	= 1589,
    PRECRQU_S_QB_PH_MM	= 1590,
    PRECRQ_PH_W_MM	= 1591,
    PRECRQ_QB_PH_MM	= 1592,
    PRECRQ_RS_PH_W_MM	= 1593,
    RADDU_W_QB_MM	= 1594,
    RDDSP_MM	= 1595,
    REPLV_PH_MM	= 1596,
    REPLV_QB_MM	= 1597,
    REPL_PH_MM	= 1598,
    REPL_QB_MM	= 1599,
    SHILOV_MM	= 1600,
    SHILO_MM	= 1601,
    SHLLV_PH_MM	= 1602,
    SHLLV_QB_MM	= 1603,
    SHLLV_S_PH_MM	= 1604,
    SHLLV_S_W_MM	= 1605,
    SHLL_PH_MM	= 1606,
    SHLL_QB_MM	= 1607,
    SHLL_S_PH_MM	= 1608,
    SHLL_S_W_MM	= 1609,
    SHRAV_PH_MM	= 1610,
    SHRAV_R_PH_MM	= 1611,
    SHRAV_R_W_MM	= 1612,
    SHRA_PH_MM	= 1613,
    SHRA_R_PH_MM	= 1614,
    SHRA_R_W_MM	= 1615,
    SHRLV_QB_MM	= 1616,
    SHRL_QB_MM	= 1617,
    SUBQ_PH_MM	= 1618,
    SUBQ_S_PH_MM	= 1619,
    SUBQ_S_W_MM	= 1620,
    SUBU_QB_MM	= 1621,
    SUBU_S_QB_MM	= 1622,
    WRDSP_MM	= 1623,
    ABSQ_S_QB_MMR2	= 1624,
    ADDQH_PH_MMR2	= 1625,
    ADDQH_R_PH_MMR2	= 1626,
    ADDQH_R_W_MMR2	= 1627,
    ADDQH_W_MMR2	= 1628,
    ADDUH_QB_MMR2	= 1629,
    ADDUH_R_QB_MMR2	= 1630,
    ADDU_PH_MMR2	= 1631,
    ADDU_S_PH_MMR2	= 1632,
    APPEND_MMR2	= 1633,
    BALIGN_MMR2	= 1634,
    CMPGDU_EQ_QB_MMR2	= 1635,
    CMPGDU_LE_QB_MMR2	= 1636,
    CMPGDU_LT_QB_MMR2	= 1637,
    DPA_W_PH_MMR2	= 1638,
    DPAQX_SA_W_PH_MMR2	= 1639,
    DPAQX_S_W_PH_MMR2	= 1640,
    DPAX_W_PH_MMR2	= 1641,
    DPS_W_PH_MMR2	= 1642,
    DPSQX_S_W_PH_MMR2	= 1643,
    DPSQX_SA_W_PH_MMR2	= 1644,
    DPSX_W_PH_MMR2	= 1645,
    MUL_PH_MMR2	= 1646,
    MUL_S_PH_MMR2	= 1647,
    MULQ_RS_W_MMR2	= 1648,
    MULQ_S_PH_MMR2	= 1649,
    MULQ_S_W_MMR2	= 1650,
    MULSA_W_PH_MMR2	= 1651,
    PRECR_QB_PH_MMR2	= 1652,
    PRECR_SRA_PH_W_MMR2	= 1653,
    PRECR_SRA_R_PH_W_MMR2	= 1654,
    PREPEND_MMR2	= 1655,
    SHRA_QB_MMR2	= 1656,
    SHRA_R_QB_MMR2	= 1657,
    SHRAV_QB_MMR2	= 1658,
    SHRAV_R_QB_MMR2	= 1659,
    SHRL_PH_MMR2	= 1660,
    SHRLV_PH_MMR2	= 1661,
    SUBQH_PH_MMR2	= 1662,
    SUBQH_R_PH_MMR2	= 1663,
    SUBQH_W_MMR2	= 1664,
    SUBQH_R_W_MMR2	= 1665,
    SUBU_PH_MMR2	= 1666,
    SUBU_S_PH_MMR2	= 1667,
    SUBUH_QB_MMR2	= 1668,
    SUBUH_R_QB_MMR2	= 1669,
    BPOSGE32C_MMR3	= 1670,
    CMP_F_D	= 1671,
    CMP_F_S	= 1672,
    CMP_SAF_D	= 1673,
    CMP_SAF_S	= 1674,
    CMP_SEQ_D	= 1675,
    CMP_SEQ_S	= 1676,
    CMP_SLE_D	= 1677,
    CMP_SLE_S	= 1678,
    CMP_SLT_D	= 1679,
    CMP_SLT_S	= 1680,
    CMP_SUEQ_D	= 1681,
    CMP_SUEQ_S	= 1682,
    CMP_SULE_D	= 1683,
    CMP_SULE_S	= 1684,
    CMP_SULT_D	= 1685,
    CMP_SULT_S	= 1686,
    CMP_SUN_D	= 1687,
    CMP_SUN_S	= 1688,
    SCHED_LIST_END = 1689
  };
} // end namespace Sched
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { Mips::SP, Mips::SP };
static const MCPhysReg ImplicitList2[] = { Mips::AT };
static const MCPhysReg ImplicitList3[] = { Mips::RA };
static const MCPhysReg ImplicitList4[] = { Mips::DSPPos };
static const MCPhysReg ImplicitList5[] = { Mips::V0, Mips::V1 };
static const MCPhysReg ImplicitList6[] = { Mips::HI0, Mips::LO0 };
static const MCPhysReg ImplicitList7[] = { Mips::T8 };
static const MCPhysReg ImplicitList8[] = { Mips::DSPOutFlag20 };
static const MCPhysReg ImplicitList9[] = { Mips::DSPCarry };
static const MCPhysReg ImplicitList10[] = { Mips::DSPCarry, Mips::DSPOutFlag20 };
static const MCPhysReg ImplicitList11[] = { Mips::DSPCCond };
static const MCPhysReg ImplicitList12[] = { Mips::HI0, Mips::LO0, Mips::P0, Mips::P1, Mips::P2 };
static const MCPhysReg ImplicitList13[] = { Mips::HI0_64, Mips::LO0_64 };
static const MCPhysReg ImplicitList14[] = { Mips::DSPOutFlag16_19 };
static const MCPhysReg ImplicitList15[] = { Mips::DSPPos, Mips::DSPEFI };
static const MCPhysReg ImplicitList16[] = { Mips::DSPPos, Mips::DSPPos, Mips::DSPEFI };
static const MCPhysReg ImplicitList17[] = { Mips::DSPOutFlag23 };
static const MCPhysReg ImplicitList18[] = { Mips::FCC0 };
static const MCPhysReg ImplicitList19[] = { Mips::DSPPos, Mips::DSPSCount };
static const MCPhysReg ImplicitList20[] = { Mips::HI0, Mips::LO0, Mips::HI0, Mips::LO0 };
static const MCPhysReg ImplicitList21[] = { Mips::AC0 };
static const MCPhysReg ImplicitList22[] = { Mips::AC0_64 };
static const MCPhysReg ImplicitList23[] = { Mips::HI0 };
static const MCPhysReg ImplicitList24[] = { Mips::HI0_64 };
static const MCPhysReg ImplicitList25[] = { Mips::LO0 };
static const MCPhysReg ImplicitList26[] = { Mips::LO0_64 };
static const MCPhysReg ImplicitList27[] = { Mips::MPL0, Mips::P0, Mips::P1, Mips::P2 };
static const MCPhysReg ImplicitList28[] = { Mips::MPL1, Mips::P0, Mips::P1, Mips::P2 };
static const MCPhysReg ImplicitList29[] = { Mips::MPL2, Mips::P0, Mips::P1, Mips::P2 };
static const MCPhysReg ImplicitList30[] = { Mips::P0 };
static const MCPhysReg ImplicitList31[] = { Mips::P1 };
static const MCPhysReg ImplicitList32[] = { Mips::P2 };
static const MCPhysReg ImplicitList33[] = { Mips::DSPOutFlag21 };
static const MCPhysReg ImplicitList34[] = { Mips::DSPOutFlag22 };
static const MCPhysReg ImplicitList35[] = { Mips::P0, Mips::P1, Mips::P2 };
static const MCPhysReg ImplicitList36[] = { Mips::MPL1, Mips::MPL2, Mips::P0, Mips::P1, Mips::P2 };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { Mips::MSA128F16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo140[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { Mips::ACC64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { Mips::GPR32NONZERORegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo182[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo183[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsPlusSPRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_PCREL, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CCRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { Mips::CCRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { Mips::MSACtrlRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo232[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { Mips::COP0RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo239[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo240[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo241[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo242[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo243[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo244[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo245[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo246[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo247[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo248[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo249[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo250[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo251[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo252[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo253[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo254[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo255[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo256[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo257[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo258[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo259[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo260[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo261[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo262[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo263[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo264[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo265[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo266[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo267[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo268[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo269[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo270[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo271[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo272[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo273[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo274[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo275[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo276[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo277[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo278[] = { { Mips::COP3RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo279[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo280[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo281[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo282[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo283[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo284[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo285[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo286[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo287[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo288[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo289[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo290[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo291[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo292[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo293[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo294[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 3, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo295[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo296[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo297[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo298[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 2, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo299[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo300[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo301[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo302[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo303[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo304[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo305[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo306[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo307[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo308[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo309[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo310[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo311[] = { { Mips::GPRMM16MovePPairFirstRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePPairSecondRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16MovePRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo312[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo313[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo314[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo315[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo316[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo317[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FCCRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo318[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo319[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo320[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo321[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo322[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo323[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo324[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo325[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo326[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo327[] = { { Mips::COP2RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo328[] = { { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::AFGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo329[] = { { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo330[] = { { Mips::HI32DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo331[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo332[] = { { Mips::LO32DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo333[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo334[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo335[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo336[] = { { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPRMM16RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo337[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo338[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo339[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo340[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo341[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo342[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::HWRegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo343[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo344[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo345[] = { { Mips::GPRMM16ZeroRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { 1, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo346[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo347[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo348[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo349[] = { { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MipsII::OPERAND_MEM_SIMM9, 0 }, { -1, 0, MipsII::OPERAND_MEM_SIMM9, 0 }, };
static const MCOperandInfo OperandInfo350[] = { { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGRCCRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::FGR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo351[] = { { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { Mips::ACC64DSPRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo352[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo353[] = { { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::DSPRRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo354[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo355[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo356[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo357[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo358[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo359[] = { { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo360[] = { { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128BRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo361[] = { { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128DRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo362[] = { { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128HRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo363[] = { { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::MSA128WRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::GPR32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo364[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_MEMORY, 0 }, { -1, 0, MCOI::OPERAND_MEMORY, 0 }, };
static const MCOperandInfo OperandInfo365[] = { { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { Mips::CPU16RegsRegClassID, 0, MCOI::OPERAND_REGISTER, MCOI_TIED_TO(0) }, };

extern const MCInstrDesc MipsInsts[] = {
  { 2848,	2,	1,	4,	1065,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #2848 = YIELD
  { 2847,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo186 },  // Inst #2847 = XorRxRxRy16
  { 2846,	3,	1,	4,	773,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2846 = XORi_MM
  { 2845,	3,	1,	4,	815,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo70 },  // Inst #2845 = XORi64
  { 2844,	3,	1,	4,	508,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2844 = XORi
  { 2843,	3,	1,	4,	548,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2843 = XOR_V
  { 2842,	3,	1,	4,	804,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2842 = XOR_MMR6
  { 2841,	3,	1,	4,	772,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2841 = XOR_MM
  { 2840,	3,	1,	4,	805,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2840 = XORI_MMR6
  { 2839,	3,	1,	4,	549,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2839 = XORI_B
  { 2838,	3,	1,	4,	815,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #2838 = XOR64
  { 2837,	3,	1,	2,	804,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo181 },  // Inst #2837 = XOR16_MMR6
  { 2836,	3,	1,	2,	772,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo181 },  // Inst #2836 = XOR16_MM
  { 2835,	3,	1,	4,	371,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2835 = XOR
  { 2834,	2,	1,	4,	803,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #2834 = WSBH_MMR6
  { 2833,	2,	1,	4,	771,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2833 = WSBH_MM
  { 2832,	2,	1,	4,	481,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2832 = WSBH
  { 2831,	2,	1,	4,	1037,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #2831 = WRPGPR_MMR6
  { 2830,	2,	0,	4,	1623,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #2830 = WRDSP_MM
  { 2829,	2,	0,	4,	1457,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #2829 = WRDSP
  { 2828,	1,	0,	4,	1052,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2828 = WAIT_MMR6
  { 2827,	1,	0,	4,	1035,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2827 = WAIT_MM
  { 2826,	0,	0,	4,	404,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #2826 = WAIT
  { 2825,	4,	1,	4,	515,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #2825 = VSHF_W
  { 2824,	4,	1,	4,	515,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #2824 = VSHF_H
  { 2823,	4,	1,	4,	515,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #2823 = VSHF_D
  { 2822,	4,	1,	4,	515,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #2822 = VSHF_B
  { 2821,	3,	1,	4,	1208,	0,	5,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList36, OperandInfo71 },  // Inst #2821 = VMULU
  { 2820,	3,	1,	4,	1208,	0,	4,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList27, OperandInfo71 },  // Inst #2820 = VMM0
  { 2819,	3,	1,	4,	1208,	0,	3,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList35, OperandInfo71 },  // Inst #2819 = V3MULU
  { 2818,	2,	0,	4,	886,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2818 = UDIV_MM
  { 2817,	2,	0,	4,	866,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2817 = UDIV
  { 2816,	2,	0,	4,	403,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2816 = TTLTIU
  { 2815,	2,	1,	4,	1308,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2815 = TRUNC_W_S_MMR6
  { 2814,	2,	1,	4,	1256,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2814 = TRUNC_W_S_MM
  { 2813,	2,	1,	4,	637,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2813 = TRUNC_W_S
  { 2812,	2,	1,	4,	1256,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #2812 = TRUNC_W_MM
  { 2811,	2,	1,	4,	1308,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #2811 = TRUNC_W_D_MMR6
  { 2810,	2,	1,	4,	637,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #2810 = TRUNC_W_D64
  { 2809,	2,	1,	4,	637,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #2809 = TRUNC_W_D32
  { 2808,	2,	1,	4,	1308,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #2808 = TRUNC_L_S_MMR6
  { 2807,	2,	1,	4,	637,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #2807 = TRUNC_L_S
  { 2806,	2,	1,	4,	1308,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2806 = TRUNC_L_D_MMR6
  { 2805,	2,	1,	4,	637,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2805 = TRUNC_L_D64
  { 2804,	3,	0,	4,	980,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2804 = TNE_MM
  { 2803,	2,	0,	4,	979,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2803 = TNEI_MM
  { 2802,	2,	0,	4,	401,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2802 = TNEI
  { 2801,	3,	0,	4,	400,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2801 = TNE
  { 2800,	3,	0,	4,	978,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2800 = TLT_MM
  { 2799,	3,	0,	4,	977,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2799 = TLTU_MM
  { 2798,	3,	0,	4,	399,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2798 = TLTU
  { 2797,	2,	0,	4,	976,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2797 = TLTI_MM
  { 2796,	2,	0,	4,	975,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2796 = TLTIU_MM
  { 2795,	2,	0,	4,	398,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2795 = TLTI
  { 2794,	3,	0,	4,	397,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2794 = TLT
  { 2793,	0,	0,	4,	1030,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2793 = TLBWR_MM
  { 2792,	0,	0,	4,	415,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2792 = TLBWR
  { 2791,	0,	0,	4,	1029,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2791 = TLBWI_MM
  { 2790,	0,	0,	4,	414,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2790 = TLBWI
  { 2789,	0,	0,	4,	1028,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2789 = TLBR_MM
  { 2788,	0,	0,	4,	413,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2788 = TLBR
  { 2787,	0,	0,	4,	1027,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2787 = TLBP_MM
  { 2786,	0,	0,	4,	412,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2786 = TLBP
  { 2785,	0,	0,	4,	1038,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2785 = TLBINV_MMR6
  { 2784,	0,	0,	4,	1039,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2784 = TLBINVF_MMR6
  { 2783,	0,	0,	4,	411,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2783 = TLBINVF
  { 2782,	0,	0,	4,	410,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2782 = TLBINV
  { 2781,	0,	0,	4,	1075,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2781 = TLBGWR_MM
  { 2780,	0,	0,	4,	430,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2780 = TLBGWR
  { 2779,	0,	0,	4,	1074,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2779 = TLBGWI_MM
  { 2778,	0,	0,	4,	429,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2778 = TLBGWI
  { 2777,	0,	0,	4,	1073,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2777 = TLBGR_MM
  { 2776,	0,	0,	4,	428,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2776 = TLBGR
  { 2775,	0,	0,	4,	1072,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2775 = TLBGP_MM
  { 2774,	0,	0,	4,	427,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2774 = TLBGP
  { 2773,	0,	0,	4,	1071,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2773 = TLBGINV_MM
  { 2772,	0,	0,	4,	1070,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2772 = TLBGINVF_MM
  { 2771,	0,	0,	4,	426,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2771 = TLBGINVF
  { 2770,	0,	0,	4,	425,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2770 = TLBGINV
  { 2769,	3,	0,	4,	974,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2769 = TGE_MM
  { 2768,	3,	0,	4,	973,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2768 = TGEU_MM
  { 2767,	3,	0,	4,	396,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2767 = TGEU
  { 2766,	2,	0,	4,	972,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2766 = TGEI_MM
  { 2765,	2,	0,	4,	971,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2765 = TGEIU_MM
  { 2764,	2,	0,	4,	395,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2764 = TGEIU
  { 2763,	2,	0,	4,	394,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2763 = TGEI
  { 2762,	3,	0,	4,	393,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2762 = TGE
  { 2761,	3,	0,	4,	970,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2761 = TEQ_MM
  { 2760,	2,	0,	4,	969,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2760 = TEQI_MM
  { 2759,	2,	0,	4,	392,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo114 },  // Inst #2759 = TEQI
  { 2758,	3,	0,	4,	391,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo73 },  // Inst #2758 = TEQ
  { 2757,	3,	0,	4,	1117,	0,	0,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo185 },  // Inst #2757 = SwRxSpImmX16
  { 2756,	3,	0,	4,	1117,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo300 },  // Inst #2756 = SwRxRyOffMemX16
  { 2755,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo131 },  // Inst #2755 = SubuRxRyRz16
  { 2754,	3,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo186 },  // Inst #2754 = SrlvRxRy16
  { 2753,	3,	1,	4,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo167 },  // Inst #2753 = SrlX16
  { 2752,	3,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo186 },  // Inst #2752 = SravRxRy16
  { 2751,	3,	1,	4,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo167 },  // Inst #2751 = SraX16
  { 2750,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo130 },  // Inst #2750 = SltuRxRy16
  { 2749,	2,	0,	4,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #2749 = SltiuRxImmX16
  { 2748,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #2748 = SltiuRxImm16
  { 2747,	2,	0,	4,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #2747 = SltiRxImmX16
  { 2746,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #2746 = SltiRxImm16
  { 2745,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo130 },  // Inst #2745 = SltRxRy16
  { 2744,	3,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo186 },  // Inst #2744 = SllvRxRy16
  { 2743,	3,	1,	4,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo167 },  // Inst #2743 = SllX16
  { 2742,	3,	0,	4,	1116,	0,	0,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo300 },  // Inst #2742 = ShRxRyOffMemX16
  { 2741,	2,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo365 },  // Inst #2741 = SehRx16
  { 2740,	2,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo365 },  // Inst #2740 = SebRx16
  { 2739,	3,	0,	4,	1115,	0,	0,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo300 },  // Inst #2739 = SbRxRyOffMemX16
  { 2738,	0,	0,	2,	1114,	1,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr },  // Inst #2738 = SaveX16
  { 2737,	0,	0,	2,	1114,	1,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr },  // Inst #2737 = Save16
  { 2736,	1,	0,	4,	968,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo2 },  // Inst #2736 = SYSCALL_MM
  { 2735,	1,	0,	4,	390,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo2 },  // Inst #2735 = SYSCALL
  { 2734,	1,	0,	4,	1159,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2734 = SYNC_MMR6
  { 2733,	1,	0,	4,	1141,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2733 = SYNC_MM
  { 2732,	2,	0,	4,	1160,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo364 },  // Inst #2732 = SYNCI_MMR6
  { 2731,	2,	0,	4,	1142,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo364 },  // Inst #2731 = SYNCI_MM
  { 2730,	2,	0,	4,	473,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo364 },  // Inst #2730 = SYNCI
  { 2729,	1,	0,	4,	472,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2729 = SYNC
  { 2728,	3,	0,	4,	1156,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2728 = SW_MMR6
  { 2727,	3,	0,	4,	1133,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2727 = SW_MM
  { 2726,	3,	0,	4,	1293,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo299 },  // Inst #2726 = SWXC1_MM
  { 2725,	3,	0,	4,	702,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo299 },  // Inst #2725 = SWXC1
  { 2724,	3,	0,	2,	1156,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo298 },  // Inst #2724 = SWSP_MMR6
  { 2723,	3,	0,	2,	1133,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo298 },  // Inst #2723 = SWSP_MM
  { 2722,	3,	0,	4,	1138,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2722 = SWR_MM
  { 2721,	3,	0,	4,	1104,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2721 = SWRE_MM
  { 2720,	3,	0,	4,	467,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #2720 = SWRE
  { 2719,	3,	0,	4,	1181,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2719 = SWR64
  { 2718,	3,	0,	4,	465,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2718 = SWR
  { 2717,	4,	0,	4,	1137,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo297 },  // Inst #2717 = SWP_MM
  { 2716,	3,	0,	4,	1135,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo110 },  // Inst #2716 = SWM32_MM
  { 2715,	3,	0,	2,	1158,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo296 },  // Inst #2715 = SWM16_MMR6
  { 2714,	3,	0,	2,	1135,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo296 },  // Inst #2714 = SWM16_MM
  { 2713,	3,	0,	4,	1134,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2713 = SWL_MM
  { 2712,	3,	0,	4,	1103,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2712 = SWLE_MM
  { 2711,	3,	0,	4,	466,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #2711 = SWLE
  { 2710,	3,	0,	4,	1180,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2710 = SWL64
  { 2709,	3,	0,	4,	464,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2709 = SWL
  { 2708,	3,	0,	4,	1102,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2708 = SWE_MM
  { 2707,	3,	0,	4,	462,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #2707 = SWE
  { 2706,	3,	0,	4,	1507,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo293 },  // Inst #2706 = SWDSP_MM
  { 2705,	3,	0,	4,	1342,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo293 },  // Inst #2705 = SWDSP
  { 2704,	3,	0,	4,	456,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo278 },  // Inst #2704 = SWC3
  { 2703,	3,	0,	4,	1084,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo276 },  // Inst #2703 = SWC2_R6
  { 2702,	3,	0,	4,	1157,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo277 },  // Inst #2702 = SWC2_MMR6
  { 2701,	3,	0,	4,	455,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo276 },  // Inst #2701 = SWC2
  { 2700,	3,	0,	4,	1291,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo292 },  // Inst #2700 = SWC1_MM
  { 2699,	3,	0,	4,	701,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo292 },  // Inst #2699 = SWC1
  { 2698,	3,	0,	4,	1179,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2698 = SW64
  { 2697,	3,	0,	2,	1156,	0,	0,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2697 = SW16_MMR6
  { 2696,	3,	0,	2,	1133,	0,	0,	0|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2696 = SW16_MM
  { 2695,	3,	0,	4,	454,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2695 = SW
  { 2694,	3,	0,	4,	1292,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo285 },  // Inst #2694 = SUXC1_MM
  { 2693,	3,	0,	4,	703,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo285 },  // Inst #2693 = SUXC164
  { 2692,	3,	0,	4,	703,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo284 },  // Inst #2692 = SUXC1
  { 2691,	3,	1,	4,	769,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2691 = SUBu_MM
  { 2690,	3,	1,	4,	370,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2690 = SUBu
  { 2689,	3,	1,	4,	802,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2689 = SUB_MMR6
  { 2688,	3,	1,	4,	770,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2688 = SUB_MM
  { 2687,	3,	1,	4,	612,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2687 = SUBV_W
  { 2686,	3,	1,	4,	612,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2686 = SUBV_H
  { 2685,	3,	1,	4,	612,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2685 = SUBV_D
  { 2684,	3,	1,	4,	612,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2684 = SUBV_B
  { 2683,	3,	1,	4,	611,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2683 = SUBVI_W
  { 2682,	3,	1,	4,	611,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2682 = SUBVI_H
  { 2681,	3,	1,	4,	611,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2681 = SUBVI_D
  { 2680,	3,	1,	4,	611,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2680 = SUBVI_B
  { 2679,	3,	1,	4,	1622,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2679 = SUBU_S_QB_MM
  { 2678,	3,	1,	4,	1456,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2678 = SUBU_S_QB
  { 2677,	3,	1,	4,	1667,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2677 = SUBU_S_PH_MMR2
  { 2676,	3,	1,	4,	1503,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2676 = SUBU_S_PH
  { 2675,	3,	1,	4,	1621,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2675 = SUBU_QB_MM
  { 2674,	3,	1,	4,	1455,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2674 = SUBU_QB
  { 2673,	3,	1,	4,	1666,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2673 = SUBU_PH_MMR2
  { 2672,	3,	1,	4,	1502,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2672 = SUBU_PH
  { 2671,	3,	1,	4,	801,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2671 = SUBU_MMR6
  { 2670,	3,	1,	4,	1669,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2670 = SUBUH_R_QB_MMR2
  { 2669,	3,	1,	4,	1505,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2669 = SUBUH_R_QB
  { 2668,	3,	1,	4,	1668,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2668 = SUBUH_QB_MMR2
  { 2667,	3,	1,	4,	1504,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2667 = SUBUH_QB
  { 2666,	3,	1,	2,	801,	0,	0,	0, 0x0ULL, nullptr, OperandInfo175 },  // Inst #2666 = SUBU16_MMR6
  { 2665,	3,	1,	2,	769,	0,	0,	0, 0x0ULL, nullptr, OperandInfo175 },  // Inst #2665 = SUBU16_MM
  { 2664,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2664 = SUBS_U_W
  { 2663,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2663 = SUBS_U_H
  { 2662,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2662 = SUBS_U_D
  { 2661,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2661 = SUBS_U_B
  { 2660,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2660 = SUBS_S_W
  { 2659,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2659 = SUBS_S_H
  { 2658,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2658 = SUBS_S_D
  { 2657,	3,	1,	4,	608,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2657 = SUBS_S_B
  { 2656,	3,	1,	4,	610,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2656 = SUBSUU_S_W
  { 2655,	3,	1,	4,	610,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2655 = SUBSUU_S_H
  { 2654,	3,	1,	4,	610,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2654 = SUBSUU_S_D
  { 2653,	3,	1,	4,	610,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2653 = SUBSUU_S_B
  { 2652,	3,	1,	4,	609,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2652 = SUBSUS_U_W
  { 2651,	3,	1,	4,	609,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2651 = SUBSUS_U_H
  { 2650,	3,	1,	4,	609,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2650 = SUBSUS_U_D
  { 2649,	3,	1,	4,	609,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2649 = SUBSUS_U_B
  { 2648,	3,	1,	4,	1620,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo72 },  // Inst #2648 = SUBQ_S_W_MM
  { 2647,	3,	1,	4,	1454,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo72 },  // Inst #2647 = SUBQ_S_W
  { 2646,	3,	1,	4,	1619,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2646 = SUBQ_S_PH_MM
  { 2645,	3,	1,	4,	1453,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2645 = SUBQ_S_PH
  { 2644,	3,	1,	4,	1618,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2644 = SUBQ_PH_MM
  { 2643,	3,	1,	4,	1452,	0,	1,	0, 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #2643 = SUBQ_PH
  { 2642,	3,	1,	4,	1664,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2642 = SUBQH_W_MMR2
  { 2641,	3,	1,	4,	1500,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2641 = SUBQH_W
  { 2640,	3,	1,	4,	1665,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2640 = SUBQH_R_W_MMR2
  { 2639,	3,	1,	4,	1501,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2639 = SUBQH_R_W
  { 2638,	3,	1,	4,	1663,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2638 = SUBQH_R_PH_MMR2
  { 2637,	3,	1,	4,	1499,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2637 = SUBQH_R_PH
  { 2636,	3,	1,	4,	1662,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2636 = SUBQH_PH_MMR2
  { 2635,	3,	1,	4,	1498,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2635 = SUBQH_PH
  { 2634,	3,	1,	4,	369,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2634 = SUB
  { 2633,	3,	0,	4,	704,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo289 },  // Inst #2633 = ST_W
  { 2632,	3,	0,	4,	704,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo288 },  // Inst #2632 = ST_H
  { 2631,	3,	0,	4,	704,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo287 },  // Inst #2631 = ST_D
  { 2630,	3,	0,	4,	704,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo286 },  // Inst #2630 = ST_B
  { 2629,	0,	0,	4,	800,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2629 = SSNOP_MMR6
  { 2628,	0,	0,	4,	768,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2628 = SSNOP_MM
  { 2627,	0,	0,	4,	372,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2627 = SSNOP
  { 2626,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2626 = SRL_W
  { 2625,	3,	1,	4,	766,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2625 = SRL_MM
  { 2624,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2624 = SRL_H
  { 2623,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2623 = SRL_D
  { 2622,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2622 = SRL_B
  { 2621,	3,	1,	4,	767,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2621 = SRLV_MM
  { 2620,	3,	1,	4,	512,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2620 = SRLV
  { 2619,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2619 = SRLR_W
  { 2618,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2618 = SRLR_H
  { 2617,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2617 = SRLR_D
  { 2616,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2616 = SRLR_B
  { 2615,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2615 = SRLRI_W
  { 2614,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2614 = SRLRI_H
  { 2613,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2613 = SRLRI_D
  { 2612,	3,	1,	4,	624,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2612 = SRLRI_B
  { 2611,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2611 = SRLI_W
  { 2610,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2610 = SRLI_H
  { 2609,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2609 = SRLI_D
  { 2608,	3,	1,	4,	622,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2608 = SRLI_B
  { 2607,	3,	1,	2,	799,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo170 },  // Inst #2607 = SRL16_MMR6
  { 2606,	3,	1,	2,	766,	0,	0,	0, 0x0ULL, nullptr, OperandInfo170 },  // Inst #2606 = SRL16_MM
  { 2605,	3,	1,	4,	507,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2605 = SRL
  { 2604,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2604 = SRA_W
  { 2603,	3,	1,	4,	765,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2603 = SRA_MM
  { 2602,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2602 = SRA_H
  { 2601,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2601 = SRA_D
  { 2600,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2600 = SRA_B
  { 2599,	3,	1,	4,	764,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2599 = SRAV_MM
  { 2598,	3,	1,	4,	511,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2598 = SRAV
  { 2597,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2597 = SRAR_W
  { 2596,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2596 = SRAR_H
  { 2595,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2595 = SRAR_D
  { 2594,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2594 = SRAR_B
  { 2593,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2593 = SRARI_W
  { 2592,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2592 = SRARI_H
  { 2591,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2591 = SRARI_D
  { 2590,	3,	1,	4,	623,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2590 = SRARI_B
  { 2589,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2589 = SRAI_W
  { 2588,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2588 = SRAI_H
  { 2587,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2587 = SRAI_D
  { 2586,	3,	1,	4,	621,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2586 = SRAI_B
  { 2585,	3,	1,	4,	506,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2585 = SRA
  { 2584,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo363 },  // Inst #2584 = SPLAT_W
  { 2583,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo362 },  // Inst #2583 = SPLAT_H
  { 2582,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo361 },  // Inst #2582 = SPLAT_D
  { 2581,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo360 },  // Inst #2581 = SPLAT_B
  { 2580,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2580 = SPLATI_W
  { 2579,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2579 = SPLATI_H
  { 2578,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2578 = SPLATI_D
  { 2577,	3,	1,	4,	545,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2577 = SPLATI_B
  { 2576,	3,	1,	4,	1207,	0,	0,	0, 0x2ULL, nullptr, OperandInfo70 },  // Inst #2576 = SNEi
  { 2575,	3,	1,	4,	1206,	0,	0,	0, 0x1ULL, nullptr, OperandInfo71 },  // Inst #2575 = SNE
  { 2574,	3,	1,	4,	762,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2574 = SLTu_MM
  { 2573,	3,	1,	4,	813,	0,	0,	0, 0x1ULL, nullptr, OperandInfo358 },  // Inst #2573 = SLTu64
  { 2572,	3,	1,	4,	504,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2572 = SLTu
  { 2571,	3,	1,	4,	763,	0,	0,	0, 0x2ULL, nullptr, OperandInfo73 },  // Inst #2571 = SLTiu_MM
  { 2570,	3,	1,	4,	814,	0,	0,	0, 0x2ULL, nullptr, OperandInfo359 },  // Inst #2570 = SLTiu64
  { 2569,	3,	1,	4,	368,	0,	0,	0, 0x2ULL, nullptr, OperandInfo73 },  // Inst #2569 = SLTiu
  { 2568,	3,	1,	4,	763,	0,	0,	0, 0x2ULL, nullptr, OperandInfo73 },  // Inst #2568 = SLTi_MM
  { 2567,	3,	1,	4,	814,	0,	0,	0, 0x2ULL, nullptr, OperandInfo359 },  // Inst #2567 = SLTi64
  { 2566,	3,	1,	4,	368,	0,	0,	0, 0x2ULL, nullptr, OperandInfo73 },  // Inst #2566 = SLTi
  { 2565,	3,	1,	4,	762,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2565 = SLT_MM
  { 2564,	3,	1,	4,	813,	0,	0,	0, 0x1ULL, nullptr, OperandInfo358 },  // Inst #2564 = SLT64
  { 2563,	3,	1,	4,	504,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2563 = SLT
  { 2562,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2562 = SLL_W
  { 2561,	3,	1,	4,	798,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo73 },  // Inst #2561 = SLL_MMR6
  { 2560,	3,	1,	4,	760,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2560 = SLL_MM
  { 2559,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2559 = SLL_H
  { 2558,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2558 = SLL_D
  { 2557,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2557 = SLL_B
  { 2556,	3,	1,	4,	761,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2556 = SLLV_MM
  { 2555,	3,	1,	4,	510,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2555 = SLLV
  { 2554,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2554 = SLLI_W
  { 2553,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2553 = SLLI_H
  { 2552,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2552 = SLLI_D
  { 2551,	3,	1,	4,	625,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2551 = SLLI_B
  { 2550,	2,	1,	4,	812,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, OperandInfo122 },  // Inst #2550 = SLL64_64
  { 2549,	2,	1,	4,	812,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, nullptr, OperandInfo245 },  // Inst #2549 = SLL64_32
  { 2548,	3,	1,	2,	798,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo170 },  // Inst #2548 = SLL16_MMR6
  { 2547,	3,	1,	2,	760,	0,	0,	0, 0x0ULL, nullptr, OperandInfo170 },  // Inst #2547 = SLL16_MM
  { 2546,	3,	1,	4,	505,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2546 = SLL
  { 2545,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo357 },  // Inst #2545 = SLD_W
  { 2544,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo356 },  // Inst #2544 = SLD_H
  { 2543,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo355 },  // Inst #2543 = SLD_D
  { 2542,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo354 },  // Inst #2542 = SLD_B
  { 2541,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo195 },  // Inst #2541 = SLDI_W
  { 2540,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo194 },  // Inst #2540 = SLDI_H
  { 2539,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo193 },  // Inst #2539 = SLDI_D
  { 2538,	4,	1,	4,	519,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #2538 = SLDI_B
  { 2537,	1,	0,	4,	996,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2537 = SIGRIE_MMR6
  { 2536,	1,	0,	4,	935,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2536 = SIGRIE
  { 2535,	3,	0,	4,	1155,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2535 = SH_MMR6
  { 2534,	3,	0,	4,	1132,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2534 = SH_MM
  { 2533,	3,	1,	4,	1617,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2533 = SHRL_QB_MM
  { 2532,	3,	1,	4,	1451,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2532 = SHRL_QB
  { 2531,	3,	1,	4,	1660,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2531 = SHRL_PH_MMR2
  { 2530,	3,	1,	4,	1496,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2530 = SHRL_PH
  { 2529,	3,	1,	4,	1616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2529 = SHRLV_QB_MM
  { 2528,	3,	1,	4,	1450,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2528 = SHRLV_QB
  { 2527,	3,	1,	4,	1661,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2527 = SHRLV_PH_MMR2
  { 2526,	3,	1,	4,	1497,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2526 = SHRLV_PH
  { 2525,	3,	1,	4,	1615,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo73 },  // Inst #2525 = SHRA_R_W_MM
  { 2524,	3,	1,	4,	1449,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo73 },  // Inst #2524 = SHRA_R_W
  { 2523,	3,	1,	4,	1657,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2523 = SHRA_R_QB_MMR2
  { 2522,	3,	1,	4,	1493,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2522 = SHRA_R_QB
  { 2521,	3,	1,	4,	1614,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2521 = SHRA_R_PH_MM
  { 2520,	3,	1,	4,	1448,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2520 = SHRA_R_PH
  { 2519,	3,	1,	4,	1656,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2519 = SHRA_QB_MMR2
  { 2518,	3,	1,	4,	1492,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2518 = SHRA_QB
  { 2517,	3,	1,	4,	1613,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2517 = SHRA_PH_MM
  { 2516,	3,	1,	4,	1447,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo353 },  // Inst #2516 = SHRA_PH
  { 2515,	3,	1,	4,	1612,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2515 = SHRAV_R_W_MM
  { 2514,	3,	1,	4,	1446,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2514 = SHRAV_R_W
  { 2513,	3,	1,	4,	1659,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2513 = SHRAV_R_QB_MMR2
  { 2512,	3,	1,	4,	1495,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2512 = SHRAV_R_QB
  { 2511,	3,	1,	4,	1611,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2511 = SHRAV_R_PH_MM
  { 2510,	3,	1,	4,	1445,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2510 = SHRAV_R_PH
  { 2509,	3,	1,	4,	1658,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2509 = SHRAV_QB_MMR2
  { 2508,	3,	1,	4,	1494,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2508 = SHRAV_QB
  { 2507,	3,	1,	4,	1610,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2507 = SHRAV_PH_MM
  { 2506,	3,	1,	4,	1444,	0,	0,	0, 0x6ULL, nullptr, OperandInfo352 },  // Inst #2506 = SHRAV_PH
  { 2505,	3,	1,	4,	1609,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo73 },  // Inst #2505 = SHLL_S_W_MM
  { 2504,	3,	1,	4,	1443,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo73 },  // Inst #2504 = SHLL_S_W
  { 2503,	3,	1,	4,	1608,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2503 = SHLL_S_PH_MM
  { 2502,	3,	1,	4,	1442,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2502 = SHLL_S_PH
  { 2501,	3,	1,	4,	1607,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2501 = SHLL_QB_MM
  { 2500,	3,	1,	4,	1441,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2500 = SHLL_QB
  { 2499,	3,	1,	4,	1606,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2499 = SHLL_PH_MM
  { 2498,	3,	1,	4,	1440,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo353 },  // Inst #2498 = SHLL_PH
  { 2497,	3,	1,	4,	1605,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo72 },  // Inst #2497 = SHLLV_S_W_MM
  { 2496,	3,	1,	4,	1439,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo72 },  // Inst #2496 = SHLLV_S_W
  { 2495,	3,	1,	4,	1604,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2495 = SHLLV_S_PH_MM
  { 2494,	3,	1,	4,	1438,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2494 = SHLLV_S_PH
  { 2493,	3,	1,	4,	1603,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2493 = SHLLV_QB_MM
  { 2492,	3,	1,	4,	1437,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2492 = SHLLV_QB
  { 2491,	3,	1,	4,	1602,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2491 = SHLLV_PH_MM
  { 2490,	3,	1,	4,	1436,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo352 },  // Inst #2490 = SHLLV_PH
  { 2489,	3,	1,	4,	1601,	0,	0,	0, 0x6ULL, nullptr, OperandInfo351 },  // Inst #2489 = SHILO_MM
  { 2488,	3,	1,	4,	1600,	0,	0,	0, 0x6ULL, nullptr, OperandInfo331 },  // Inst #2488 = SHILOV_MM
  { 2487,	3,	1,	4,	1434,	0,	0,	0, 0x6ULL, nullptr, OperandInfo331 },  // Inst #2487 = SHILOV
  { 2486,	3,	1,	4,	1435,	0,	0,	0, 0x6ULL, nullptr, OperandInfo351 },  // Inst #2486 = SHILO
  { 2485,	3,	1,	4,	543,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2485 = SHF_W
  { 2484,	3,	1,	4,	543,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2484 = SHF_H
  { 2483,	3,	1,	4,	543,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2483 = SHF_B
  { 2482,	3,	0,	4,	1101,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2482 = SHE_MM
  { 2481,	3,	0,	4,	461,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #2481 = SHE
  { 2480,	3,	0,	4,	1178,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2480 = SH64
  { 2479,	3,	0,	2,	1155,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2479 = SH16_MMR6
  { 2478,	3,	0,	2,	1132,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2478 = SH16_MM
  { 2477,	3,	0,	4,	453,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2477 = SH
  { 2476,	3,	1,	4,	1207,	0,	0,	0, 0x2ULL, nullptr, OperandInfo70 },  // Inst #2476 = SEQi
  { 2475,	3,	1,	4,	1206,	0,	0,	0, 0x1ULL, nullptr, OperandInfo71 },  // Inst #2475 = SEQ
  { 2474,	4,	1,	4,	1327,	0,	0,	0, 0x6ULL, nullptr, OperandInfo350 },  // Inst #2474 = SEL_S_MMR6
  { 2473,	4,	1,	4,	1233,	0,	0,	0, 0x6ULL, nullptr, OperandInfo350 },  // Inst #2473 = SEL_S
  { 2472,	4,	1,	4,	1326,	0,	0,	0, 0x6ULL, nullptr, OperandInfo302 },  // Inst #2472 = SEL_D_MMR6
  { 2471,	4,	1,	4,	1232,	0,	0,	0, 0x6ULL, nullptr, OperandInfo302 },  // Inst #2471 = SEL_D
  { 2470,	3,	1,	4,	1325,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2470 = SELNEZ_S_MMR6
  { 2469,	3,	1,	4,	1221,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2469 = SELNEZ_S
  { 2468,	3,	1,	4,	797,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2468 = SELNEZ_MMR6
  { 2467,	3,	1,	4,	1324,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2467 = SELNEZ_D_MMR6
  { 2466,	3,	1,	4,	1222,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2466 = SELNEZ_D
  { 2465,	3,	1,	4,	852,	0,	0,	0, 0x6ULL, nullptr, OperandInfo71 },  // Inst #2465 = SELNEZ64
  { 2464,	3,	1,	4,	734,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2464 = SELNEZ
  { 2463,	3,	1,	4,	1325,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2463 = SELEQZ_S_MMR6
  { 2462,	3,	1,	4,	1221,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2462 = SELEQZ_S
  { 2461,	3,	1,	4,	797,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2461 = SELEQZ_MMR6
  { 2460,	3,	1,	4,	1324,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2460 = SELEQZ_D_MMR6
  { 2459,	3,	1,	4,	1222,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2459 = SELEQZ_D
  { 2458,	3,	1,	4,	852,	0,	0,	0, 0x6ULL, nullptr, OperandInfo71 },  // Inst #2458 = SELEQZ64
  { 2457,	3,	1,	4,	734,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2457 = SELEQZ
  { 2456,	2,	1,	4,	759,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2456 = SEH_MM
  { 2455,	2,	1,	4,	811,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #2455 = SEH64
  { 2454,	2,	1,	4,	503,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2454 = SEH
  { 2453,	2,	1,	4,	758,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2453 = SEB_MM
  { 2452,	2,	1,	4,	810,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #2452 = SEB64
  { 2451,	2,	1,	4,	502,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2451 = SEB
  { 2450,	3,	0,	4,	700,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo285 },  // Inst #2450 = SDXC164
  { 2449,	3,	0,	4,	700,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo284 },  // Inst #2449 = SDXC1
  { 2448,	3,	0,	4,	1183,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2448 = SDR
  { 2447,	3,	0,	4,	1182,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2447 = SDL
  { 2446,	2,	0,	4,	885,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2446 = SDIV_MM
  { 2445,	2,	0,	4,	865,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2445 = SDIV
  { 2444,	3,	0,	4,	458,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo278 },  // Inst #2444 = SDC3
  { 2443,	3,	0,	4,	1085,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo276 },  // Inst #2443 = SDC2_R6
  { 2442,	3,	0,	4,	1154,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo277 },  // Inst #2442 = SDC2_MMR6
  { 2441,	3,	0,	4,	457,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo276 },  // Inst #2441 = SDC2
  { 2440,	3,	0,	4,	1290,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo275 },  // Inst #2440 = SDC1_MM_D64
  { 2439,	3,	0,	4,	1290,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo158 },  // Inst #2439 = SDC1_MM_D32
  { 2438,	3,	0,	4,	1338,	0,	0,	0|(1ULL<<MCID::MayStore), 0x6ULL, nullptr, OperandInfo275 },  // Inst #2438 = SDC1_D64_MMR6
  { 2437,	3,	0,	4,	699,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo275 },  // Inst #2437 = SDC164
  { 2436,	3,	0,	4,	699,	0,	0,	0|(1ULL<<MCID::MayStore), 0x5ULL, nullptr, OperandInfo158 },  // Inst #2436 = SDC1
  { 2435,	1,	0,	4,	938,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo2 },  // Inst #2435 = SDBBP_R6
  { 2434,	1,	0,	4,	1008,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #2434 = SDBBP_MMR6
  { 2433,	1,	0,	4,	967,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo2 },  // Inst #2433 = SDBBP_MM
  { 2432,	1,	0,	2,	1008,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #2432 = SDBBP16_MMR6
  { 2431,	1,	0,	2,	967,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #2431 = SDBBP16_MM
  { 2430,	1,	0,	4,	389,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, nullptr, OperandInfo2 },  // Inst #2430 = SDBBP
  { 2429,	3,	0,	4,	1175,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2429 = SD
  { 2428,	4,	1,	4,	1086,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo347 },  // Inst #2428 = SC_R6
  { 2427,	4,	1,	4,	1080,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo346 },  // Inst #2427 = SC_MMR6
  { 2426,	4,	1,	4,	1131,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo346 },  // Inst #2426 = SC_MM
  { 2425,	4,	1,	4,	1105,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo346 },  // Inst #2425 = SCE_MM
  { 2424,	4,	1,	4,	463,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo346 },  // Inst #2424 = SCE
  { 2423,	4,	1,	4,	1189,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo349 },  // Inst #2423 = SCD_R6
  { 2422,	4,	1,	4,	1176,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo348 },  // Inst #2422 = SCD
  { 2421,	4,	1,	4,	1188,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo347 },  // Inst #2421 = SC64_R6
  { 2420,	4,	1,	4,	1176,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo346 },  // Inst #2420 = SC64
  { 2419,	4,	1,	4,	459,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo346 },  // Inst #2419 = SC
  { 2418,	3,	0,	4,	1153,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2418 = SB_MMR6
  { 2417,	3,	0,	4,	1100,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2417 = SB_MM
  { 2416,	3,	0,	4,	1099,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2416 = SBE_MM
  { 2415,	3,	0,	4,	460,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #2415 = SBE
  { 2414,	3,	0,	4,	1177,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo113 },  // Inst #2414 = SB64
  { 2413,	3,	0,	2,	1153,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2413 = SB16_MMR6
  { 2412,	3,	0,	2,	1130,	0,	0,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo345 },  // Inst #2412 = SB16_MM
  { 2411,	3,	0,	4,	452,	0,	0,	0|(1ULL<<MCID::MayStore), 0x2ULL, nullptr, OperandInfo96 },  // Inst #2411 = SB
  { 2410,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2410 = SAT_U_W
  { 2409,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2409 = SAT_U_H
  { 2408,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2408 = SAT_U_D
  { 2407,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2407 = SAT_U_B
  { 2406,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2406 = SAT_S_W
  { 2405,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2405 = SAT_S_H
  { 2404,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2404 = SAT_S_D
  { 2403,	3,	1,	4,	527,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2403 = SAT_S_B
  { 2402,	2,	0,	4,	1210,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo122 },  // Inst #2402 = SAAD
  { 2401,	2,	0,	4,	1210,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo122 },  // Inst #2401 = SAA
  { 2400,	0,	0,	2,	1108,	1,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr },  // Inst #2400 = RestoreX16
  { 2399,	0,	0,	2,	1108,	1,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, nullptr },  // Inst #2399 = Restore16
  { 2398,	2,	1,	4,	1288,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2398 = RSQRT_S_MM
  { 2397,	2,	1,	4,	655,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2397 = RSQRT_S
  { 2396,	2,	1,	4,	1289,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2396 = RSQRT_D64_MM
  { 2395,	2,	1,	4,	653,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2395 = RSQRT_D64
  { 2394,	2,	1,	4,	1289,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #2394 = RSQRT_D32_MM
  { 2393,	2,	1,	4,	653,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #2393 = RSQRT_D32
  { 2392,	2,	1,	4,	1309,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2392 = ROUND_W_S_MMR6
  { 2391,	2,	1,	4,	1255,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2391 = ROUND_W_S_MM
  { 2390,	2,	1,	4,	719,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2390 = ROUND_W_S
  { 2389,	2,	1,	4,	1255,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #2389 = ROUND_W_MM
  { 2388,	2,	1,	4,	1309,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2388 = ROUND_W_D_MMR6
  { 2387,	2,	1,	4,	719,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #2387 = ROUND_W_D64
  { 2386,	2,	1,	4,	719,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #2386 = ROUND_W_D32
  { 2385,	2,	1,	4,	1309,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #2385 = ROUND_L_S_MMR6
  { 2384,	2,	1,	4,	719,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #2384 = ROUND_L_S
  { 2383,	2,	1,	4,	1309,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2383 = ROUND_L_D_MMR6
  { 2382,	2,	1,	4,	719,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2382 = ROUND_L_D64
  { 2381,	3,	1,	4,	757,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2381 = ROTR_MM
  { 2380,	3,	1,	4,	756,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2380 = ROTRV_MM
  { 2379,	3,	1,	4,	720,	0,	0,	0, 0x1ULL, nullptr, OperandInfo72 },  // Inst #2379 = ROTRV
  { 2378,	3,	1,	4,	501,	0,	0,	0, 0x1ULL, nullptr, OperandInfo73 },  // Inst #2378 = ROTR
  { 2377,	2,	1,	4,	1328,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo207 },  // Inst #2377 = RINT_S_MMR6
  { 2376,	2,	1,	4,	1229,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo207 },  // Inst #2376 = RINT_S
  { 2375,	2,	1,	4,	1328,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo203 },  // Inst #2375 = RINT_D_MMR6
  { 2374,	2,	1,	4,	1230,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo203 },  // Inst #2374 = RINT_D
  { 2373,	2,	1,	4,	1599,	0,	0,	0, 0x6ULL, nullptr, OperandInfo344 },  // Inst #2373 = REPL_QB_MM
  { 2372,	2,	1,	4,	1433,	0,	0,	0, 0x6ULL, nullptr, OperandInfo344 },  // Inst #2372 = REPL_QB
  { 2371,	2,	1,	4,	1598,	0,	0,	0, 0x6ULL, nullptr, OperandInfo344 },  // Inst #2371 = REPL_PH_MM
  { 2370,	2,	1,	4,	1432,	0,	0,	0, 0x6ULL, nullptr, OperandInfo344 },  // Inst #2370 = REPL_PH
  { 2369,	2,	1,	4,	1597,	0,	0,	0, 0x6ULL, nullptr, OperandInfo343 },  // Inst #2369 = REPLV_QB_MM
  { 2368,	2,	1,	4,	1431,	0,	0,	0, 0x6ULL, nullptr, OperandInfo343 },  // Inst #2368 = REPLV_QB
  { 2367,	2,	1,	4,	1596,	0,	0,	0, 0x6ULL, nullptr, OperandInfo343 },  // Inst #2367 = REPLV_PH_MM
  { 2366,	2,	1,	4,	1430,	0,	0,	0, 0x6ULL, nullptr, OperandInfo343 },  // Inst #2366 = REPLV_PH
  { 2365,	2,	1,	4,	1288,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2365 = RECIP_S_MM
  { 2364,	2,	1,	4,	654,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #2364 = RECIP_S
  { 2363,	2,	1,	4,	1289,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2363 = RECIP_D64_MM
  { 2362,	2,	1,	4,	652,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #2362 = RECIP_D64
  { 2361,	2,	1,	4,	1289,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #2361 = RECIP_D32_MM
  { 2360,	2,	1,	4,	652,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #2360 = RECIP_D32
  { 2359,	2,	1,	4,	1036,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #2359 = RDPGPR_MMR6
  { 2358,	3,	1,	4,	900,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo341 },  // Inst #2358 = RDHWR_MMR6
  { 2357,	3,	1,	4,	891,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo341 },  // Inst #2357 = RDHWR_MM
  { 2356,	3,	1,	4,	909,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo342 },  // Inst #2356 = RDHWR64
  { 2355,	3,	1,	4,	480,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo341 },  // Inst #2355 = RDHWR
  { 2354,	2,	1,	4,	1595,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo114 },  // Inst #2354 = RDDSP_MM
  { 2353,	2,	1,	4,	1429,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo114 },  // Inst #2353 = RDDSP
  { 2352,	2,	1,	4,	1594,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2352 = RADDU_W_QB_MM
  { 2351,	2,	1,	4,	1428,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2351 = RADDU_W_QB
  { 2350,	3,	1,	4,	645,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #2350 = PUU_PS64
  { 2349,	3,	1,	4,	645,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #2349 = PUL_PS64
  { 2348,	4,	1,	4,	1655,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #2348 = PREPEND_MMR2
  { 2347,	4,	1,	4,	1491,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #2347 = PREPEND
  { 2346,	3,	0,	4,	1087,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2346 = PREF_R6
  { 2345,	3,	0,	4,	1161,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2345 = PREF_MMR6
  { 2344,	3,	0,	4,	1139,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2344 = PREF_MM
  { 2343,	3,	0,	4,	1139,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo340 },  // Inst #2343 = PREFX_MM
  { 2342,	3,	0,	4,	1106,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2342 = PREFE_MM
  { 2341,	3,	0,	4,	469,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2341 = PREFE
  { 2340,	3,	0,	4,	468,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #2340 = PREF
  { 2339,	4,	1,	4,	1654,	0,	0,	0, 0x6ULL, nullptr, OperandInfo339 },  // Inst #2339 = PRECR_SRA_R_PH_W_MMR2
  { 2338,	4,	1,	4,	1490,	0,	0,	0, 0x6ULL, nullptr, OperandInfo339 },  // Inst #2338 = PRECR_SRA_R_PH_W
  { 2337,	4,	1,	4,	1653,	0,	0,	0, 0x6ULL, nullptr, OperandInfo339 },  // Inst #2337 = PRECR_SRA_PH_W_MMR2
  { 2336,	4,	1,	4,	1489,	0,	0,	0, 0x6ULL, nullptr, OperandInfo339 },  // Inst #2336 = PRECR_SRA_PH_W
  { 2335,	3,	1,	4,	1652,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo172 },  // Inst #2335 = PRECR_QB_PH_MMR2
  { 2334,	3,	1,	4,	1488,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo172 },  // Inst #2334 = PRECR_QB_PH
  { 2333,	3,	1,	4,	1593,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo338 },  // Inst #2333 = PRECRQ_RS_PH_W_MM
  { 2332,	3,	1,	4,	1427,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo338 },  // Inst #2332 = PRECRQ_RS_PH_W
  { 2331,	3,	1,	4,	1592,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2331 = PRECRQ_QB_PH_MM
  { 2330,	3,	1,	4,	1426,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2330 = PRECRQ_QB_PH
  { 2329,	3,	1,	4,	1591,	0,	0,	0, 0x6ULL, nullptr, OperandInfo338 },  // Inst #2329 = PRECRQ_PH_W_MM
  { 2328,	3,	1,	4,	1425,	0,	0,	0, 0x6ULL, nullptr, OperandInfo338 },  // Inst #2328 = PRECRQ_PH_W
  { 2327,	3,	1,	4,	1590,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo172 },  // Inst #2327 = PRECRQU_S_QB_PH_MM
  { 2326,	3,	1,	4,	1424,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList34, OperandInfo172 },  // Inst #2326 = PRECRQU_S_QB_PH
  { 2325,	2,	1,	4,	1589,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2325 = PRECEU_PH_QBR_MM
  { 2324,	2,	1,	4,	1588,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2324 = PRECEU_PH_QBRA_MM
  { 2323,	2,	1,	4,	1422,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2323 = PRECEU_PH_QBRA
  { 2322,	2,	1,	4,	1423,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2322 = PRECEU_PH_QBR
  { 2321,	2,	1,	4,	1587,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2321 = PRECEU_PH_QBL_MM
  { 2320,	2,	1,	4,	1586,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2320 = PRECEU_PH_QBLA_MM
  { 2319,	2,	1,	4,	1420,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2319 = PRECEU_PH_QBLA
  { 2318,	2,	1,	4,	1421,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2318 = PRECEU_PH_QBL
  { 2317,	2,	1,	4,	1585,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2317 = PRECEQ_W_PHR_MM
  { 2316,	2,	1,	4,	1419,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2316 = PRECEQ_W_PHR
  { 2315,	2,	1,	4,	1584,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2315 = PRECEQ_W_PHL_MM
  { 2314,	2,	1,	4,	1418,	0,	0,	0, 0x6ULL, nullptr, OperandInfo337 },  // Inst #2314 = PRECEQ_W_PHL
  { 2313,	2,	1,	4,	1583,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2313 = PRECEQU_PH_QBR_MM
  { 2312,	2,	1,	4,	1582,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2312 = PRECEQU_PH_QBRA_MM
  { 2311,	2,	1,	4,	1416,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2311 = PRECEQU_PH_QBRA
  { 2310,	2,	1,	4,	1417,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2310 = PRECEQU_PH_QBR
  { 2309,	2,	1,	4,	1581,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2309 = PRECEQU_PH_QBL_MM
  { 2308,	2,	1,	4,	1580,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2308 = PRECEQU_PH_QBLA_MM
  { 2307,	2,	1,	4,	1414,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2307 = PRECEQU_PH_QBLA
  { 2306,	2,	1,	4,	1415,	0,	0,	0, 0x6ULL, nullptr, OperandInfo168 },  // Inst #2306 = PRECEQU_PH_QBL
  { 2305,	2,	1,	4,	1203,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #2305 = POP
  { 2304,	3,	1,	4,	645,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #2304 = PLU_PS64
  { 2303,	3,	1,	4,	645,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #2303 = PLL_PS64
  { 2302,	3,	1,	4,	1579,	1,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList11, OperandInfo172 },  // Inst #2302 = PICK_QB_MM
  { 2301,	3,	1,	4,	1413,	1,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList11, OperandInfo172 },  // Inst #2301 = PICK_QB
  { 2300,	3,	1,	4,	1578,	1,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList11, OperandInfo172 },  // Inst #2300 = PICK_PH_MM
  { 2299,	3,	1,	4,	1412,	1,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList11, OperandInfo172 },  // Inst #2299 = PICK_PH
  { 2298,	2,	1,	4,	526,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #2298 = PCNT_W
  { 2297,	2,	1,	4,	526,	0,	0,	0, 0x6ULL, nullptr, OperandInfo335 },  // Inst #2297 = PCNT_H
  { 2296,	2,	1,	4,	526,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #2296 = PCNT_D
  { 2295,	2,	1,	4,	526,	0,	0,	0, 0x6ULL, nullptr, OperandInfo312 },  // Inst #2295 = PCNT_B
  { 2294,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2294 = PCKOD_W
  { 2293,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2293 = PCKOD_H
  { 2292,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2292 = PCKOD_D
  { 2291,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2291 = PCKOD_B
  { 2290,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2290 = PCKEV_W
  { 2289,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2289 = PCKEV_H
  { 2288,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2288 = PCKEV_D
  { 2287,	3,	1,	4,	626,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2287 = PCKEV_B
  { 2286,	0,	0,	4,	1051,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2286 = PAUSE_MMR6
  { 2285,	0,	0,	4,	1034,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #2285 = PAUSE_MM
  { 2284,	0,	0,	4,	405,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #2284 = PAUSE
  { 2283,	3,	1,	4,	1577,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2283 = PACKRL_PH_MM
  { 2282,	3,	1,	4,	1411,	0,	0,	0, 0x6ULL, nullptr, OperandInfo172 },  // Inst #2282 = PACKRL_PH
  { 2281,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo186 },  // Inst #2281 = OrRxRxRy16
  { 2280,	3,	1,	4,	755,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2280 = ORi_MM
  { 2279,	3,	1,	4,	809,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo70 },  // Inst #2279 = ORi64
  { 2278,	3,	1,	4,	500,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2278 = ORi
  { 2277,	3,	1,	4,	548,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2277 = OR_V
  { 2276,	3,	1,	4,	795,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2276 = OR_MMR6
  { 2275,	3,	1,	4,	754,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2275 = OR_MM
  { 2274,	3,	1,	4,	796,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #2274 = ORI_MMR6
  { 2273,	3,	1,	4,	549,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2273 = ORI_B
  { 2272,	3,	1,	4,	843,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #2272 = OR64
  { 2271,	3,	1,	2,	795,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo181 },  // Inst #2271 = OR16_MMR6
  { 2270,	3,	1,	2,	754,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo181 },  // Inst #2270 = OR16_MM
  { 2269,	3,	1,	4,	367,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2269 = OR
  { 2268,	2,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo130 },  // Inst #2268 = NotRxRy16
  { 2267,	2,	1,	2,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo130 },  // Inst #2267 = NegRxRy16
  { 2266,	2,	1,	2,	794,	0,	0,	0, 0x0ULL, nullptr, OperandInfo336 },  // Inst #2266 = NOT16_MMR6
  { 2265,	2,	1,	2,	753,	0,	0,	0, 0x0ULL, nullptr, OperandInfo336 },  // Inst #2265 = NOT16_MM
  { 2264,	3,	1,	4,	548,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2264 = NOR_V
  { 2263,	3,	1,	4,	793,	0,	0,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2263 = NOR_MMR6
  { 2262,	3,	1,	4,	752,	0,	0,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2262 = NOR_MM
  { 2261,	3,	1,	4,	549,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2261 = NORI_B
  { 2260,	3,	1,	4,	842,	0,	0,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #2260 = NOR64
  { 2259,	3,	1,	4,	366,	0,	0,	0|(1ULL<<MCID::Commutable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2259 = NOR
  { 2258,	4,	1,	4,	1251,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #2258 = NMSUB_S_MM
  { 2257,	4,	1,	4,	684,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #2257 = NMSUB_S
  { 2256,	4,	1,	4,	683,	0,	0,	0, 0x4ULL, nullptr, OperandInfo305 },  // Inst #2256 = NMSUB_D64
  { 2255,	4,	1,	4,	1252,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #2255 = NMSUB_D32_MM
  { 2254,	4,	1,	4,	683,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #2254 = NMSUB_D32
  { 2253,	4,	1,	4,	1249,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #2253 = NMADD_S_MM
  { 2252,	4,	1,	4,	682,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #2252 = NMADD_S
  { 2251,	4,	1,	4,	681,	0,	0,	0, 0x4ULL, nullptr, OperandInfo305 },  // Inst #2251 = NMADD_D64
  { 2250,	4,	1,	4,	1250,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #2250 = NMADD_D32_MM
  { 2249,	4,	1,	4,	681,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #2249 = NMADD_D32
  { 2248,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #2248 = NLZC_W
  { 2247,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo335 },  // Inst #2247 = NLZC_H
  { 2246,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #2246 = NLZC_D
  { 2245,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo312 },  // Inst #2245 = NLZC_B
  { 2244,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #2244 = NLOC_W
  { 2243,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo335 },  // Inst #2243 = NLOC_H
  { 2242,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #2242 = NLOC_D
  { 2241,	2,	1,	4,	627,	0,	0,	0, 0x6ULL, nullptr, OperandInfo312 },  // Inst #2241 = NLOC_B
  { 2240,	2,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo334 },  // Inst #2240 = MoveR3216
  { 2239,	2,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo333 },  // Inst #2239 = Move32R16
  { 2238,	1,	1,	2,	735,	1,	0,	0, 0x0ULL, ImplicitList25, OperandInfo272 },  // Inst #2238 = Mflo16
  { 2237,	1,	1,	2,	735,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList23, OperandInfo272 },  // Inst #2237 = Mfhi16
  { 2236,	3,	1,	4,	1647,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2236 = MUL_S_PH_MMR2
  { 2235,	3,	1,	4,	1483,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2235 = MUL_S_PH
  { 2234,	3,	1,	4,	872,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2234 = MUL_R6
  { 2233,	3,	1,	4,	676,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2233 = MUL_Q_W
  { 2232,	3,	1,	4,	676,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2232 = MUL_Q_H
  { 2231,	3,	1,	4,	1646,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2231 = MUL_PH_MMR2
  { 2230,	3,	1,	4,	1482,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2230 = MUL_PH
  { 2229,	3,	1,	4,	895,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2229 = MUL_MMR6
  { 2228,	3,	1,	4,	884,	0,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, ImplicitList6, OperandInfo72 },  // Inst #2228 = MUL_MM
  { 2227,	3,	1,	4,	670,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2227 = MULV_W
  { 2226,	3,	1,	4,	670,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2226 = MULV_H
  { 2225,	3,	1,	4,	670,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2225 = MULV_D
  { 2224,	3,	1,	4,	670,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2224 = MULV_B
  { 2223,	3,	1,	4,	894,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2223 = MULU_MMR6
  { 2222,	3,	1,	4,	871,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #2222 = MULU
  { 2221,	2,	0,	4,	879,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2221 = MULTu_MM
  { 2220,	2,	0,	4,	488,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2220 = MULTu
  { 2219,	2,	0,	4,	878,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2219 = MULT_MM
  { 2218,	3,	1,	4,	1576,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo143 },  // Inst #2218 = MULT_DSP_MM
  { 2217,	3,	1,	4,	1410,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo143 },  // Inst #2217 = MULT_DSP
  { 2216,	3,	1,	4,	1575,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo143 },  // Inst #2216 = MULTU_DSP_MM
  { 2215,	3,	1,	4,	1409,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo143 },  // Inst #2215 = MULTU_DSP
  { 2214,	2,	0,	4,	487,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList6, OperandInfo45 },  // Inst #2214 = MULT
  { 2213,	4,	1,	4,	1651,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2213 = MULSA_W_PH_MMR2
  { 2212,	4,	1,	4,	1487,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2212 = MULSA_W_PH
  { 2211,	4,	1,	4,	1574,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #2211 = MULSAQ_S_W_PH_MM
  { 2210,	4,	1,	4,	1408,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #2210 = MULSAQ_S_W_PH
  { 2209,	3,	1,	4,	675,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2209 = MULR_Q_W
  { 2208,	3,	1,	4,	675,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2208 = MULR_Q_H
  { 2207,	3,	1,	4,	1213,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #2207 = MULR_PS64
  { 2206,	3,	1,	4,	1650,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo72 },  // Inst #2206 = MULQ_S_W_MMR2
  { 2205,	3,	1,	4,	1486,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo72 },  // Inst #2205 = MULQ_S_W
  { 2204,	3,	1,	4,	1649,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2204 = MULQ_S_PH_MMR2
  { 2203,	3,	1,	4,	1485,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2203 = MULQ_S_PH
  { 2202,	3,	1,	4,	1648,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo72 },  // Inst #2202 = MULQ_RS_W_MMR2
  { 2201,	3,	1,	4,	1484,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo72 },  // Inst #2201 = MULQ_RS_W
  { 2200,	3,	1,	4,	1573,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2200 = MULQ_RS_PH_MM
  { 2199,	3,	1,	4,	1407,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2199 = MULQ_RS_PH
  { 2198,	3,	1,	4,	1572,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2198 = MULEU_S_PH_QBR_MM
  { 2197,	3,	1,	4,	1406,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2197 = MULEU_S_PH_QBR
  { 2196,	3,	1,	4,	1571,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2196 = MULEU_S_PH_QBL_MM
  { 2195,	3,	1,	4,	1405,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo172 },  // Inst #2195 = MULEU_S_PH_QBL
  { 2194,	3,	1,	4,	1570,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo214 },  // Inst #2194 = MULEQ_S_W_PHR_MM
  { 2193,	3,	1,	4,	1404,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo214 },  // Inst #2193 = MULEQ_S_W_PHR
  { 2192,	3,	1,	4,	1569,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo214 },  // Inst #2192 = MULEQ_S_W_PHL_MM
  { 2191,	3,	1,	4,	1403,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList33, OperandInfo214 },  // Inst #2191 = MULEQ_S_W_PHL
  { 2190,	3,	1,	4,	486,	0,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, ImplicitList6, OperandInfo72 },  // Inst #2190 = MUL
  { 2189,	3,	1,	4,	893,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2189 = MUH_MMR6
  { 2188,	3,	1,	4,	892,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #2188 = MUHU_MMR6
  { 2187,	3,	1,	4,	870,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2187 = MUHU
  { 2186,	3,	1,	4,	869,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2186 = MUH
  { 2185,	5,	1,	4,	1064,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo310 },  // Inst #2185 = MTTR
  { 2184,	1,	0,	4,	1205,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList32, OperandInfo95 },  // Inst #2184 = MTP2
  { 2183,	1,	0,	4,	1205,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList31, OperandInfo95 },  // Inst #2183 = MTP1
  { 2182,	1,	0,	4,	1205,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList30, OperandInfo95 },  // Inst #2182 = MTP0
  { 2181,	1,	0,	4,	1205,	0,	4,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList29, OperandInfo95 },  // Inst #2181 = MTM2
  { 2180,	1,	0,	4,	1205,	0,	4,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList28, OperandInfo95 },  // Inst #2180 = MTM1
  { 2179,	1,	0,	4,	1205,	0,	4,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList27, OperandInfo95 },  // Inst #2179 = MTM0
  { 2178,	1,	0,	4,	890,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList25, OperandInfo58 },  // Inst #2178 = MTLO_MM
  { 2177,	2,	1,	4,	1568,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo332 },  // Inst #2177 = MTLO_DSP_MM
  { 2176,	2,	1,	4,	1356,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo332 },  // Inst #2176 = MTLO_DSP
  { 2175,	1,	0,	4,	908,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList26, OperandInfo95 },  // Inst #2175 = MTLO64
  { 2174,	1,	0,	4,	493,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList25, OperandInfo58 },  // Inst #2174 = MTLO
  { 2173,	3,	1,	4,	1567,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, OperandInfo331 },  // Inst #2173 = MTHLIP_MM
  { 2172,	3,	1,	4,	1354,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList4, OperandInfo331 },  // Inst #2172 = MTHLIP
  { 2171,	1,	0,	4,	890,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList23, OperandInfo58 },  // Inst #2171 = MTHI_MM
  { 2170,	2,	1,	4,	1566,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo330 },  // Inst #2170 = MTHI_DSP_MM
  { 2169,	2,	1,	4,	1355,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo330 },  // Inst #2169 = MTHI_DSP
  { 2168,	1,	0,	4,	908,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList24, OperandInfo95 },  // Inst #2168 = MTHI64
  { 2167,	1,	0,	4,	493,	0,	1,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList23, OperandInfo58 },  // Inst #2167 = MTHI
  { 2166,	3,	1,	4,	1079,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo128 },  // Inst #2166 = MTHGC0_MM
  { 2165,	3,	1,	4,	424,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo128 },  // Inst #2165 = MTHGC0
  { 2164,	2,	1,	4,	1045,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo222 },  // Inst #2164 = MTHC2_MMR6
  { 2163,	3,	1,	4,	1270,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo329 },  // Inst #2163 = MTHC1_D64_MM
  { 2162,	3,	1,	4,	687,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo329 },  // Inst #2162 = MTHC1_D64
  { 2161,	3,	1,	4,	1270,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo328 },  // Inst #2161 = MTHC1_D32_MM
  { 2160,	3,	1,	4,	687,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo328 },  // Inst #2160 = MTHC1_D32
  { 2159,	3,	1,	4,	1043,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo128 },  // Inst #2159 = MTHC0_MMR6
  { 2158,	3,	1,	4,	1078,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo128 },  // Inst #2158 = MTGC0_MM
  { 2157,	3,	1,	4,	423,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo128 },  // Inst #2157 = MTGC0
  { 2156,	2,	1,	4,	1045,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo222 },  // Inst #2156 = MTC2_MMR6
  { 2155,	3,	1,	4,	419,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo327 },  // Inst #2155 = MTC2
  { 2154,	2,	1,	4,	1313,	0,	0,	0|(1ULL<<MCID::Bitcast), 0x6ULL, nullptr, OperandInfo129 },  // Inst #2154 = MTC1_MMR6
  { 2153,	2,	1,	4,	1269,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo129 },  // Inst #2153 = MTC1_MM
  { 2152,	2,	1,	4,	1269,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo135 },  // Inst #2152 = MTC1_D64_MM
  { 2151,	2,	1,	4,	686,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo135 },  // Inst #2151 = MTC1_D64
  { 2150,	2,	1,	4,	686,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo129 },  // Inst #2150 = MTC1
  { 2149,	3,	1,	4,	1044,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo128 },  // Inst #2149 = MTC0_MMR6
  { 2148,	3,	1,	4,	417,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo128 },  // Inst #2148 = MTC0
  { 2147,	4,	1,	4,	1282,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo306 },  // Inst #2147 = MSUB_S_MM
  { 2146,	4,	1,	4,	680,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #2146 = MSUB_S
  { 2145,	4,	1,	4,	674,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #2145 = MSUB_Q_W
  { 2144,	4,	1,	4,	674,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #2144 = MSUB_Q_H
  { 2143,	2,	0,	4,	882,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #2143 = MSUB_MM
  { 2142,	4,	1,	4,	1565,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2142 = MSUB_DSP_MM
  { 2141,	4,	1,	4,	1402,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2141 = MSUB_DSP
  { 2140,	4,	1,	4,	679,	0,	0,	0, 0x4ULL, nullptr, OperandInfo305 },  // Inst #2140 = MSUB_D64
  { 2139,	4,	1,	4,	1283,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo304 },  // Inst #2139 = MSUB_D32_MM
  { 2138,	4,	1,	4,	679,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #2138 = MSUB_D32
  { 2137,	4,	1,	4,	668,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #2137 = MSUBV_W
  { 2136,	4,	1,	4,	668,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #2136 = MSUBV_H
  { 2135,	4,	1,	4,	668,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #2135 = MSUBV_D
  { 2134,	4,	1,	4,	668,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #2134 = MSUBV_B
  { 2133,	2,	0,	4,	883,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #2133 = MSUBU_MM
  { 2132,	4,	1,	4,	1564,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2132 = MSUBU_DSP_MM
  { 2131,	4,	1,	4,	1401,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #2131 = MSUBU_DSP
  { 2130,	2,	0,	4,	856,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #2130 = MSUBU
  { 2129,	4,	1,	4,	673,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #2129 = MSUBR_Q_W
  { 2128,	4,	1,	4,	673,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #2128 = MSUBR_Q_H
  { 2127,	4,	1,	4,	1332,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo303 },  // Inst #2127 = MSUBF_S_MMR6
  { 2126,	4,	1,	4,	1235,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo303 },  // Inst #2126 = MSUBF_S
  { 2125,	4,	1,	4,	1331,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo302 },  // Inst #2125 = MSUBF_D_MMR6
  { 2124,	4,	1,	4,	1237,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo302 },  // Inst #2124 = MSUBF_D
  { 2123,	2,	0,	4,	855,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #2123 = MSUB
  { 2122,	4,	1,	4,	1245,	0,	0,	0, 0x4ULL, nullptr, OperandInfo326 },  // Inst #2122 = MOVZ_I_S_MM
  { 2121,	4,	1,	4,	709,	0,	0,	0, 0x4ULL, nullptr, OperandInfo326 },  // Inst #2121 = MOVZ_I_S
  { 2120,	4,	1,	4,	1563,	0,	0,	0, 0x4ULL, nullptr, OperandInfo324 },  // Inst #2120 = MOVZ_I_MM
  { 2119,	4,	1,	4,	911,	0,	0,	0, 0x4ULL, nullptr, OperandInfo325 },  // Inst #2119 = MOVZ_I_I64
  { 2118,	4,	1,	4,	483,	0,	0,	0, 0x4ULL, nullptr, OperandInfo324 },  // Inst #2118 = MOVZ_I_I
  { 2117,	4,	1,	4,	708,	0,	0,	0, 0x4ULL, nullptr, OperandInfo323 },  // Inst #2117 = MOVZ_I_D64
  { 2116,	4,	1,	4,	1244,	0,	0,	0, 0x4ULL, nullptr, OperandInfo322 },  // Inst #2116 = MOVZ_I_D32_MM
  { 2115,	4,	1,	4,	708,	0,	0,	0, 0x4ULL, nullptr, OperandInfo322 },  // Inst #2115 = MOVZ_I_D32
  { 2114,	4,	1,	4,	1217,	0,	0,	0, 0x4ULL, nullptr, OperandInfo321 },  // Inst #2114 = MOVZ_I64_S
  { 2113,	4,	1,	4,	911,	0,	0,	0, 0x4ULL, nullptr, OperandInfo320 },  // Inst #2113 = MOVZ_I64_I64
  { 2112,	4,	1,	4,	911,	0,	0,	0, 0x4ULL, nullptr, OperandInfo319 },  // Inst #2112 = MOVZ_I64_I
  { 2111,	4,	1,	4,	1220,	0,	0,	0, 0x4ULL, nullptr, OperandInfo318 },  // Inst #2111 = MOVZ_I64_D64
  { 2110,	4,	1,	4,	1243,	0,	0,	0, 0x4ULL, nullptr, OperandInfo317 },  // Inst #2110 = MOVT_S_MM
  { 2109,	4,	1,	4,	534,	0,	0,	0, 0x4ULL, nullptr, OperandInfo317 },  // Inst #2109 = MOVT_S
  { 2108,	4,	1,	4,	889,	0,	0,	0, 0x4ULL, nullptr, OperandInfo315 },  // Inst #2108 = MOVT_I_MM
  { 2107,	4,	1,	4,	1215,	0,	0,	0, 0x4ULL, nullptr, OperandInfo316 },  // Inst #2107 = MOVT_I64
  { 2106,	4,	1,	4,	698,	0,	0,	0, 0x4ULL, nullptr, OperandInfo315 },  // Inst #2106 = MOVT_I
  { 2105,	4,	1,	4,	533,	0,	0,	0, 0x4ULL, nullptr, OperandInfo314 },  // Inst #2105 = MOVT_D64
  { 2104,	4,	1,	4,	1242,	0,	0,	0, 0x4ULL, nullptr, OperandInfo313 },  // Inst #2104 = MOVT_D32_MM
  { 2103,	4,	1,	4,	533,	0,	0,	0, 0x4ULL, nullptr, OperandInfo313 },  // Inst #2103 = MOVT_D32
  { 2102,	4,	1,	4,	1241,	0,	0,	0, 0x4ULL, nullptr, OperandInfo326 },  // Inst #2102 = MOVN_I_S_MM
  { 2101,	4,	1,	4,	707,	0,	0,	0, 0x4ULL, nullptr, OperandInfo326 },  // Inst #2101 = MOVN_I_S
  { 2100,	4,	1,	4,	1562,	0,	0,	0, 0x4ULL, nullptr, OperandInfo324 },  // Inst #2100 = MOVN_I_MM
  { 2099,	4,	1,	4,	910,	0,	0,	0, 0x4ULL, nullptr, OperandInfo325 },  // Inst #2099 = MOVN_I_I64
  { 2098,	4,	1,	4,	482,	0,	0,	0, 0x4ULL, nullptr, OperandInfo324 },  // Inst #2098 = MOVN_I_I
  { 2097,	4,	1,	4,	706,	0,	0,	0, 0x4ULL, nullptr, OperandInfo323 },  // Inst #2097 = MOVN_I_D64
  { 2096,	4,	1,	4,	1240,	0,	0,	0, 0x4ULL, nullptr, OperandInfo322 },  // Inst #2096 = MOVN_I_D32_MM
  { 2095,	4,	1,	4,	706,	0,	0,	0, 0x4ULL, nullptr, OperandInfo322 },  // Inst #2095 = MOVN_I_D32
  { 2094,	4,	1,	4,	1219,	0,	0,	0, 0x4ULL, nullptr, OperandInfo321 },  // Inst #2094 = MOVN_I64_S
  { 2093,	4,	1,	4,	910,	0,	0,	0, 0x4ULL, nullptr, OperandInfo320 },  // Inst #2093 = MOVN_I64_I64
  { 2092,	4,	1,	4,	910,	0,	0,	0, 0x4ULL, nullptr, OperandInfo319 },  // Inst #2092 = MOVN_I64_I
  { 2091,	4,	1,	4,	1218,	0,	0,	0, 0x4ULL, nullptr, OperandInfo318 },  // Inst #2091 = MOVN_I64_D64
  { 2090,	4,	1,	4,	1239,	0,	0,	0, 0x4ULL, nullptr, OperandInfo317 },  // Inst #2090 = MOVF_S_MM
  { 2089,	4,	1,	4,	532,	0,	0,	0, 0x4ULL, nullptr, OperandInfo317 },  // Inst #2089 = MOVF_S
  { 2088,	4,	1,	4,	888,	0,	0,	0, 0x4ULL, nullptr, OperandInfo315 },  // Inst #2088 = MOVF_I_MM
  { 2087,	4,	1,	4,	1216,	0,	0,	0, 0x4ULL, nullptr, OperandInfo316 },  // Inst #2087 = MOVF_I64
  { 2086,	4,	1,	4,	697,	0,	0,	0, 0x4ULL, nullptr, OperandInfo315 },  // Inst #2086 = MOVF_I
  { 2085,	4,	1,	4,	531,	0,	0,	0, 0x4ULL, nullptr, OperandInfo314 },  // Inst #2085 = MOVF_D64
  { 2084,	4,	1,	4,	1238,	0,	0,	0, 0x4ULL, nullptr, OperandInfo313 },  // Inst #2084 = MOVF_D32_MM
  { 2083,	4,	1,	4,	531,	0,	0,	0, 0x4ULL, nullptr, OperandInfo313 },  // Inst #2083 = MOVF_D32
  { 2082,	2,	1,	4,	546,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo312 },  // Inst #2082 = MOVE_V
  { 2081,	4,	2,	2,	1561,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo311 },  // Inst #2081 = MOVEP_MMR6
  { 2080,	4,	2,	2,	751,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo311 },  // Inst #2080 = MOVEP_MM
  { 2079,	2,	1,	2,	792,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo45 },  // Inst #2079 = MOVE16_MMR6
  { 2078,	2,	1,	2,	750,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo45 },  // Inst #2078 = MOVE16_MM
  { 2077,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2077 = MOD_U_W
  { 2076,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2076 = MOD_U_H
  { 2075,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2075 = MOD_U_D
  { 2074,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2074 = MOD_U_B
  { 2073,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2073 = MOD_S_W
  { 2072,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2072 = MOD_S_H
  { 2071,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2071 = MOD_S_D
  { 2070,	3,	1,	4,	613,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2070 = MOD_S_B
  { 2069,	3,	1,	4,	897,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #2069 = MOD_MMR6
  { 2068,	3,	1,	4,	896,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #2068 = MODU_MMR6
  { 2067,	3,	1,	4,	874,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #2067 = MODU
  { 2066,	3,	1,	4,	1560,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2066 = MODSUB_MM
  { 2065,	3,	1,	4,	1400,	0,	0,	0, 0x6ULL, nullptr, OperandInfo72 },  // Inst #2065 = MODSUB
  { 2064,	3,	1,	4,	873,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #2064 = MOD
  { 2063,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2063 = MIN_U_W
  { 2062,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2062 = MIN_U_H
  { 2061,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2061 = MIN_U_D
  { 2060,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2060 = MIN_U_B
  { 2059,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2059 = MIN_S_W
  { 2058,	3,	1,	4,	1319,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2058 = MIN_S_MMR6
  { 2057,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2057 = MIN_S_H
  { 2056,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2056 = MIN_S_D
  { 2055,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2055 = MIN_S_B
  { 2054,	3,	1,	4,	1225,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2054 = MIN_S
  { 2053,	3,	1,	4,	1318,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2053 = MIN_D_MMR6
  { 2052,	3,	1,	4,	1226,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2052 = MIN_D
  { 2051,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2051 = MIN_A_W
  { 2050,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2050 = MIN_A_H
  { 2049,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2049 = MIN_A_D
  { 2048,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2048 = MIN_A_B
  { 2047,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2047 = MINI_U_W
  { 2046,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2046 = MINI_U_H
  { 2045,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2045 = MINI_U_D
  { 2044,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2044 = MINI_U_B
  { 2043,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #2043 = MINI_S_W
  { 2042,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #2042 = MINI_S_H
  { 2041,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #2041 = MINI_S_D
  { 2040,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #2040 = MINI_S_B
  { 2039,	3,	1,	4,	1323,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2039 = MINA_S_MMR6
  { 2038,	3,	1,	4,	1226,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #2038 = MINA_S
  { 2037,	3,	1,	4,	1322,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2037 = MINA_D_MMR6
  { 2036,	3,	1,	4,	1225,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #2036 = MINA_D
  { 2035,	5,	1,	4,	1063,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo310 },  // Inst #2035 = MFTR
  { 2034,	1,	1,	4,	887,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList21, OperandInfo58 },  // Inst #2034 = MFLO_MM
  { 2033,	2,	1,	4,	1559,	0,	0,	0, 0x6ULL, nullptr, OperandInfo119 },  // Inst #2033 = MFLO_DSP_MM
  { 2032,	2,	1,	4,	1399,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x6ULL, nullptr, OperandInfo119 },  // Inst #2032 = MFLO_DSP
  { 2031,	1,	1,	4,	906,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList22, OperandInfo95 },  // Inst #2031 = MFLO64
  { 2030,	1,	1,	2,	887,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList21, OperandInfo58 },  // Inst #2030 = MFLO16_MM
  { 2029,	1,	1,	4,	478,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList21, OperandInfo58 },  // Inst #2029 = MFLO
  { 2028,	1,	1,	4,	887,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList21, OperandInfo58 },  // Inst #2028 = MFHI_MM
  { 2027,	2,	1,	4,	1558,	0,	0,	0, 0x6ULL, nullptr, OperandInfo119 },  // Inst #2027 = MFHI_DSP_MM
  { 2026,	2,	1,	4,	1398,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x6ULL, nullptr, OperandInfo119 },  // Inst #2026 = MFHI_DSP
  { 2025,	1,	1,	4,	906,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList22, OperandInfo95 },  // Inst #2025 = MFHI64
  { 2024,	1,	1,	2,	887,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x0ULL, ImplicitList21, OperandInfo58 },  // Inst #2024 = MFHI16_MM
  { 2023,	1,	1,	4,	478,	1,	0,	0|(1ULL<<MCID::MoveReg), 0x1ULL, ImplicitList21, OperandInfo58 },  // Inst #2023 = MFHI
  { 2022,	3,	1,	4,	1077,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo120 },  // Inst #2022 = MFHGC0_MM
  { 2021,	3,	1,	4,	422,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo120 },  // Inst #2021 = MFHGC0
  { 2020,	2,	1,	4,	1042,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo209 },  // Inst #2020 = MFHC2_MMR6
  { 2019,	2,	1,	4,	1268,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo307 },  // Inst #2019 = MFHC1_D64_MM
  { 2018,	2,	1,	4,	696,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo307 },  // Inst #2018 = MFHC1_D64
  { 2017,	2,	1,	4,	1268,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo309 },  // Inst #2017 = MFHC1_D32_MM
  { 2016,	2,	1,	4,	696,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo309 },  // Inst #2016 = MFHC1_D32
  { 2015,	3,	1,	4,	1040,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo120 },  // Inst #2015 = MFHC0_MMR6
  { 2014,	3,	1,	4,	1076,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo120 },  // Inst #2014 = MFGC0_MM
  { 2013,	3,	1,	4,	421,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo120 },  // Inst #2013 = MFGC0
  { 2012,	2,	1,	4,	1042,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo209 },  // Inst #2012 = MFC2_MMR6
  { 2011,	3,	1,	4,	418,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo308 },  // Inst #2011 = MFC2
  { 2010,	2,	1,	4,	1312,	0,	0,	0|(1ULL<<MCID::Bitcast), 0x6ULL, nullptr, OperandInfo121 },  // Inst #2010 = MFC1_MMR6
  { 2009,	2,	1,	4,	1267,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo121 },  // Inst #2009 = MFC1_MM
  { 2008,	2,	1,	4,	695,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo307 },  // Inst #2008 = MFC1_D64
  { 2007,	2,	1,	4,	695,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo121 },  // Inst #2007 = MFC1
  { 2006,	3,	1,	4,	1041,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo120 },  // Inst #2006 = MFC0_MMR6
  { 2005,	3,	1,	4,	416,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo120 },  // Inst #2005 = MFC0
  { 2004,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2004 = MAX_U_W
  { 2003,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #2003 = MAX_U_H
  { 2002,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #2002 = MAX_U_D
  { 2001,	3,	1,	4,	618,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #2001 = MAX_U_B
  { 2000,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #2000 = MAX_S_W
  { 1999,	3,	1,	4,	1317,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1999 = MAX_S_MMR6
  { 1998,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1998 = MAX_S_H
  { 1997,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1997 = MAX_S_D
  { 1996,	3,	1,	4,	617,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1996 = MAX_S_B
  { 1995,	3,	1,	4,	1223,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1995 = MAX_S
  { 1994,	3,	1,	4,	1316,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #1994 = MAX_D_MMR6
  { 1993,	3,	1,	4,	1224,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #1993 = MAX_D
  { 1992,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1992 = MAX_A_W
  { 1991,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1991 = MAX_A_H
  { 1990,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1990 = MAX_A_D
  { 1989,	3,	1,	4,	619,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1989 = MAX_A_B
  { 1988,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1988 = MAXI_U_W
  { 1987,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1987 = MAXI_U_H
  { 1986,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1986 = MAXI_U_D
  { 1985,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1985 = MAXI_U_B
  { 1984,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1984 = MAXI_S_W
  { 1983,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1983 = MAXI_S_H
  { 1982,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1982 = MAXI_S_D
  { 1981,	3,	1,	4,	620,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1981 = MAXI_S_B
  { 1980,	3,	1,	4,	1321,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1980 = MAXA_S_MMR6
  { 1979,	3,	1,	4,	1223,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1979 = MAXA_S
  { 1978,	3,	1,	4,	1320,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #1978 = MAXA_D_MMR6
  { 1977,	3,	1,	4,	1224,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo173 },  // Inst #1977 = MAXA_D
  { 1976,	4,	1,	4,	1557,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1976 = MAQ_S_W_PHR_MM
  { 1975,	4,	1,	4,	1397,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1975 = MAQ_S_W_PHR
  { 1974,	4,	1,	4,	1556,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1974 = MAQ_S_W_PHL_MM
  { 1973,	4,	1,	4,	1396,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1973 = MAQ_S_W_PHL
  { 1972,	4,	1,	4,	1555,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1972 = MAQ_SA_W_PHR_MM
  { 1971,	4,	1,	4,	1395,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1971 = MAQ_SA_W_PHR
  { 1970,	4,	1,	4,	1554,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1970 = MAQ_SA_W_PHL_MM
  { 1969,	4,	1,	4,	1394,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1969 = MAQ_SA_W_PHL
  { 1968,	4,	1,	4,	1253,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo306 },  // Inst #1968 = MADD_S_MM
  { 1967,	4,	1,	4,	678,	0,	0,	0, 0x4ULL, nullptr, OperandInfo306 },  // Inst #1967 = MADD_S
  { 1966,	4,	1,	4,	672,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #1966 = MADD_Q_W
  { 1965,	4,	1,	4,	672,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #1965 = MADD_Q_H
  { 1964,	2,	0,	4,	880,	2,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #1964 = MADD_MM
  { 1963,	4,	1,	4,	1553,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1963 = MADD_DSP_MM
  { 1962,	4,	1,	4,	1393,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1962 = MADD_DSP
  { 1961,	4,	1,	4,	677,	0,	0,	0, 0x4ULL, nullptr, OperandInfo305 },  // Inst #1961 = MADD_D64
  { 1960,	4,	1,	4,	1254,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo304 },  // Inst #1960 = MADD_D32_MM
  { 1959,	4,	1,	4,	677,	0,	0,	0, 0x4ULL, nullptr, OperandInfo304 },  // Inst #1959 = MADD_D32
  { 1958,	4,	1,	4,	669,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #1958 = MADDV_W
  { 1957,	4,	1,	4,	669,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #1957 = MADDV_H
  { 1956,	4,	1,	4,	669,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #1956 = MADDV_D
  { 1955,	4,	1,	4,	669,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #1955 = MADDV_B
  { 1954,	2,	0,	4,	881,	2,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #1954 = MADDU_MM
  { 1953,	4,	1,	4,	1552,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1953 = MADDU_DSP_MM
  { 1952,	4,	1,	4,	1392,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1952 = MADDU_DSP
  { 1951,	2,	0,	4,	854,	2,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #1951 = MADDU
  { 1950,	4,	1,	4,	671,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #1950 = MADDR_Q_W
  { 1949,	4,	1,	4,	671,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #1949 = MADDR_Q_H
  { 1948,	4,	1,	4,	1330,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo303 },  // Inst #1948 = MADDF_S_MMR6
  { 1947,	4,	1,	4,	1234,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo303 },  // Inst #1947 = MADDF_S
  { 1946,	4,	1,	4,	1329,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo302 },  // Inst #1946 = MADDF_D_MMR6
  { 1945,	4,	1,	4,	1236,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo302 },  // Inst #1945 = MADDF_D
  { 1944,	2,	0,	4,	853,	2,	2,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList20, OperandInfo45 },  // Inst #1944 = MADD
  { 1943,	3,	1,	4,	1113,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo185 },  // Inst #1943 = LwRxSpImmX16
  { 1942,	3,	1,	4,	1113,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo300 },  // Inst #1942 = LwRxRyOffMemX16
  { 1941,	3,	1,	4,	1113,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo301 },  // Inst #1941 = LwRxPcTcpX16
  { 1940,	3,	1,	2,	1113,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo301 },  // Inst #1940 = LwRxPcTcp16
  { 1939,	2,	1,	4,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo183 },  // Inst #1939 = LiRxImmX16
  { 1938,	2,	1,	4,	735,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo183 },  // Inst #1938 = LiRxImmAlignX16
  { 1937,	2,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo183 },  // Inst #1937 = LiRxImm16
  { 1936,	3,	1,	4,	1112,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo300 },  // Inst #1936 = LhuRxRyOffMemX16
  { 1935,	3,	1,	4,	1111,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo300 },  // Inst #1935 = LhRxRyOffMemX16
  { 1934,	3,	1,	4,	1110,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo300 },  // Inst #1934 = LbuRxRyOffMemX16
  { 1933,	3,	1,	4,	1109,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo300 },  // Inst #1933 = LbRxRyOffMemX16
  { 1932,	3,	1,	4,	1165,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1932 = LWu
  { 1931,	3,	1,	4,	1152,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1931 = LW_MMR6
  { 1930,	3,	1,	4,	1123,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1930 = LW_MM
  { 1929,	3,	1,	4,	1551,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1929 = LWX_MM
  { 1928,	3,	1,	4,	1129,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo274 },  // Inst #1928 = LWXS_MM
  { 1927,	3,	1,	4,	1299,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo299 },  // Inst #1927 = LWXC1_MM
  { 1926,	3,	1,	4,	713,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo299 },  // Inst #1926 = LWXC1
  { 1925,	3,	1,	4,	1391,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1925 = LWX
  { 1924,	3,	1,	4,	1128,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1924 = LWU_MM
  { 1923,	2,	1,	4,	1184,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #1923 = LWUPC
  { 1922,	3,	1,	2,	1123,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo298 },  // Inst #1922 = LWSP_MM
  { 1921,	4,	1,	4,	1127,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1921 = LWR_MM
  { 1920,	4,	1,	4,	1097,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1920 = LWRE_MM
  { 1919,	4,	1,	4,	451,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo295 },  // Inst #1919 = LWRE
  { 1918,	4,	1,	4,	1172,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo283 },  // Inst #1918 = LWR64
  { 1917,	4,	1,	4,	449,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1917 = LWR
  { 1916,	4,	2,	4,	1126,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo297 },  // Inst #1916 = LWP_MM
  { 1915,	2,	1,	4,	1151,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #1915 = LWPC_MMR6
  { 1914,	2,	1,	4,	447,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #1914 = LWPC
  { 1913,	3,	1,	4,	1125,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo110 },  // Inst #1913 = LWM32_MM
  { 1912,	3,	1,	2,	1149,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo296 },  // Inst #1912 = LWM16_MMR6
  { 1911,	3,	1,	2,	1125,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo296 },  // Inst #1911 = LWM16_MM
  { 1910,	4,	1,	4,	1124,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1910 = LWL_MM
  { 1909,	4,	1,	4,	1096,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1909 = LWLE_MM
  { 1908,	4,	1,	4,	450,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo295 },  // Inst #1908 = LWLE
  { 1907,	4,	1,	4,	1171,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo283 },  // Inst #1907 = LWL64
  { 1906,	4,	1,	4,	448,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo295 },  // Inst #1906 = LWL
  { 1905,	3,	1,	2,	1123,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo294 },  // Inst #1905 = LWGP_MM
  { 1904,	3,	1,	4,	1095,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1904 = LWE_MM
  { 1903,	3,	1,	4,	445,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1903 = LWE
  { 1902,	3,	1,	4,	1506,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo293 },  // Inst #1902 = LWDSP_MM
  { 1901,	3,	1,	4,	1343,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo293 },  // Inst #1901 = LWDSP
  { 1900,	3,	1,	4,	438,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo278 },  // Inst #1900 = LWC3
  { 1899,	3,	1,	4,	1083,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo276 },  // Inst #1899 = LWC2_R6
  { 1898,	3,	1,	4,	1150,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo277 },  // Inst #1898 = LWC2_MMR6
  { 1897,	3,	1,	4,	437,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo276 },  // Inst #1897 = LWC2
  { 1896,	3,	1,	4,	1298,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo292 },  // Inst #1896 = LWC1_MM
  { 1895,	3,	1,	4,	712,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo292 },  // Inst #1895 = LWC1
  { 1894,	3,	1,	4,	1170,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1894 = LW64
  { 1893,	3,	1,	2,	1123,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo273 },  // Inst #1893 = LW16_MM
  { 1892,	3,	1,	4,	435,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1892 = LW
  { 1891,	2,	1,	4,	749,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, OperandInfo114 },  // Inst #1891 = LUi_MM
  { 1890,	2,	1,	4,	841,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, OperandInfo112 },  // Inst #1890 = LUi64
  { 1889,	2,	1,	4,	365,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, OperandInfo114 },  // Inst #1889 = LUi
  { 1888,	3,	1,	4,	1297,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo285 },  // Inst #1888 = LUXC1_MM
  { 1887,	3,	1,	4,	714,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo285 },  // Inst #1887 = LUXC164
  { 1886,	3,	1,	4,	714,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x5ULL, nullptr, OperandInfo284 },  // Inst #1886 = LUXC1
  { 1885,	2,	1,	4,	791,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo114 },  // Inst #1885 = LUI_MMR6
  { 1884,	4,	1,	4,	733,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo180 },  // Inst #1884 = LSA_R6
  { 1883,	4,	1,	4,	790,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo180 },  // Inst #1883 = LSA_MMR6
  { 1882,	4,	1,	4,	513,	0,	0,	0, 0x6ULL, nullptr, OperandInfo180 },  // Inst #1882 = LSA
  { 1881,	3,	1,	4,	1082,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo290 },  // Inst #1881 = LL_R6
  { 1880,	3,	1,	4,	1148,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1880 = LL_MMR6
  { 1879,	3,	1,	4,	1122,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1879 = LL_MM
  { 1878,	3,	1,	4,	1098,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1878 = LLE_MM
  { 1877,	3,	1,	4,	446,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1877 = LLE
  { 1876,	3,	1,	4,	1186,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo291 },  // Inst #1876 = LLD_R6
  { 1875,	3,	1,	4,	1164,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1875 = LLD
  { 1874,	3,	1,	4,	1187,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo290 },  // Inst #1874 = LL64_R6
  { 1873,	3,	1,	4,	1164,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1873 = LL64
  { 1872,	3,	1,	4,	436,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1872 = LL
  { 1871,	2,	1,	2,	789,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo169 },  // Inst #1871 = LI16_MMR6
  { 1870,	2,	1,	2,	748,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo169 },  // Inst #1870 = LI16_MM
  { 1869,	3,	1,	4,	1120,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1869 = LHu_MM
  { 1868,	3,	1,	4,	1094,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1868 = LHuE_MM
  { 1867,	3,	1,	4,	444,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1867 = LHuE
  { 1866,	3,	1,	4,	1169,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1866 = LHu64
  { 1865,	3,	1,	4,	434,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1865 = LHu
  { 1864,	3,	1,	4,	1121,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1864 = LH_MM
  { 1863,	3,	1,	4,	1550,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1863 = LHX_MM
  { 1862,	3,	1,	4,	1390,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1862 = LHX
  { 1861,	3,	1,	2,	1120,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo273 },  // Inst #1861 = LHU16_MM
  { 1860,	3,	1,	4,	1093,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1860 = LHE_MM
  { 1859,	3,	1,	4,	443,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1859 = LHE
  { 1858,	3,	1,	4,	1168,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1858 = LH64
  { 1857,	3,	1,	4,	433,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1857 = LH
  { 1856,	3,	1,	4,	738,	0,	0,	0, 0x2ULL, nullptr, OperandInfo96 },  // Inst #1856 = LEA_ADDiu_MM
  { 1855,	3,	1,	4,	840,	0,	0,	0, 0x2ULL, nullptr, OperandInfo113 },  // Inst #1855 = LEA_ADDiu64
  { 1854,	3,	1,	4,	724,	0,	0,	0, 0x2ULL, nullptr, OperandInfo96 },  // Inst #1854 = LEA_ADDiu
  { 1853,	3,	1,	4,	715,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo289 },  // Inst #1853 = LD_W
  { 1852,	3,	1,	4,	715,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo288 },  // Inst #1852 = LD_H
  { 1851,	3,	1,	4,	715,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo287 },  // Inst #1851 = LD_D
  { 1850,	3,	1,	4,	715,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo286 },  // Inst #1850 = LD_B
  { 1849,	3,	1,	4,	711,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo285 },  // Inst #1849 = LDXC164
  { 1848,	3,	1,	4,	711,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo284 },  // Inst #1848 = LDXC1
  { 1847,	4,	1,	4,	1174,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo283 },  // Inst #1847 = LDR
  { 1846,	2,	1,	4,	1185,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo112 },  // Inst #1846 = LDPC
  { 1845,	4,	1,	4,	1173,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo283 },  // Inst #1845 = LDL
  { 1844,	2,	1,	4,	547,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, OperandInfo282 },  // Inst #1844 = LDI_W
  { 1843,	2,	1,	4,	547,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, OperandInfo281 },  // Inst #1843 = LDI_H
  { 1842,	2,	1,	4,	547,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, OperandInfo280 },  // Inst #1842 = LDI_D
  { 1841,	2,	1,	4,	547,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x6ULL, nullptr, OperandInfo279 },  // Inst #1841 = LDI_B
  { 1840,	3,	1,	4,	440,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo278 },  // Inst #1840 = LDC3
  { 1839,	3,	1,	4,	1081,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo276 },  // Inst #1839 = LDC2_R6
  { 1838,	3,	1,	4,	1147,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo277 },  // Inst #1838 = LDC2_MMR6
  { 1837,	3,	1,	4,	439,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo276 },  // Inst #1837 = LDC2
  { 1836,	3,	1,	4,	1296,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo275 },  // Inst #1836 = LDC1_MM_D64
  { 1835,	3,	1,	4,	1296,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo158 },  // Inst #1835 = LDC1_MM_D32
  { 1834,	3,	1,	4,	1339,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo275 },  // Inst #1834 = LDC1_D64_MMR6
  { 1833,	3,	1,	4,	710,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo275 },  // Inst #1833 = LDC164
  { 1832,	3,	1,	4,	710,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x5ULL, nullptr, OperandInfo158 },  // Inst #1832 = LDC1
  { 1831,	3,	1,	4,	1163,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1831 = LD
  { 1830,	3,	1,	4,	1118,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1830 = LBu_MM
  { 1829,	3,	1,	4,	1092,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1829 = LBuE_MM
  { 1828,	3,	1,	4,	442,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1828 = LBuE
  { 1827,	3,	1,	4,	1167,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1827 = LBu64
  { 1826,	3,	1,	4,	432,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1826 = LBu
  { 1825,	3,	1,	4,	1146,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1825 = LB_MMR6
  { 1824,	3,	1,	4,	1119,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1824 = LB_MM
  { 1823,	3,	1,	4,	1145,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1823 = LBU_MMR6
  { 1822,	3,	1,	4,	1549,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1822 = LBUX_MM
  { 1821,	3,	1,	4,	1389,	0,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, nullptr, OperandInfo274 },  // Inst #1821 = LBUX
  { 1820,	3,	1,	2,	1118,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo273 },  // Inst #1820 = LBU16_MM
  { 1819,	3,	1,	4,	1091,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1819 = LBE_MM
  { 1818,	3,	1,	4,	441,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo96 },  // Inst #1818 = LBE
  { 1817,	3,	1,	4,	1166,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo113 },  // Inst #1817 = LB64
  { 1816,	3,	1,	4,	431,	0,	0,	0|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad), 0x2ULL, nullptr, OperandInfo96 },  // Inst #1816 = LB
  { 1815,	1,	0,	2,	942,	0,	1,	0|(1ULL<<MCID::Call), 0x0ULL, ImplicitList3, OperandInfo272 },  // Inst #1815 = JumpLinkReg16
  { 1814,	1,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo272 },  // Inst #1814 = JrcRx16
  { 1813,	0,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #1813 = JrcRa16
  { 1812,	0,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #1812 = JrRa16
  { 1811,	1,	0,	6,	941,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, OperandInfo2 },  // Inst #1811 = JalB16
  { 1810,	1,	0,	6,	941,	0,	1,	0|(1ULL<<MCID::Call), 0x0ULL, ImplicitList3, OperandInfo2 },  // Inst #1810 = Jal16
  { 1809,	1,	0,	4,	955,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x13ULL, ImplicitList2, OperandInfo2 },  // Inst #1809 = J_MM
  { 1808,	1,	0,	4,	954,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, OperandInfo58 },  // Inst #1808 = JR_MM
  { 1807,	1,	0,	4,	934,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo58 },  // Inst #1807 = JR_HB_R6
  { 1806,	1,	0,	4,	1022,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo95 },  // Inst #1806 = JR_HB64_R6
  { 1805,	1,	0,	4,	1014,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, OperandInfo95 },  // Inst #1805 = JR_HB64
  { 1804,	1,	0,	4,	386,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, OperandInfo58 },  // Inst #1804 = JR_HB
  { 1803,	1,	0,	2,	993,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #1803 = JRCADDIUSP_MMR6
  { 1802,	1,	0,	2,	995,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #1802 = JRC16_MMR6
  { 1801,	1,	0,	2,	994,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #1801 = JRC16_MM
  { 1800,	1,	0,	2,	993,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #1800 = JRADDIUSP
  { 1799,	1,	0,	4,	1011,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, OperandInfo95 },  // Inst #1799 = JR64
  { 1798,	1,	0,	2,	954,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #1798 = JR16_MM
  { 1797,	1,	0,	4,	923,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, nullptr, OperandInfo58 },  // Inst #1797 = JR
  { 1796,	2,	0,	4,	992,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo114 },  // Inst #1796 = JIC_MMR6
  { 1795,	2,	0,	4,	1019,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo112 },  // Inst #1795 = JIC64
  { 1794,	2,	0,	4,	933,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo114 },  // Inst #1794 = JIC
  { 1793,	2,	0,	4,	1004,	0,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList3, OperandInfo114 },  // Inst #1793 = JIALC_MMR6
  { 1792,	2,	0,	4,	1021,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo112 },  // Inst #1792 = JIALC64
  { 1791,	2,	0,	4,	928,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo114 },  // Inst #1791 = JIALC
  { 1790,	1,	0,	4,	962,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, ImplicitList3, OperandInfo2 },  // Inst #1790 = JAL_MM
  { 1789,	1,	0,	4,	962,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, ImplicitList3, OperandInfo2 },  // Inst #1789 = JALX_MM
  { 1788,	1,	0,	4,	409,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, ImplicitList3, OperandInfo2 },  // Inst #1788 = JALX
  { 1787,	1,	0,	4,	961,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x3ULL, ImplicitList3, OperandInfo2 },  // Inst #1787 = JALS_MM
  { 1786,	2,	1,	4,	959,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, ImplicitList3, OperandInfo45 },  // Inst #1786 = JALR_MM
  { 1785,	2,	1,	4,	1013,	0,	0,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, OperandInfo122 },  // Inst #1785 = JALR_HB64
  { 1784,	2,	1,	4,	408,	0,	0,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x13ULL, nullptr, OperandInfo45 },  // Inst #1784 = JALR_HB
  { 1783,	2,	1,	4,	960,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList3, OperandInfo45 },  // Inst #1783 = JALRS_MM
  { 1782,	1,	0,	2,	960,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList3, OperandInfo58 },  // Inst #1782 = JALRS16_MM
  { 1781,	2,	1,	4,	1003,	0,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList3, OperandInfo45 },  // Inst #1781 = JALRC_MMR6
  { 1780,	2,	1,	4,	1002,	0,	0,	0|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::UnmodeledSideEffects), 0x3ULL, nullptr, OperandInfo45 },  // Inst #1780 = JALRC_HB_MMR6
  { 1779,	1,	0,	2,	1001,	0,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x0ULL, ImplicitList3, OperandInfo58 },  // Inst #1779 = JALRC16_MMR6
  { 1778,	2,	1,	4,	1012,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, ImplicitList3, OperandInfo122 },  // Inst #1778 = JALR64
  { 1777,	1,	0,	2,	959,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x0ULL, ImplicitList3, OperandInfo58 },  // Inst #1777 = JALR16_MM
  { 1776,	2,	1,	4,	407,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::UnmodeledSideEffects), 0x11ULL, ImplicitList3, OperandInfo45 },  // Inst #1776 = JALR
  { 1775,	1,	0,	4,	406,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call), 0x13ULL, ImplicitList3, OperandInfo2 },  // Inst #1775 = JAL
  { 1774,	1,	0,	4,	922,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x13ULL, ImplicitList2, OperandInfo2 },  // Inst #1774 = J
  { 1773,	5,	1,	4,	788,	0,	0,	0, 0x1ULL, nullptr, OperandInfo262 },  // Inst #1773 = INS_MMR6
  { 1772,	5,	1,	4,	747,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo262 },  // Inst #1772 = INS_MM
  { 1771,	3,	1,	4,	1548,	2,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList19, OperandInfo267 },  // Inst #1771 = INSV_MM
  { 1770,	5,	1,	4,	607,	0,	0,	0, 0x6ULL, nullptr, OperandInfo271 },  // Inst #1770 = INSVE_W
  { 1769,	5,	1,	4,	607,	0,	0,	0, 0x6ULL, nullptr, OperandInfo270 },  // Inst #1769 = INSVE_H
  { 1768,	5,	1,	4,	607,	0,	0,	0, 0x6ULL, nullptr, OperandInfo269 },  // Inst #1768 = INSVE_D
  { 1767,	5,	1,	4,	607,	0,	0,	0, 0x6ULL, nullptr, OperandInfo268 },  // Inst #1767 = INSVE_B
  { 1766,	3,	1,	4,	1353,	2,	0,	0|(1ULL<<MCID::MayLoad), 0x6ULL, ImplicitList19, OperandInfo267 },  // Inst #1766 = INSV
  { 1765,	4,	1,	4,	518,	0,	0,	0, 0x6ULL, nullptr, OperandInfo266 },  // Inst #1765 = INSERT_W
  { 1764,	4,	1,	4,	518,	0,	0,	0, 0x6ULL, nullptr, OperandInfo265 },  // Inst #1764 = INSERT_H
  { 1763,	4,	1,	4,	518,	0,	0,	0, 0x6ULL, nullptr, OperandInfo264 },  // Inst #1763 = INSERT_D
  { 1762,	4,	1,	4,	518,	0,	0,	0, 0x6ULL, nullptr, OperandInfo263 },  // Inst #1762 = INSERT_B
  { 1761,	5,	1,	4,	495,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo262 },  // Inst #1761 = INS
  { 1760,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1760 = ILVR_W
  { 1759,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1759 = ILVR_H
  { 1758,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1758 = ILVR_D
  { 1757,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1757 = ILVR_B
  { 1756,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1756 = ILVOD_W
  { 1755,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1755 = ILVOD_H
  { 1754,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1754 = ILVOD_D
  { 1753,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1753 = ILVOD_B
  { 1752,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1752 = ILVL_W
  { 1751,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1751 = ILVL_H
  { 1750,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1750 = ILVL_D
  { 1749,	3,	1,	4,	605,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1749 = ILVL_B
  { 1748,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1748 = ILVEV_W
  { 1747,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1747 = ILVEV_H
  { 1746,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1746 = ILVEV_D
  { 1745,	3,	1,	4,	606,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1745 = ILVEV_B
  { 1744,	1,	0,	4,	1069,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #1744 = HYPCALL_MM
  { 1743,	1,	0,	4,	420,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo2 },  // Inst #1743 = HYPCALL
  { 1742,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo239 },  // Inst #1742 = HSUB_U_W
  { 1741,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo238 },  // Inst #1741 = HSUB_U_H
  { 1740,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo237 },  // Inst #1740 = HSUB_U_D
  { 1739,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo239 },  // Inst #1739 = HSUB_S_W
  { 1738,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo238 },  // Inst #1738 = HSUB_S_H
  { 1737,	3,	1,	4,	616,	0,	0,	0, 0x6ULL, nullptr, OperandInfo237 },  // Inst #1737 = HSUB_S_D
  { 1736,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo239 },  // Inst #1736 = HADD_U_W
  { 1735,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo238 },  // Inst #1735 = HADD_U_H
  { 1734,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo237 },  // Inst #1734 = HADD_U_D
  { 1733,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo239 },  // Inst #1733 = HADD_S_W
  { 1732,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo238 },  // Inst #1732 = HADD_S_H
  { 1731,	3,	1,	4,	615,	0,	0,	0, 0x6ULL, nullptr, OperandInfo237 },  // Inst #1731 = HADD_S_D
  { 1730,	2,	0,	4,	1144,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #1730 = GINVT_MMR6
  { 1729,	2,	0,	4,	1090,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #1729 = GINVT
  { 1728,	1,	0,	4,	1143,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1728 = GINVI_MMR6
  { 1727,	1,	0,	4,	1089,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1727 = GINVI
  { 1726,	2,	1,	4,	595,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1726 = FTRUNC_U_W
  { 1725,	2,	1,	4,	595,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1725 = FTRUNC_U_D
  { 1724,	2,	1,	4,	595,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1724 = FTRUNC_S_W
  { 1723,	2,	1,	4,	595,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1723 = FTRUNC_S_D
  { 1722,	3,	1,	4,	594,	0,	0,	0, 0x6ULL, nullptr, OperandInfo255 },  // Inst #1722 = FTQ_W
  { 1721,	3,	1,	4,	594,	0,	0,	0, 0x6ULL, nullptr, OperandInfo254 },  // Inst #1721 = FTQ_H
  { 1720,	2,	1,	4,	592,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1720 = FTINT_U_W
  { 1719,	2,	1,	4,	592,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1719 = FTINT_U_D
  { 1718,	2,	1,	4,	592,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1718 = FTINT_S_W
  { 1717,	2,	1,	4,	592,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1717 = FTINT_S_D
  { 1716,	3,	1,	4,	576,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1716 = FSUN_W
  { 1715,	3,	1,	4,	576,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1715 = FSUN_D
  { 1714,	3,	1,	4,	575,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1714 = FSUNE_W
  { 1713,	3,	1,	4,	575,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1713 = FSUNE_D
  { 1712,	3,	1,	4,	574,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1712 = FSULT_W
  { 1711,	3,	1,	4,	574,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1711 = FSULT_D
  { 1710,	3,	1,	4,	573,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1710 = FSULE_W
  { 1709,	3,	1,	4,	573,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1709 = FSULE_D
  { 1708,	3,	1,	4,	572,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1708 = FSUEQ_W
  { 1707,	3,	1,	4,	572,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1707 = FSUEQ_D
  { 1706,	3,	1,	4,	664,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1706 = FSUB_W
  { 1705,	3,	1,	4,	1335,	0,	0,	0, 0x6ULL, nullptr, OperandInfo250 },  // Inst #1705 = FSUB_S_MMR6
  { 1704,	3,	1,	4,	1281,	0,	0,	0, 0x4ULL, nullptr, OperandInfo250 },  // Inst #1704 = FSUB_S_MM
  { 1703,	3,	1,	4,	636,	0,	0,	0, 0x4ULL, nullptr, OperandInfo250 },  // Inst #1703 = FSUB_S
  { 1702,	3,	1,	4,	635,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1702 = FSUB_PS64
  { 1701,	3,	1,	4,	1280,	0,	0,	0, 0x4ULL, nullptr, OperandInfo173 },  // Inst #1701 = FSUB_D64_MM
  { 1700,	3,	1,	4,	634,	0,	0,	0, 0x4ULL, nullptr, OperandInfo173 },  // Inst #1700 = FSUB_D64
  { 1699,	3,	1,	4,	1280,	0,	0,	0, 0x4ULL, nullptr, OperandInfo249 },  // Inst #1699 = FSUB_D32_MM
  { 1698,	3,	1,	4,	634,	0,	0,	0, 0x4ULL, nullptr, OperandInfo249 },  // Inst #1698 = FSUB_D32
  { 1697,	3,	1,	4,	664,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1697 = FSUB_D
  { 1696,	2,	1,	4,	660,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1696 = FSQRT_W
  { 1695,	2,	1,	4,	1286,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1695 = FSQRT_S_MM
  { 1694,	2,	1,	4,	648,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1694 = FSQRT_S
  { 1693,	2,	1,	4,	1287,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1693 = FSQRT_D64_MM
  { 1692,	2,	1,	4,	649,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1692 = FSQRT_D64
  { 1691,	2,	1,	4,	1287,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1691 = FSQRT_D32_MM
  { 1690,	2,	1,	4,	649,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1690 = FSQRT_D32
  { 1689,	2,	1,	4,	661,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1689 = FSQRT_D
  { 1688,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1688 = FSOR_W
  { 1687,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1687 = FSOR_D
  { 1686,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1686 = FSNE_W
  { 1685,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1685 = FSNE_D
  { 1684,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1684 = FSLT_W
  { 1683,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1683 = FSLT_D
  { 1682,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1682 = FSLE_W
  { 1681,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1681 = FSLE_D
  { 1680,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1680 = FSEQ_W
  { 1679,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1679 = FSEQ_D
  { 1678,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1678 = FSAF_W
  { 1677,	3,	1,	4,	571,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1677 = FSAF_D
  { 1676,	2,	1,	4,	651,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1676 = FRSQRT_W
  { 1675,	2,	1,	4,	651,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1675 = FRSQRT_D
  { 1674,	2,	1,	4,	593,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1674 = FRINT_W
  { 1673,	2,	1,	4,	593,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1673 = FRINT_D
  { 1672,	2,	1,	4,	650,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1672 = FRCP_W
  { 1671,	2,	1,	4,	650,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1671 = FRCP_D
  { 1670,	3,	2,	4,	1066,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1670 = FORK
  { 1669,	2,	1,	4,	1300,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1669 = FNEG_S_MMR6
  { 1668,	2,	1,	4,	1273,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1668 = FNEG_S_MM
  { 1667,	2,	1,	4,	537,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1667 = FNEG_S
  { 1666,	2,	1,	4,	1273,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1666 = FNEG_D64_MM
  { 1665,	2,	1,	4,	537,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1665 = FNEG_D64
  { 1664,	2,	1,	4,	1273,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1664 = FNEG_D32_MM
  { 1663,	2,	1,	4,	537,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1663 = FNEG_D32
  { 1662,	3,	1,	4,	662,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1662 = FMUL_W
  { 1661,	3,	1,	4,	1334,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1661 = FMUL_S_MMR6
  { 1660,	3,	1,	4,	1279,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo250 },  // Inst #1660 = FMUL_S_MM
  { 1659,	3,	1,	4,	633,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo250 },  // Inst #1659 = FMUL_S
  { 1658,	3,	1,	4,	632,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1658 = FMUL_PS64
  { 1657,	3,	1,	4,	1278,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1657 = FMUL_D64_MM
  { 1656,	3,	1,	4,	631,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1656 = FMUL_D64
  { 1655,	3,	1,	4,	1278,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo249 },  // Inst #1655 = FMUL_D32_MM
  { 1654,	3,	1,	4,	631,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo249 },  // Inst #1654 = FMUL_D32
  { 1653,	3,	1,	4,	662,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1653 = FMUL_D
  { 1652,	4,	1,	4,	657,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #1652 = FMSUB_W
  { 1651,	4,	1,	4,	657,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #1651 = FMSUB_D
  { 1650,	2,	1,	4,	1333,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1650 = FMOV_S_MMR6
  { 1649,	2,	1,	4,	1277,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo207 },  // Inst #1649 = FMOV_S_MM
  { 1648,	2,	1,	4,	536,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo207 },  // Inst #1648 = FMOV_S
  { 1647,	2,	1,	4,	1336,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1647 = FMOV_D_MMR6
  { 1646,	2,	1,	4,	1276,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1646 = FMOV_D64_MM
  { 1645,	2,	1,	4,	535,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo203 },  // Inst #1645 = FMOV_D64
  { 1644,	2,	1,	4,	1276,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1644 = FMOV_D32_MM
  { 1643,	2,	1,	4,	535,	0,	0,	0|(1ULL<<MCID::MoveReg), 0x4ULL, nullptr, OperandInfo248 },  // Inst #1643 = FMOV_D32
  { 1642,	3,	1,	4,	603,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1642 = FMIN_W
  { 1641,	3,	1,	4,	603,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1641 = FMIN_D
  { 1640,	3,	1,	4,	602,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1640 = FMIN_A_W
  { 1639,	3,	1,	4,	602,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1639 = FMIN_A_D
  { 1638,	3,	1,	4,	601,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1638 = FMAX_W
  { 1637,	3,	1,	4,	601,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1637 = FMAX_D
  { 1636,	3,	1,	4,	600,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1636 = FMAX_A_W
  { 1635,	3,	1,	4,	600,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1635 = FMAX_A_D
  { 1634,	4,	1,	4,	656,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #1634 = FMADD_W
  { 1633,	4,	1,	4,	656,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #1633 = FMADD_D
  { 1632,	2,	1,	4,	1310,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1632 = FLOOR_W_S_MMR6
  { 1631,	2,	1,	4,	1248,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1631 = FLOOR_W_S_MM
  { 1630,	2,	1,	4,	718,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1630 = FLOOR_W_S
  { 1629,	2,	1,	4,	1248,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1629 = FLOOR_W_MM
  { 1628,	2,	1,	4,	1310,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1628 = FLOOR_W_D_MMR6
  { 1627,	2,	1,	4,	718,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1627 = FLOOR_W_D64
  { 1626,	2,	1,	4,	718,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1626 = FLOOR_W_D32
  { 1625,	2,	1,	4,	1310,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1625 = FLOOR_L_S_MMR6
  { 1624,	2,	1,	4,	718,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1624 = FLOOR_L_S
  { 1623,	2,	1,	4,	1310,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1623 = FLOOR_L_D_MMR6
  { 1622,	2,	1,	4,	718,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1622 = FLOOR_L_D64
  { 1621,	2,	1,	4,	604,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1621 = FLOG2_W
  { 1620,	2,	1,	4,	604,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1620 = FLOG2_D
  { 1619,	2,	1,	4,	544,	0,	0,	0, 0x6ULL, nullptr, OperandInfo261 },  // Inst #1619 = FILL_W
  { 1618,	2,	1,	4,	544,	0,	0,	0, 0x6ULL, nullptr, OperandInfo260 },  // Inst #1618 = FILL_H
  { 1617,	2,	1,	4,	544,	0,	0,	0, 0x6ULL, nullptr, OperandInfo259 },  // Inst #1617 = FILL_D
  { 1616,	2,	1,	4,	544,	0,	0,	0, 0x6ULL, nullptr, OperandInfo258 },  // Inst #1616 = FILL_B
  { 1615,	2,	1,	4,	591,	0,	0,	0, 0x6ULL, nullptr, OperandInfo257 },  // Inst #1615 = FFQR_W
  { 1614,	2,	1,	4,	591,	0,	0,	0, 0x6ULL, nullptr, OperandInfo256 },  // Inst #1614 = FFQR_D
  { 1613,	2,	1,	4,	590,	0,	0,	0, 0x6ULL, nullptr, OperandInfo257 },  // Inst #1613 = FFQL_W
  { 1612,	2,	1,	4,	590,	0,	0,	0, 0x6ULL, nullptr, OperandInfo256 },  // Inst #1612 = FFQL_D
  { 1611,	2,	1,	4,	589,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1611 = FFINT_U_W
  { 1610,	2,	1,	4,	589,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1610 = FFINT_U_D
  { 1609,	2,	1,	4,	589,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1609 = FFINT_S_W
  { 1608,	2,	1,	4,	589,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1608 = FFINT_S_D
  { 1607,	2,	1,	4,	598,	0,	0,	0, 0x6ULL, nullptr, OperandInfo257 },  // Inst #1607 = FEXUPR_W
  { 1606,	2,	1,	4,	598,	0,	0,	0, 0x6ULL, nullptr, OperandInfo256 },  // Inst #1606 = FEXUPR_D
  { 1605,	2,	1,	4,	597,	0,	0,	0, 0x6ULL, nullptr, OperandInfo257 },  // Inst #1605 = FEXUPL_W
  { 1604,	2,	1,	4,	597,	0,	0,	0, 0x6ULL, nullptr, OperandInfo256 },  // Inst #1604 = FEXUPL_D
  { 1603,	3,	1,	4,	553,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1603 = FEXP2_W
  { 1602,	3,	1,	4,	553,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1602 = FEXP2_D
  { 1601,	3,	1,	4,	596,	0,	0,	0, 0x6ULL, nullptr, OperandInfo255 },  // Inst #1601 = FEXDO_W
  { 1600,	3,	1,	4,	596,	0,	0,	0, 0x6ULL, nullptr, OperandInfo254 },  // Inst #1600 = FEXDO_H
  { 1599,	3,	1,	4,	658,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1599 = FDIV_W
  { 1598,	3,	1,	4,	1337,	0,	0,	0, 0x6ULL, nullptr, OperandInfo250 },  // Inst #1598 = FDIV_S_MMR6
  { 1597,	3,	1,	4,	1284,	0,	0,	0, 0x4ULL, nullptr, OperandInfo250 },  // Inst #1597 = FDIV_S_MM
  { 1596,	3,	1,	4,	646,	0,	0,	0, 0x4ULL, nullptr, OperandInfo250 },  // Inst #1596 = FDIV_S
  { 1595,	3,	1,	4,	1285,	0,	0,	0, 0x4ULL, nullptr, OperandInfo173 },  // Inst #1595 = FDIV_D64_MM
  { 1594,	3,	1,	4,	647,	0,	0,	0, 0x4ULL, nullptr, OperandInfo173 },  // Inst #1594 = FDIV_D64
  { 1593,	3,	1,	4,	1285,	0,	0,	0, 0x4ULL, nullptr, OperandInfo249 },  // Inst #1593 = FDIV_D32_MM
  { 1592,	3,	1,	4,	647,	0,	0,	0, 0x4ULL, nullptr, OperandInfo249 },  // Inst #1592 = FDIV_D32
  { 1591,	3,	1,	4,	659,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1591 = FDIV_D
  { 1590,	3,	1,	4,	587,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1590 = FCUN_W
  { 1589,	3,	1,	4,	587,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1589 = FCUN_D
  { 1588,	3,	1,	4,	586,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1588 = FCUNE_W
  { 1587,	3,	1,	4,	586,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1587 = FCUNE_D
  { 1586,	3,	1,	4,	585,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1586 = FCULT_W
  { 1585,	3,	1,	4,	585,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1585 = FCULT_D
  { 1584,	3,	1,	4,	584,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1584 = FCULE_W
  { 1583,	3,	1,	4,	584,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1583 = FCULE_D
  { 1582,	3,	1,	4,	583,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1582 = FCUEQ_W
  { 1581,	3,	1,	4,	583,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1581 = FCUEQ_D
  { 1580,	3,	1,	4,	582,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1580 = FCOR_W
  { 1579,	3,	1,	4,	582,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1579 = FCOR_D
  { 1578,	3,	1,	4,	581,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1578 = FCNE_W
  { 1577,	3,	1,	4,	581,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1577 = FCNE_D
  { 1576,	3,	0,	4,	1265,	0,	1,	0, 0x44ULL, ImplicitList18, OperandInfo253 },  // Inst #1576 = FCMP_S32_MM
  { 1575,	3,	0,	4,	643,	0,	1,	0, 0x44ULL, ImplicitList18, OperandInfo253 },  // Inst #1575 = FCMP_S32
  { 1574,	3,	0,	4,	642,	0,	1,	0, 0x44ULL, ImplicitList18, OperandInfo252 },  // Inst #1574 = FCMP_D64
  { 1573,	3,	0,	4,	1266,	0,	1,	0, 0x44ULL, ImplicitList18, OperandInfo251 },  // Inst #1573 = FCMP_D32_MM
  { 1572,	3,	0,	4,	642,	0,	1,	0, 0x44ULL, ImplicitList18, OperandInfo251 },  // Inst #1572 = FCMP_D32
  { 1571,	3,	1,	4,	580,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1571 = FCLT_W
  { 1570,	3,	1,	4,	580,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1570 = FCLT_D
  { 1569,	3,	1,	4,	579,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1569 = FCLE_W
  { 1568,	3,	1,	4,	579,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1568 = FCLE_D
  { 1567,	2,	1,	4,	599,	0,	0,	0, 0x6ULL, nullptr, OperandInfo77 },  // Inst #1567 = FCLASS_W
  { 1566,	2,	1,	4,	599,	0,	0,	0, 0x6ULL, nullptr, OperandInfo76 },  // Inst #1566 = FCLASS_D
  { 1565,	3,	1,	4,	578,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1565 = FCEQ_W
  { 1564,	3,	1,	4,	578,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1564 = FCEQ_D
  { 1563,	3,	1,	4,	577,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1563 = FCAF_W
  { 1562,	3,	1,	4,	577,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1562 = FCAF_D
  { 1561,	3,	1,	4,	663,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1561 = FADD_W
  { 1560,	3,	1,	4,	1315,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo250 },  // Inst #1560 = FADD_S_MMR6
  { 1559,	3,	1,	4,	1275,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo250 },  // Inst #1559 = FADD_S_MM
  { 1558,	3,	1,	4,	630,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo250 },  // Inst #1558 = FADD_S
  { 1557,	3,	1,	4,	629,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1557 = FADD_PS64
  { 1556,	3,	1,	4,	1274,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1556 = FADD_D64_MM
  { 1555,	3,	1,	4,	628,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo173 },  // Inst #1555 = FADD_D64
  { 1554,	3,	1,	4,	1274,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo249 },  // Inst #1554 = FADD_D32_MM
  { 1553,	3,	1,	4,	628,	0,	0,	0|(1ULL<<MCID::Commutable), 0x4ULL, nullptr, OperandInfo249 },  // Inst #1553 = FADD_D32
  { 1552,	3,	1,	4,	663,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1552 = FADD_D
  { 1551,	2,	1,	4,	1272,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1551 = FABS_S_MM
  { 1550,	2,	1,	4,	530,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1550 = FABS_S
  { 1549,	2,	1,	4,	1271,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1549 = FABS_D64_MM
  { 1548,	2,	1,	4,	530,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1548 = FABS_D64
  { 1547,	2,	1,	4,	1271,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1547 = FABS_D32_MM
  { 1546,	2,	1,	4,	530,	0,	0,	0, 0x4ULL, nullptr, OperandInfo248 },  // Inst #1546 = FABS_D32
  { 1545,	4,	1,	4,	787,	0,	0,	0, 0x1ULL, nullptr, OperandInfo213 },  // Inst #1545 = EXT_MMR6
  { 1544,	4,	1,	4,	746,	0,	0,	0, 0x1ULL, nullptr, OperandInfo213 },  // Inst #1544 = EXT_MM
  { 1543,	4,	1,	4,	1204,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo211 },  // Inst #1543 = EXTS32
  { 1542,	4,	1,	4,	1204,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo211 },  // Inst #1542 = EXTS
  { 1541,	3,	1,	4,	1547,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1541 = EXTR_W_MM
  { 1540,	3,	1,	4,	1352,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1540 = EXTR_W
  { 1539,	3,	1,	4,	1546,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1539 = EXTR_S_H_MM
  { 1538,	3,	1,	4,	1351,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1538 = EXTR_S_H
  { 1537,	3,	1,	4,	1545,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1537 = EXTR_R_W_MM
  { 1536,	3,	1,	4,	1350,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1536 = EXTR_R_W
  { 1535,	3,	1,	4,	1544,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1535 = EXTR_RS_W_MM
  { 1534,	3,	1,	4,	1349,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo246 },  // Inst #1534 = EXTR_RS_W
  { 1533,	3,	1,	4,	1543,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1533 = EXTRV_W_MM
  { 1532,	3,	1,	4,	1348,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1532 = EXTRV_W
  { 1531,	3,	1,	4,	1542,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1531 = EXTRV_S_H_MM
  { 1530,	3,	1,	4,	1347,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1530 = EXTRV_S_H
  { 1529,	3,	1,	4,	1541,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1529 = EXTRV_R_W_MM
  { 1528,	3,	1,	4,	1346,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1528 = EXTRV_R_W
  { 1527,	3,	1,	4,	1540,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1527 = EXTRV_RS_W_MM
  { 1526,	3,	1,	4,	1345,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList17, OperandInfo247 },  // Inst #1526 = EXTRV_RS_W
  { 1525,	3,	1,	4,	1539,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList15, OperandInfo246 },  // Inst #1525 = EXTP_MM
  { 1524,	3,	1,	4,	1538,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList15, OperandInfo247 },  // Inst #1524 = EXTPV_MM
  { 1523,	3,	1,	4,	1387,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList15, OperandInfo247 },  // Inst #1523 = EXTPV
  { 1522,	3,	1,	4,	1537,	1,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList16, OperandInfo246 },  // Inst #1522 = EXTPDP_MM
  { 1521,	3,	1,	4,	1536,	1,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList16, OperandInfo247 },  // Inst #1521 = EXTPDPV_MM
  { 1520,	3,	1,	4,	1385,	1,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList16, OperandInfo247 },  // Inst #1520 = EXTPDPV
  { 1519,	3,	1,	4,	1386,	1,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList16, OperandInfo246 },  // Inst #1519 = EXTPDP
  { 1518,	3,	1,	4,	1388,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList15, OperandInfo246 },  // Inst #1518 = EXTP
  { 1517,	4,	1,	4,	494,	0,	0,	0, 0x1ULL, nullptr, OperandInfo213 },  // Inst #1517 = EXT
  { 1516,	1,	1,	4,	1046,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1516 = EVP_MMR6
  { 1515,	1,	1,	4,	1062,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1515 = EVPE
  { 1514,	1,	1,	4,	1025,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1514 = EVP
  { 1513,	0,	0,	4,	991,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1513 = ERET_MMR6
  { 1512,	0,	0,	4,	953,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1512 = ERET_MM
  { 1511,	0,	0,	4,	989,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1511 = ERETNC_MMR6
  { 1510,	0,	0,	4,	383,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1510 = ERETNC
  { 1509,	0,	0,	4,	381,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1509 = ERET
  { 1508,	1,	1,	4,	1061,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1508 = EMT
  { 1507,	1,	1,	4,	1049,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1507 = EI_MMR6
  { 1506,	1,	1,	4,	1032,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1506 = EI_MM
  { 1505,	1,	1,	4,	477,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1505 = EI
  { 1504,	0,	0,	4,	1050,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #1504 = EHB_MMR6
  { 1503,	0,	0,	4,	1033,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #1503 = EHB_MM
  { 1502,	0,	0,	4,	479,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, nullptr },  // Inst #1502 = EHB
  { 1501,	2,	0,	2,	877,	0,	2,	0, 0x0ULL, ImplicitList6, OperandInfo130 },  // Inst #1501 = DivuRxRy16
  { 1500,	2,	0,	2,	876,	0,	2,	0, 0x0ULL, ImplicitList6, OperandInfo130 },  // Inst #1500 = DivRxRy16
  { 1499,	1,	1,	4,	1047,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1499 = DVP_MMR6
  { 1498,	1,	1,	4,	1060,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1498 = DVPE
  { 1497,	1,	1,	4,	1026,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1497 = DVP
  { 1496,	2,	0,	4,	905,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList13, OperandInfo122 },  // Inst #1496 = DUDIV
  { 1495,	3,	1,	4,	839,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #1495 = DSUBu
  { 1494,	3,	1,	4,	838,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo71 },  // Inst #1494 = DSUB
  { 1493,	3,	1,	4,	837,	0,	0,	0, 0x1ULL, nullptr, OperandInfo244 },  // Inst #1493 = DSRLV
  { 1492,	3,	1,	4,	836,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo70 },  // Inst #1492 = DSRL32
  { 1491,	3,	1,	4,	835,	0,	0,	0, 0x1ULL, nullptr, OperandInfo70 },  // Inst #1491 = DSRL
  { 1490,	3,	1,	4,	834,	0,	0,	0, 0x1ULL, nullptr, OperandInfo244 },  // Inst #1490 = DSRAV
  { 1489,	3,	1,	4,	833,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo70 },  // Inst #1489 = DSRA32
  { 1488,	3,	1,	4,	832,	0,	0,	0, 0x1ULL, nullptr, OperandInfo70 },  // Inst #1488 = DSRA
  { 1487,	3,	1,	4,	831,	0,	0,	0, 0x1ULL, nullptr, OperandInfo244 },  // Inst #1487 = DSLLV
  { 1486,	2,	1,	4,	808,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo245 },  // Inst #1486 = DSLL64_32
  { 1485,	3,	1,	4,	830,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo70 },  // Inst #1485 = DSLL32
  { 1484,	3,	1,	4,	829,	0,	0,	0, 0x1ULL, nullptr, OperandInfo70 },  // Inst #1484 = DSLL
  { 1483,	2,	1,	4,	828,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #1483 = DSHD
  { 1482,	2,	0,	4,	904,	0,	2,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, ImplicitList13, OperandInfo122 },  // Inst #1482 = DSDIV
  { 1481,	2,	1,	4,	827,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #1481 = DSBH
  { 1480,	3,	1,	4,	826,	0,	0,	0, 0x1ULL, nullptr, OperandInfo244 },  // Inst #1480 = DROTRV
  { 1479,	3,	1,	4,	825,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo70 },  // Inst #1479 = DROTR32
  { 1478,	3,	1,	4,	824,	0,	0,	0, 0x1ULL, nullptr, OperandInfo70 },  // Inst #1478 = DROTR
  { 1477,	4,	1,	4,	1642,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1477 = DPS_W_PH_MMR2
  { 1476,	4,	1,	4,	1478,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1476 = DPS_W_PH
  { 1475,	4,	1,	4,	1645,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1475 = DPSX_W_PH_MMR2
  { 1474,	4,	1,	4,	1481,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1474 = DPSX_W_PH
  { 1473,	4,	1,	4,	1535,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1473 = DPSU_H_QBR_MM
  { 1472,	4,	1,	4,	1384,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1472 = DPSU_H_QBR
  { 1471,	4,	1,	4,	1534,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1471 = DPSU_H_QBL_MM
  { 1470,	4,	1,	4,	1383,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1470 = DPSU_H_QBL
  { 1469,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo242 },  // Inst #1469 = DPSUB_U_W
  { 1468,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo241 },  // Inst #1468 = DPSUB_U_H
  { 1467,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo240 },  // Inst #1467 = DPSUB_U_D
  { 1466,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo242 },  // Inst #1466 = DPSUB_S_W
  { 1465,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo241 },  // Inst #1465 = DPSUB_S_H
  { 1464,	4,	1,	4,	666,	0,	0,	0, 0x6ULL, nullptr, OperandInfo240 },  // Inst #1464 = DPSUB_S_D
  { 1463,	4,	1,	4,	1533,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1463 = DPSQ_S_W_PH_MM
  { 1462,	4,	1,	4,	1382,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1462 = DPSQ_S_W_PH
  { 1461,	4,	1,	4,	1532,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1461 = DPSQ_SA_L_W_MM
  { 1460,	4,	1,	4,	1381,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1460 = DPSQ_SA_L_W
  { 1459,	4,	1,	4,	1643,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1459 = DPSQX_S_W_PH_MMR2
  { 1458,	4,	1,	4,	1479,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1458 = DPSQX_S_W_PH
  { 1457,	4,	1,	4,	1644,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1457 = DPSQX_SA_W_PH_MMR2
  { 1456,	4,	1,	4,	1480,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1456 = DPSQX_SA_W_PH
  { 1455,	2,	1,	4,	1203,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #1455 = DPOP
  { 1454,	4,	1,	4,	1638,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1454 = DPA_W_PH_MMR2
  { 1453,	4,	1,	4,	1474,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1453 = DPA_W_PH
  { 1452,	4,	1,	4,	1641,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1452 = DPAX_W_PH_MMR2
  { 1451,	4,	1,	4,	1477,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1451 = DPAX_W_PH
  { 1450,	4,	1,	4,	1531,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1450 = DPAU_H_QBR_MM
  { 1449,	4,	1,	4,	1380,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1449 = DPAU_H_QBR
  { 1448,	4,	1,	4,	1530,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1448 = DPAU_H_QBL_MM
  { 1447,	4,	1,	4,	1379,	0,	0,	0, 0x6ULL, nullptr, OperandInfo243 },  // Inst #1447 = DPAU_H_QBL
  { 1446,	4,	1,	4,	1529,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1446 = DPAQ_S_W_PH_MM
  { 1445,	4,	1,	4,	1378,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1445 = DPAQ_S_W_PH
  { 1444,	4,	1,	4,	1528,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1444 = DPAQ_SA_L_W_MM
  { 1443,	4,	1,	4,	1377,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1443 = DPAQ_SA_L_W
  { 1442,	4,	1,	4,	1640,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1442 = DPAQX_S_W_PH_MMR2
  { 1441,	4,	1,	4,	1476,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1441 = DPAQX_S_W_PH
  { 1440,	4,	1,	4,	1639,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1440 = DPAQX_SA_W_PH_MMR2
  { 1439,	4,	1,	4,	1475,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList14, OperandInfo243 },  // Inst #1439 = DPAQX_SA_W_PH
  { 1438,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo242 },  // Inst #1438 = DPADD_U_W
  { 1437,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo241 },  // Inst #1437 = DPADD_U_H
  { 1436,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo240 },  // Inst #1436 = DPADD_U_D
  { 1435,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo242 },  // Inst #1435 = DPADD_S_W
  { 1434,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo241 },  // Inst #1434 = DPADD_S_H
  { 1433,	4,	1,	4,	665,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo240 },  // Inst #1433 = DPADD_S_D
  { 1432,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo239 },  // Inst #1432 = DOTP_U_W
  { 1431,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo238 },  // Inst #1431 = DOTP_U_H
  { 1430,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo237 },  // Inst #1430 = DOTP_U_D
  { 1429,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo239 },  // Inst #1429 = DOTP_S_W
  { 1428,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo238 },  // Inst #1428 = DOTP_S_H
  { 1427,	3,	1,	4,	667,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo237 },  // Inst #1427 = DOTP_S_D
  { 1426,	3,	1,	4,	914,	0,	0,	0, 0x6ULL, nullptr, OperandInfo71 },  // Inst #1426 = DMUL_R6
  { 1425,	3,	1,	4,	901,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo71 },  // Inst #1425 = DMULU
  { 1424,	2,	0,	4,	903,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList13, OperandInfo122 },  // Inst #1424 = DMULTu
  { 1423,	2,	0,	4,	902,	0,	2,	0|(1ULL<<MCID::Commutable), 0x1ULL, ImplicitList13, OperandInfo122 },  // Inst #1423 = DMULT
  { 1422,	3,	1,	4,	1209,	0,	5,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, ImplicitList12, OperandInfo71 },  // Inst #1422 = DMUL
  { 1421,	3,	1,	4,	913,	0,	0,	0, 0x6ULL, nullptr, OperandInfo71 },  // Inst #1421 = DMUHU
  { 1420,	3,	1,	4,	912,	0,	0,	0, 0x6ULL, nullptr, OperandInfo71 },  // Inst #1420 = DMUH
  { 1419,	3,	1,	4,	1068,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo235 },  // Inst #1419 = DMTGC0
  { 1418,	2,	2,	4,	1202,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo112 },  // Inst #1418 = DMTC2_OCTEON
  { 1417,	3,	1,	4,	1056,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo236 },  // Inst #1417 = DMTC2
  { 1416,	2,	1,	4,	1341,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo134 },  // Inst #1416 = DMTC1
  { 1415,	3,	1,	4,	1054,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo235 },  // Inst #1415 = DMTC0
  { 1414,	1,	1,	4,	1059,	0,	0,	0|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1414 = DMT
  { 1413,	3,	1,	4,	918,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo71 },  // Inst #1413 = DMODU
  { 1412,	3,	1,	4,	916,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo71 },  // Inst #1412 = DMOD
  { 1411,	3,	1,	4,	1067,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo232 },  // Inst #1411 = DMFGC0
  { 1410,	2,	2,	4,	1201,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo112 },  // Inst #1410 = DMFC2_OCTEON
  { 1409,	3,	1,	4,	1055,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo234 },  // Inst #1409 = DMFC2
  { 1408,	2,	1,	4,	1340,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::Bitcast), 0x4ULL, nullptr, OperandInfo233 },  // Inst #1408 = DMFC1
  { 1407,	3,	1,	4,	1053,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo232 },  // Inst #1407 = DMFC0
  { 1406,	4,	1,	4,	851,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo230 },  // Inst #1406 = DLSA_R6
  { 1405,	4,	1,	4,	851,	0,	0,	0, 0x6ULL, nullptr, OperandInfo230 },  // Inst #1405 = DLSA
  { 1404,	1,	1,	4,	1048,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1404 = DI_MMR6
  { 1403,	1,	1,	4,	1031,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1403 = DI_MM
  { 1402,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1402 = DIV_U_W
  { 1401,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1401 = DIV_U_H
  { 1400,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1400 = DIV_U_D
  { 1399,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1399 = DIV_U_B
  { 1398,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1398 = DIV_S_W
  { 1397,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1397 = DIV_S_H
  { 1396,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1396 = DIV_S_D
  { 1395,	3,	1,	4,	614,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1395 = DIV_S_B
  { 1394,	3,	1,	4,	899,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1394 = DIV_MMR6
  { 1393,	3,	1,	4,	898,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1393 = DIVU_MMR6
  { 1392,	3,	1,	4,	485,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1392 = DIVU
  { 1391,	3,	1,	4,	484,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1391 = DIV
  { 1390,	5,	1,	4,	823,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo231 },  // Inst #1390 = DINSU
  { 1389,	5,	1,	4,	823,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo231 },  // Inst #1389 = DINSM
  { 1388,	5,	1,	4,	823,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo231 },  // Inst #1388 = DINS
  { 1387,	1,	1,	4,	476,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo58 },  // Inst #1387 = DI
  { 1386,	4,	1,	4,	822,	0,	0,	0, 0x1ULL, nullptr, OperandInfo211 },  // Inst #1386 = DEXTU
  { 1385,	4,	1,	4,	822,	0,	0,	0, 0x1ULL, nullptr, OperandInfo211 },  // Inst #1385 = DEXTM
  { 1384,	4,	1,	4,	807,	0,	0,	0, 0x1ULL, nullptr, OperandInfo212 },  // Inst #1384 = DEXT64_32
  { 1383,	4,	1,	4,	822,	0,	0,	0, 0x1ULL, nullptr, OperandInfo211 },  // Inst #1383 = DEXT
  { 1382,	0,	0,	4,	988,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1382 = DERET_MMR6
  { 1381,	0,	0,	4,	952,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1381 = DERET_MM
  { 1380,	0,	0,	4,	380,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, nullptr },  // Inst #1380 = DERET
  { 1379,	3,	1,	4,	917,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo71 },  // Inst #1379 = DDIVU
  { 1378,	3,	1,	4,	915,	0,	0,	0|(1ULL<<MCID::UsesCustomInserter), 0x6ULL, nullptr, OperandInfo71 },  // Inst #1378 = DDIV
  { 1377,	2,	1,	4,	849,	0,	0,	0, 0x6ULL, nullptr, OperandInfo122 },  // Inst #1377 = DCLZ_R6
  { 1376,	2,	1,	4,	821,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #1376 = DCLZ
  { 1375,	2,	1,	4,	848,	0,	0,	0, 0x6ULL, nullptr, OperandInfo122 },  // Inst #1375 = DCLO_R6
  { 1374,	2,	1,	4,	820,	0,	0,	0, 0x1ULL, nullptr, OperandInfo122 },  // Inst #1374 = DCLO
  { 1373,	2,	1,	4,	850,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo122 },  // Inst #1373 = DBITSWAP
  { 1372,	3,	1,	4,	847,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo70 },  // Inst #1372 = DAUI
  { 1371,	3,	1,	4,	846,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo229 },  // Inst #1371 = DATI
  { 1370,	4,	1,	4,	844,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo230 },  // Inst #1370 = DALIGN
  { 1369,	3,	1,	4,	845,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo229 },  // Inst #1369 = DAHI
  { 1368,	3,	1,	4,	819,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #1368 = DADDu
  { 1367,	3,	1,	4,	818,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, OperandInfo70 },  // Inst #1367 = DADDiu
  { 1366,	3,	1,	4,	817,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo70 },  // Inst #1366 = DADDi
  { 1365,	3,	1,	4,	816,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo71 },  // Inst #1365 = DADD
  { 1364,	2,	0,	4,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #1364 = CmpiRxImmX16
  { 1363,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo183 },  // Inst #1363 = CmpiRxImm16
  { 1362,	2,	0,	2,	735,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo130 },  // Inst #1362 = CmpRxRy16
  { 1361,	3,	1,	4,	1260,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1361 = C_UN_S_MM
  { 1360,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1360 = C_UN_S
  { 1359,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1359 = C_UN_D64_MM
  { 1358,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1358 = C_UN_D64
  { 1357,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1357 = C_UN_D32_MM
  { 1356,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1356 = C_UN_D32
  { 1355,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1355 = C_ULT_S_MM
  { 1354,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1354 = C_ULT_S
  { 1353,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1353 = C_ULT_D64_MM
  { 1352,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1352 = C_ULT_D64
  { 1351,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1351 = C_ULT_D32_MM
  { 1350,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1350 = C_ULT_D32
  { 1349,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1349 = C_ULE_S_MM
  { 1348,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1348 = C_ULE_S
  { 1347,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1347 = C_ULE_D64_MM
  { 1346,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1346 = C_ULE_D64
  { 1345,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1345 = C_ULE_D32_MM
  { 1344,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1344 = C_ULE_D32
  { 1343,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1343 = C_UEQ_S_MM
  { 1342,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1342 = C_UEQ_S
  { 1341,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1341 = C_UEQ_D64_MM
  { 1340,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1340 = C_UEQ_D64
  { 1339,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1339 = C_UEQ_D32_MM
  { 1338,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1338 = C_UEQ_D32
  { 1337,	3,	1,	4,	1260,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1337 = C_SF_S_MM
  { 1336,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1336 = C_SF_S
  { 1335,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1335 = C_SF_D64_MM
  { 1334,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1334 = C_SF_D64
  { 1333,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1333 = C_SF_D32_MM
  { 1332,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1332 = C_SF_D32
  { 1331,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1331 = C_SEQ_S_MM
  { 1330,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1330 = C_SEQ_S
  { 1329,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1329 = C_SEQ_D64_MM
  { 1328,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1328 = C_SEQ_D64
  { 1327,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1327 = C_SEQ_D32_MM
  { 1326,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1326 = C_SEQ_D32
  { 1325,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1325 = C_OLT_S_MM
  { 1324,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1324 = C_OLT_S
  { 1323,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1323 = C_OLT_D64_MM
  { 1322,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1322 = C_OLT_D64
  { 1321,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1321 = C_OLT_D32_MM
  { 1320,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1320 = C_OLT_D32
  { 1319,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1319 = C_OLE_S_MM
  { 1318,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1318 = C_OLE_S
  { 1317,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1317 = C_OLE_D64_MM
  { 1316,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1316 = C_OLE_D64
  { 1315,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1315 = C_OLE_D32_MM
  { 1314,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1314 = C_OLE_D32
  { 1313,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1313 = C_NGT_S_MM
  { 1312,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1312 = C_NGT_S
  { 1311,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1311 = C_NGT_D64_MM
  { 1310,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1310 = C_NGT_D64
  { 1309,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1309 = C_NGT_D32_MM
  { 1308,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1308 = C_NGT_D32
  { 1307,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1307 = C_NGL_S_MM
  { 1306,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1306 = C_NGL_S
  { 1305,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1305 = C_NGL_D64_MM
  { 1304,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1304 = C_NGL_D64
  { 1303,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1303 = C_NGL_D32_MM
  { 1302,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1302 = C_NGL_D32
  { 1301,	3,	1,	4,	1264,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1301 = C_NGLE_S_MM
  { 1300,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1300 = C_NGLE_S
  { 1299,	3,	1,	4,	1263,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1299 = C_NGLE_D64_MM
  { 1298,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1298 = C_NGLE_D64
  { 1297,	3,	1,	4,	1263,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1297 = C_NGLE_D32_MM
  { 1296,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1296 = C_NGLE_D32
  { 1295,	3,	1,	4,	1262,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1295 = C_NGE_S_MM
  { 1294,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1294 = C_NGE_S
  { 1293,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1293 = C_NGE_D64_MM
  { 1292,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1292 = C_NGE_D64
  { 1291,	3,	1,	4,	1261,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1291 = C_NGE_D32_MM
  { 1290,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1290 = C_NGE_D32
  { 1289,	3,	1,	4,	1260,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1289 = C_LT_S_MM
  { 1288,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1288 = C_LT_S
  { 1287,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1287 = C_LT_D64_MM
  { 1286,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1286 = C_LT_D64
  { 1285,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1285 = C_LT_D32_MM
  { 1284,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1284 = C_LT_D32
  { 1283,	3,	1,	4,	1260,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1283 = C_LE_S_MM
  { 1282,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1282 = C_LE_S
  { 1281,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1281 = C_LE_D64_MM
  { 1280,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1280 = C_LE_D64
  { 1279,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1279 = C_LE_D32_MM
  { 1278,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1278 = C_LE_D32
  { 1277,	3,	1,	4,	1258,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1277 = C_F_S_MM
  { 1276,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1276 = C_F_S
  { 1275,	3,	1,	4,	1257,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1275 = C_F_D64_MM
  { 1274,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1274 = C_F_D64
  { 1273,	3,	1,	4,	1257,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1273 = C_F_D32_MM
  { 1272,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1272 = C_F_D32
  { 1271,	3,	1,	4,	1260,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1271 = C_EQ_S_MM
  { 1270,	3,	1,	4,	641,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo228 },  // Inst #1270 = C_EQ_S
  { 1269,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1269 = C_EQ_D64_MM
  { 1268,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo227 },  // Inst #1268 = C_EQ_D64
  { 1267,	3,	1,	4,	1259,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1267 = C_EQ_D32_MM
  { 1266,	3,	1,	4,	640,	0,	0,	0|(1ULL<<MCID::Compare)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x44ULL, nullptr, OperandInfo226 },  // Inst #1266 = C_EQ_D32
  { 1265,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1265 = CVT_W_S_MMR6
  { 1264,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1264 = CVT_W_S_MM
  { 1263,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1263 = CVT_W_S
  { 1262,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1262 = CVT_W_D64_MM
  { 1261,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1261 = CVT_W_D64
  { 1260,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1260 = CVT_W_D32_MM
  { 1259,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1259 = CVT_W_D32
  { 1258,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1258 = CVT_S_W_MMR6
  { 1257,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1257 = CVT_S_W_MM
  { 1256,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1256 = CVT_S_W
  { 1255,	2,	1,	4,	639,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1255 = CVT_S_PU64
  { 1254,	2,	1,	4,	639,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1254 = CVT_S_PL64
  { 1253,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1253 = CVT_S_L_MMR6
  { 1252,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1252 = CVT_S_L
  { 1251,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1251 = CVT_S_D64_MM
  { 1250,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1250 = CVT_S_D64
  { 1249,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1249 = CVT_S_D32_MM
  { 1248,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1248 = CVT_S_D32
  { 1247,	2,	1,	4,	1212,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1247 = CVT_PW_PS64
  { 1246,	3,	1,	4,	639,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo225 },  // Inst #1246 = CVT_PS_S64
  { 1245,	2,	1,	4,	1212,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1245 = CVT_PS_PW64
  { 1244,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1244 = CVT_L_S_MMR6
  { 1243,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1243 = CVT_L_S_MM
  { 1242,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1242 = CVT_L_S
  { 1241,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1241 = CVT_L_D_MMR6
  { 1240,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1240 = CVT_L_D64_MM
  { 1239,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1239 = CVT_L_D64
  { 1238,	2,	1,	4,	1307,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1238 = CVT_D_L_MMR6
  { 1237,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1237 = CVT_D64_W_MM
  { 1236,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1236 = CVT_D64_W
  { 1235,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1235 = CVT_D64_S_MM
  { 1234,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1234 = CVT_D64_S
  { 1233,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1233 = CVT_D64_L
  { 1232,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo224 },  // Inst #1232 = CVT_D32_W_MM
  { 1231,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo224 },  // Inst #1231 = CVT_D32_W
  { 1230,	2,	1,	4,	1246,	0,	0,	0, 0x4ULL, nullptr, OperandInfo224 },  // Inst #1230 = CVT_D32_S_MM
  { 1229,	2,	1,	4,	638,	0,	0,	0, 0x4ULL, nullptr, OperandInfo224 },  // Inst #1229 = CVT_D32_S
  { 1228,	2,	0,	4,	529,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo223 },  // Inst #1228 = CTCMSA
  { 1227,	2,	1,	4,	1058,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo222 },  // Inst #1227 = CTC2_MM
  { 1226,	2,	1,	4,	1295,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo221 },  // Inst #1226 = CTC1_MM
  { 1225,	2,	1,	4,	685,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo221 },  // Inst #1225 = CTC1
  { 1224,	3,	1,	4,	1192,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1224 = CRC32W
  { 1223,	3,	1,	4,	1191,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1223 = CRC32H
  { 1222,	3,	1,	4,	1196,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1222 = CRC32D
  { 1221,	3,	1,	4,	1195,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1221 = CRC32CW
  { 1220,	3,	1,	4,	1194,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1220 = CRC32CH
  { 1219,	3,	1,	4,	1197,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1219 = CRC32CD
  { 1218,	3,	1,	4,	1193,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1218 = CRC32CB
  { 1217,	3,	1,	4,	1190,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo72 },  // Inst #1217 = CRC32B
  { 1216,	3,	1,	4,	688,	0,	0,	0, 0x6ULL, nullptr, OperandInfo220 },  // Inst #1216 = COPY_U_W
  { 1215,	3,	1,	4,	688,	0,	0,	0, 0x6ULL, nullptr, OperandInfo219 },  // Inst #1215 = COPY_U_H
  { 1214,	3,	1,	4,	688,	0,	0,	0, 0x6ULL, nullptr, OperandInfo217 },  // Inst #1214 = COPY_U_B
  { 1213,	3,	1,	4,	689,	0,	0,	0, 0x6ULL, nullptr, OperandInfo220 },  // Inst #1213 = COPY_S_W
  { 1212,	3,	1,	4,	689,	0,	0,	0, 0x6ULL, nullptr, OperandInfo219 },  // Inst #1212 = COPY_S_H
  { 1211,	3,	1,	4,	689,	0,	0,	0, 0x6ULL, nullptr, OperandInfo218 },  // Inst #1211 = COPY_S_D
  { 1210,	3,	1,	4,	689,	0,	0,	0, 0x6ULL, nullptr, OperandInfo217 },  // Inst #1210 = COPY_S_B
  { 1209,	3,	1,	4,	1302,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1209 = CMP_UN_S_MMR6
  { 1208,	3,	1,	4,	558,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1208 = CMP_UN_S
  { 1207,	3,	1,	4,	1301,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1207 = CMP_UN_D_MMR6
  { 1206,	3,	1,	4,	557,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1206 = CMP_UN_D
  { 1205,	3,	1,	4,	1304,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1205 = CMP_ULT_S_MMR6
  { 1204,	3,	1,	4,	566,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1204 = CMP_ULT_S
  { 1203,	3,	1,	4,	1303,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1203 = CMP_ULT_D_MMR6
  { 1202,	3,	1,	4,	565,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1202 = CMP_ULT_D
  { 1201,	3,	1,	4,	1304,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1201 = CMP_ULE_S_MMR6
  { 1200,	3,	1,	4,	570,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1200 = CMP_ULE_S
  { 1199,	3,	1,	4,	1303,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1199 = CMP_ULE_D_MMR6
  { 1198,	3,	1,	4,	569,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1198 = CMP_ULE_D
  { 1197,	3,	1,	4,	1304,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1197 = CMP_UEQ_S_MMR6
  { 1196,	3,	1,	4,	560,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1196 = CMP_UEQ_S
  { 1195,	3,	1,	4,	1303,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1195 = CMP_UEQ_D_MMR6
  { 1194,	3,	1,	4,	559,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1194 = CMP_UEQ_D
  { 1193,	3,	1,	4,	1304,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1193 = CMP_SUN_S_MMR6
  { 1192,	3,	1,	4,	1688,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1192 = CMP_SUN_S
  { 1191,	3,	1,	4,	1303,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1191 = CMP_SUN_D_MMR6
  { 1190,	3,	1,	4,	1687,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1190 = CMP_SUN_D
  { 1189,	3,	1,	4,	1306,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1189 = CMP_SULT_S_MMR6
  { 1188,	3,	1,	4,	1686,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1188 = CMP_SULT_S
  { 1187,	3,	1,	4,	1305,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1187 = CMP_SULT_D_MMR6
  { 1186,	3,	1,	4,	1685,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1186 = CMP_SULT_D
  { 1185,	3,	1,	4,	1306,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1185 = CMP_SULE_S_MMR6
  { 1184,	3,	1,	4,	1684,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1184 = CMP_SULE_S
  { 1183,	3,	1,	4,	1305,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1183 = CMP_SULE_D_MMR6
  { 1182,	3,	1,	4,	1683,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1182 = CMP_SULE_D
  { 1181,	3,	1,	4,	1306,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1181 = CMP_SUEQ_S_MMR6
  { 1180,	3,	1,	4,	1682,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1180 = CMP_SUEQ_S
  { 1179,	3,	1,	4,	1305,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1179 = CMP_SUEQ_D_MMR6
  { 1178,	3,	1,	4,	1681,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1178 = CMP_SUEQ_D
  { 1177,	3,	1,	4,	1304,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1177 = CMP_SLT_S_MMR6
  { 1176,	3,	1,	4,	1680,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1176 = CMP_SLT_S
  { 1175,	3,	1,	4,	1303,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1175 = CMP_SLT_D_MMR6
  { 1174,	3,	1,	4,	1679,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1174 = CMP_SLT_D
  { 1173,	3,	1,	4,	1304,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1173 = CMP_SLE_S_MMR6
  { 1172,	3,	1,	4,	1678,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1172 = CMP_SLE_S
  { 1171,	3,	1,	4,	1303,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1171 = CMP_SLE_D_MMR6
  { 1170,	3,	1,	4,	1677,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1170 = CMP_SLE_D
  { 1169,	3,	1,	4,	1304,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1169 = CMP_SEQ_S_MMR6
  { 1168,	3,	1,	4,	1676,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1168 = CMP_SEQ_S
  { 1167,	3,	1,	4,	1303,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1167 = CMP_SEQ_D_MMR6
  { 1166,	3,	1,	4,	1675,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1166 = CMP_SEQ_D
  { 1165,	3,	1,	4,	1304,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1165 = CMP_SAF_S_MMR6
  { 1164,	3,	1,	4,	1674,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1164 = CMP_SAF_S
  { 1163,	3,	1,	4,	1303,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1163 = CMP_SAF_D_MMR6
  { 1162,	3,	1,	4,	1673,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1162 = CMP_SAF_D
  { 1161,	3,	1,	4,	1302,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1161 = CMP_LT_S_MMR6
  { 1160,	3,	1,	4,	564,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1160 = CMP_LT_S
  { 1159,	2,	0,	4,	1527,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1159 = CMP_LT_PH_MM
  { 1158,	2,	0,	4,	1376,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1158 = CMP_LT_PH
  { 1157,	3,	1,	4,	1301,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1157 = CMP_LT_D_MMR6
  { 1156,	3,	1,	4,	563,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1156 = CMP_LT_D
  { 1155,	3,	1,	4,	1302,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1155 = CMP_LE_S_MMR6
  { 1154,	3,	1,	4,	568,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1154 = CMP_LE_S
  { 1153,	2,	0,	4,	1526,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1153 = CMP_LE_PH_MM
  { 1152,	2,	0,	4,	1375,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1152 = CMP_LE_PH
  { 1151,	3,	1,	4,	1301,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1151 = CMP_LE_D_MMR6
  { 1150,	3,	1,	4,	567,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1150 = CMP_LE_D
  { 1149,	3,	1,	4,	1672,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1149 = CMP_F_S
  { 1148,	3,	1,	4,	1671,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1148 = CMP_F_D
  { 1147,	3,	1,	4,	1302,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1147 = CMP_EQ_S_MMR6
  { 1146,	3,	1,	4,	562,	0,	0,	0, 0x16ULL, nullptr, OperandInfo216 },  // Inst #1146 = CMP_EQ_S
  { 1145,	2,	0,	4,	1525,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1145 = CMP_EQ_PH_MM
  { 1144,	2,	0,	4,	1374,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1144 = CMP_EQ_PH
  { 1143,	3,	1,	4,	1301,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1143 = CMP_EQ_D_MMR6
  { 1142,	3,	1,	4,	561,	0,	0,	0, 0x16ULL, nullptr, OperandInfo215 },  // Inst #1142 = CMP_EQ_D
  { 1141,	3,	1,	4,	1302,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo216 },  // Inst #1141 = CMP_AF_S_MMR6
  { 1140,	3,	1,	4,	1301,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo215 },  // Inst #1140 = CMP_AF_D_MMR6
  { 1139,	2,	0,	4,	1524,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1139 = CMPU_LT_QB_MM
  { 1138,	2,	0,	4,	1373,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1138 = CMPU_LT_QB
  { 1137,	2,	0,	4,	1523,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1137 = CMPU_LE_QB_MM
  { 1136,	2,	0,	4,	1372,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1136 = CMPU_LE_QB
  { 1135,	2,	0,	4,	1522,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1135 = CMPU_EQ_QB_MM
  { 1134,	2,	0,	4,	1371,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo168 },  // Inst #1134 = CMPU_EQ_QB
  { 1133,	3,	1,	4,	1521,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1133 = CMPGU_LT_QB_MM
  { 1132,	3,	1,	4,	1370,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1132 = CMPGU_LT_QB
  { 1131,	3,	1,	4,	1520,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1131 = CMPGU_LE_QB_MM
  { 1130,	3,	1,	4,	1369,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1130 = CMPGU_LE_QB
  { 1129,	3,	1,	4,	1519,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1129 = CMPGU_EQ_QB_MM
  { 1128,	3,	1,	4,	1368,	0,	0,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo214 },  // Inst #1128 = CMPGU_EQ_QB
  { 1127,	3,	1,	4,	1637,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1127 = CMPGDU_LT_QB_MMR2
  { 1126,	3,	1,	4,	1473,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1126 = CMPGDU_LT_QB
  { 1125,	3,	1,	4,	1636,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1125 = CMPGDU_LE_QB_MMR2
  { 1124,	3,	1,	4,	1472,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1124 = CMPGDU_LE_QB
  { 1123,	3,	1,	4,	1635,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1123 = CMPGDU_EQ_QB_MMR2
  { 1122,	3,	1,	4,	1471,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList11, OperandInfo214 },  // Inst #1122 = CMPGDU_EQ_QB
  { 1121,	2,	1,	4,	732,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #1121 = CLZ_R6
  { 1120,	2,	1,	4,	786,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #1120 = CLZ_MMR6
  { 1119,	2,	1,	4,	745,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #1119 = CLZ_MM
  { 1118,	2,	1,	4,	475,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #1118 = CLZ
  { 1117,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1117 = CLT_U_W
  { 1116,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1116 = CLT_U_H
  { 1115,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1115 = CLT_U_D
  { 1114,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1114 = CLT_U_B
  { 1113,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1113 = CLT_S_W
  { 1112,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1112 = CLT_S_H
  { 1111,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1111 = CLT_S_D
  { 1110,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1110 = CLT_S_B
  { 1109,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1109 = CLTI_U_W
  { 1108,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1108 = CLTI_U_H
  { 1107,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1107 = CLTI_U_D
  { 1106,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1106 = CLTI_U_B
  { 1105,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1105 = CLTI_S_W
  { 1104,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1104 = CLTI_S_H
  { 1103,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1103 = CLTI_S_D
  { 1102,	3,	1,	4,	554,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1102 = CLTI_S_B
  { 1101,	2,	1,	4,	731,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #1101 = CLO_R6
  { 1100,	2,	1,	4,	785,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #1100 = CLO_MMR6
  { 1099,	2,	1,	4,	744,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #1099 = CLO_MM
  { 1098,	2,	1,	4,	474,	0,	0,	0, 0x1ULL, nullptr, OperandInfo45 },  // Inst #1098 = CLO
  { 1097,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1097 = CLE_U_W
  { 1096,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1096 = CLE_U_H
  { 1095,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1095 = CLE_U_D
  { 1094,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1094 = CLE_U_B
  { 1093,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1093 = CLE_S_W
  { 1092,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1092 = CLE_S_H
  { 1091,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1091 = CLE_S_D
  { 1090,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1090 = CLE_S_B
  { 1089,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1089 = CLEI_U_W
  { 1088,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1088 = CLEI_U_H
  { 1087,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1087 = CLEI_U_D
  { 1086,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1086 = CLEI_U_B
  { 1085,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1085 = CLEI_S_W
  { 1084,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1084 = CLEI_S_H
  { 1083,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1083 = CLEI_S_D
  { 1082,	3,	1,	4,	555,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1082 = CLEI_S_B
  { 1081,	2,	1,	4,	1314,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo207 },  // Inst #1081 = CLASS_S_MMR6
  { 1080,	2,	1,	4,	1227,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo207 },  // Inst #1080 = CLASS_S
  { 1079,	2,	1,	4,	1314,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo203 },  // Inst #1079 = CLASS_D_MMR6
  { 1078,	2,	1,	4,	1228,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo203 },  // Inst #1078 = CLASS_D
  { 1077,	4,	1,	4,	1200,	0,	0,	0, 0x1ULL, nullptr, OperandInfo213 },  // Inst #1077 = CINS_i32
  { 1076,	4,	1,	4,	1200,	0,	0,	0, 0x1ULL, nullptr, OperandInfo212 },  // Inst #1076 = CINS64_32
  { 1075,	4,	1,	4,	1200,	0,	0,	0, 0x1ULL, nullptr, OperandInfo211 },  // Inst #1075 = CINS32
  { 1074,	4,	1,	4,	1200,	0,	0,	0, 0x1ULL, nullptr, OperandInfo211 },  // Inst #1074 = CINS
  { 1073,	2,	1,	4,	529,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo210 },  // Inst #1073 = CFCMSA
  { 1072,	2,	1,	4,	1057,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo209 },  // Inst #1072 = CFC2_MM
  { 1071,	2,	1,	4,	1294,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo208 },  // Inst #1071 = CFC1_MM
  { 1070,	2,	1,	4,	694,	0,	0,	0|(1ULL<<MCID::MoveReg)|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo208 },  // Inst #1070 = CFC1
  { 1069,	3,	1,	4,	556,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #1069 = CEQ_W
  { 1068,	3,	1,	4,	556,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #1068 = CEQ_H
  { 1067,	3,	1,	4,	556,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #1067 = CEQ_D
  { 1066,	3,	1,	4,	556,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #1066 = CEQ_B
  { 1065,	3,	1,	4,	556,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1065 = CEQI_W
  { 1064,	3,	1,	4,	556,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1064 = CEQI_H
  { 1063,	3,	1,	4,	556,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1063 = CEQI_D
  { 1062,	3,	1,	4,	556,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1062 = CEQI_B
  { 1061,	2,	1,	4,	1311,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1061 = CEIL_W_S_MMR6
  { 1060,	2,	1,	4,	1247,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1060 = CEIL_W_S_MM
  { 1059,	2,	1,	4,	717,	0,	0,	0, 0x4ULL, nullptr, OperandInfo207 },  // Inst #1059 = CEIL_W_S
  { 1058,	2,	1,	4,	1247,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1058 = CEIL_W_MM
  { 1057,	2,	1,	4,	1311,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1057 = CEIL_W_D_MMR6
  { 1056,	2,	1,	4,	717,	0,	0,	0, 0x4ULL, nullptr, OperandInfo206 },  // Inst #1056 = CEIL_W_D64
  { 1055,	2,	1,	4,	717,	0,	0,	0, 0x4ULL, nullptr, OperandInfo205 },  // Inst #1055 = CEIL_W_D32
  { 1054,	2,	1,	4,	1311,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1054 = CEIL_L_S_MMR6
  { 1053,	2,	1,	4,	717,	0,	0,	0, 0x4ULL, nullptr, OperandInfo204 },  // Inst #1053 = CEIL_L_S
  { 1052,	2,	1,	4,	1311,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1052 = CEIL_L_D_MMR6
  { 1051,	2,	1,	4,	717,	0,	0,	0, 0x4ULL, nullptr, OperandInfo203 },  // Inst #1051 = CEIL_L_D64
  { 1050,	3,	0,	4,	1088,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1050 = CACHE_R6
  { 1049,	3,	0,	4,	1162,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1049 = CACHE_MMR6
  { 1048,	3,	0,	4,	1140,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1048 = CACHE_MM
  { 1047,	3,	0,	4,	1107,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1047 = CACHEE_MM
  { 1046,	3,	0,	4,	471,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1046 = CACHEE
  { 1045,	3,	0,	4,	470,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo202 },  // Inst #1045 = CACHE
  { 1044,	1,	0,	4,	939,	1,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo2 },  // Inst #1044 = BtnezX16
  { 1043,	1,	0,	2,	939,	1,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo2 },  // Inst #1043 = Btnez16
  { 1042,	1,	0,	4,	939,	1,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo2 },  // Inst #1042 = BteqzX16
  { 1041,	1,	0,	2,	939,	1,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo2 },  // Inst #1041 = Bteqz16
  { 1040,	0,	0,	2,	943,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #1040 = Break16
  { 1039,	2,	0,	4,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo201 },  // Inst #1039 = BnezRxImmX16
  { 1038,	2,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo201 },  // Inst #1038 = BnezRxImm16
  { 1037,	1,	0,	4,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo55 },  // Inst #1037 = BimmX16
  { 1036,	1,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo55 },  // Inst #1036 = Bimm16
  { 1035,	2,	0,	4,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo201 },  // Inst #1035 = BeqzRxImmX16
  { 1034,	2,	0,	2,	939,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo201 },  // Inst #1034 = BeqzRxImm16
  { 1033,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo200 },  // Inst #1033 = BZ_W
  { 1032,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo197 },  // Inst #1032 = BZ_V
  { 1031,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo199 },  // Inst #1031 = BZ_H
  { 1030,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo198 },  // Inst #1030 = BZ_D
  { 1029,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo197 },  // Inst #1029 = BZ_B
  { 1028,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #1028 = BSET_W
  { 1027,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #1027 = BSET_H
  { 1026,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #1026 = BSET_D
  { 1025,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #1025 = BSET_B
  { 1024,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #1024 = BSETI_W
  { 1023,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #1023 = BSETI_H
  { 1022,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #1022 = BSETI_D
  { 1021,	3,	1,	4,	520,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #1021 = BSETI_B
  { 1020,	4,	1,	4,	523,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #1020 = BSEL_V
  { 1019,	4,	1,	4,	523,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #1019 = BSELI_B
  { 1018,	2,	0,	4,	1007,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo7 },  // Inst #1018 = BREAK_MMR6
  { 1017,	2,	0,	4,	966,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo7 },  // Inst #1017 = BREAK_MM
  { 1016,	1,	0,	2,	1007,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #1016 = BREAK16_MMR6
  { 1015,	1,	0,	2,	966,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #1015 = BREAK16_MM
  { 1014,	2,	0,	4,	379,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo7 },  // Inst #1014 = BREAK
  { 1013,	1,	0,	4,	1518,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo55 },  // Inst #1013 = BPOSGE32_MM
  { 1012,	1,	0,	4,	1670,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo55 },  // Inst #1012 = BPOSGE32C_MMR3
  { 1011,	1,	0,	4,	1367,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo55 },  // Inst #1011 = BPOSGE32
  { 1010,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #1010 = BOVC_MMR6
  { 1009,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #1009 = BOVC
  { 1008,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo200 },  // Inst #1008 = BNZ_W
  { 1007,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo197 },  // Inst #1007 = BNZ_V
  { 1006,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo199 },  // Inst #1006 = BNZ_H
  { 1005,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo198 },  // Inst #1005 = BNZ_D
  { 1004,	2,	0,	4,	528,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList2, OperandInfo197 },  // Inst #1004 = BNZ_B
  { 1003,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #1003 = BNVC_MMR6
  { 1002,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #1002 = BNVC
  { 1001,	3,	0,	4,	951,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #1001 = BNE_MM
  { 1000,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #1000 = BNEZC_MMR6
  { 999,	2,	0,	4,	950,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, ImplicitList2, OperandInfo108 },  // Inst #999 = BNEZC_MM
  { 998,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #998 = BNEZC64
  { 997,	2,	0,	2,	986,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo191 },  // Inst #997 = BNEZC16_MMR6
  { 996,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #996 = BNEZC
  { 995,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #995 = BNEZALC_MMR6
  { 994,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #994 = BNEZALC
  { 993,	2,	0,	2,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo191 },  // Inst #993 = BNEZ16_MM
  { 992,	3,	0,	4,	377,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #992 = BNEL
  { 991,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #991 = BNEG_W
  { 990,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #990 = BNEG_H
  { 989,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #989 = BNEG_D
  { 988,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #988 = BNEG_B
  { 987,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #987 = BNEGI_W
  { 986,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #986 = BNEGI_H
  { 985,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #985 = BNEGI_D
  { 984,	3,	1,	4,	522,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #984 = BNEGI_B
  { 983,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #983 = BNEC_MMR6
  { 982,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #982 = BNEC64
  { 981,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #981 = BNEC
  { 980,	3,	0,	4,	1009,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo106 },  // Inst #980 = BNE64
  { 979,	3,	0,	4,	920,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #979 = BNE
  { 978,	4,	1,	4,	524,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #978 = BMZ_V
  { 977,	4,	1,	4,	524,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #977 = BMZI_B
  { 976,	4,	1,	4,	524,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #976 = BMNZ_V
  { 975,	4,	1,	4,	524,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #975 = BMNZI_B
  { 974,	2,	0,	4,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #974 = BLTZ_MM
  { 973,	2,	0,	4,	378,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #973 = BLTZL
  { 972,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo108 },  // Inst #972 = BLTZC_MMR6
  { 971,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #971 = BLTZC64
  { 970,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #970 = BLTZC
  { 969,	2,	0,	4,	958,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #969 = BLTZAL_MM
  { 968,	2,	0,	4,	957,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, ImplicitList3, OperandInfo108 },  // Inst #968 = BLTZALS_MM
  { 967,	2,	0,	4,	376,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #967 = BLTZALL
  { 966,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #966 = BLTZALC_MMR6
  { 965,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #965 = BLTZALC
  { 964,	2,	0,	4,	919,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #964 = BLTZAL
  { 963,	2,	0,	4,	1010,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo109 },  // Inst #963 = BLTZ64
  { 962,	2,	0,	4,	921,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #962 = BLTZ
  { 961,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #961 = BLTUC_MMR6
  { 960,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #960 = BLTUC64
  { 959,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #959 = BLTUC
  { 958,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #958 = BLTC_MMR6
  { 957,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #957 = BLTC64
  { 956,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #956 = BLTC
  { 955,	2,	0,	4,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #955 = BLEZ_MM
  { 954,	2,	0,	4,	378,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #954 = BLEZL
  { 953,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo108 },  // Inst #953 = BLEZC_MMR6
  { 952,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #952 = BLEZC64
  { 951,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #951 = BLEZC
  { 950,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #950 = BLEZALC_MMR6
  { 949,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #949 = BLEZALC
  { 948,	2,	0,	4,	1010,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo109 },  // Inst #948 = BLEZ64
  { 947,	2,	0,	4,	921,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #947 = BLEZ
  { 946,	2,	1,	4,	784,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #946 = BITSWAP_MMR6
  { 945,	2,	1,	4,	730,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo45 },  // Inst #945 = BITSWAP
  { 944,	2,	1,	4,	1517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #944 = BITREV_MM
  { 943,	2,	1,	4,	1366,	0,	0,	0, 0x6ULL, nullptr, OperandInfo45 },  // Inst #943 = BITREV
  { 942,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #942 = BINSR_W
  { 941,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #941 = BINSR_H
  { 940,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #940 = BINSR_D
  { 939,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #939 = BINSR_B
  { 938,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo195 },  // Inst #938 = BINSRI_W
  { 937,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo194 },  // Inst #937 = BINSRI_H
  { 936,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo193 },  // Inst #936 = BINSRI_D
  { 935,	4,	1,	4,	517,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #935 = BINSRI_B
  { 934,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo60 },  // Inst #934 = BINSL_W
  { 933,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo61 },  // Inst #933 = BINSL_H
  { 932,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo59 },  // Inst #932 = BINSL_D
  { 931,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo196 },  // Inst #931 = BINSL_B
  { 930,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo195 },  // Inst #930 = BINSLI_W
  { 929,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo194 },  // Inst #929 = BINSLI_H
  { 928,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo193 },  // Inst #928 = BINSLI_D
  { 927,	4,	1,	4,	516,	0,	0,	0, 0x6ULL, nullptr, OperandInfo192 },  // Inst #927 = BINSLI_B
  { 926,	2,	0,	4,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #926 = BGTZ_MM
  { 925,	2,	0,	4,	378,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #925 = BGTZL
  { 924,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo108 },  // Inst #924 = BGTZC_MMR6
  { 923,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #923 = BGTZC64
  { 922,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #922 = BGTZC
  { 921,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #921 = BGTZALC_MMR6
  { 920,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #920 = BGTZALC
  { 919,	2,	0,	4,	1010,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo109 },  // Inst #919 = BGTZ64
  { 918,	2,	0,	4,	921,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #918 = BGTZ
  { 917,	2,	0,	4,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #917 = BGEZ_MM
  { 916,	2,	0,	4,	378,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #916 = BGEZL
  { 915,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo108 },  // Inst #915 = BGEZC_MMR6
  { 914,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #914 = BGEZC64
  { 913,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #913 = BGEZC
  { 912,	2,	0,	4,	958,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #912 = BGEZAL_MM
  { 911,	2,	0,	4,	957,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, ImplicitList3, OperandInfo108 },  // Inst #911 = BGEZALS_MM
  { 910,	2,	0,	4,	376,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #910 = BGEZALL
  { 909,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #909 = BGEZALC_MMR6
  { 908,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #908 = BGEZALC
  { 907,	2,	0,	4,	925,	0,	1,	0|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList3, OperandInfo108 },  // Inst #907 = BGEZAL
  { 906,	2,	0,	4,	1010,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo109 },  // Inst #906 = BGEZ64
  { 905,	2,	0,	4,	921,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo108 },  // Inst #905 = BGEZ
  { 904,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #904 = BGEUC_MMR6
  { 903,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #903 = BGEUC64
  { 902,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #902 = BGEUC
  { 901,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #901 = BGEC_MMR6
  { 900,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #900 = BGEC64
  { 899,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #899 = BGEC
  { 898,	3,	0,	4,	951,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #898 = BEQ_MM
  { 897,	2,	0,	4,	987,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #897 = BEQZC_MMR6
  { 896,	2,	0,	4,	950,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, ImplicitList2, OperandInfo108 },  // Inst #896 = BEQZC_MM
  { 895,	2,	0,	4,	1018,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo109 },  // Inst #895 = BEQZC64
  { 894,	2,	0,	2,	986,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo191 },  // Inst #894 = BEQZC16_MMR6
  { 893,	2,	0,	4,	932,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo108 },  // Inst #893 = BEQZC
  { 892,	2,	0,	4,	1000,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo108 },  // Inst #892 = BEQZALC_MMR6
  { 891,	2,	0,	4,	927,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList3, OperandInfo108 },  // Inst #891 = BEQZALC
  { 890,	2,	0,	2,	949,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo191 },  // Inst #890 = BEQZ16_MM
  { 889,	3,	0,	4,	377,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #889 = BEQL
  { 888,	3,	0,	4,	985,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo57 },  // Inst #888 = BEQC_MMR6
  { 887,	3,	0,	4,	1017,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo106 },  // Inst #887 = BEQC64
  { 886,	3,	0,	4,	931,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x36ULL, ImplicitList2, OperandInfo57 },  // Inst #886 = BEQC
  { 885,	3,	0,	4,	1009,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo106 },  // Inst #885 = BEQ64
  { 884,	3,	0,	4,	920,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x12ULL, ImplicitList2, OperandInfo57 },  // Inst #884 = BEQ
  { 883,	1,	0,	4,	982,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x16ULL, nullptr, OperandInfo55 },  // Inst #883 = BC_MMR6
  { 882,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #882 = BCLR_W
  { 881,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #881 = BCLR_H
  { 880,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #880 = BCLR_D
  { 879,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #879 = BCLR_B
  { 878,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #878 = BCLRI_W
  { 877,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #877 = BCLRI_H
  { 876,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #876 = BCLRI_D
  { 875,	3,	1,	4,	521,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #875 = BCLRI_B
  { 874,	2,	0,	4,	984,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo190 },  // Inst #874 = BC2NEZC_MMR6
  { 873,	2,	0,	4,	930,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo190 },  // Inst #873 = BC2NEZ
  { 872,	2,	0,	4,	984,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList2, OperandInfo190 },  // Inst #872 = BC2EQZC_MMR6
  { 871,	2,	0,	4,	930,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo190 },  // Inst #871 = BC2EQZ
  { 870,	2,	0,	4,	948,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #870 = BC1T_MM
  { 869,	2,	0,	4,	693,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #869 = BC1TL
  { 868,	2,	0,	4,	692,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #868 = BC1T
  { 867,	2,	0,	4,	983,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo188 },  // Inst #867 = BC1NEZC_MMR6
  { 866,	2,	0,	4,	1231,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo188 },  // Inst #866 = BC1NEZ
  { 865,	2,	0,	4,	947,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #865 = BC1F_MM
  { 864,	2,	0,	4,	691,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #864 = BC1FL
  { 863,	2,	0,	4,	690,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x45ULL, ImplicitList2, OperandInfo189 },  // Inst #863 = BC1F
  { 862,	2,	0,	4,	983,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x12ULL, ImplicitList2, OperandInfo188 },  // Inst #862 = BC1EQZC_MMR6
  { 861,	2,	0,	4,	1231,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo188 },  // Inst #861 = BC1EQZ
  { 860,	1,	0,	2,	982,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #860 = BC16_MMR6
  { 859,	1,	0,	4,	929,	0,	0,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, nullptr, OperandInfo55 },  // Inst #859 = BC
  { 858,	3,	0,	4,	1199,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, ImplicitList2, OperandInfo187 },  // Inst #858 = BBIT132
  { 857,	3,	0,	4,	1199,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, ImplicitList2, OperandInfo187 },  // Inst #857 = BBIT1
  { 856,	3,	0,	4,	1199,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, ImplicitList2, OperandInfo187 },  // Inst #856 = BBIT032
  { 855,	3,	0,	4,	1199,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x2ULL, ImplicitList2, OperandInfo187 },  // Inst #855 = BBIT0
  { 854,	4,	1,	4,	1634,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #854 = BALIGN_MMR2
  { 853,	4,	1,	4,	1470,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #853 = BALIGN
  { 852,	1,	0,	4,	999,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo55 },  // Inst #852 = BALC_MMR6
  { 851,	1,	0,	4,	926,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo55 },  // Inst #851 = BALC
  { 850,	1,	0,	4,	375,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x16ULL, ImplicitList3, OperandInfo55 },  // Inst #850 = BAL
  { 849,	3,	1,	4,	1198,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #849 = BADDu
  { 848,	1,	0,	2,	945,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #848 = B16_MM
  { 847,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo186 },  // Inst #847 = AndRxRxRy16
  { 846,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo131 },  // Inst #846 = AdduRxRyRz16
  { 845,	1,	0,	4,	735,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, OperandInfo2 },  // Inst #845 = AddiuSpImmX16
  { 844,	1,	0,	2,	735,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, OperandInfo2 },  // Inst #844 = AddiuSpImm16
  { 843,	3,	1,	4,	735,	0,	0,	0, 0x0ULL, nullptr, OperandInfo185 },  // Inst #843 = AddiuRxRyOffMemX16
  { 842,	3,	1,	4,	735,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo184 },  // Inst #842 = AddiuRxRxImmX16
  { 841,	3,	1,	2,	735,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo184 },  // Inst #841 = AddiuRxRxImm16
  { 840,	2,	1,	4,	735,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo183 },  // Inst #840 = AddiuRxPcImmX16
  { 839,	2,	1,	4,	735,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo183 },  // Inst #839 = AddiuRxImmX16
  { 838,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #838 = AVE_U_W
  { 837,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #837 = AVE_U_H
  { 836,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #836 = AVE_U_D
  { 835,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #835 = AVE_U_B
  { 834,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #834 = AVE_S_W
  { 833,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #833 = AVE_S_H
  { 832,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #832 = AVE_S_D
  { 831,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #831 = AVE_S_B
  { 830,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #830 = AVER_U_W
  { 829,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #829 = AVER_U_H
  { 828,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #828 = AVER_U_D
  { 827,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #827 = AVER_U_B
  { 826,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #826 = AVER_S_W
  { 825,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #825 = AVER_S_H
  { 824,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #824 = AVER_S_D
  { 823,	3,	1,	4,	542,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #823 = AVER_S_B
  { 822,	3,	1,	4,	783,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo73 },  // Inst #822 = AUI_MMR6
  { 821,	2,	1,	4,	782,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #821 = AUIPC_MMR6
  { 820,	2,	1,	4,	729,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #820 = AUIPC
  { 819,	3,	1,	4,	728,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo73 },  // Inst #819 = AUI
  { 818,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #818 = ASUB_U_W
  { 817,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #817 = ASUB_U_H
  { 816,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #816 = ASUB_U_D
  { 815,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #815 = ASUB_U_B
  { 814,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo48 },  // Inst #814 = ASUB_S_W
  { 813,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo47 },  // Inst #813 = ASUB_S_H
  { 812,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo46 },  // Inst #812 = ASUB_S_D
  { 811,	3,	1,	4,	541,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #811 = ASUB_S_B
  { 810,	4,	1,	4,	1633,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #810 = APPEND_MMR2
  { 809,	4,	1,	4,	1469,	0,	0,	0, 0x6ULL, nullptr, OperandInfo182 },  // Inst #809 = APPEND
  { 808,	3,	1,	4,	743,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #808 = ANDi_MM
  { 807,	3,	1,	4,	806,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo70 },  // Inst #807 = ANDi64
  { 806,	3,	1,	4,	499,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #806 = ANDi
  { 805,	3,	1,	4,	548,	0,	0,	0, 0x6ULL, nullptr, OperandInfo174 },  // Inst #805 = AND_V
  { 804,	3,	1,	4,	780,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #804 = AND_MMR6
  { 803,	3,	1,	4,	742,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #803 = AND_MM
  { 802,	3,	1,	4,	781,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #802 = ANDI_MMR6
  { 801,	3,	1,	4,	549,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #801 = ANDI_B
  { 800,	3,	1,	2,	780,	0,	0,	0, 0x0ULL, nullptr, OperandInfo170 },  // Inst #800 = ANDI16_MMR6
  { 799,	3,	1,	2,	742,	0,	0,	0, 0x0ULL, nullptr, OperandInfo170 },  // Inst #799 = ANDI16_MM
  { 798,	3,	1,	4,	806,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo71 },  // Inst #798 = AND64
  { 797,	3,	1,	2,	780,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo181 },  // Inst #797 = AND16_MMR6
  { 796,	3,	1,	2,	742,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo181 },  // Inst #796 = AND16_MM
  { 795,	3,	1,	4,	364,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #795 = AND
  { 794,	2,	1,	4,	779,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #794 = ALUIPC_MMR6
  { 793,	2,	1,	4,	727,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #793 = ALUIPC
  { 792,	4,	1,	4,	778,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo180 },  // Inst #792 = ALIGN_MMR6
  { 791,	4,	1,	4,	726,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo180 },  // Inst #791 = ALIGN
  { 790,	3,	1,	4,	739,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #790 = ADDu_MM
  { 789,	3,	1,	4,	509,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable), 0x1ULL, nullptr, OperandInfo72 },  // Inst #789 = ADDu
  { 788,	3,	1,	4,	738,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #788 = ADDiu_MM
  { 787,	3,	1,	4,	498,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x2ULL, nullptr, OperandInfo73 },  // Inst #787 = ADDiu
  { 786,	3,	1,	4,	741,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo73 },  // Inst #786 = ADDi_MM
  { 785,	3,	1,	4,	497,	0,	0,	0|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo73 },  // Inst #785 = ADDi
  { 784,	3,	1,	4,	777,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #784 = ADD_MMR6
  { 783,	3,	1,	4,	740,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #783 = ADD_MM
  { 782,	3,	1,	4,	538,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #782 = ADD_A_W
  { 781,	3,	1,	4,	538,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #781 = ADD_A_H
  { 780,	3,	1,	4,	538,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #780 = ADD_A_D
  { 779,	3,	1,	4,	538,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #779 = ADD_A_B
  { 778,	3,	1,	4,	1516,	1,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList10, OperandInfo72 },  // Inst #778 = ADDWC_MM
  { 777,	3,	1,	4,	1365,	1,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList10, OperandInfo72 },  // Inst #777 = ADDWC
  { 776,	3,	1,	4,	540,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #776 = ADDV_W
  { 775,	3,	1,	4,	540,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #775 = ADDV_H
  { 774,	3,	1,	4,	540,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #774 = ADDV_D
  { 773,	3,	1,	4,	540,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #773 = ADDV_B
  { 772,	3,	1,	4,	540,	0,	0,	0, 0x6ULL, nullptr, OperandInfo179 },  // Inst #772 = ADDVI_W
  { 771,	3,	1,	4,	540,	0,	0,	0, 0x6ULL, nullptr, OperandInfo178 },  // Inst #771 = ADDVI_H
  { 770,	3,	1,	4,	540,	0,	0,	0, 0x6ULL, nullptr, OperandInfo177 },  // Inst #770 = ADDVI_D
  { 769,	3,	1,	4,	540,	0,	0,	0, 0x6ULL, nullptr, OperandInfo176 },  // Inst #769 = ADDVI_B
  { 768,	3,	1,	4,	1515,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #768 = ADDU_S_QB_MM
  { 767,	3,	1,	4,	1364,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #767 = ADDU_S_QB
  { 766,	3,	1,	4,	1632,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #766 = ADDU_S_PH_MMR2
  { 765,	3,	1,	4,	1468,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #765 = ADDU_S_PH
  { 764,	3,	1,	4,	1514,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #764 = ADDU_QB_MM
  { 763,	3,	1,	4,	1363,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #763 = ADDU_QB
  { 762,	3,	1,	4,	1631,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #762 = ADDU_PH_MMR2
  { 761,	3,	1,	4,	1467,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #761 = ADDU_PH
  { 760,	3,	1,	4,	776,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #760 = ADDU_MMR6
  { 759,	3,	1,	4,	1630,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #759 = ADDUH_R_QB_MMR2
  { 758,	3,	1,	4,	1466,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #758 = ADDUH_R_QB
  { 757,	3,	1,	4,	1629,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #757 = ADDUH_QB_MMR2
  { 756,	3,	1,	4,	1465,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #756 = ADDUH_QB
  { 755,	3,	1,	2,	776,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo175 },  // Inst #755 = ADDU16_MMR6
  { 754,	3,	1,	2,	739,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo175 },  // Inst #754 = ADDU16_MM
  { 753,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #753 = ADDS_U_W
  { 752,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #752 = ADDS_U_H
  { 751,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #751 = ADDS_U_D
  { 750,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #750 = ADDS_U_B
  { 749,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #749 = ADDS_S_W
  { 748,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #748 = ADDS_S_H
  { 747,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #747 = ADDS_S_D
  { 746,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #746 = ADDS_S_B
  { 745,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo48 },  // Inst #745 = ADDS_A_W
  { 744,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo47 },  // Inst #744 = ADDS_A_H
  { 743,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo46 },  // Inst #743 = ADDS_A_D
  { 742,	3,	1,	4,	539,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo174 },  // Inst #742 = ADDS_A_B
  { 741,	3,	1,	4,	1513,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList9, OperandInfo72 },  // Inst #741 = ADDSC_MM
  { 740,	3,	1,	4,	1362,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList9, OperandInfo72 },  // Inst #740 = ADDSC
  { 739,	3,	1,	4,	1211,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x4ULL, nullptr, OperandInfo173 },  // Inst #739 = ADDR_PS64
  { 738,	3,	1,	4,	1512,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo72 },  // Inst #738 = ADDQ_S_W_MM
  { 737,	3,	1,	4,	1361,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo72 },  // Inst #737 = ADDQ_S_W
  { 736,	3,	1,	4,	1511,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #736 = ADDQ_S_PH_MM
  { 735,	3,	1,	4,	1360,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #735 = ADDQ_S_PH
  { 734,	3,	1,	4,	1510,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #734 = ADDQ_PH_MM
  { 733,	3,	1,	4,	1359,	0,	1,	0|(1ULL<<MCID::Commutable), 0x6ULL, ImplicitList8, OperandInfo172 },  // Inst #733 = ADDQ_PH
  { 732,	3,	1,	4,	1628,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo72 },  // Inst #732 = ADDQH_W_MMR2
  { 731,	3,	1,	4,	1464,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo72 },  // Inst #731 = ADDQH_W
  { 730,	3,	1,	4,	1627,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo72 },  // Inst #730 = ADDQH_R_W_MMR2
  { 729,	3,	1,	4,	1463,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo72 },  // Inst #729 = ADDQH_R_W
  { 728,	3,	1,	4,	1626,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #728 = ADDQH_R_PH_MMR2
  { 727,	3,	1,	4,	1462,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #727 = ADDQH_R_PH
  { 726,	3,	1,	4,	1625,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #726 = ADDQH_PH_MMR2
  { 725,	3,	1,	4,	1461,	0,	0,	0|(1ULL<<MCID::Commutable), 0x6ULL, nullptr, OperandInfo172 },  // Inst #725 = ADDQH_PH
  { 724,	3,	1,	4,	775,	0,	0,	0|(1ULL<<MCID::Rematerializable), 0x2ULL, nullptr, OperandInfo73 },  // Inst #724 = ADDIU_MMR6
  { 723,	1,	0,	2,	738,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #723 = ADDIUSP_MM
  { 722,	3,	1,	2,	738,	0,	0,	0, 0x0ULL, nullptr, OperandInfo171 },  // Inst #722 = ADDIUS5_MM
  { 721,	3,	1,	2,	738,	0,	0,	0|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo170 },  // Inst #721 = ADDIUR2_MM
  { 720,	2,	1,	2,	738,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo169 },  // Inst #720 = ADDIUR1SP_MM
  { 719,	2,	1,	4,	774,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #719 = ADDIUPC_MMR6
  { 718,	2,	1,	4,	738,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo169 },  // Inst #718 = ADDIUPC_MM
  { 717,	2,	1,	4,	725,	0,	0,	0|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, nullptr, OperandInfo114 },  // Inst #717 = ADDIUPC
  { 716,	3,	1,	4,	496,	0,	0,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects), 0x1ULL, nullptr, OperandInfo72 },  // Inst #716 = ADD
  { 715,	2,	1,	4,	1509,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo45 },  // Inst #715 = ABSQ_S_W_MM
  { 714,	2,	1,	4,	1358,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo45 },  // Inst #714 = ABSQ_S_W
  { 713,	2,	1,	4,	1624,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo168 },  // Inst #713 = ABSQ_S_QB_MMR2
  { 712,	2,	1,	4,	1460,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo168 },  // Inst #712 = ABSQ_S_QB
  { 711,	2,	1,	4,	1508,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo168 },  // Inst #711 = ABSQ_S_PH_MM
  { 710,	2,	1,	4,	1357,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x6ULL, ImplicitList8, OperandInfo168 },  // Inst #710 = ABSQ_S_PH
  { 709,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo48 },  // Inst #709 = XOR_V_W_PSEUDO
  { 708,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo47 },  // Inst #708 = XOR_V_H_PSEUDO
  { 707,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo46 },  // Inst #707 = XOR_V_D_PSEUDO
  { 706,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #706 = Usw
  { 705,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #705 = Ush
  { 704,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #704 = Ulw
  { 703,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #703 = Ulhu
  { 702,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #702 = Ulh
  { 701,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #701 = URemMacro
  { 700,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #700 = URemIMacro
  { 699,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #699 = UDivMacro
  { 698,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #698 = UDivIMacro
  { 697,	3,	1,	4,	886,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo142 },  // Inst #697 = UDIV_MM_Pseudo
  { 696,	0,	0,	4,	981,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Trap)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #696 = TRAP_MM
  { 695,	0,	0,	4,	402,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Trap)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #695 = TRAP
  { 694,	1,	0,	4,	1006,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo2 },  // Inst #694 = TAILCALL_MMR6
  { 693,	1,	0,	4,	964,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo2 },  // Inst #693 = TAILCALL_MM
  { 692,	1,	0,	4,	1005,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #692 = TAILCALLREG_MMR6
  { 691,	1,	0,	4,	963,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #691 = TAILCALLREG_MM
  { 690,	1,	0,	4,	1015,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo95 },  // Inst #690 = TAILCALLREGHB64
  { 689,	1,	0,	4,	385,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #689 = TAILCALLREGHB
  { 688,	1,	0,	4,	1015,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo95 },  // Inst #688 = TAILCALLREG64
  { 687,	1,	0,	4,	385,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #687 = TAILCALLREG
  { 686,	1,	0,	4,	937,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #686 = TAILCALLR6REG
  { 685,	1,	0,	4,	937,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo58 },  // Inst #685 = TAILCALLHBR6REG
  { 684,	1,	0,	4,	1023,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo95 },  // Inst #684 = TAILCALLHB64R6REG
  { 683,	1,	0,	4,	1023,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::HasPostISelHook)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo95 },  // Inst #683 = TAILCALL64R6REG
  { 682,	1,	0,	4,	384,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, ImplicitList2, OperandInfo2 },  // Inst #682 = TAILCALL
  { 681,	3,	1,	2,	736,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList7, OperandInfo131 },  // Inst #681 = SltuRxRyRz16
  { 680,	3,	1,	2,	736,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo131 },  // Inst #680 = SltuCCRxRy16
  { 679,	3,	1,	2,	736,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo167 },  // Inst #679 = SltiuCCRxImmX16
  { 678,	3,	1,	2,	736,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo167 },  // Inst #678 = SltiCCRxImmX16
  { 677,	3,	1,	2,	736,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo131 },  // Inst #677 = SltCCRxRy16
  { 676,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #676 = SelTBtneZSltu
  { 675,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo166 },  // Inst #675 = SelTBtneZSltiu
  { 674,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo166 },  // Inst #674 = SelTBtneZSlti
  { 673,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #673 = SelTBtneZSlt
  { 672,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo166 },  // Inst #672 = SelTBtneZCmpi
  { 671,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #671 = SelTBtneZCmp
  { 670,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #670 = SelTBteqZSltu
  { 669,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo166 },  // Inst #669 = SelTBteqZSltiu
  { 668,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo166 },  // Inst #668 = SelTBteqZSlti
  { 667,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #667 = SelTBteqZSlt
  { 666,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo166 },  // Inst #666 = SelTBteqZCmpi
  { 665,	5,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo165 },  // Inst #665 = SelTBteqZCmp
  { 664,	4,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo164 },  // Inst #664 = SelBneZ
  { 663,	4,	1,	2,	944,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo164 },  // Inst #663 = SelBeqZ
  { 662,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo113 },  // Inst #662 = SaadAddr
  { 661,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo113 },  // Inst #661 = SaaAddr
  { 660,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo163 },  // Inst #660 = SZ_W_PSEUDO
  { 659,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo160 },  // Inst #659 = SZ_V_PSEUDO
  { 658,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo162 },  // Inst #658 = SZ_H_PSEUDO
  { 657,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo161 },  // Inst #657 = SZ_D_PSEUDO
  { 656,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo160 },  // Inst #656 = SZ_B_PSEUDO
  { 655,	3,	0,	4,	1136,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo110 },  // Inst #655 = SWM_MM
  { 654,	3,	0,	4,	705,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo99 },  // Inst #654 = ST_F16
  { 653,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo98 },  // Inst #653 = STR_W
  { 652,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo97 },  // Inst #652 = STR_D
  { 651,	3,	0,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo103 },  // Inst #651 = STORE_CCOND_DSP
  { 650,	3,	0,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo102 },  // Inst #650 = STORE_ACC64DSP
  { 649,	3,	0,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo101 },  // Inst #649 = STORE_ACC64
  { 648,	3,	0,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo100 },  // Inst #648 = STORE_ACC128
  { 647,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #647 = SRemMacro
  { 646,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #646 = SRemIMacro
  { 645,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo163 },  // Inst #645 = SNZ_W_PSEUDO
  { 644,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo160 },  // Inst #644 = SNZ_V_PSEUDO
  { 643,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo162 },  // Inst #643 = SNZ_H_PSEUDO
  { 642,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo161 },  // Inst #642 = SNZ_D_PSEUDO
  { 641,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo160 },  // Inst #641 = SNZ_B_PSEUDO
  { 640,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #640 = SNEMacro
  { 639,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #639 = SNEIMacro
  { 638,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #638 = SLTUImm64
  { 637,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #637 = SLTImm64
  { 636,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #636 = SLEUImm64
  { 635,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #635 = SLEUImm
  { 634,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #634 = SLEU
  { 633,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #633 = SLEImm64
  { 632,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #632 = SLEImm
  { 631,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #631 = SLE
  { 630,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #630 = SGTUImm64
  { 629,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #629 = SGTUImm
  { 628,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #628 = SGTImm64
  { 627,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #627 = SGTImm
  { 626,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #626 = SGEUImm64
  { 625,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #625 = SGEUImm
  { 624,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #624 = SGEU
  { 623,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #623 = SGEImm64
  { 622,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #622 = SGEImm
  { 621,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #621 = SGE
  { 620,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #620 = SEQMacro
  { 619,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #619 = SEQIMacro
  { 618,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo159 },  // Inst #618 = SDivMacro
  { 617,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #617 = SDivIMacro
  { 616,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #616 = SDMacro
  { 615,	3,	1,	4,	885,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo142 },  // Inst #615 = SDIV_MM_Pseudo
  { 614,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo158 },  // Inst #614 = SDC1_M1
  { 613,	0,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #613 = RetRA16
  { 612,	0,	0,	4,	382,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, nullptr },  // Inst #612 = RetRA
  { 611,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #611 = RORImm
  { 610,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #610 = ROR
  { 609,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #609 = ROLImm
  { 608,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #608 = ROL
  { 607,	3,	1,	4,	866,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo142 },  // Inst #607 = PseudoUDIV
  { 606,	3,	1,	4,	1214,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo157 },  // Inst #606 = PseudoTRUNC_W_S
  { 605,	3,	1,	4,	1214,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo156 },  // Inst #605 = PseudoTRUNC_W_D32
  { 604,	3,	1,	4,	1214,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo155 },  // Inst #604 = PseudoTRUNC_W_D
  { 603,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo154 },  // Inst #603 = PseudoSELECT_S
  { 602,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo153 },  // Inst #602 = PseudoSELECT_I64
  { 601,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo152 },  // Inst #601 = PseudoSELECT_I
  { 600,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo151 },  // Inst #600 = PseudoSELECT_D64
  { 599,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo150 },  // Inst #599 = PseudoSELECT_D32
  { 598,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo149 },  // Inst #598 = PseudoSELECTFP_T_S
  { 597,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo148 },  // Inst #597 = PseudoSELECTFP_T_I64
  { 596,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo147 },  // Inst #596 = PseudoSELECTFP_T_I
  { 595,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo146 },  // Inst #595 = PseudoSELECTFP_T_D64
  { 594,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo145 },  // Inst #594 = PseudoSELECTFP_T_D32
  { 593,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo149 },  // Inst #593 = PseudoSELECTFP_F_S
  { 592,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo148 },  // Inst #592 = PseudoSELECTFP_F_I64
  { 591,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo147 },  // Inst #591 = PseudoSELECTFP_F_I
  { 590,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo146 },  // Inst #590 = PseudoSELECTFP_F_D64
  { 589,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo145 },  // Inst #589 = PseudoSELECTFP_F_D32
  { 588,	3,	1,	4,	865,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo142 },  // Inst #588 = PseudoSDIV
  { 587,	1,	0,	4,	1016,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, OperandInfo95 },  // Inst #587 = PseudoReturn64
  { 586,	1,	0,	4,	388,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq), 0x10ULL, nullptr, OperandInfo58 },  // Inst #586 = PseudoReturn
  { 585,	4,	1,	4,	1459,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo144 },  // Inst #585 = PseudoPICK_QB
  { 584,	4,	1,	4,	1459,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo144 },  // Inst #584 = PseudoPICK_PH
  { 583,	3,	1,	4,	862,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo142 },  // Inst #583 = PseudoMULTu_MM
  { 582,	3,	1,	4,	864,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo142 },  // Inst #582 = PseudoMULTu
  { 581,	3,	1,	4,	861,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo142 },  // Inst #581 = PseudoMULT_MM
  { 580,	3,	1,	4,	863,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo142 },  // Inst #580 = PseudoMULT
  { 579,	3,	1,	4,	868,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo142 },  // Inst #579 = PseudoMTLOHI_MM
  { 578,	3,	1,	4,	1344,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo143 },  // Inst #578 = PseudoMTLOHI_DSP
  { 577,	3,	1,	4,	907,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo136 },  // Inst #577 = PseudoMTLOHI64
  { 576,	3,	1,	4,	493,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo142 },  // Inst #576 = PseudoMTLOHI
  { 575,	4,	1,	4,	859,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #575 = PseudoMSUB_MM
  { 574,	4,	1,	4,	860,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #574 = PseudoMSUBU_MM
  { 573,	4,	1,	4,	492,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #573 = PseudoMSUBU
  { 572,	4,	1,	4,	491,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #572 = PseudoMSUB
  { 571,	2,	1,	4,	867,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo140 },  // Inst #571 = PseudoMFLO_MM
  { 570,	2,	1,	4,	906,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo141 },  // Inst #570 = PseudoMFLO64
  { 569,	2,	1,	4,	478,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo140 },  // Inst #569 = PseudoMFLO
  { 568,	2,	1,	4,	867,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo140 },  // Inst #568 = PseudoMFHI_MM
  { 567,	2,	1,	4,	906,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo141 },  // Inst #567 = PseudoMFHI64
  { 566,	2,	1,	4,	478,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo140 },  // Inst #566 = PseudoMFHI
  { 565,	4,	1,	4,	857,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #565 = PseudoMADD_MM
  { 564,	4,	1,	4,	858,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #564 = PseudoMADDU_MM
  { 563,	4,	1,	4,	490,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #563 = PseudoMADDU
  { 562,	4,	1,	4,	489,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo139 },  // Inst #562 = PseudoMADD
  { 561,	1,	0,	4,	936,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #561 = PseudoIndrectHazardBranchR6
  { 560,	1,	0,	4,	1024,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo95 },  // Inst #560 = PseudoIndrectHazardBranch64R6
  { 559,	1,	0,	4,	1020,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo95 },  // Inst #559 = PseudoIndirectHazardBranch64
  { 558,	1,	0,	4,	387,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #558 = PseudoIndirectHazardBranch
  { 557,	1,	0,	4,	998,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #557 = PseudoIndirectBranch_MMR6
  { 556,	1,	0,	4,	965,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #556 = PseudoIndirectBranch_MM
  { 555,	1,	0,	4,	936,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #555 = PseudoIndirectBranchR6
  { 554,	1,	0,	4,	1024,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo95 },  // Inst #554 = PseudoIndirectBranch64R6
  { 553,	1,	0,	4,	1020,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo95 },  // Inst #553 = PseudoIndirectBranch64
  { 552,	1,	0,	4,	387,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, nullptr, OperandInfo58 },  // Inst #552 = PseudoIndirectBranch
  { 551,	7,	2,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo138 },  // Inst #551 = PseudoD_SELECT_I64
  { 550,	7,	2,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo137 },  // Inst #550 = PseudoD_SELECT_I
  { 549,	3,	1,	4,	905,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo136 },  // Inst #549 = PseudoDUDIV
  { 548,	3,	1,	4,	904,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo136 },  // Inst #548 = PseudoDSDIV
  { 547,	3,	1,	4,	903,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo136 },  // Inst #547 = PseudoDMULTu
  { 546,	3,	1,	4,	902,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo136 },  // Inst #546 = PseudoDMULT
  { 545,	2,	1,	4,	644,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, OperandInfo129 },  // Inst #545 = PseudoCVT_S_W
  { 544,	2,	1,	4,	644,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, OperandInfo134 },  // Inst #544 = PseudoCVT_S_L
  { 543,	2,	1,	4,	644,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, OperandInfo135 },  // Inst #543 = PseudoCVT_D64_W
  { 542,	2,	1,	4,	644,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, OperandInfo134 },  // Inst #542 = PseudoCVT_D64_L
  { 541,	2,	1,	4,	644,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x4ULL, nullptr, OperandInfo133 },  // Inst #541 = PseudoCVT_D32_W
  { 540,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #540 = PseudoCMP_LT_PH
  { 539,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #539 = PseudoCMP_LE_PH
  { 538,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #538 = PseudoCMP_EQ_PH
  { 537,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #537 = PseudoCMPU_LT_QB
  { 536,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #536 = PseudoCMPU_LE_QB
  { 535,	3,	1,	4,	1458,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo132 },  // Inst #535 = PseudoCMPU_EQ_QB
  { 534,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo48 },  // Inst #534 = OR_V_W_PSEUDO
  { 533,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo47 },  // Inst #533 = OR_V_H_PSEUDO
  { 532,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo46 },  // Inst #532 = OR_V_D_PSEUDO
  { 531,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo48 },  // Inst #531 = NOR_V_W_PSEUDO
  { 530,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo47 },  // Inst #530 = NOR_V_H_PSEUDO
  { 529,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo46 },  // Inst #529 = NOR_V_D_PSEUDO
  { 528,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #528 = NORImm64
  { 527,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #527 = NORImm
  { 526,	0,	0,	4,	373,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #526 = NOP
  { 525,	3,	1,	2,	875,	0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList6, OperandInfo131 },  // Inst #525 = MultuRxRyRz16
  { 524,	2,	0,	2,	875,	0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList6, OperandInfo130 },  // Inst #524 = MultuRxRy16
  { 523,	3,	1,	2,	875,	0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList6, OperandInfo131 },  // Inst #523 = MultRxRyRz16
  { 522,	2,	0,	2,	875,	0,	2,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, ImplicitList6, OperandInfo130 },  // Inst #522 = MultRxRy16
  { 521,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #521 = MULOUMacro
  { 520,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #520 = MULOMacro
  { 519,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #519 = MULImmMacro
  { 518,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo127 },  // Inst #518 = MTTLO
  { 517,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo127 },  // Inst #517 = MTTHI
  { 516,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo129 },  // Inst #516 = MTTHC1
  { 515,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo45 },  // Inst #515 = MTTGPR
  { 514,	1,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #514 = MTTDSP
  { 513,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo129 },  // Inst #513 = MTTC1
  { 512,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo128 },  // Inst #512 = MTTC0
  { 511,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo127 },  // Inst #511 = MTTACX
  { 510,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo126 },  // Inst #510 = MSA_FP_ROUND_W_PSEUDO
  { 509,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo125 },  // Inst #509 = MSA_FP_ROUND_D_PSEUDO
  { 508,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo124 },  // Inst #508 = MSA_FP_EXTEND_W_PSEUDO
  { 507,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo123 },  // Inst #507 = MSA_FP_EXTEND_D_PSEUDO
  { 506,	2,	0,	4,	1,	2,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList5, OperandInfo122 },  // Inst #506 = MIPSeh_return64
  { 505,	2,	0,	4,	1,	2,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList5, OperandInfo45 },  // Inst #505 = MIPSeh_return32
  { 504,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo119 },  // Inst #504 = MFTLO
  { 503,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo119 },  // Inst #503 = MFTHI
  { 502,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo121 },  // Inst #502 = MFTHC1
  { 501,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #501 = MFTGPR
  { 500,	1,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #500 = MFTDSP
  { 499,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo121 },  // Inst #499 = MFTC1
  { 498,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo120 },  // Inst #498 = MFTC0
  { 497,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo119 },  // Inst #497 = MFTACX
  { 496,	3,	1,	2,	737,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo118 },  // Inst #496 = LwConstant32
  { 495,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo114 },  // Inst #495 = LoadImmSingleGPR
  { 494,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo117 },  // Inst #494 = LoadImmSingleFGR
  { 493,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo114 },  // Inst #493 = LoadImmDoubleGPR
  { 492,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo116 },  // Inst #492 = LoadImmDoubleFGR_32
  { 491,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo115 },  // Inst #491 = LoadImmDoubleFGR
  { 490,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo112 },  // Inst #490 = LoadImm64
  { 489,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo114 },  // Inst #489 = LoadImm32
  { 488,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo113 },  // Inst #488 = LoadAddrReg64
  { 487,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #487 = LoadAddrReg32
  { 486,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo112 },  // Inst #486 = LoadAddrImm64
  { 485,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo111 },  // Inst #485 = LoadAddrImm32
  { 484,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo110 },  // Inst #484 = LWM_MM
  { 483,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo109 },  // Inst #483 = LONG_BRANCH_LUi2Op_64
  { 482,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo108 },  // Inst #482 = LONG_BRANCH_LUi2Op
  { 481,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo107 },  // Inst #481 = LONG_BRANCH_LUi
  { 480,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo106 },  // Inst #480 = LONG_BRANCH_DADDiu2Op
  { 479,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo105 },  // Inst #479 = LONG_BRANCH_DADDiu
  { 478,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo57 },  // Inst #478 = LONG_BRANCH_ADDiu2Op
  { 477,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo104 },  // Inst #477 = LONG_BRANCH_ADDiu
  { 476,	3,	1,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo103 },  // Inst #476 = LOAD_CCOND_DSP
  { 475,	3,	1,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo102 },  // Inst #475 = LOAD_ACC64DSP
  { 474,	3,	1,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo101 },  // Inst #474 = LOAD_ACC64
  { 473,	3,	1,	4,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::FoldableAsLoad)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects), 0x2ULL, nullptr, OperandInfo100 },  // Inst #473 = LOAD_ACC128
  { 472,	3,	1,	4,	716,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo99 },  // Inst #472 = LD_F16
  { 471,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo98 },  // Inst #471 = LDR_W
  { 470,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo97 },  // Inst #470 = LDR_D
  { 469,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo96 },  // Inst #469 = LDMacro
  { 468,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo45 },  // Inst #468 = JalTwoReg
  { 467,	1,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo58 },  // Inst #467 = JalOneReg
  { 466,	1,	0,	4,	990,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call), 0x10ULL, ImplicitList3, OperandInfo2 },  // Inst #466 = JAL_MMR6
  { 465,	1,	0,	4,	407,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, ImplicitList3, OperandInfo58 },  // Inst #465 = JALRPseudo
  { 464,	1,	0,	4,	407,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, ImplicitList3, OperandInfo58 },  // Inst #464 = JALRHBPseudo
  { 463,	1,	0,	4,	1012,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, ImplicitList3, OperandInfo95 },  // Inst #463 = JALRHB64Pseudo
  { 462,	1,	0,	4,	1012,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Call)|(1ULL<<MCID::HasPostISelHook), 0x10ULL, ImplicitList3, OperandInfo95 },  // Inst #462 = JALR64Pseudo
  { 461,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo94 },  // Inst #461 = INSERT_W_VIDX_PSEUDO
  { 460,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo93 },  // Inst #460 = INSERT_W_VIDX64_PSEUDO
  { 459,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo92 },  // Inst #459 = INSERT_H_VIDX_PSEUDO
  { 458,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo91 },  // Inst #458 = INSERT_H_VIDX64_PSEUDO
  { 457,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo90 },  // Inst #457 = INSERT_FW_VIDX_PSEUDO
  { 456,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo89 },  // Inst #456 = INSERT_FW_VIDX64_PSEUDO
  { 455,	4,	1,	4,	552,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo88 },  // Inst #455 = INSERT_FW_PSEUDO
  { 454,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo87 },  // Inst #454 = INSERT_FD_VIDX_PSEUDO
  { 453,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo86 },  // Inst #453 = INSERT_FD_VIDX64_PSEUDO
  { 452,	4,	1,	4,	552,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo85 },  // Inst #452 = INSERT_FD_PSEUDO
  { 451,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo84 },  // Inst #451 = INSERT_D_VIDX_PSEUDO
  { 450,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo83 },  // Inst #450 = INSERT_D_VIDX64_PSEUDO
  { 449,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo82 },  // Inst #449 = INSERT_B_VIDX_PSEUDO
  { 448,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo81 },  // Inst #448 = INSERT_B_VIDX64_PSEUDO
  { 447,	4,	2,	2,	737,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo80 },  // Inst #447 = GotPrologue16
  { 446,	2,	1,	4,	551,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo79 },  // Inst #446 = FILL_FW_PSEUDO
  { 445,	2,	1,	4,	551,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo78 },  // Inst #445 = FILL_FD_PSEUDO
  { 444,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo77 },  // Inst #444 = FEXP2_W_1_PSEUDO
  { 443,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo76 },  // Inst #443 = FEXP2_D_1_PSEUDO
  { 442,	2,	1,	4,	588,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo77 },  // Inst #442 = FABS_W
  { 441,	2,	1,	4,	588,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo76 },  // Inst #441 = FABS_D
  { 440,	3,	1,	4,	695,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo75 },  // Inst #440 = ExtractElementF64_64
  { 439,	3,	1,	4,	695,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo74 },  // Inst #439 = ExtractElementF64
  { 438,	0,	0,	4,	924,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, nullptr },  // Inst #438 = ERet
  { 437,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #437 = DURemMacro
  { 436,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #436 = DURemIMacro
  { 435,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #435 = DUDivMacro
  { 434,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #434 = DUDivIMacro
  { 433,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #433 = DSRemMacro
  { 432,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #432 = DSRemIMacro
  { 431,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #431 = DSDivMacro
  { 430,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #430 = DSDivIMacro
  { 429,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #429 = DRORImm
  { 428,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #428 = DROR
  { 427,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo73 },  // Inst #427 = DROLImm
  { 426,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo72 },  // Inst #426 = DROL
  { 425,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #425 = DMULOUMacro
  { 424,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #424 = DMULOMacro
  { 423,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo71 },  // Inst #423 = DMULMacro
  { 422,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo70 },  // Inst #422 = DMULImmMacro
  { 421,	1,	0,	2,	737,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #421 = Constant32
  { 420,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo69 },  // Inst #420 = CTTC1
  { 419,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo68 },  // Inst #419 = COPY_FW_PSEUDO
  { 418,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo67 },  // Inst #418 = COPY_FD_PSEUDO
  { 417,	3,	0,	2,	737,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, OperandInfo4 },  // Inst #417 = CONSTPOOL_ENTRY
  { 416,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo66 },  // Inst #416 = CFTC1
  { 415,	3,	1,	4,	686,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo65 },  // Inst #415 = BuildPairF64_64
  { 414,	3,	1,	4,	686,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo64 },  // Inst #414 = BuildPairF64
  { 413,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo62 },  // Inst #413 = BtnezT8SltuX16
  { 412,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo63 },  // Inst #412 = BtnezT8SltiuX16
  { 411,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo63 },  // Inst #411 = BtnezT8SltiX16
  { 410,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo62 },  // Inst #410 = BtnezT8SltX16
  { 409,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo63 },  // Inst #409 = BtnezT8CmpiX16
  { 408,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo62 },  // Inst #408 = BtnezT8CmpX16
  { 407,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo62 },  // Inst #407 = BteqzT8SltuX16
  { 406,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo63 },  // Inst #406 = BteqzT8SltiuX16
  { 405,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo63 },  // Inst #405 = BteqzT8SltiX16
  { 404,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo62 },  // Inst #404 = BteqzT8SltX16
  { 403,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo63 },  // Inst #403 = BteqzT8CmpiX16
  { 402,	3,	0,	2,	940,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo62 },  // Inst #402 = BteqzT8CmpX16
  { 401,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #401 = BneImm
  { 400,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #400 = BeqImm
  { 399,	1,	0,	4,	956,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo55 },  // Inst #399 = B_MM_Pseudo
  { 398,	1,	0,	4,	997,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo55 },  // Inst #398 = B_MMR6_Pseudo
  { 397,	1,	0,	4,	945,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList2, OperandInfo55 },  // Inst #397 = B_MM
  { 396,	4,	1,	4,	525,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo60 },  // Inst #396 = BSEL_W_PSEUDO
  { 395,	4,	1,	4,	525,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo61 },  // Inst #395 = BSEL_H_PSEUDO
  { 394,	4,	1,	4,	525,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo60 },  // Inst #394 = BSEL_FW_PSEUDO
  { 393,	4,	1,	4,	525,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo59 },  // Inst #393 = BSEL_FD_PSEUDO
  { 392,	4,	1,	4,	525,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo59 },  // Inst #392 = BSEL_D_PSEUDO
  { 391,	1,	1,	4,	1,	1,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, ImplicitList4, OperandInfo58 },  // Inst #391 = BPOSGE32_PSEUDO
  { 390,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #390 = BNELImmMacro
  { 389,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #389 = BLTULImmMacro
  { 388,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #388 = BLTUL
  { 387,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #387 = BLTUImmMacro
  { 386,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #386 = BLTU
  { 385,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #385 = BLTLImmMacro
  { 384,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #384 = BLTL
  { 383,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #383 = BLTImmMacro
  { 382,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #382 = BLT
  { 381,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #381 = BLEULImmMacro
  { 380,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #380 = BLEUL
  { 379,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #379 = BLEUImmMacro
  { 378,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #378 = BLEU
  { 377,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #377 = BLELImmMacro
  { 376,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #376 = BLEL
  { 375,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #375 = BLEImmMacro
  { 374,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #374 = BLE
  { 373,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #373 = BGTULImmMacro
  { 372,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #372 = BGTUL
  { 371,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #371 = BGTUImmMacro
  { 370,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #370 = BGTU
  { 369,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #369 = BGTLImmMacro
  { 368,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #368 = BGTL
  { 367,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #367 = BGTImmMacro
  { 366,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #366 = BGT
  { 365,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #365 = BGEULImmMacro
  { 364,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #364 = BGEUL
  { 363,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #363 = BGEUImmMacro
  { 362,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #362 = BGEU
  { 361,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #361 = BGELImmMacro
  { 360,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #360 = BGEL
  { 359,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #359 = BGEImmMacro
  { 358,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo57 },  // Inst #358 = BGE
  { 357,	3,	0,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, nullptr, OperandInfo56 },  // Inst #357 = BEQLImmMacro
  { 356,	1,	0,	4,	946,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, ImplicitList3, OperandInfo55 },  // Inst #356 = BAL_BR_MM
  { 355,	1,	0,	4,	919,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects), 0x10ULL, ImplicitList3, OperandInfo55 },  // Inst #355 = BAL_BR
  { 354,	1,	0,	4,	374,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::DelaySlot)|(1ULL<<MCID::Terminator), 0x10ULL, ImplicitList2, OperandInfo55 },  // Inst #354 = B
  { 353,	6,	1,	4,	721,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #353 = ATOMIC_SWAP_I8_POSTRA
  { 352,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #352 = ATOMIC_SWAP_I8
  { 351,	3,	1,	4,	721,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #351 = ATOMIC_SWAP_I64_POSTRA
  { 350,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #350 = ATOMIC_SWAP_I64
  { 349,	3,	1,	4,	721,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #349 = ATOMIC_SWAP_I32_POSTRA
  { 348,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #348 = ATOMIC_SWAP_I32
  { 347,	6,	1,	4,	721,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #347 = ATOMIC_SWAP_I16_POSTRA
  { 346,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #346 = ATOMIC_SWAP_I16
  { 345,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #345 = ATOMIC_LOAD_XOR_I8_POSTRA
  { 344,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #344 = ATOMIC_LOAD_XOR_I8
  { 343,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #343 = ATOMIC_LOAD_XOR_I64_POSTRA
  { 342,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #342 = ATOMIC_LOAD_XOR_I64
  { 341,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #341 = ATOMIC_LOAD_XOR_I32_POSTRA
  { 340,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #340 = ATOMIC_LOAD_XOR_I32
  { 339,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #339 = ATOMIC_LOAD_XOR_I16_POSTRA
  { 338,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #338 = ATOMIC_LOAD_XOR_I16
  { 337,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #337 = ATOMIC_LOAD_UMIN_I8_POSTRA
  { 336,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #336 = ATOMIC_LOAD_UMIN_I8
  { 335,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #335 = ATOMIC_LOAD_UMIN_I64_POSTRA
  { 334,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #334 = ATOMIC_LOAD_UMIN_I64
  { 333,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #333 = ATOMIC_LOAD_UMIN_I32_POSTRA
  { 332,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #332 = ATOMIC_LOAD_UMIN_I32
  { 331,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #331 = ATOMIC_LOAD_UMIN_I16_POSTRA
  { 330,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #330 = ATOMIC_LOAD_UMIN_I16
  { 329,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #329 = ATOMIC_LOAD_UMAX_I8_POSTRA
  { 328,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #328 = ATOMIC_LOAD_UMAX_I8
  { 327,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #327 = ATOMIC_LOAD_UMAX_I64_POSTRA
  { 326,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #326 = ATOMIC_LOAD_UMAX_I64
  { 325,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #325 = ATOMIC_LOAD_UMAX_I32_POSTRA
  { 324,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #324 = ATOMIC_LOAD_UMAX_I32
  { 323,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #323 = ATOMIC_LOAD_UMAX_I16_POSTRA
  { 322,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #322 = ATOMIC_LOAD_UMAX_I16
  { 321,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #321 = ATOMIC_LOAD_SUB_I8_POSTRA
  { 320,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #320 = ATOMIC_LOAD_SUB_I8
  { 319,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #319 = ATOMIC_LOAD_SUB_I64_POSTRA
  { 318,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #318 = ATOMIC_LOAD_SUB_I64
  { 317,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #317 = ATOMIC_LOAD_SUB_I32_POSTRA
  { 316,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #316 = ATOMIC_LOAD_SUB_I32
  { 315,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #315 = ATOMIC_LOAD_SUB_I16_POSTRA
  { 314,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #314 = ATOMIC_LOAD_SUB_I16
  { 313,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #313 = ATOMIC_LOAD_OR_I8_POSTRA
  { 312,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #312 = ATOMIC_LOAD_OR_I8
  { 311,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #311 = ATOMIC_LOAD_OR_I64_POSTRA
  { 310,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #310 = ATOMIC_LOAD_OR_I64
  { 309,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #309 = ATOMIC_LOAD_OR_I32_POSTRA
  { 308,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #308 = ATOMIC_LOAD_OR_I32
  { 307,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #307 = ATOMIC_LOAD_OR_I16_POSTRA
  { 306,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #306 = ATOMIC_LOAD_OR_I16
  { 305,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #305 = ATOMIC_LOAD_NAND_I8_POSTRA
  { 304,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #304 = ATOMIC_LOAD_NAND_I8
  { 303,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #303 = ATOMIC_LOAD_NAND_I64_POSTRA
  { 302,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #302 = ATOMIC_LOAD_NAND_I64
  { 301,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #301 = ATOMIC_LOAD_NAND_I32_POSTRA
  { 300,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #300 = ATOMIC_LOAD_NAND_I32
  { 299,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #299 = ATOMIC_LOAD_NAND_I16_POSTRA
  { 298,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #298 = ATOMIC_LOAD_NAND_I16
  { 297,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #297 = ATOMIC_LOAD_MIN_I8_POSTRA
  { 296,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #296 = ATOMIC_LOAD_MIN_I8
  { 295,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #295 = ATOMIC_LOAD_MIN_I64_POSTRA
  { 294,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #294 = ATOMIC_LOAD_MIN_I64
  { 293,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #293 = ATOMIC_LOAD_MIN_I32_POSTRA
  { 292,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #292 = ATOMIC_LOAD_MIN_I32
  { 291,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #291 = ATOMIC_LOAD_MIN_I16_POSTRA
  { 290,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #290 = ATOMIC_LOAD_MIN_I16
  { 289,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #289 = ATOMIC_LOAD_MAX_I8_POSTRA
  { 288,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #288 = ATOMIC_LOAD_MAX_I8
  { 287,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #287 = ATOMIC_LOAD_MAX_I64_POSTRA
  { 286,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #286 = ATOMIC_LOAD_MAX_I64
  { 285,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #285 = ATOMIC_LOAD_MAX_I32_POSTRA
  { 284,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #284 = ATOMIC_LOAD_MAX_I32
  { 283,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #283 = ATOMIC_LOAD_MAX_I16_POSTRA
  { 282,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #282 = ATOMIC_LOAD_MAX_I16
  { 281,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #281 = ATOMIC_LOAD_AND_I8_POSTRA
  { 280,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #280 = ATOMIC_LOAD_AND_I8
  { 279,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #279 = ATOMIC_LOAD_AND_I64_POSTRA
  { 278,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #278 = ATOMIC_LOAD_AND_I64
  { 277,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #277 = ATOMIC_LOAD_AND_I32_POSTRA
  { 276,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #276 = ATOMIC_LOAD_AND_I32
  { 275,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #275 = ATOMIC_LOAD_AND_I16_POSTRA
  { 274,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #274 = ATOMIC_LOAD_AND_I16
  { 273,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #273 = ATOMIC_LOAD_ADD_I8_POSTRA
  { 272,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #272 = ATOMIC_LOAD_ADD_I8
  { 271,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo54 },  // Inst #271 = ATOMIC_LOAD_ADD_I64_POSTRA
  { 270,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo54 },  // Inst #270 = ATOMIC_LOAD_ADD_I64
  { 269,	3,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo52 },  // Inst #269 = ATOMIC_LOAD_ADD_I32_POSTRA
  { 268,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #268 = ATOMIC_LOAD_ADD_I32
  { 267,	6,	1,	4,	723,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo53 },  // Inst #267 = ATOMIC_LOAD_ADD_I16_POSTRA
  { 266,	3,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo52 },  // Inst #266 = ATOMIC_LOAD_ADD_I16
  { 265,	7,	1,	4,	722,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo50 },  // Inst #265 = ATOMIC_CMP_SWAP_I8_POSTRA
  { 264,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo49 },  // Inst #264 = ATOMIC_CMP_SWAP_I8
  { 263,	4,	1,	4,	722,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo51 },  // Inst #263 = ATOMIC_CMP_SWAP_I64_POSTRA
  { 262,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo51 },  // Inst #262 = ATOMIC_CMP_SWAP_I64
  { 261,	4,	1,	4,	722,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo49 },  // Inst #261 = ATOMIC_CMP_SWAP_I32_POSTRA
  { 260,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo49 },  // Inst #260 = ATOMIC_CMP_SWAP_I32
  { 259,	7,	1,	4,	722,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo50 },  // Inst #259 = ATOMIC_CMP_SWAP_I16_POSTRA
  { 258,	4,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter), 0x0ULL, nullptr, OperandInfo49 },  // Inst #258 = ATOMIC_CMP_SWAP_I16
  { 257,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo48 },  // Inst #257 = AND_V_W_PSEUDO
  { 256,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo47 },  // Inst #256 = AND_V_H_PSEUDO
  { 255,	3,	1,	4,	550,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo46 },  // Inst #255 = AND_V_D_PSEUDO
  { 254,	2,	0,	4,	1,	1,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, OperandInfo10 },  // Inst #254 = ADJCALLSTACKUP
  { 253,	2,	0,	4,	1,	1,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, ImplicitList1, OperandInfo10 },  // Inst #253 = ADJCALLSTACKDOWN
  { 252,	2,	1,	4,	1,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo45 },  // Inst #252 = ABSMacro
  { 251,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo44 },  // Inst #251 = G_UBFX
  { 250,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo44 },  // Inst #250 = G_SBFX
  { 249,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #249 = G_VECREDUCE_UMIN
  { 248,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #248 = G_VECREDUCE_UMAX
  { 247,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #247 = G_VECREDUCE_SMIN
  { 246,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #246 = G_VECREDUCE_SMAX
  { 245,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #245 = G_VECREDUCE_XOR
  { 244,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #244 = G_VECREDUCE_OR
  { 243,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #243 = G_VECREDUCE_AND
  { 242,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #242 = G_VECREDUCE_MUL
  { 241,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #241 = G_VECREDUCE_ADD
  { 240,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #240 = G_VECREDUCE_FMIN
  { 239,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #239 = G_VECREDUCE_FMAX
  { 238,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #238 = G_VECREDUCE_FMUL
  { 237,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #237 = G_VECREDUCE_FADD
  { 236,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo40 },  // Inst #236 = G_VECREDUCE_SEQ_FMUL
  { 235,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo40 },  // Inst #235 = G_VECREDUCE_SEQ_FADD
  { 234,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo22 },  // Inst #234 = G_BZERO
  { 233,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo43 },  // Inst #233 = G_MEMSET
  { 232,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo43 },  // Inst #232 = G_MEMMOVE
  { 231,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo40 },  // Inst #231 = G_MEMCPY_INLINE
  { 230,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo43 },  // Inst #230 = G_MEMCPY
  { 229,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo42 },  // Inst #229 = G_WRITE_REGISTER
  { 228,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo21 },  // Inst #228 = G_READ_REGISTER
  { 227,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo25 },  // Inst #227 = G_STRICT_FSQRT
  { 226,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo19 },  // Inst #226 = G_STRICT_FMA
  { 225,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo18 },  // Inst #225 = G_STRICT_FREM
  { 224,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo18 },  // Inst #224 = G_STRICT_FDIV
  { 223,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo18 },  // Inst #223 = G_STRICT_FMUL
  { 222,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo18 },  // Inst #222 = G_STRICT_FSUB
  { 221,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo18 },  // Inst #221 = G_STRICT_FADD
  { 220,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo26 },  // Inst #220 = G_DYN_STACKALLOC
  { 219,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #219 = G_JUMP_TABLE
  { 218,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #218 = G_BLOCK_ADDR
  { 217,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #217 = G_ADDRSPACE_CAST
  { 216,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #216 = G_FNEARBYINT
  { 215,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #215 = G_FRINT
  { 214,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #214 = G_FFLOOR
  { 213,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #213 = G_FSQRT
  { 212,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #212 = G_FSIN
  { 211,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #211 = G_FCOS
  { 210,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #210 = G_FCEIL
  { 209,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #209 = G_BITREVERSE
  { 208,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #208 = G_BSWAP
  { 207,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #207 = G_CTPOP
  { 206,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #206 = G_CTLZ_ZERO_UNDEF
  { 205,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #205 = G_CTLZ
  { 204,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #204 = G_CTTZ_ZERO_UNDEF
  { 203,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #203 = G_CTTZ
  { 202,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo41 },  // Inst #202 = G_SHUFFLE_VECTOR
  { 201,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo40 },  // Inst #201 = G_EXTRACT_VECTOR_ELT
  { 200,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo39 },  // Inst #200 = G_INSERT_VECTOR_ELT
  { 199,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo38 },  // Inst #199 = G_BRJT
  { 198,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo2 },  // Inst #198 = G_BR
  { 197,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #197 = G_LLROUND
  { 196,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #196 = G_LROUND
  { 195,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #195 = G_ABS
  { 194,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #194 = G_UMAX
  { 193,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #193 = G_UMIN
  { 192,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #192 = G_SMAX
  { 191,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #191 = G_SMIN
  { 190,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #190 = G_PTRMASK
  { 189,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #189 = G_PTR_ADD
  { 188,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #188 = G_FMAXIMUM
  { 187,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #187 = G_FMINIMUM
  { 186,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #186 = G_FMAXNUM_IEEE
  { 185,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #185 = G_FMINNUM_IEEE
  { 184,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #184 = G_FMAXNUM
  { 183,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #183 = G_FMINNUM
  { 182,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #182 = G_FCANONICALIZE
  { 181,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo32 },  // Inst #181 = G_IS_FPCLASS
  { 180,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #180 = G_FCOPYSIGN
  { 179,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #179 = G_FABS
  { 178,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #178 = G_UITOFP
  { 177,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #177 = G_SITOFP
  { 176,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #176 = G_FPTOUI
  { 175,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #175 = G_FPTOSI
  { 174,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #174 = G_FPTRUNC
  { 173,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #173 = G_FPEXT
  { 172,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #172 = G_FNEG
  { 171,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #171 = G_FLOG10
  { 170,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #170 = G_FLOG2
  { 169,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #169 = G_FLOG
  { 168,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #168 = G_FEXP2
  { 167,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #167 = G_FEXP
  { 166,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #166 = G_FPOWI
  { 165,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #165 = G_FPOW
  { 164,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #164 = G_FREM
  { 163,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #163 = G_FDIV
  { 162,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo19 },  // Inst #162 = G_FMAD
  { 161,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo19 },  // Inst #161 = G_FMA
  { 160,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #160 = G_FMUL
  { 159,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #159 = G_FSUB
  { 158,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #158 = G_FADD
  { 157,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo37 },  // Inst #157 = G_UDIVFIXSAT
  { 156,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo37 },  // Inst #156 = G_SDIVFIXSAT
  { 155,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo37 },  // Inst #155 = G_UDIVFIX
  { 154,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo37 },  // Inst #154 = G_SDIVFIX
  { 153,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo37 },  // Inst #153 = G_UMULFIXSAT
  { 152,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo37 },  // Inst #152 = G_SMULFIXSAT
  { 151,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo37 },  // Inst #151 = G_UMULFIX
  { 150,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo37 },  // Inst #150 = G_SMULFIX
  { 149,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #149 = G_SSHLSAT
  { 148,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #148 = G_USHLSAT
  { 147,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #147 = G_SSUBSAT
  { 146,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #146 = G_USUBSAT
  { 145,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #145 = G_SADDSAT
  { 144,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #144 = G_UADDSAT
  { 143,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #143 = G_SMULH
  { 142,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #142 = G_UMULH
  { 141,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo30 },  // Inst #141 = G_SMULO
  { 140,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo30 },  // Inst #140 = G_UMULO
  { 139,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo36 },  // Inst #139 = G_SSUBE
  { 138,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo30 },  // Inst #138 = G_SSUBO
  { 137,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo36 },  // Inst #137 = G_SADDE
  { 136,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo30 },  // Inst #136 = G_SADDO
  { 135,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo36 },  // Inst #135 = G_USUBE
  { 134,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo30 },  // Inst #134 = G_USUBO
  { 133,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo36 },  // Inst #133 = G_UADDE
  { 132,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo30 },  // Inst #132 = G_UADDO
  { 131,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo30 },  // Inst #131 = G_SELECT
  { 130,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo35 },  // Inst #130 = G_FCMP
  { 129,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo35 },  // Inst #129 = G_ICMP
  { 128,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #128 = G_ROTL
  { 127,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #127 = G_ROTR
  { 126,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo34 },  // Inst #126 = G_FSHR
  { 125,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo34 },  // Inst #125 = G_FSHL
  { 124,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #124 = G_ASHR
  { 123,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #123 = G_LSHR
  { 122,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo33 },  // Inst #122 = G_SHL
  { 121,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #121 = G_ZEXT
  { 120,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo17 },  // Inst #120 = G_SEXT_INREG
  { 119,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #119 = G_SEXT
  { 118,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo32 },  // Inst #118 = G_VAARG
  { 117,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo20 },  // Inst #117 = G_VASTART
  { 116,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #116 = G_FCONSTANT
  { 115,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #115 = G_CONSTANT
  { 114,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #114 = G_TRUNC
  { 113,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #113 = G_ANYEXT
  { 112,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo2 },  // Inst #112 = G_INTRINSIC_W_SIDE_EFFECTS
  { 111,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo2 },  // Inst #111 = G_INTRINSIC
  { 110,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, nullptr },  // Inst #110 = G_INVOKE_REGION_START
  { 109,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo20 },  // Inst #109 = G_BRINDIRECT
  { 108,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator), 0x0ULL, nullptr, OperandInfo21 },  // Inst #108 = G_BRCOND
  { 107,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo10 },  // Inst #107 = G_FENCE
  { 106,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #106 = G_ATOMICRMW_UDEC_WRAP
  { 105,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #105 = G_ATOMICRMW_UINC_WRAP
  { 104,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #104 = G_ATOMICRMW_FMIN
  { 103,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #103 = G_ATOMICRMW_FMAX
  { 102,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #102 = G_ATOMICRMW_FSUB
  { 101,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #101 = G_ATOMICRMW_FADD
  { 100,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #100 = G_ATOMICRMW_UMIN
  { 99,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #99 = G_ATOMICRMW_UMAX
  { 98,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #98 = G_ATOMICRMW_MIN
  { 97,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #97 = G_ATOMICRMW_MAX
  { 96,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #96 = G_ATOMICRMW_XOR
  { 95,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #95 = G_ATOMICRMW_OR
  { 94,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #94 = G_ATOMICRMW_NAND
  { 93,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #93 = G_ATOMICRMW_AND
  { 92,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #92 = G_ATOMICRMW_SUB
  { 91,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #91 = G_ATOMICRMW_ADD
  { 90,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo31 },  // Inst #90 = G_ATOMICRMW_XCHG
  { 89,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo30 },  // Inst #89 = G_ATOMIC_CMPXCHG
  { 88,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo29 },  // Inst #88 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 87,	5,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo28 },  // Inst #87 = G_INDEXED_STORE
  { 86,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore), 0x0ULL, nullptr, OperandInfo23 },  // Inst #86 = G_STORE
  { 85,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo27 },  // Inst #85 = G_INDEXED_ZEXTLOAD
  { 84,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo27 },  // Inst #84 = G_INDEXED_SEXTLOAD
  { 83,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo27 },  // Inst #83 = G_INDEXED_LOAD
  { 82,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo23 },  // Inst #82 = G_ZEXTLOAD
  { 81,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo23 },  // Inst #81 = G_SEXTLOAD
  { 80,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad), 0x0ULL, nullptr, OperandInfo23 },  // Inst #80 = G_LOAD
  { 79,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo20 },  // Inst #79 = G_READCYCLECOUNTER
  { 78,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #78 = G_INTRINSIC_ROUNDEVEN
  { 77,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #77 = G_INTRINSIC_LRINT
  { 76,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #76 = G_INTRINSIC_ROUND
  { 75,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #75 = G_INTRINSIC_TRUNC
  { 74,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo26 },  // Inst #74 = G_INTRINSIC_FPTRUNC_ROUND
  { 73,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo25 },  // Inst #73 = G_FREEZE
  { 72,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #72 = G_BITCAST
  { 71,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #71 = G_INTTOPTR
  { 70,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo23 },  // Inst #70 = G_PTRTOINT
  { 69,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo23 },  // Inst #69 = G_CONCAT_VECTORS
  { 68,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo23 },  // Inst #68 = G_BUILD_VECTOR_TRUNC
  { 67,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo23 },  // Inst #67 = G_BUILD_VECTOR
  { 66,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo23 },  // Inst #66 = G_MERGE_VALUES
  { 65,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo24 },  // Inst #65 = G_INSERT
  { 64,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo23 },  // Inst #64 = G_UNMERGE_VALUES
  { 63,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo22 },  // Inst #63 = G_EXTRACT
  { 62,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #62 = G_CONSTANT_POOL
  { 61,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #61 = G_GLOBAL_VALUE
  { 60,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo21 },  // Inst #60 = G_FRAME_INDEX
  { 59,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo20 },  // Inst #59 = G_PHI
  { 58,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo20 },  // Inst #58 = G_IMPLICIT_DEF
  { 57,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #57 = G_XOR
  { 56,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #56 = G_OR
  { 55,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #55 = G_AND
  { 54,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo19 },  // Inst #54 = G_UDIVREM
  { 53,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo19 },  // Inst #53 = G_SDIVREM
  { 52,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #52 = G_UREM
  { 51,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #51 = G_SREM
  { 50,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #50 = G_UDIV
  { 49,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #49 = G_SDIV
  { 48,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #48 = G_MUL
  { 47,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo18 },  // Inst #47 = G_SUB
  { 46,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable), 0x0ULL, nullptr, OperandInfo18 },  // Inst #46 = G_ADD
  { 45,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo17 },  // Inst #45 = G_ASSERT_ALIGN
  { 44,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo17 },  // Inst #44 = G_ASSERT_ZEXT
  { 43,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo17 },  // Inst #43 = G_ASSERT_SEXT
  { 42,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #42 = MEMBARRIER
  { 41,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #41 = ICALL_BRANCH_FUNNEL
  { 40,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo16 },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
  { 39,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo15 },  // Inst #39 = PATCHABLE_EVENT_CALL
  { 38,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #38 = PATCHABLE_TAIL_CALL
  { 37,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
  { 36,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #36 = PATCHABLE_RET
  { 35,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
  { 34,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #34 = PATCHABLE_OP
  { 33,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo2 },  // Inst #33 = FAULTING_OP
  { 32,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo14 },  // Inst #32 = LOCAL_ESCAPE
  { 31,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #31 = STATEPOINT
  { 30,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo13 },  // Inst #30 = PREALLOCATED_ARG
  { 29,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo3 },  // Inst #29 = PREALLOCATED_SETUP
  { 28,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable), 0x0ULL, nullptr, OperandInfo12 },  // Inst #28 = LOAD_STACK_GUARD
  { 27,	6,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo11 },  // Inst #27 = PATCHPOINT
  { 26,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #26 = FENTRY_CALL
  { 25,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo10 },  // Inst #25 = STACKMAP
  { 24,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, OperandInfo9 },  // Inst #24 = ARITH_FENCE
  { 23,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, OperandInfo8 },  // Inst #23 = PSEUDO_PROBE
  { 22,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, OperandInfo3 },  // Inst #22 = LIFETIME_END
  { 21,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, OperandInfo3 },  // Inst #21 = LIFETIME_START
  { 20,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #20 = BUNDLE
  { 19,	2,	1,	0,	514,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo7 },  // Inst #19 = COPY
  { 18,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo7 },  // Inst #18 = REG_SEQUENCE
  { 17,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta), 0x0ULL, nullptr, OperandInfo2 },  // Inst #17 = DBG_LABEL
  { 16,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #16 = DBG_PHI
  { 15,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #15 = DBG_INSTR_REF
  { 14,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #14 = DBG_VALUE_LIST
  { 13,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 12,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 11,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 10,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove), 0x0ULL, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 8,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo), 0x0ULL, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 7,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #7 = KILL
  { 6,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 5,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 4,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 3,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable), 0x0ULL, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 2,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects), 0x0ULL, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 1,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 0,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic), 0x0ULL, nullptr, OperandInfo2 },  // Inst #0 = PHI
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char MipsInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "DMFC0\0"
  /* 15 */ "DMFGC0\0"
  /* 22 */ "MFHGC0\0"
  /* 29 */ "MTHGC0\0"
  /* 36 */ "DMTGC0\0"
  /* 43 */ "MFTC0\0"
  /* 49 */ "DMTC0\0"
  /* 55 */ "MTTC0\0"
  /* 61 */ "VMM0\0"
  /* 66 */ "MTM0\0"
  /* 71 */ "MTP0\0"
  /* 76 */ "BBIT0\0"
  /* 82 */ "LDC1\0"
  /* 87 */ "SDC1\0"
  /* 92 */ "CFC1\0"
  /* 97 */ "DMFC1\0"
  /* 103 */ "MFTHC1\0"
  /* 110 */ "MTTHC1\0"
  /* 117 */ "CTC1\0"
  /* 122 */ "CFTC1\0"
  /* 128 */ "MFTC1\0"
  /* 134 */ "DMTC1\0"
  /* 140 */ "CTTC1\0"
  /* 146 */ "MTTC1\0"
  /* 152 */ "LWC1\0"
  /* 157 */ "SWC1\0"
  /* 162 */ "LDXC1\0"
  /* 168 */ "SDXC1\0"
  /* 174 */ "LUXC1\0"
  /* 180 */ "SUXC1\0"
  /* 186 */ "LWXC1\0"
  /* 192 */ "SWXC1\0"
  /* 198 */ "MTM1\0"
  /* 203 */ "SDC1_M1\0"
  /* 211 */ "MTP1\0"
  /* 216 */ "BBIT1\0"
  /* 222 */ "BBIT032\0"
  /* 230 */ "BBIT132\0"
  /* 238 */ "DSRA32\0"
  /* 245 */ "MFHC1_D32\0"
  /* 255 */ "MTHC1_D32\0"
  /* 265 */ "FSUB_D32\0"
  /* 274 */ "NMSUB_D32\0"
  /* 284 */ "FADD_D32\0"
  /* 293 */ "NMADD_D32\0"
  /* 303 */ "C_NGE_D32\0"
  /* 313 */ "C_NGLE_D32\0"
  /* 324 */ "C_OLE_D32\0"
  /* 334 */ "C_ULE_D32\0"
  /* 344 */ "C_LE_D32\0"
  /* 353 */ "C_SF_D32\0"
  /* 362 */ "MOVF_D32\0"
  /* 371 */ "C_F_D32\0"
  /* 379 */ "PseudoSELECTFP_F_D32\0"
  /* 400 */ "FNEG_D32\0"
  /* 409 */ "MOVN_I_D32\0"
  /* 420 */ "MOVZ_I_D32\0"
  /* 431 */ "C_NGL_D32\0"
  /* 441 */ "FMUL_D32\0"
  /* 450 */ "LDC1_MM_D32\0"
  /* 462 */ "SDC1_MM_D32\0"
  /* 474 */ "C_UN_D32\0"
  /* 483 */ "RECIP_D32\0"
  /* 493 */ "FCMP_D32\0"
  /* 502 */ "C_SEQ_D32\0"
  /* 512 */ "C_UEQ_D32\0"
  /* 522 */ "C_EQ_D32\0"
  /* 531 */ "FABS_D32\0"
  /* 540 */ "CVT_S_D32\0"
  /* 550 */ "PseudoSELECT_D32\0"
  /* 567 */ "C_NGT_D32\0"
  /* 577 */ "C_OLT_D32\0"
  /* 587 */ "C_ULT_D32\0"
  /* 597 */ "C_LT_D32\0"
  /* 606 */ "FSQRT_D32\0"
  /* 616 */ "RSQRT_D32\0"
  /* 626 */ "MOVT_D32\0"
  /* 635 */ "PseudoSELECTFP_T_D32\0"
  /* 656 */ "FDIV_D32\0"
  /* 665 */ "FMOV_D32\0"
  /* 674 */ "PseudoTRUNC_W_D32\0"
  /* 692 */ "ROUND_W_D32\0"
  /* 704 */ "CEIL_W_D32\0"
  /* 715 */ "FLOOR_W_D32\0"
  /* 727 */ "CVT_W_D32\0"
  /* 737 */ "BPOSGE32\0"
  /* 746 */ "ATOMIC_LOAD_SUB_I32\0"
  /* 766 */ "ATOMIC_LOAD_ADD_I32\0"
  /* 786 */ "ATOMIC_LOAD_NAND_I32\0"
  /* 807 */ "ATOMIC_LOAD_AND_I32\0"
  /* 827 */ "ATOMIC_LOAD_UMIN_I32\0"
  /* 848 */ "ATOMIC_LOAD_MIN_I32\0"
  /* 868 */ "ATOMIC_SWAP_I32\0"
  /* 884 */ "ATOMIC_CMP_SWAP_I32\0"
  /* 904 */ "ATOMIC_LOAD_XOR_I32\0"
  /* 924 */ "ATOMIC_LOAD_OR_I32\0"
  /* 943 */ "ATOMIC_LOAD_UMAX_I32\0"
  /* 964 */ "ATOMIC_LOAD_MAX_I32\0"
  /* 984 */ "DSLL32\0"
  /* 991 */ "DSRL32\0"
  /* 998 */ "DROTR32\0"
  /* 1006 */ "CINS32\0"
  /* 1013 */ "EXTS32\0"
  /* 1020 */ "FCMP_S32\0"
  /* 1029 */ "DSLL64_32\0"
  /* 1039 */ "CINS64_32\0"
  /* 1049 */ "DEXT64_32\0"
  /* 1059 */ "LoadImmDoubleFGR_32\0"
  /* 1079 */ "LoadAddrReg32\0"
  /* 1093 */ "CINS_i32\0"
  /* 1102 */ "LoadImm32\0"
  /* 1112 */ "LoadAddrImm32\0"
  /* 1126 */ "MIPSeh_return32\0"
  /* 1142 */ "LwConstant32\0"
  /* 1155 */ "LDC2\0"
  /* 1160 */ "SDC2\0"
  /* 1165 */ "DMFC2\0"
  /* 1171 */ "DMTC2\0"
  /* 1177 */ "LWC2\0"
  /* 1182 */ "SWC2\0"
  /* 1187 */ "G_FLOG2\0"
  /* 1195 */ "MTM2\0"
  /* 1200 */ "MTP2\0"
  /* 1205 */ "G_FEXP2\0"
  /* 1213 */ "SHRA_QB_MMR2\0"
  /* 1226 */ "CMPGDU_LE_QB_MMR2\0"
  /* 1244 */ "SUBUH_QB_MMR2\0"
  /* 1258 */ "ADDUH_QB_MMR2\0"
  /* 1272 */ "CMPGDU_EQ_QB_MMR2\0"
  /* 1290 */ "SHRA_R_QB_MMR2\0"
  /* 1305 */ "SUBUH_R_QB_MMR2\0"
  /* 1321 */ "ADDUH_R_QB_MMR2\0"
  /* 1337 */ "SHRAV_R_QB_MMR2\0"
  /* 1353 */ "ABSQ_S_QB_MMR2\0"
  /* 1368 */ "CMPGDU_LT_QB_MMR2\0"
  /* 1386 */ "SHRAV_QB_MMR2\0"
  /* 1400 */ "PREPEND_MMR2\0"
  /* 1413 */ "APPEND_MMR2\0"
  /* 1425 */ "PRECR_QB_PH_MMR2\0"
  /* 1442 */ "SUBQH_PH_MMR2\0"
  /* 1456 */ "ADDQH_PH_MMR2\0"
  /* 1470 */ "SHRL_PH_MMR2\0"
  /* 1483 */ "MUL_PH_MMR2\0"
  /* 1495 */ "SUBQH_R_PH_MMR2\0"
  /* 1511 */ "ADDQH_R_PH_MMR2\0"
  /* 1527 */ "MUL_S_PH_MMR2\0"
  /* 1541 */ "MULQ_S_PH_MMR2\0"
  /* 1556 */ "SUBU_S_PH_MMR2\0"
  /* 1571 */ "ADDU_S_PH_MMR2\0"
  /* 1586 */ "SUBU_PH_MMR2\0"
  /* 1599 */ "ADDU_PH_MMR2\0"
  /* 1612 */ "SHRLV_PH_MMR2\0"
  /* 1626 */ "DPA_W_PH_MMR2\0"
  /* 1640 */ "MULSA_W_PH_MMR2\0"
  /* 1656 */ "DPAQX_SA_W_PH_MMR2\0"
  /* 1675 */ "DPSQX_SA_W_PH_MMR2\0"
  /* 1694 */ "DPS_W_PH_MMR2\0"
  /* 1708 */ "DPAQX_S_W_PH_MMR2\0"
  /* 1726 */ "DPSQX_S_W_PH_MMR2\0"
  /* 1744 */ "DPAX_W_PH_MMR2\0"
  /* 1759 */ "DPSX_W_PH_MMR2\0"
  /* 1774 */ "BALIGN_MMR2\0"
  /* 1786 */ "PRECR_SRA_PH_W_MMR2\0"
  /* 1806 */ "PRECR_SRA_R_PH_W_MMR2\0"
  /* 1828 */ "SUBQH_W_MMR2\0"
  /* 1841 */ "ADDQH_W_MMR2\0"
  /* 1854 */ "SUBQH_R_W_MMR2\0"
  /* 1869 */ "ADDQH_R_W_MMR2\0"
  /* 1884 */ "MULQ_RS_W_MMR2\0"
  /* 1899 */ "MULQ_S_W_MMR2\0"
  /* 1913 */ "LDC3\0"
  /* 1918 */ "SDC3\0"
  /* 1923 */ "LWC3\0"
  /* 1928 */ "SWC3\0"
  /* 1933 */ "BPOSGE32C_MMR3\0"
  /* 1948 */ "LDC164\0"
  /* 1955 */ "SDC164\0"
  /* 1962 */ "LDXC164\0"
  /* 1970 */ "SDXC164\0"
  /* 1978 */ "LUXC164\0"
  /* 1986 */ "SUXC164\0"
  /* 1994 */ "SEB64\0"
  /* 2000 */ "TAILCALLREGHB64\0"
  /* 2016 */ "JR_HB64\0"
  /* 2024 */ "JALR_HB64\0"
  /* 2034 */ "LB64\0"
  /* 2039 */ "SB64\0"
  /* 2044 */ "LOAD_ACC64\0"
  /* 2055 */ "STORE_ACC64\0"
  /* 2067 */ "BGEC64\0"
  /* 2074 */ "BNEC64\0"
  /* 2081 */ "JIC64\0"
  /* 2087 */ "JIALC64\0"
  /* 2095 */ "BEQC64\0"
  /* 2102 */ "SC64\0"
  /* 2107 */ "BLTC64\0"
  /* 2114 */ "BGEUC64\0"
  /* 2122 */ "BLTUC64\0"
  /* 2130 */ "BGEZC64\0"
  /* 2138 */ "BLEZC64\0"
  /* 2146 */ "BNEZC64\0"
  /* 2154 */ "BEQZC64\0"
  /* 2162 */ "BGTZC64\0"
  /* 2170 */ "BLTZC64\0"
  /* 2178 */ "AND64\0"
  /* 2184 */ "MFC1_D64\0"
  /* 2193 */ "MFHC1_D64\0"
  /* 2203 */ "MTHC1_D64\0"
  /* 2213 */ "MTC1_D64\0"
  /* 2222 */ "MOVN_I64_D64\0"
  /* 2235 */ "MOVZ_I64_D64\0"
  /* 2248 */ "FSUB_D64\0"
  /* 2257 */ "NMSUB_D64\0"
  /* 2267 */ "FADD_D64\0"
  /* 2276 */ "NMADD_D64\0"
  /* 2286 */ "C_NGE_D64\0"
  /* 2296 */ "C_NGLE_D64\0"
  /* 2307 */ "C_OLE_D64\0"
  /* 2317 */ "C_ULE_D64\0"
  /* 2327 */ "C_LE_D64\0"
  /* 2336 */ "C_SF_D64\0"
  /* 2345 */ "MOVF_D64\0"
  /* 2354 */ "C_F_D64\0"
  /* 2362 */ "PseudoSELECTFP_F_D64\0"
  /* 2383 */ "FNEG_D64\0"
  /* 2392 */ "MOVN_I_D64\0"
  /* 2403 */ "MOVZ_I_D64\0"
  /* 2414 */ "C_NGL_D64\0"
  /* 2424 */ "FMUL_D64\0"
  /* 2433 */ "TRUNC_L_D64\0"
  /* 2445 */ "ROUND_L_D64\0"
  /* 2457 */ "CEIL_L_D64\0"
  /* 2468 */ "FLOOR_L_D64\0"
  /* 2480 */ "CVT_L_D64\0"
  /* 2490 */ "LDC1_MM_D64\0"
  /* 2502 */ "SDC1_MM_D64\0"
  /* 2514 */ "C_UN_D64\0"
  /* 2523 */ "RECIP_D64\0"
  /* 2533 */ "FCMP_D64\0"
  /* 2542 */ "C_SEQ_D64\0"
  /* 2552 */ "C_UEQ_D64\0"
  /* 2562 */ "C_EQ_D64\0"
  /* 2571 */ "FABS_D64\0"
  /* 2580 */ "CVT_S_D64\0"
  /* 2590 */ "PseudoSELECT_D64\0"
  /* 2607 */ "C_NGT_D64\0"
  /* 2617 */ "C_OLT_D64\0"
  /* 2627 */ "C_ULT_D64\0"
  /* 2637 */ "C_LT_D64\0"
  /* 2646 */ "FSQRT_D64\0"
  /* 2656 */ "RSQRT_D64\0"
  /* 2666 */ "MOVT_D64\0"
  /* 2675 */ "PseudoSELECTFP_T_D64\0"
  /* 2696 */ "FDIV_D64\0"
  /* 2705 */ "FMOV_D64\0"
  /* 2714 */ "TRUNC_W_D64\0"
  /* 2726 */ "ROUND_W_D64\0"
  /* 2738 */ "CEIL_W_D64\0"
  /* 2749 */ "FLOOR_W_D64\0"
  /* 2761 */ "CVT_W_D64\0"
  /* 2771 */ "BNE64\0"
  /* 2777 */ "BuildPairF64\0"
  /* 2790 */ "ExtractElementF64\0"
  /* 2808 */ "TAILCALLREG64\0"
  /* 2822 */ "SEH64\0"
  /* 2828 */ "LH64\0"
  /* 2833 */ "SH64\0"
  /* 2838 */ "PseudoMFHI64\0"
  /* 2851 */ "PseudoMTLOHI64\0"
  /* 2866 */ "MTHI64\0"
  /* 2873 */ "MOVN_I64_I64\0"
  /* 2886 */ "MOVZ_I64_I64\0"
  /* 2899 */ "ATOMIC_LOAD_SUB_I64\0"
  /* 2919 */ "ATOMIC_LOAD_ADD_I64\0"
  /* 2939 */ "ATOMIC_LOAD_NAND_I64\0"
  /* 2960 */ "ATOMIC_LOAD_AND_I64\0"
  /* 2980 */ "MOVF_I64\0"
  /* 2989 */ "PseudoSELECTFP_F_I64\0"
  /* 3010 */ "MOVN_I_I64\0"
  /* 3021 */ "MOVZ_I_I64\0"
  /* 3032 */ "ATOMIC_LOAD_UMIN_I64\0"
  /* 3053 */ "ATOMIC_LOAD_MIN_I64\0"
  /* 3073 */ "ATOMIC_SWAP_I64\0"
  /* 3089 */ "ATOMIC_CMP_SWAP_I64\0"
  /* 3109 */ "ATOMIC_LOAD_XOR_I64\0"
  /* 3129 */ "ATOMIC_LOAD_OR_I64\0"
  /* 3148 */ "PseudoD_SELECT_I64\0"
  /* 3167 */ "PseudoSELECT_I64\0"
  /* 3184 */ "MOVT_I64\0"
  /* 3193 */ "PseudoSELECTFP_T_I64\0"
  /* 3214 */ "ATOMIC_LOAD_UMAX_I64\0"
  /* 3235 */ "ATOMIC_LOAD_MAX_I64\0"
  /* 3255 */ "LL64\0"
  /* 3260 */ "CVT_S_PL64\0"
  /* 3271 */ "LWL64\0"
  /* 3277 */ "SWL64\0"
  /* 3283 */ "PseudoMFLO64\0"
  /* 3296 */ "MTLO64\0"
  /* 3303 */ "BEQ64\0"
  /* 3309 */ "JR64\0"
  /* 3314 */ "JALR64\0"
  /* 3321 */ "NOR64\0"
  /* 3327 */ "XOR64\0"
  /* 3333 */ "RDHWR64\0"
  /* 3341 */ "LWR64\0"
  /* 3347 */ "SWR64\0"
  /* 3353 */ "FSUB_PS64\0"
  /* 3363 */ "FADD_PS64\0"
  /* 3373 */ "PLL_PS64\0"
  /* 3382 */ "FMUL_PS64\0"
  /* 3392 */ "PUL_PS64\0"
  /* 3401 */ "ADDR_PS64\0"
  /* 3411 */ "MULR_PS64\0"
  /* 3421 */ "PLU_PS64\0"
  /* 3430 */ "PUU_PS64\0"
  /* 3439 */ "CVT_PW_PS64\0"
  /* 3451 */ "CVT_PS_S64\0"
  /* 3462 */ "SLT64\0"
  /* 3468 */ "CVT_S_PU64\0"
  /* 3479 */ "LW64\0"
  /* 3484 */ "CVT_PS_PW64\0"
  /* 3496 */ "SW64\0"
  /* 3501 */ "BGEZ64\0"
  /* 3508 */ "BLEZ64\0"
  /* 3515 */ "SELNEZ64\0"
  /* 3524 */ "SELEQZ64\0"
  /* 3533 */ "BGTZ64\0"
  /* 3540 */ "BLTZ64\0"
  /* 3547 */ "BuildPairF64_64\0"
  /* 3563 */ "ExtractElementF64_64\0"
  /* 3584 */ "SLL64_64\0"
  /* 3593 */ "LONG_BRANCH_LUi2Op_64\0"
  /* 3615 */ "LoadAddrReg64\0"
  /* 3629 */ "PseudoIndirectHazardBranch64\0"
  /* 3658 */ "PseudoIndirectBranch64\0"
  /* 3681 */ "ANDi64\0"
  /* 3688 */ "XORi64\0"
  /* 3695 */ "SLTi64\0"
  /* 3702 */ "LUi64\0"
  /* 3708 */ "SGEImm64\0"
  /* 3717 */ "SLEImm64\0"
  /* 3726 */ "NORImm64\0"
  /* 3735 */ "SGTImm64\0"
  /* 3744 */ "SLTImm64\0"
  /* 3753 */ "SGEUImm64\0"
  /* 3763 */ "SLEUImm64\0"
  /* 3773 */ "SGTUImm64\0"
  /* 3783 */ "SLTUImm64\0"
  /* 3793 */ "LoadImm64\0"
  /* 3803 */ "LoadAddrImm64\0"
  /* 3817 */ "PseudoReturn64\0"
  /* 3832 */ "MIPSeh_return64\0"
  /* 3848 */ "LBu64\0"
  /* 3854 */ "LHu64\0"
  /* 3860 */ "SLTu64\0"
  /* 3867 */ "LEA_ADDiu64\0"
  /* 3879 */ "SLTiu64\0"
  /* 3887 */ "MoveR3216\0"
  /* 3897 */ "RetRA16\0"
  /* 3905 */ "JalB16\0"
  /* 3912 */ "LD_F16\0"
  /* 3919 */ "ST_F16\0"
  /* 3926 */ "ATOMIC_LOAD_SUB_I16\0"
  /* 3946 */ "ATOMIC_LOAD_ADD_I16\0"
  /* 3966 */ "ATOMIC_LOAD_NAND_I16\0"
  /* 3987 */ "ATOMIC_LOAD_AND_I16\0"
  /* 4007 */ "ATOMIC_LOAD_UMIN_I16\0"
  /* 4028 */ "ATOMIC_LOAD_MIN_I16\0"
  /* 4048 */ "ATOMIC_SWAP_I16\0"
  /* 4064 */ "ATOMIC_CMP_SWAP_I16\0"
  /* 4084 */ "ATOMIC_LOAD_XOR_I16\0"
  /* 4104 */ "ATOMIC_LOAD_OR_I16\0"
  /* 4123 */ "ATOMIC_LOAD_UMAX_I16\0"
  /* 4144 */ "ATOMIC_LOAD_MAX_I16\0"
  /* 4164 */ "Move32R16\0"
  /* 4174 */ "SraX16\0"
  /* 4181 */ "RestoreX16\0"
  /* 4192 */ "SaveX16\0"
  /* 4200 */ "BtnezT8CmpiX16\0"
  /* 4215 */ "BteqzT8CmpiX16\0"
  /* 4230 */ "BtnezT8SltiX16\0"
  /* 4245 */ "BteqzT8SltiX16\0"
  /* 4260 */ "SllX16\0"
  /* 4267 */ "SrlX16\0"
  /* 4274 */ "LbRxRyOffMemX16\0"
  /* 4290 */ "SbRxRyOffMemX16\0"
  /* 4306 */ "LhRxRyOffMemX16\0"
  /* 4322 */ "ShRxRyOffMemX16\0"
  /* 4338 */ "LbuRxRyOffMemX16\0"
  /* 4355 */ "LhuRxRyOffMemX16\0"
  /* 4372 */ "AddiuRxRyOffMemX16\0"
  /* 4391 */ "LwRxRyOffMemX16\0"
  /* 4407 */ "SwRxRyOffMemX16\0"
  /* 4423 */ "AddiuRxPcImmX16\0"
  /* 4439 */ "AddiuSpImmX16\0"
  /* 4453 */ "LwRxSpImmX16\0"
  /* 4466 */ "SwRxSpImmX16\0"
  /* 4479 */ "SltiCCRxImmX16\0"
  /* 4494 */ "SltiuCCRxImmX16\0"
  /* 4510 */ "LiRxImmX16\0"
  /* 4521 */ "CmpiRxImmX16\0"
  /* 4534 */ "SltiRxImmX16\0"
  /* 4547 */ "AddiuRxImmX16\0"
  /* 4561 */ "SltiuRxImmX16\0"
  /* 4575 */ "AddiuRxRxImmX16\0"
  /* 4591 */ "BnezRxImmX16\0"
  /* 4604 */ "BeqzRxImmX16\0"
  /* 4617 */ "BimmX16\0"
  /* 4625 */ "LiRxImmAlignX16\0"
  /* 4641 */ "LwRxPcTcpX16\0"
  /* 4654 */ "BtnezT8CmpX16\0"
  /* 4668 */ "BteqzT8CmpX16\0"
  /* 4682 */ "BtnezT8SltX16\0"
  /* 4696 */ "BteqzT8SltX16\0"
  /* 4710 */ "BtnezT8SltiuX16\0"
  /* 4726 */ "BteqzT8SltiuX16\0"
  /* 4742 */ "BtnezT8SltuX16\0"
  /* 4757 */ "BteqzT8SltuX16\0"
  /* 4772 */ "BtnezX16\0"
  /* 4781 */ "BteqzX16\0"
  /* 4790 */ "JrcRa16\0"
  /* 4798 */ "JrRa16\0"
  /* 4805 */ "Restore16\0"
  /* 4815 */ "GotPrologue16\0"
  /* 4829 */ "Save16\0"
  /* 4836 */ "JumpLinkReg16\0"
  /* 4850 */ "Mfhi16\0"
  /* 4857 */ "Break16\0"
  /* 4865 */ "Jal16\0"
  /* 4871 */ "AddiuSpImm16\0"
  /* 4884 */ "LiRxImm16\0"
  /* 4894 */ "CmpiRxImm16\0"
  /* 4906 */ "SltiRxImm16\0"
  /* 4918 */ "SltiuRxImm16\0"
  /* 4931 */ "AddiuRxRxImm16\0"
  /* 4946 */ "BnezRxImm16\0"
  /* 4958 */ "BeqzRxImm16\0"
  /* 4970 */ "Bimm16\0"
  /* 4977 */ "Mflo16\0"
  /* 4984 */ "LwRxPcTcp16\0"
  /* 4996 */ "SebRx16\0"
  /* 5004 */ "JrcRx16\0"
  /* 5012 */ "SehRx16\0"
  /* 5020 */ "SltCCRxRy16\0"
  /* 5032 */ "SltuCCRxRy16\0"
  /* 5045 */ "NegRxRy16\0"
  /* 5055 */ "CmpRxRy16\0"
  /* 5065 */ "SltRxRy16\0"
  /* 5075 */ "MultRxRy16\0"
  /* 5086 */ "NotRxRy16\0"
  /* 5096 */ "SltuRxRy16\0"
  /* 5107 */ "MultuRxRy16\0"
  /* 5119 */ "DivuRxRy16\0"
  /* 5130 */ "SravRxRy16\0"
  /* 5141 */ "DivRxRy16\0"
  /* 5151 */ "SllvRxRy16\0"
  /* 5162 */ "SrlvRxRy16\0"
  /* 5173 */ "AndRxRxRy16\0"
  /* 5185 */ "OrRxRxRy16\0"
  /* 5196 */ "XorRxRxRy16\0"
  /* 5208 */ "MultRxRyRz16\0"
  /* 5221 */ "SubuRxRyRz16\0"
  /* 5234 */ "AdduRxRyRz16\0"
  /* 5247 */ "SltuRxRyRz16\0"
  /* 5260 */ "MultuRxRyRz16\0"
  /* 5274 */ "Btnez16\0"
  /* 5282 */ "Bteqz16\0"
  /* 5290 */ "PseudoIndrectHazardBranch64R6\0"
  /* 5320 */ "PseudoIndirectBranch64R6\0"
  /* 5345 */ "MFC0_MMR6\0"
  /* 5355 */ "MFHC0_MMR6\0"
  /* 5366 */ "MTHC0_MMR6\0"
  /* 5377 */ "MTC0_MMR6\0"
  /* 5387 */ "MFC1_MMR6\0"
  /* 5397 */ "MTC1_MMR6\0"
  /* 5407 */ "LDC2_MMR6\0"
  /* 5417 */ "SDC2_MMR6\0"
  /* 5427 */ "MFC2_MMR6\0"
  /* 5437 */ "MFHC2_MMR6\0"
  /* 5448 */ "MTHC2_MMR6\0"
  /* 5459 */ "MTC2_MMR6\0"
  /* 5469 */ "LWC2_MMR6\0"
  /* 5479 */ "SWC2_MMR6\0"
  /* 5489 */ "LDC1_D64_MMR6\0"
  /* 5503 */ "SDC1_D64_MMR6\0"
  /* 5517 */ "SB16_MMR6\0"
  /* 5527 */ "BC16_MMR6\0"
  /* 5537 */ "JRC16_MMR6\0"
  /* 5548 */ "JALRC16_MMR6\0"
  /* 5561 */ "BNEZC16_MMR6\0"
  /* 5574 */ "BEQZC16_MMR6\0"
  /* 5587 */ "AND16_MMR6\0"
  /* 5598 */ "MOVE16_MMR6\0"
  /* 5610 */ "SH16_MMR6\0"
  /* 5620 */ "ANDI16_MMR6\0"
  /* 5632 */ "LI16_MMR6\0"
  /* 5642 */ "BREAK16_MMR6\0"
  /* 5655 */ "SLL16_MMR6\0"
  /* 5666 */ "SRL16_MMR6\0"
  /* 5677 */ "LWM16_MMR6\0"
  /* 5688 */ "SWM16_MMR6\0"
  /* 5699 */ "SDBBP16_MMR6\0"
  /* 5712 */ "XOR16_MMR6\0"
  /* 5723 */ "NOT16_MMR6\0"
  /* 5734 */ "SUBU16_MMR6\0"
  /* 5746 */ "ADDU16_MMR6\0"
  /* 5758 */ "SW16_MMR6\0"
  /* 5768 */ "LSA_MMR6\0"
  /* 5777 */ "EHB_MMR6\0"
  /* 5786 */ "JALRC_HB_MMR6\0"
  /* 5800 */ "LB_MMR6\0"
  /* 5808 */ "SB_MMR6\0"
  /* 5816 */ "SUB_MMR6\0"
  /* 5825 */ "BC_MMR6\0"
  /* 5833 */ "BGEC_MMR6\0"
  /* 5843 */ "BNEC_MMR6\0"
  /* 5853 */ "JIC_MMR6\0"
  /* 5862 */ "BALC_MMR6\0"
  /* 5872 */ "JIALC_MMR6\0"
  /* 5883 */ "BGEZALC_MMR6\0"
  /* 5896 */ "BLEZALC_MMR6\0"
  /* 5909 */ "BNEZALC_MMR6\0"
  /* 5922 */ "BEQZALC_MMR6\0"
  /* 5935 */ "BGTZALC_MMR6\0"
  /* 5948 */ "BLTZALC_MMR6\0"
  /* 5961 */ "ERETNC_MMR6\0"
  /* 5973 */ "SYNC_MMR6\0"
  /* 5983 */ "AUIPC_MMR6\0"
  /* 5994 */ "ALUIPC_MMR6\0"
  /* 6006 */ "ADDIUPC_MMR6\0"
  /* 6019 */ "LWPC_MMR6\0"
  /* 6029 */ "BEQC_MMR6\0"
  /* 6039 */ "JALRC_MMR6\0"
  /* 6050 */ "SC_MMR6\0"
  /* 6058 */ "BLTC_MMR6\0"
  /* 6068 */ "BGEUC_MMR6\0"
  /* 6079 */ "BLTUC_MMR6\0"
  /* 6090 */ "BNVC_MMR6\0"
  /* 6100 */ "BOVC_MMR6\0"
  /* 6110 */ "BGEZC_MMR6\0"
  /* 6121 */ "BLEZC_MMR6\0"
  /* 6132 */ "BC1NEZC_MMR6\0"
  /* 6145 */ "BC2NEZC_MMR6\0"
  /* 6158 */ "BNEZC_MMR6\0"
  /* 6169 */ "BC1EQZC_MMR6\0"
  /* 6182 */ "BC2EQZC_MMR6\0"
  /* 6195 */ "BEQZC_MMR6\0"
  /* 6206 */ "BGTZC_MMR6\0"
  /* 6217 */ "BLTZC_MMR6\0"
  /* 6228 */ "ADD_MMR6\0"
  /* 6237 */ "AND_MMR6\0"
  /* 6246 */ "MOD_MMR6\0"
  /* 6255 */ "MINA_D_MMR6\0"
  /* 6267 */ "MAXA_D_MMR6\0"
  /* 6279 */ "CMP_SLE_D_MMR6\0"
  /* 6294 */ "CMP_SULE_D_MMR6\0"
  /* 6310 */ "CMP_ULE_D_MMR6\0"
  /* 6325 */ "CMP_LE_D_MMR6\0"
  /* 6339 */ "CMP_SAF_D_MMR6\0"
  /* 6354 */ "CMP_AF_D_MMR6\0"
  /* 6368 */ "MSUBF_D_MMR6\0"
  /* 6381 */ "MADDF_D_MMR6\0"
  /* 6394 */ "SEL_D_MMR6\0"
  /* 6405 */ "TRUNC_L_D_MMR6\0"
  /* 6420 */ "ROUND_L_D_MMR6\0"
  /* 6435 */ "CEIL_L_D_MMR6\0"
  /* 6449 */ "FLOOR_L_D_MMR6\0"
  /* 6464 */ "CVT_L_D_MMR6\0"
  /* 6477 */ "MIN_D_MMR6\0"
  /* 6488 */ "CMP_SUN_D_MMR6\0"
  /* 6503 */ "CMP_UN_D_MMR6\0"
  /* 6517 */ "CMP_SEQ_D_MMR6\0"
  /* 6532 */ "CMP_SUEQ_D_MMR6\0"
  /* 6548 */ "CMP_UEQ_D_MMR6\0"
  /* 6563 */ "CMP_EQ_D_MMR6\0"
  /* 6577 */ "CLASS_D_MMR6\0"
  /* 6590 */ "CMP_SLT_D_MMR6\0"
  /* 6605 */ "CMP_SULT_D_MMR6\0"
  /* 6621 */ "CMP_ULT_D_MMR6\0"
  /* 6636 */ "CMP_LT_D_MMR6\0"
  /* 6650 */ "RINT_D_MMR6\0"
  /* 6662 */ "FMOV_D_MMR6\0"
  /* 6674 */ "TRUNC_W_D_MMR6\0"
  /* 6689 */ "ROUND_W_D_MMR6\0"
  /* 6704 */ "CEIL_W_D_MMR6\0"
  /* 6718 */ "FLOOR_W_D_MMR6\0"
  /* 6733 */ "MAX_D_MMR6\0"
  /* 6744 */ "SELNEZ_D_MMR6\0"
  /* 6758 */ "SELEQZ_D_MMR6\0"
  /* 6772 */ "CACHE_MMR6\0"
  /* 6783 */ "SIGRIE_MMR6\0"
  /* 6795 */ "PAUSE_MMR6\0"
  /* 6806 */ "PREF_MMR6\0"
  /* 6816 */ "TLBINVF_MMR6\0"
  /* 6829 */ "TAILCALLREG_MMR6\0"
  /* 6846 */ "WSBH_MMR6\0"
  /* 6856 */ "SH_MMR6\0"
  /* 6864 */ "MUH_MMR6\0"
  /* 6873 */ "SYNCI_MMR6\0"
  /* 6884 */ "ANDI_MMR6\0"
  /* 6894 */ "EI_MMR6\0"
  /* 6902 */ "XORI_MMR6\0"
  /* 6912 */ "AUI_MMR6\0"
  /* 6921 */ "LUI_MMR6\0"
  /* 6930 */ "GINVI_MMR6\0"
  /* 6941 */ "BREAK_MMR6\0"
  /* 6952 */ "JAL_MMR6\0"
  /* 6961 */ "TAILCALL_MMR6\0"
  /* 6975 */ "SLL_MMR6\0"
  /* 6984 */ "MUL_MMR6\0"
  /* 6993 */ "CVT_D_L_MMR6\0"
  /* 7006 */ "CVT_S_L_MMR6\0"
  /* 7019 */ "ALIGN_MMR6\0"
  /* 7030 */ "CLO_MMR6\0"
  /* 7039 */ "BITSWAP_MMR6\0"
  /* 7052 */ "SDBBP_MMR6\0"
  /* 7063 */ "MOVEP_MMR6\0"
  /* 7074 */ "SSNOP_MMR6\0"
  /* 7085 */ "JRCADDIUSP_MMR6\0"
  /* 7101 */ "SWSP_MMR6\0"
  /* 7111 */ "DVP_MMR6\0"
  /* 7120 */ "EVP_MMR6\0"
  /* 7129 */ "NOR_MMR6\0"
  /* 7138 */ "XOR_MMR6\0"
  /* 7147 */ "RDPGPR_MMR6\0"
  /* 7159 */ "WRPGPR_MMR6\0"
  /* 7171 */ "RDHWR_MMR6\0"
  /* 7182 */ "INS_MMR6\0"
  /* 7191 */ "MINA_S_MMR6\0"
  /* 7203 */ "MAXA_S_MMR6\0"
  /* 7215 */ "FSUB_S_MMR6\0"
  /* 7227 */ "FADD_S_MMR6\0"
  /* 7239 */ "CMP_SLE_S_MMR6\0"
  /* 7254 */ "CMP_SULE_S_MMR6\0"
  /* 7270 */ "CMP_ULE_S_MMR6\0"
  /* 7285 */ "CMP_LE_S_MMR6\0"
  /* 7299 */ "CMP_SAF_S_MMR6\0"
  /* 7314 */ "CMP_AF_S_MMR6\0"
  /* 7328 */ "MSUBF_S_MMR6\0"
  /* 7341 */ "MADDF_S_MMR6\0"
  /* 7354 */ "FNEG_S_MMR6\0"
  /* 7366 */ "SEL_S_MMR6\0"
  /* 7377 */ "FMUL_S_MMR6\0"
  /* 7389 */ "TRUNC_L_S_MMR6\0"
  /* 7404 */ "ROUND_L_S_MMR6\0"
  /* 7419 */ "CEIL_L_S_MMR6\0"
  /* 7433 */ "FLOOR_L_S_MMR6\0"
  /* 7448 */ "CVT_L_S_MMR6\0"
  /* 7461 */ "MIN_S_MMR6\0"
  /* 7472 */ "CMP_SUN_S_MMR6\0"
  /* 7487 */ "CMP_UN_S_MMR6\0"
  /* 7501 */ "CMP_SEQ_S_MMR6\0"
  /* 7516 */ "CMP_SUEQ_S_MMR6\0"
  /* 7532 */ "CMP_UEQ_S_MMR6\0"
  /* 7547 */ "CMP_EQ_S_MMR6\0"
  /* 7561 */ "CLASS_S_MMR6\0"
  /* 7574 */ "CMP_SLT_S_MMR6\0"
  /* 7589 */ "CMP_SULT_S_MMR6\0"
  /* 7605 */ "CMP_ULT_S_MMR6\0"
  /* 7620 */ "CMP_LT_S_MMR6\0"
  /* 7634 */ "RINT_S_MMR6\0"
  /* 7646 */ "FDIV_S_MMR6\0"
  /* 7658 */ "FMOV_S_MMR6\0"
  /* 7670 */ "TRUNC_W_S_MMR6\0"
  /* 7685 */ "ROUND_W_S_MMR6\0"
  /* 7700 */ "CEIL_W_S_MMR6\0"
  /* 7714 */ "FLOOR_W_S_MMR6\0"
  /* 7729 */ "CVT_W_S_MMR6\0"
  /* 7742 */ "MAX_S_MMR6\0"
  /* 7753 */ "SELNEZ_S_MMR6\0"
  /* 7767 */ "SELEQZ_S_MMR6\0"
  /* 7781 */ "DERET_MMR6\0"
  /* 7792 */ "WAIT_MMR6\0"
  /* 7802 */ "GINVT_MMR6\0"
  /* 7813 */ "EXT_MMR6\0"
  /* 7822 */ "LBU_MMR6\0"
  /* 7831 */ "SUBU_MMR6\0"
  /* 7841 */ "ADDU_MMR6\0"
  /* 7851 */ "MODU_MMR6\0"
  /* 7861 */ "MUHU_MMR6\0"
  /* 7871 */ "ADDIU_MMR6\0"
  /* 7882 */ "MULU_MMR6\0"
  /* 7892 */ "DIVU_MMR6\0"
  /* 7902 */ "DIV_MMR6\0"
  /* 7911 */ "TLBINV_MMR6\0"
  /* 7923 */ "LW_MMR6\0"
  /* 7931 */ "SW_MMR6\0"
  /* 7939 */ "CVT_S_W_MMR6\0"
  /* 7952 */ "SELNEZ_MMR6\0"
  /* 7964 */ "CLZ_MMR6\0"
  /* 7973 */ "SELEQZ_MMR6\0"
  /* 7985 */ "PseudoIndirectBranch_MMR6\0"
  /* 8011 */ "LDC2_R6\0"
  /* 8019 */ "SDC2_R6\0"
  /* 8027 */ "LWC2_R6\0"
  /* 8035 */ "SWC2_R6\0"
  /* 8043 */ "JR_HB64_R6\0"
  /* 8054 */ "SC64_R6\0"
  /* 8062 */ "LL64_R6\0"
  /* 8070 */ "DLSA_R6\0"
  /* 8078 */ "JR_HB_R6\0"
  /* 8087 */ "SC_R6\0"
  /* 8093 */ "SCD_R6\0"
  /* 8100 */ "LLD_R6\0"
  /* 8107 */ "CACHE_R6\0"
  /* 8116 */ "PREF_R6\0"
  /* 8124 */ "LL_R6\0"
  /* 8130 */ "DMUL_R6\0"
  /* 8138 */ "DCLO_R6\0"
  /* 8146 */ "SDBBP_R6\0"
  /* 8155 */ "DCLZ_R6\0"
  /* 8163 */ "PseudoIndrectHazardBranchR6\0"
  /* 8191 */ "PseudoIndirectBranchR6\0"
  /* 8214 */ "LOAD_ACC128\0"
  /* 8226 */ "STORE_ACC128\0"
  /* 8239 */ "ATOMIC_LOAD_SUB_I8\0"
  /* 8258 */ "ATOMIC_LOAD_ADD_I8\0"
  /* 8277 */ "ATOMIC_LOAD_NAND_I8\0"
  /* 8297 */ "ATOMIC_LOAD_AND_I8\0"
  /* 8316 */ "ATOMIC_LOAD_UMIN_I8\0"
  /* 8336 */ "ATOMIC_LOAD_MIN_I8\0"
  /* 8355 */ "ATOMIC_SWAP_I8\0"
  /* 8370 */ "ATOMIC_CMP_SWAP_I8\0"
  /* 8389 */ "ATOMIC_LOAD_XOR_I8\0"
  /* 8408 */ "ATOMIC_LOAD_OR_I8\0"
  /* 8426 */ "ATOMIC_LOAD_UMAX_I8\0"
  /* 8446 */ "ATOMIC_LOAD_MAX_I8\0"
  /* 8465 */ "SAA\0"
  /* 8469 */ "PRECEU_PH_QBLA\0"
  /* 8484 */ "PRECEQU_PH_QBLA\0"
  /* 8500 */ "G_FMA\0"
  /* 8506 */ "G_STRICT_FMA\0"
  /* 8519 */ "PRECEU_PH_QBRA\0"
  /* 8534 */ "PRECEQU_PH_QBRA\0"
  /* 8550 */ "DSRA\0"
  /* 8555 */ "ATOMIC_LOAD_SUB_I32_POSTRA\0"
  /* 8582 */ "ATOMIC_LOAD_ADD_I32_POSTRA\0"
  /* 8609 */ "ATOMIC_LOAD_NAND_I32_POSTRA\0"
  /* 8637 */ "ATOMIC_LOAD_AND_I32_POSTRA\0"
  /* 8664 */ "ATOMIC_LOAD_UMIN_I32_POSTRA\0"
  /* 8692 */ "ATOMIC_LOAD_MIN_I32_POSTRA\0"
  /* 8719 */ "ATOMIC_SWAP_I32_POSTRA\0"
  /* 8742 */ "ATOMIC_CMP_SWAP_I32_POSTRA\0"
  /* 8769 */ "ATOMIC_LOAD_XOR_I32_POSTRA\0"
  /* 8796 */ "ATOMIC_LOAD_OR_I32_POSTRA\0"
  /* 8822 */ "ATOMIC_LOAD_UMAX_I32_POSTRA\0"
  /* 8850 */ "ATOMIC_LOAD_MAX_I32_POSTRA\0"
  /* 8877 */ "ATOMIC_LOAD_SUB_I64_POSTRA\0"
  /* 8904 */ "ATOMIC_LOAD_ADD_I64_POSTRA\0"
  /* 8931 */ "ATOMIC_LOAD_NAND_I64_POSTRA\0"
  /* 8959 */ "ATOMIC_LOAD_AND_I64_POSTRA\0"
  /* 8986 */ "ATOMIC_LOAD_UMIN_I64_POSTRA\0"
  /* 9014 */ "ATOMIC_LOAD_MIN_I64_POSTRA\0"
  /* 9041 */ "ATOMIC_SWAP_I64_POSTRA\0"
  /* 9064 */ "ATOMIC_CMP_SWAP_I64_POSTRA\0"
  /* 9091 */ "ATOMIC_LOAD_XOR_I64_POSTRA\0"
  /* 9118 */ "ATOMIC_LOAD_OR_I64_POSTRA\0"
  /* 9144 */ "ATOMIC_LOAD_UMAX_I64_POSTRA\0"
  /* 9172 */ "ATOMIC_LOAD_MAX_I64_POSTRA\0"
  /* 9199 */ "ATOMIC_LOAD_SUB_I16_POSTRA\0"
  /* 9226 */ "ATOMIC_LOAD_ADD_I16_POSTRA\0"
  /* 9253 */ "ATOMIC_LOAD_NAND_I16_POSTRA\0"
  /* 9281 */ "ATOMIC_LOAD_AND_I16_POSTRA\0"
  /* 9308 */ "ATOMIC_LOAD_UMIN_I16_POSTRA\0"
  /* 9336 */ "ATOMIC_LOAD_MIN_I16_POSTRA\0"
  /* 9363 */ "ATOMIC_SWAP_I16_POSTRA\0"
  /* 9386 */ "ATOMIC_CMP_SWAP_I16_POSTRA\0"
  /* 9413 */ "ATOMIC_LOAD_XOR_I16_POSTRA\0"
  /* 9440 */ "ATOMIC_LOAD_OR_I16_POSTRA\0"
  /* 9466 */ "ATOMIC_LOAD_UMAX_I16_POSTRA\0"
  /* 9494 */ "ATOMIC_LOAD_MAX_I16_POSTRA\0"
  /* 9521 */ "ATOMIC_LOAD_SUB_I8_POSTRA\0"
  /* 9547 */ "ATOMIC_LOAD_ADD_I8_POSTRA\0"
  /* 9573 */ "ATOMIC_LOAD_NAND_I8_POSTRA\0"
  /* 9600 */ "ATOMIC_LOAD_AND_I8_POSTRA\0"
  /* 9626 */ "ATOMIC_LOAD_UMIN_I8_POSTRA\0"
  /* 9653 */ "ATOMIC_LOAD_MIN_I8_POSTRA\0"
  /* 9679 */ "ATOMIC_SWAP_I8_POSTRA\0"
  /* 9701 */ "ATOMIC_CMP_SWAP_I8_POSTRA\0"
  /* 9727 */ "ATOMIC_LOAD_XOR_I8_POSTRA\0"
  /* 9753 */ "ATOMIC_LOAD_OR_I8_POSTRA\0"
  /* 9778 */ "ATOMIC_LOAD_UMAX_I8_POSTRA\0"
  /* 9805 */ "ATOMIC_LOAD_MAX_I8_POSTRA\0"
  /* 9831 */ "RetRA\0"
  /* 9837 */ "DLSA\0"
  /* 9842 */ "CFCMSA\0"
  /* 9849 */ "CTCMSA\0"
  /* 9856 */ "CRC32B\0"
  /* 9863 */ "CRC32CB\0"
  /* 9871 */ "SEB\0"
  /* 9875 */ "EHB\0"
  /* 9879 */ "TAILCALLREGHB\0"
  /* 9893 */ "JR_HB\0"
  /* 9899 */ "JALR_HB\0"
  /* 9907 */ "LB\0"
  /* 9910 */ "SHRA_QB\0"
  /* 9918 */ "CMPGDU_LE_QB\0"
  /* 9931 */ "CMPGU_LE_QB\0"
  /* 9943 */ "PseudoCMPU_LE_QB\0"
  /* 9960 */ "SUBUH_QB\0"
  /* 9969 */ "ADDUH_QB\0"
  /* 9978 */ "PseudoPICK_QB\0"
  /* 9992 */ "SHLL_QB\0"
  /* 10000 */ "REPL_QB\0"
  /* 10008 */ "SHRL_QB\0"
  /* 10016 */ "CMPGDU_EQ_QB\0"
  /* 10029 */ "CMPGU_EQ_QB\0"
  /* 10041 */ "PseudoCMPU_EQ_QB\0"
  /* 10058 */ "SHRA_R_QB\0"
  /* 10068 */ "SUBUH_R_QB\0"
  /* 10079 */ "ADDUH_R_QB\0"
  /* 10090 */ "SHRAV_R_QB\0"
  /* 10101 */ "ABSQ_S_QB\0"
  /* 10111 */ "SUBU_S_QB\0"
  /* 10121 */ "ADDU_S_QB\0"
  /* 10131 */ "CMPGDU_LT_QB\0"
  /* 10144 */ "CMPGU_LT_QB\0"
  /* 10156 */ "PseudoCMPU_LT_QB\0"
  /* 10173 */ "SUBU_QB\0"
  /* 10181 */ "ADDU_QB\0"
  /* 10189 */ "SHRAV_QB\0"
  /* 10198 */ "SHLLV_QB\0"
  /* 10207 */ "REPLV_QB\0"
  /* 10216 */ "SHRLV_QB\0"
  /* 10225 */ "RADDU_W_QB\0"
  /* 10236 */ "SB\0"
  /* 10239 */ "MODSUB\0"
  /* 10246 */ "G_FSUB\0"
  /* 10253 */ "G_STRICT_FSUB\0"
  /* 10267 */ "G_ATOMICRMW_FSUB\0"
  /* 10284 */ "PseudoMSUB\0"
  /* 10295 */ "G_SUB\0"
  /* 10301 */ "G_ATOMICRMW_SUB\0"
  /* 10317 */ "SRA_B\0"
  /* 10323 */ "ADD_A_B\0"
  /* 10331 */ "MIN_A_B\0"
  /* 10339 */ "ADDS_A_B\0"
  /* 10348 */ "MAX_A_B\0"
  /* 10356 */ "NLOC_B\0"
  /* 10363 */ "NLZC_B\0"
  /* 10370 */ "SLD_B\0"
  /* 10376 */ "PCKOD_B\0"
  /* 10384 */ "ILVOD_B\0"
  /* 10392 */ "INSVE_B\0"
  /* 10400 */ "VSHF_B\0"
  /* 10407 */ "BNEG_B\0"
  /* 10414 */ "SRAI_B\0"
  /* 10421 */ "SLDI_B\0"
  /* 10428 */ "ANDI_B\0"
  /* 10435 */ "BNEGI_B\0"
  /* 10443 */ "BSELI_B\0"
  /* 10451 */ "SLLI_B\0"
  /* 10458 */ "SRLI_B\0"
  /* 10465 */ "BINSLI_B\0"
  /* 10474 */ "CEQI_B\0"
  /* 10481 */ "SRARI_B\0"
  /* 10489 */ "BCLRI_B\0"
  /* 10497 */ "SRLRI_B\0"
  /* 10505 */ "NORI_B\0"
  /* 10512 */ "XORI_B\0"
  /* 10519 */ "BINSRI_B\0"
  /* 10528 */ "SPLATI_B\0"
  /* 10537 */ "BSETI_B\0"
  /* 10545 */ "SUBVI_B\0"
  /* 10553 */ "ADDVI_B\0"
  /* 10561 */ "BMZI_B\0"
  /* 10568 */ "BMNZI_B\0"
  /* 10576 */ "FILL_B\0"
  /* 10583 */ "SLL_B\0"
  /* 10589 */ "SRL_B\0"
  /* 10595 */ "BINSL_B\0"
  /* 10603 */ "ILVL_B\0"
  /* 10610 */ "CEQ_B\0"
  /* 10616 */ "SRAR_B\0"
  /* 10623 */ "BCLR_B\0"
  /* 10630 */ "SRLR_B\0"
  /* 10637 */ "BINSR_B\0"
  /* 10645 */ "ILVR_B\0"
  /* 10652 */ "ASUB_S_B\0"
  /* 10661 */ "MOD_S_B\0"
  /* 10669 */ "CLE_S_B\0"
  /* 10677 */ "AVE_S_B\0"
  /* 10685 */ "CLEI_S_B\0"
  /* 10694 */ "MINI_S_B\0"
  /* 10703 */ "CLTI_S_B\0"
  /* 10712 */ "MAXI_S_B\0"
  /* 10721 */ "MIN_S_B\0"
  /* 10729 */ "AVER_S_B\0"
  /* 10738 */ "SUBS_S_B\0"
  /* 10747 */ "ADDS_S_B\0"
  /* 10756 */ "SAT_S_B\0"
  /* 10764 */ "CLT_S_B\0"
  /* 10772 */ "SUBSUU_S_B\0"
  /* 10783 */ "DIV_S_B\0"
  /* 10791 */ "MAX_S_B\0"
  /* 10799 */ "COPY_S_B\0"
  /* 10808 */ "SPLAT_B\0"
  /* 10816 */ "BSET_B\0"
  /* 10823 */ "PCNT_B\0"
  /* 10830 */ "INSERT_B\0"
  /* 10839 */ "ST_B\0"
  /* 10844 */ "ASUB_U_B\0"
  /* 10853 */ "MOD_U_B\0"
  /* 10861 */ "CLE_U_B\0"
  /* 10869 */ "AVE_U_B\0"
  /* 10877 */ "CLEI_U_B\0"
  /* 10886 */ "MINI_U_B\0"
  /* 10895 */ "CLTI_U_B\0"
  /* 10904 */ "MAXI_U_B\0"
  /* 10913 */ "MIN_U_B\0"
  /* 10921 */ "AVER_U_B\0"
  /* 10930 */ "SUBS_U_B\0"
  /* 10939 */ "ADDS_U_B\0"
  /* 10948 */ "SUBSUS_U_B\0"
  /* 10959 */ "SAT_U_B\0"
  /* 10967 */ "CLT_U_B\0"
  /* 10975 */ "DIV_U_B\0"
  /* 10983 */ "MAX_U_B\0"
  /* 10991 */ "COPY_U_B\0"
  /* 11000 */ "MSUBV_B\0"
  /* 11008 */ "MADDV_B\0"
  /* 11016 */ "PCKEV_B\0"
  /* 11024 */ "ILVEV_B\0"
  /* 11032 */ "MULV_B\0"
  /* 11039 */ "BZ_B\0"
  /* 11044 */ "BNZ_B\0"
  /* 11050 */ "BC\0"
  /* 11053 */ "BGEC\0"
  /* 11058 */ "BNEC\0"
  /* 11063 */ "JIC\0"
  /* 11067 */ "G_INTRINSIC\0"
  /* 11079 */ "BALC\0"
  /* 11084 */ "JIALC\0"
  /* 11090 */ "BGEZALC\0"
  /* 11098 */ "BLEZALC\0"
  /* 11106 */ "BNEZALC\0"
  /* 11114 */ "BEQZALC\0"
  /* 11122 */ "BGTZALC\0"
  /* 11130 */ "BLTZALC\0"
  /* 11138 */ "ERETNC\0"
  /* 11145 */ "G_FPTRUNC\0"
  /* 11155 */ "G_INTRINSIC_TRUNC\0"
  /* 11173 */ "G_TRUNC\0"
  /* 11181 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 11202 */ "SYNC\0"
  /* 11207 */ "G_DYN_STACKALLOC\0"
  /* 11224 */ "LDPC\0"
  /* 11229 */ "AUIPC\0"
  /* 11235 */ "ALUIPC\0"
  /* 11242 */ "ADDIUPC\0"
  /* 11250 */ "LWUPC\0"
  /* 11256 */ "LWPC\0"
  /* 11261 */ "BEQC\0"
  /* 11266 */ "ADDSC\0"
  /* 11272 */ "BLTC\0"
  /* 11277 */ "BGEUC\0"
  /* 11283 */ "BLTUC\0"
  /* 11289 */ "BNVC\0"
  /* 11294 */ "BOVC\0"
  /* 11299 */ "ADDWC\0"
  /* 11305 */ "BGEZC\0"
  /* 11311 */ "BLEZC\0"
  /* 11317 */ "BNEZC\0"
  /* 11323 */ "BEQZC\0"
  /* 11329 */ "BGTZC\0"
  /* 11335 */ "BLTZC\0"
  /* 11341 */ "CRC32D\0"
  /* 11348 */ "SAAD\0"
  /* 11353 */ "G_FMAD\0"
  /* 11360 */ "G_INDEXED_SEXTLOAD\0"
  /* 11379 */ "G_SEXTLOAD\0"
  /* 11390 */ "G_INDEXED_ZEXTLOAD\0"
  /* 11409 */ "G_ZEXTLOAD\0"
  /* 11420 */ "G_INDEXED_LOAD\0"
  /* 11435 */ "G_LOAD\0"
  /* 11442 */ "CRC32CD\0"
  /* 11450 */ "SCD\0"
  /* 11454 */ "DADD\0"
  /* 11459 */ "G_VECREDUCE_FADD\0"
  /* 11476 */ "G_FADD\0"
  /* 11483 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 11504 */ "G_STRICT_FADD\0"
  /* 11518 */ "G_ATOMICRMW_FADD\0"
  /* 11535 */ "PseudoMADD\0"
  /* 11546 */ "G_VECREDUCE_ADD\0"
  /* 11562 */ "G_ADD\0"
  /* 11568 */ "G_PTR_ADD\0"
  /* 11578 */ "G_ATOMICRMW_ADD\0"
  /* 11594 */ "DSHD\0"
  /* 11599 */ "YIELD\0"
  /* 11605 */ "LLD\0"
  /* 11609 */ "G_ATOMICRMW_NAND\0"
  /* 11626 */ "G_VECREDUCE_AND\0"
  /* 11642 */ "G_AND\0"
  /* 11648 */ "G_ATOMICRMW_AND\0"
  /* 11664 */ "PREPEND\0"
  /* 11672 */ "APPEND\0"
  /* 11679 */ "LIFETIME_END\0"
  /* 11692 */ "G_BRCOND\0"
  /* 11701 */ "G_LLROUND\0"
  /* 11711 */ "G_LROUND\0"
  /* 11720 */ "G_INTRINSIC_ROUND\0"
  /* 11738 */ "G_INTRINSIC_FPTRUNC_ROUND\0"
  /* 11764 */ "DMOD\0"
  /* 11769 */ "LOAD_STACK_GUARD\0"
  /* 11786 */ "SD\0"
  /* 11789 */ "FLOG2_D\0"
  /* 11797 */ "FEXP2_D\0"
  /* 11805 */ "MINA_D\0"
  /* 11812 */ "SRA_D\0"
  /* 11818 */ "MAXA_D\0"
  /* 11825 */ "ADD_A_D\0"
  /* 11833 */ "FMIN_A_D\0"
  /* 11842 */ "ADDS_A_D\0"
  /* 11851 */ "FMAX_A_D\0"
  /* 11860 */ "FSUB_D\0"
  /* 11867 */ "FMSUB_D\0"
  /* 11875 */ "NLOC_D\0"
  /* 11882 */ "NLZC_D\0"
  /* 11889 */ "FADD_D\0"
  /* 11896 */ "FMADD_D\0"
  /* 11904 */ "SLD_D\0"
  /* 11910 */ "PCKOD_D\0"
  /* 11918 */ "ILVOD_D\0"
  /* 11926 */ "FCLE_D\0"
  /* 11933 */ "FSLE_D\0"
  /* 11940 */ "CMP_SLE_D\0"
  /* 11950 */ "FCULE_D\0"
  /* 11958 */ "FSULE_D\0"
  /* 11966 */ "CMP_SULE_D\0"
  /* 11977 */ "CMP_ULE_D\0"
  /* 11987 */ "CMP_LE_D\0"
  /* 11996 */ "FCNE_D\0"
  /* 12003 */ "FSNE_D\0"
  /* 12010 */ "FCUNE_D\0"
  /* 12018 */ "FSUNE_D\0"
  /* 12026 */ "INSVE_D\0"
  /* 12034 */ "FCAF_D\0"
  /* 12041 */ "FSAF_D\0"
  /* 12048 */ "CMP_SAF_D\0"
  /* 12058 */ "MSUBF_D\0"
  /* 12066 */ "MADDF_D\0"
  /* 12074 */ "VSHF_D\0"
  /* 12081 */ "CMP_F_D\0"
  /* 12089 */ "BNEG_D\0"
  /* 12096 */ "SRAI_D\0"
  /* 12103 */ "SLDI_D\0"
  /* 12110 */ "BNEGI_D\0"
  /* 12118 */ "SLLI_D\0"
  /* 12125 */ "SRLI_D\0"
  /* 12132 */ "BINSLI_D\0"
  /* 12141 */ "CEQI_D\0"
  /* 12148 */ "SRARI_D\0"
  /* 12156 */ "BCLRI_D\0"
  /* 12164 */ "SRLRI_D\0"
  /* 12172 */ "BINSRI_D\0"
  /* 12181 */ "SPLATI_D\0"
  /* 12190 */ "BSETI_D\0"
  /* 12198 */ "SUBVI_D\0"
  /* 12206 */ "ADDVI_D\0"
  /* 12214 */ "SEL_D\0"
  /* 12220 */ "FILL_D\0"
  /* 12227 */ "SLL_D\0"
  /* 12233 */ "FEXUPL_D\0"
  /* 12242 */ "FFQL_D\0"
  /* 12249 */ "SRL_D\0"
  /* 12255 */ "BINSL_D\0"
  /* 12263 */ "FMUL_D\0"
  /* 12270 */ "ILVL_D\0"
  /* 12277 */ "FMIN_D\0"
  /* 12284 */ "FCUN_D\0"
  /* 12291 */ "FSUN_D\0"
  /* 12298 */ "CMP_SUN_D\0"
  /* 12308 */ "CMP_UN_D\0"
  /* 12317 */ "FRCP_D\0"
  /* 12324 */ "FCEQ_D\0"
  /* 12331 */ "FSEQ_D\0"
  /* 12338 */ "CMP_SEQ_D\0"
  /* 12348 */ "FCUEQ_D\0"
  /* 12356 */ "FSUEQ_D\0"
  /* 12364 */ "CMP_SUEQ_D\0"
  /* 12375 */ "CMP_UEQ_D\0"
  /* 12385 */ "CMP_EQ_D\0"
  /* 12394 */ "SRAR_D\0"
  /* 12401 */ "LDR_D\0"
  /* 12407 */ "BCLR_D\0"
  /* 12414 */ "SRLR_D\0"
  /* 12421 */ "FCOR_D\0"
  /* 12428 */ "FSOR_D\0"
  /* 12435 */ "FEXUPR_D\0"
  /* 12444 */ "FFQR_D\0"
  /* 12451 */ "BINSR_D\0"
  /* 12459 */ "STR_D\0"
  /* 12465 */ "ILVR_D\0"
  /* 12472 */ "FABS_D\0"
  /* 12479 */ "FCLASS_D\0"
  /* 12488 */ "ASUB_S_D\0"
  /* 12497 */ "HSUB_S_D\0"
  /* 12506 */ "DPSUB_S_D\0"
  /* 12516 */ "FTRUNC_S_D\0"
  /* 12527 */ "HADD_S_D\0"
  /* 12536 */ "DPADD_S_D\0"
  /* 12546 */ "MOD_S_D\0"
  /* 12554 */ "CLE_S_D\0"
  /* 12562 */ "AVE_S_D\0"
  /* 12570 */ "CLEI_S_D\0"
  /* 12579 */ "MINI_S_D\0"
  /* 12588 */ "CLTI_S_D\0"
  /* 12597 */ "MAXI_S_D\0"
  /* 12606 */ "MIN_S_D\0"
  /* 12614 */ "DOTP_S_D\0"
  /* 12623 */ "AVER_S_D\0"
  /* 12632 */ "SUBS_S_D\0"
  /* 12641 */ "ADDS_S_D\0"
  /* 12650 */ "SAT_S_D\0"
  /* 12658 */ "CLT_S_D\0"
  /* 12666 */ "FFINT_S_D\0"
  /* 12676 */ "FTINT_S_D\0"
  /* 12686 */ "SUBSUU_S_D\0"
  /* 12697 */ "DIV_S_D\0"
  /* 12705 */ "MAX_S_D\0"
  /* 12713 */ "COPY_S_D\0"
  /* 12722 */ "SPLAT_D\0"
  /* 12730 */ "BSET_D\0"
  /* 12737 */ "FCLT_D\0"
  /* 12744 */ "FSLT_D\0"
  /* 12751 */ "CMP_SLT_D\0"
  /* 12761 */ "FCULT_D\0"
  /* 12769 */ "FSULT_D\0"
  /* 12777 */ "CMP_SULT_D\0"
  /* 12788 */ "CMP_ULT_D\0"
  /* 12798 */ "CMP_LT_D\0"
  /* 12807 */ "PCNT_D\0"
  /* 12814 */ "FRINT_D\0"
  /* 12822 */ "INSERT_D\0"
  /* 12831 */ "FSQRT_D\0"
  /* 12839 */ "FRSQRT_D\0"
  /* 12848 */ "ST_D\0"
  /* 12853 */ "ASUB_U_D\0"
  /* 12862 */ "HSUB_U_D\0"
  /* 12871 */ "DPSUB_U_D\0"
  /* 12881 */ "FTRUNC_U_D\0"
  /* 12892 */ "HADD_U_D\0"
  /* 12901 */ "DPADD_U_D\0"
  /* 12911 */ "MOD_U_D\0"
  /* 12919 */ "CLE_U_D\0"
  /* 12927 */ "AVE_U_D\0"
  /* 12935 */ "CLEI_U_D\0"
  /* 12944 */ "MINI_U_D\0"
  /* 12953 */ "CLTI_U_D\0"
  /* 12962 */ "MAXI_U_D\0"
  /* 12971 */ "MIN_U_D\0"
  /* 12979 */ "DOTP_U_D\0"
  /* 12988 */ "AVER_U_D\0"
  /* 12997 */ "SUBS_U_D\0"
  /* 13006 */ "ADDS_U_D\0"
  /* 13015 */ "SUBSUS_U_D\0"
  /* 13026 */ "SAT_U_D\0"
  /* 13034 */ "CLT_U_D\0"
  /* 13042 */ "FFINT_U_D\0"
  /* 13052 */ "FTINT_U_D\0"
  /* 13062 */ "DIV_U_D\0"
  /* 13070 */ "MAX_U_D\0"
  /* 13078 */ "MSUBV_D\0"
  /* 13086 */ "MADDV_D\0"
  /* 13094 */ "PCKEV_D\0"
  /* 13102 */ "ILVEV_D\0"
  /* 13110 */ "FDIV_D\0"
  /* 13117 */ "MULV_D\0"
  /* 13124 */ "PseudoTRUNC_W_D\0"
  /* 13140 */ "FMAX_D\0"
  /* 13147 */ "BZ_D\0"
  /* 13152 */ "SELNEZ_D\0"
  /* 13161 */ "BNZ_D\0"
  /* 13167 */ "SELEQZ_D\0"
  /* 13176 */ "LBE\0"
  /* 13180 */ "PSEUDO_PROBE\0"
  /* 13193 */ "SBE\0"
  /* 13197 */ "G_SSUBE\0"
  /* 13205 */ "G_USUBE\0"
  /* 13213 */ "G_FENCE\0"
  /* 13221 */ "ARITH_FENCE\0"
  /* 13233 */ "REG_SEQUENCE\0"
  /* 13246 */ "SCE\0"
  /* 13250 */ "G_SADDE\0"
  /* 13258 */ "G_UADDE\0"
  /* 13266 */ "G_FMINNUM_IEEE\0"
  /* 13281 */ "G_FMAXNUM_IEEE\0"
  /* 13296 */ "CACHEE\0"
  /* 13303 */ "PREFE\0"
  /* 13309 */ "BGE\0"
  /* 13313 */ "SGE\0"
  /* 13317 */ "TGE\0"
  /* 13321 */ "CACHE\0"
  /* 13327 */ "LHE\0"
  /* 13331 */ "SHE\0"
  /* 13335 */ "SIGRIE\0"
  /* 13342 */ "G_JUMP_TABLE\0"
  /* 13355 */ "BUNDLE\0"
  /* 13362 */ "LLE\0"
  /* 13366 */ "SLE\0"
  /* 13370 */ "LWLE\0"
  /* 13375 */ "SWLE\0"
  /* 13380 */ "BNE\0"
  /* 13384 */ "G_MEMCPY_INLINE\0"
  /* 13400 */ "SNE\0"
  /* 13404 */ "TNE\0"
  /* 13408 */ "LOCAL_ESCAPE\0"
  /* 13421 */ "DVPE\0"
  /* 13426 */ "EVPE\0"
  /* 13431 */ "G_INDEXED_STORE\0"
  /* 13447 */ "G_STORE\0"
  /* 13455 */ "LWRE\0"
  /* 13460 */ "SWRE\0"
  /* 13465 */ "G_BITREVERSE\0"
  /* 13478 */ "PAUSE\0"
  /* 13484 */ "DBG_VALUE\0"
  /* 13494 */ "G_GLOBAL_VALUE\0"
  /* 13509 */ "G_MEMMOVE\0"
  /* 13519 */ "LWE\0"
  /* 13523 */ "SWE\0"
  /* 13527 */ "G_FREEZE\0"
  /* 13536 */ "G_FCANONICALIZE\0"
  /* 13552 */ "LBuE\0"
  /* 13557 */ "LHuE\0"
  /* 13562 */ "BC1F\0"
  /* 13567 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 13585 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 13603 */ "G_IMPLICIT_DEF\0"
  /* 13618 */ "PREF\0"
  /* 13623 */ "DBG_INSTR_REF\0"
  /* 13637 */ "TLBINVF\0"
  /* 13645 */ "TLBGINVF\0"
  /* 13654 */ "G_FNEG\0"
  /* 13661 */ "TAILCALLHB64R6REG\0"
  /* 13679 */ "TAILCALL64R6REG\0"
  /* 13695 */ "TAILCALLHBR6REG\0"
  /* 13711 */ "TAILCALLR6REG\0"
  /* 13725 */ "EXTRACT_SUBREG\0"
  /* 13740 */ "INSERT_SUBREG\0"
  /* 13754 */ "TAILCALLREG\0"
  /* 13766 */ "G_SEXT_INREG\0"
  /* 13779 */ "SUBREG_TO_REG\0"
  /* 13793 */ "G_ATOMIC_CMPXCHG\0"
  /* 13810 */ "G_ATOMICRMW_XCHG\0"
  /* 13827 */ "G_FLOG\0"
  /* 13834 */ "G_VAARG\0"
  /* 13842 */ "PREALLOCATED_ARG\0"
  /* 13859 */ "CRC32H\0"
  /* 13866 */ "DSBH\0"
  /* 13871 */ "WSBH\0"
  /* 13876 */ "CRC32CH\0"
  /* 13884 */ "SEH\0"
  /* 13888 */ "G_SMULH\0"
  /* 13896 */ "G_UMULH\0"
  /* 13904 */ "SHRA_PH\0"
  /* 13912 */ "PRECRQ_QB_PH\0"
  /* 13925 */ "PRECR_QB_PH\0"
  /* 13937 */ "PRECRQU_S_QB_PH\0"
  /* 13953 */ "PseudoCMP_LE_PH\0"
  /* 13969 */ "SUBQH_PH\0"
  /* 13978 */ "ADDQH_PH\0"
  /* 13987 */ "PseudoPICK_PH\0"
  /* 14001 */ "SHLL_PH\0"
  /* 14009 */ "REPL_PH\0"
  /* 14017 */ "SHRL_PH\0"
  /* 14025 */ "PACKRL_PH\0"
  /* 14035 */ "MUL_PH\0"
  /* 14042 */ "SUBQ_PH\0"
  /* 14050 */ "ADDQ_PH\0"
  /* 14058 */ "PseudoCMP_EQ_PH\0"
  /* 14074 */ "SHRA_R_PH\0"
  /* 14084 */ "SUBQH_R_PH\0"
  /* 14095 */ "ADDQH_R_PH\0"
  /* 14106 */ "SHRAV_R_PH\0"
  /* 14117 */ "MULQ_RS_PH\0"
  /* 14128 */ "SHLL_S_PH\0"
  /* 14138 */ "MUL_S_PH\0"
  /* 14147 */ "SUBQ_S_PH\0"
  /* 14157 */ "ADDQ_S_PH\0"
  /* 14167 */ "MULQ_S_PH\0"
  /* 14177 */ "ABSQ_S_PH\0"
  /* 14187 */ "SUBU_S_PH\0"
  /* 14197 */ "ADDU_S_PH\0"
  /* 14207 */ "SHLLV_S_PH\0"
  /* 14218 */ "PseudoCMP_LT_PH\0"
  /* 14234 */ "SUBU_PH\0"
  /* 14242 */ "ADDU_PH\0"
  /* 14250 */ "SHRAV_PH\0"
  /* 14259 */ "SHLLV_PH\0"
  /* 14268 */ "REPLV_PH\0"
  /* 14277 */ "SHRLV_PH\0"
  /* 14286 */ "DPA_W_PH\0"
  /* 14295 */ "MULSA_W_PH\0"
  /* 14306 */ "DPAQX_SA_W_PH\0"
  /* 14320 */ "DPSQX_SA_W_PH\0"
  /* 14334 */ "DPS_W_PH\0"
  /* 14343 */ "DPAQ_S_W_PH\0"
  /* 14355 */ "MULSAQ_S_W_PH\0"
  /* 14369 */ "DPSQ_S_W_PH\0"
  /* 14381 */ "DPAQX_S_W_PH\0"
  /* 14394 */ "DPSQX_S_W_PH\0"
  /* 14407 */ "DPAX_W_PH\0"
  /* 14417 */ "DPSX_W_PH\0"
  /* 14427 */ "SH\0"
  /* 14430 */ "DMUH\0"
  /* 14435 */ "SRA_H\0"
  /* 14441 */ "ADD_A_H\0"
  /* 14449 */ "MIN_A_H\0"
  /* 14457 */ "ADDS_A_H\0"
  /* 14466 */ "MAX_A_H\0"
  /* 14474 */ "NLOC_H\0"
  /* 14481 */ "NLZC_H\0"
  /* 14488 */ "SLD_H\0"
  /* 14494 */ "PCKOD_H\0"
  /* 14502 */ "ILVOD_H\0"
  /* 14510 */ "INSVE_H\0"
  /* 14518 */ "VSHF_H\0"
  /* 14525 */ "BNEG_H\0"
  /* 14532 */ "SRAI_H\0"
  /* 14539 */ "SLDI_H\0"
  /* 14546 */ "BNEGI_H\0"
  /* 14554 */ "SLLI_H\0"
  /* 14561 */ "SRLI_H\0"
  /* 14568 */ "BINSLI_H\0"
  /* 14577 */ "CEQI_H\0"
  /* 14584 */ "SRARI_H\0"
  /* 14592 */ "BCLRI_H\0"
  /* 14600 */ "SRLRI_H\0"
  /* 14608 */ "BINSRI_H\0"
  /* 14617 */ "SPLATI_H\0"
  /* 14626 */ "BSETI_H\0"
  /* 14634 */ "SUBVI_H\0"
  /* 14642 */ "ADDVI_H\0"
  /* 14650 */ "FILL_H\0"
  /* 14657 */ "SLL_H\0"
  /* 14663 */ "SRL_H\0"
  /* 14669 */ "BINSL_H\0"
  /* 14677 */ "ILVL_H\0"
  /* 14684 */ "FEXDO_H\0"
  /* 14692 */ "CEQ_H\0"
  /* 14698 */ "FTQ_H\0"
  /* 14704 */ "MSUB_Q_H\0"
  /* 14713 */ "MADD_Q_H\0"
  /* 14722 */ "MUL_Q_H\0"
  /* 14730 */ "MSUBR_Q_H\0"
  /* 14740 */ "MADDR_Q_H\0"
  /* 14750 */ "MULR_Q_H\0"
  /* 14759 */ "SRAR_H\0"
  /* 14766 */ "BCLR_H\0"
  /* 14773 */ "SRLR_H\0"
  /* 14780 */ "BINSR_H\0"
  /* 14788 */ "ILVR_H\0"
  /* 14795 */ "ASUB_S_H\0"
  /* 14804 */ "HSUB_S_H\0"
  /* 14813 */ "DPSUB_S_H\0"
  /* 14823 */ "HADD_S_H\0"
  /* 14832 */ "DPADD_S_H\0"
  /* 14842 */ "MOD_S_H\0"
  /* 14850 */ "CLE_S_H\0"
  /* 14858 */ "AVE_S_H\0"
  /* 14866 */ "CLEI_S_H\0"
  /* 14875 */ "MINI_S_H\0"
  /* 14884 */ "CLTI_S_H\0"
  /* 14893 */ "MAXI_S_H\0"
  /* 14902 */ "MIN_S_H\0"
  /* 14910 */ "DOTP_S_H\0"
  /* 14919 */ "AVER_S_H\0"
  /* 14928 */ "EXTR_S_H\0"
  /* 14937 */ "SUBS_S_H\0"
  /* 14946 */ "ADDS_S_H\0"
  /* 14955 */ "SAT_S_H\0"
  /* 14963 */ "CLT_S_H\0"
  /* 14971 */ "SUBSUU_S_H\0"
  /* 14982 */ "DIV_S_H\0"
  /* 14990 */ "EXTRV_S_H\0"
  /* 15000 */ "MAX_S_H\0"
  /* 15008 */ "COPY_S_H\0"
  /* 15017 */ "SPLAT_H\0"
  /* 15025 */ "BSET_H\0"
  /* 15032 */ "PCNT_H\0"
  /* 15039 */ "INSERT_H\0"
  /* 15048 */ "ST_H\0"
  /* 15053 */ "ASUB_U_H\0"
  /* 15062 */ "HSUB_U_H\0"
  /* 15071 */ "DPSUB_U_H\0"
  /* 15081 */ "HADD_U_H\0"
  /* 15090 */ "DPADD_U_H\0"
  /* 15100 */ "MOD_U_H\0"
  /* 15108 */ "CLE_U_H\0"
  /* 15116 */ "AVE_U_H\0"
  /* 15124 */ "CLEI_U_H\0"
  /* 15133 */ "MINI_U_H\0"
  /* 15142 */ "CLTI_U_H\0"
  /* 15151 */ "MAXI_U_H\0"
  /* 15160 */ "MIN_U_H\0"
  /* 15168 */ "DOTP_U_H\0"
  /* 15177 */ "AVER_U_H\0"
  /* 15186 */ "SUBS_U_H\0"
  /* 15195 */ "ADDS_U_H\0"
  /* 15204 */ "SUBSUS_U_H\0"
  /* 15215 */ "SAT_U_H\0"
  /* 15223 */ "CLT_U_H\0"
  /* 15231 */ "DIV_U_H\0"
  /* 15239 */ "MAX_U_H\0"
  /* 15247 */ "COPY_U_H\0"
  /* 15256 */ "MSUBV_H\0"
  /* 15264 */ "MADDV_H\0"
  /* 15272 */ "PCKEV_H\0"
  /* 15280 */ "ILVEV_H\0"
  /* 15288 */ "MULV_H\0"
  /* 15295 */ "BZ_H\0"
  /* 15300 */ "BNZ_H\0"
  /* 15306 */ "SYNCI\0"
  /* 15312 */ "DI\0"
  /* 15315 */ "TGEI\0"
  /* 15320 */ "TNEI\0"
  /* 15325 */ "DAHI\0"
  /* 15330 */ "PseudoMFHI\0"
  /* 15341 */ "PseudoMTLOHI\0"
  /* 15354 */ "DBG_PHI\0"
  /* 15362 */ "MFTHI\0"
  /* 15368 */ "MTHI\0"
  /* 15373 */ "MTTHI\0"
  /* 15379 */ "TEQI\0"
  /* 15384 */ "G_FPTOSI\0"
  /* 15393 */ "DATI\0"
  /* 15398 */ "TLTI\0"
  /* 15403 */ "DAUI\0"
  /* 15408 */ "G_FPTOUI\0"
  /* 15417 */ "GINVI\0"
  /* 15423 */ "TLBWI\0"
  /* 15429 */ "TLBGWI\0"
  /* 15436 */ "G_FPOWI\0"
  /* 15444 */ "MOVN_I64_I\0"
  /* 15455 */ "MOVZ_I64_I\0"
  /* 15466 */ "MOVF_I\0"
  /* 15473 */ "PseudoSELECTFP_F_I\0"
  /* 15492 */ "MOVN_I_I\0"
  /* 15501 */ "MOVZ_I_I\0"
  /* 15510 */ "PseudoD_SELECT_I\0"
  /* 15527 */ "PseudoSELECT_I\0"
  /* 15542 */ "MOVT_I\0"
  /* 15549 */ "PseudoSELECTFP_T_I\0"
  /* 15568 */ "J\0"
  /* 15570 */ "BREAK\0"
  /* 15576 */ "FORK\0"
  /* 15581 */ "G_PTRMASK\0"
  /* 15591 */ "BAL\0"
  /* 15595 */ "JAL\0"
  /* 15599 */ "BGEZAL\0"
  /* 15606 */ "BLTZAL\0"
  /* 15613 */ "MULEU_S_PH_QBL\0"
  /* 15628 */ "PRECEU_PH_QBL\0"
  /* 15642 */ "PRECEQU_PH_QBL\0"
  /* 15657 */ "DPAU_H_QBL\0"
  /* 15668 */ "DPSU_H_QBL\0"
  /* 15679 */ "LDL\0"
  /* 15683 */ "SDL\0"
  /* 15687 */ "GC_LABEL\0"
  /* 15696 */ "DBG_LABEL\0"
  /* 15706 */ "EH_LABEL\0"
  /* 15715 */ "ANNOTATION_LABEL\0"
  /* 15732 */ "BGEL\0"
  /* 15737 */ "BLEL\0"
  /* 15742 */ "BNEL\0"
  /* 15747 */ "ICALL_BRANCH_FUNNEL\0"
  /* 15767 */ "BC1FL\0"
  /* 15773 */ "MAQ_SA_W_PHL\0"
  /* 15786 */ "PRECEQ_W_PHL\0"
  /* 15799 */ "MAQ_S_W_PHL\0"
  /* 15811 */ "MULEQ_S_W_PHL\0"
  /* 15825 */ "G_FSHL\0"
  /* 15832 */ "G_SHL\0"
  /* 15838 */ "G_FCEIL\0"
  /* 15846 */ "TAILCALL\0"
  /* 15855 */ "HYPCALL\0"
  /* 15863 */ "SYSCALL\0"
  /* 15871 */ "PATCHABLE_TAIL_CALL\0"
  /* 15891 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 15918 */ "PATCHABLE_EVENT_CALL\0"
  /* 15939 */ "FENTRY_CALL\0"
  /* 15951 */ "BGEZALL\0"
  /* 15959 */ "BLTZALL\0"
  /* 15967 */ "KILL\0"
  /* 15972 */ "DSLL\0"
  /* 15977 */ "G_CONSTANT_POOL\0"
  /* 15993 */ "DROL\0"
  /* 15998 */ "BEQL\0"
  /* 16003 */ "DSRL\0"
  /* 16008 */ "BC1TL\0"
  /* 16014 */ "BGTL\0"
  /* 16019 */ "BLTL\0"
  /* 16024 */ "G_ROTL\0"
  /* 16031 */ "BGEUL\0"
  /* 16037 */ "BLEUL\0"
  /* 16043 */ "DMUL\0"
  /* 16048 */ "G_VECREDUCE_FMUL\0"
  /* 16065 */ "G_FMUL\0"
  /* 16072 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 16093 */ "G_STRICT_FMUL\0"
  /* 16107 */ "G_VECREDUCE_MUL\0"
  /* 16123 */ "G_MUL\0"
  /* 16129 */ "BGTUL\0"
  /* 16135 */ "BLTUL\0"
  /* 16141 */ "LWL\0"
  /* 16145 */ "SWL\0"
  /* 16149 */ "BGEZL\0"
  /* 16155 */ "BLEZL\0"
  /* 16161 */ "BGTZL\0"
  /* 16167 */ "BLTZL\0"
  /* 16173 */ "PseudoCVT_D64_L\0"
  /* 16189 */ "PseudoCVT_S_L\0"
  /* 16203 */ "G_FREM\0"
  /* 16210 */ "G_STRICT_FREM\0"
  /* 16224 */ "G_SREM\0"
  /* 16231 */ "G_UREM\0"
  /* 16238 */ "G_SDIVREM\0"
  /* 16248 */ "G_UDIVREM\0"
  /* 16258 */ "MFGC0_MM\0"
  /* 16267 */ "MFHGC0_MM\0"
  /* 16277 */ "MTHGC0_MM\0"
  /* 16287 */ "MTGC0_MM\0"
  /* 16296 */ "CFC1_MM\0"
  /* 16304 */ "MFC1_MM\0"
  /* 16312 */ "CTC1_MM\0"
  /* 16320 */ "MTC1_MM\0"
  /* 16328 */ "LWC1_MM\0"
  /* 16336 */ "SWC1_MM\0"
  /* 16344 */ "LUXC1_MM\0"
  /* 16353 */ "SUXC1_MM\0"
  /* 16362 */ "LWXC1_MM\0"
  /* 16371 */ "SWXC1_MM\0"
  /* 16380 */ "MFHC1_D32_MM\0"
  /* 16393 */ "MTHC1_D32_MM\0"
  /* 16406 */ "FSUB_D32_MM\0"
  /* 16418 */ "NMSUB_D32_MM\0"
  /* 16431 */ "FADD_D32_MM\0"
  /* 16443 */ "NMADD_D32_MM\0"
  /* 16456 */ "C_NGE_D32_MM\0"
  /* 16469 */ "C_NGLE_D32_MM\0"
  /* 16483 */ "C_OLE_D32_MM\0"
  /* 16496 */ "C_ULE_D32_MM\0"
  /* 16509 */ "C_LE_D32_MM\0"
  /* 16521 */ "C_SF_D32_MM\0"
  /* 16533 */ "MOVF_D32_MM\0"
  /* 16545 */ "C_F_D32_MM\0"
  /* 16556 */ "FNEG_D32_MM\0"
  /* 16568 */ "MOVN_I_D32_MM\0"
  /* 16582 */ "MOVZ_I_D32_MM\0"
  /* 16596 */ "C_NGL_D32_MM\0"
  /* 16609 */ "FMUL_D32_MM\0"
  /* 16621 */ "C_UN_D32_MM\0"
  /* 16633 */ "RECIP_D32_MM\0"
  /* 16646 */ "FCMP_D32_MM\0"
  /* 16658 */ "C_SEQ_D32_MM\0"
  /* 16671 */ "C_UEQ_D32_MM\0"
  /* 16684 */ "C_EQ_D32_MM\0"
  /* 16696 */ "FABS_D32_MM\0"
  /* 16708 */ "CVT_S_D32_MM\0"
  /* 16721 */ "C_NGT_D32_MM\0"
  /* 16734 */ "C_OLT_D32_MM\0"
  /* 16747 */ "C_ULT_D32_MM\0"
  /* 16760 */ "C_LT_D32_MM\0"
  /* 16772 */ "FSQRT_D32_MM\0"
  /* 16785 */ "RSQRT_D32_MM\0"
  /* 16798 */ "MOVT_D32_MM\0"
  /* 16810 */ "FDIV_D32_MM\0"
  /* 16822 */ "FMOV_D32_MM\0"
  /* 16834 */ "CVT_W_D32_MM\0"
  /* 16847 */ "BPOSGE32_MM\0"
  /* 16859 */ "LWM32_MM\0"
  /* 16868 */ "SWM32_MM\0"
  /* 16877 */ "FCMP_S32_MM\0"
  /* 16889 */ "CFC2_MM\0"
  /* 16897 */ "CTC2_MM\0"
  /* 16905 */ "ADDIUR2_MM\0"
  /* 16916 */ "MFHC1_D64_MM\0"
  /* 16929 */ "MTHC1_D64_MM\0"
  /* 16942 */ "MTC1_D64_MM\0"
  /* 16954 */ "FSUB_D64_MM\0"
  /* 16966 */ "FADD_D64_MM\0"
  /* 16978 */ "C_NGE_D64_MM\0"
  /* 16991 */ "C_NGLE_D64_MM\0"
  /* 17005 */ "C_OLE_D64_MM\0"
  /* 17018 */ "C_ULE_D64_MM\0"
  /* 17031 */ "C_LE_D64_MM\0"
  /* 17043 */ "C_SF_D64_MM\0"
  /* 17055 */ "C_F_D64_MM\0"
  /* 17066 */ "FNEG_D64_MM\0"
  /* 17078 */ "C_NGL_D64_MM\0"
  /* 17091 */ "FMUL_D64_MM\0"
  /* 17103 */ "CVT_L_D64_MM\0"
  /* 17116 */ "C_UN_D64_MM\0"
  /* 17128 */ "RECIP_D64_MM\0"
  /* 17141 */ "C_SEQ_D64_MM\0"
  /* 17154 */ "C_UEQ_D64_MM\0"
  /* 17167 */ "C_EQ_D64_MM\0"
  /* 17179 */ "FABS_D64_MM\0"
  /* 17191 */ "CVT_S_D64_MM\0"
  /* 17204 */ "C_NGT_D64_MM\0"
  /* 17217 */ "C_OLT_D64_MM\0"
  /* 17230 */ "C_ULT_D64_MM\0"
  /* 17243 */ "C_LT_D64_MM\0"
  /* 17255 */ "FSQRT_D64_MM\0"
  /* 17268 */ "RSQRT_D64_MM\0"
  /* 17281 */ "FDIV_D64_MM\0"
  /* 17293 */ "FMOV_D64_MM\0"
  /* 17305 */ "CVT_W_D64_MM\0"
  /* 17318 */ "ADDIUS5_MM\0"
  /* 17329 */ "SB16_MM\0"
  /* 17337 */ "JRC16_MM\0"
  /* 17346 */ "AND16_MM\0"
  /* 17355 */ "MOVE16_MM\0"
  /* 17365 */ "SH16_MM\0"
  /* 17373 */ "ANDI16_MM\0"
  /* 17383 */ "MFHI16_MM\0"
  /* 17393 */ "LI16_MM\0"
  /* 17401 */ "BREAK16_MM\0"
  /* 17412 */ "SLL16_MM\0"
  /* 17421 */ "SRL16_MM\0"
  /* 17430 */ "LWM16_MM\0"
  /* 17439 */ "SWM16_MM\0"
  /* 17448 */ "MFLO16_MM\0"
  /* 17458 */ "SDBBP16_MM\0"
  /* 17469 */ "JR16_MM\0"
  /* 17477 */ "JALR16_MM\0"
  /* 17487 */ "XOR16_MM\0"
  /* 17496 */ "JALRS16_MM\0"
  /* 17507 */ "NOT16_MM\0"
  /* 17516 */ "LBU16_MM\0"
  /* 17525 */ "SUBU16_MM\0"
  /* 17535 */ "ADDU16_MM\0"
  /* 17545 */ "LHU16_MM\0"
  /* 17554 */ "LW16_MM\0"
  /* 17562 */ "SW16_MM\0"
  /* 17570 */ "BNEZ16_MM\0"
  /* 17580 */ "BEQZ16_MM\0"
  /* 17590 */ "PRECEU_PH_QBLA_MM\0"
  /* 17608 */ "PRECEQU_PH_QBLA_MM\0"
  /* 17627 */ "PRECEU_PH_QBRA_MM\0"
  /* 17645 */ "PRECEQU_PH_QBRA_MM\0"
  /* 17664 */ "SRA_MM\0"
  /* 17671 */ "SEB_MM\0"
  /* 17678 */ "EHB_MM\0"
  /* 17685 */ "LB_MM\0"
  /* 17691 */ "CMPGU_LE_QB_MM\0"
  /* 17706 */ "CMPU_LE_QB_MM\0"
  /* 17720 */ "PICK_QB_MM\0"
  /* 17731 */ "SHLL_QB_MM\0"
  /* 17742 */ "REPL_QB_MM\0"
  /* 17753 */ "SHRL_QB_MM\0"
  /* 17764 */ "CMPGU_EQ_QB_MM\0"
  /* 17779 */ "CMPU_EQ_QB_MM\0"
  /* 17793 */ "SUBU_S_QB_MM\0"
  /* 17806 */ "ADDU_S_QB_MM\0"
  /* 17819 */ "CMPGU_LT_QB_MM\0"
  /* 17834 */ "CMPU_LT_QB_MM\0"
  /* 17848 */ "SUBU_QB_MM\0"
  /* 17859 */ "ADDU_QB_MM\0"
  /* 17870 */ "SHLLV_QB_MM\0"
  /* 17882 */ "REPLV_QB_MM\0"
  /* 17894 */ "SHRLV_QB_MM\0"
  /* 17906 */ "RADDU_W_QB_MM\0"
  /* 17920 */ "SB_MM\0"
  /* 17926 */ "MODSUB_MM\0"
  /* 17936 */ "PseudoMSUB_MM\0"
  /* 17950 */ "SYNC_MM\0"
  /* 17958 */ "ADDIUPC_MM\0"
  /* 17969 */ "ADDSC_MM\0"
  /* 17978 */ "ADDWC_MM\0"
  /* 17987 */ "BNEZC_MM\0"
  /* 17996 */ "BEQZC_MM\0"
  /* 18005 */ "PseudoMADD_MM\0"
  /* 18019 */ "AND_MM\0"
  /* 18026 */ "LBE_MM\0"
  /* 18033 */ "SBE_MM\0"
  /* 18040 */ "SCE_MM\0"
  /* 18047 */ "CACHEE_MM\0"
  /* 18057 */ "PREFE_MM\0"
  /* 18066 */ "TGE_MM\0"
  /* 18073 */ "CACHE_MM\0"
  /* 18082 */ "LHE_MM\0"
  /* 18089 */ "SHE_MM\0"
  /* 18096 */ "LLE_MM\0"
  /* 18103 */ "LWLE_MM\0"
  /* 18111 */ "SWLE_MM\0"
  /* 18119 */ "BNE_MM\0"
  /* 18126 */ "TNE_MM\0"
  /* 18133 */ "LWRE_MM\0"
  /* 18141 */ "SWRE_MM\0"
  /* 18149 */ "PAUSE_MM\0"
  /* 18158 */ "LWE_MM\0"
  /* 18165 */ "SWE_MM\0"
  /* 18172 */ "LBuE_MM\0"
  /* 18180 */ "LHuE_MM\0"
  /* 18188 */ "BC1F_MM\0"
  /* 18196 */ "PREF_MM\0"
  /* 18204 */ "TLBGINVF_MM\0"
  /* 18216 */ "TAILCALLREG_MM\0"
  /* 18231 */ "WSBH_MM\0"
  /* 18239 */ "SEH_MM\0"
  /* 18246 */ "LH_MM\0"
  /* 18252 */ "SHRA_PH_MM\0"
  /* 18263 */ "PRECRQ_QB_PH_MM\0"
  /* 18279 */ "PRECRQU_S_QB_PH_MM\0"
  /* 18298 */ "CMP_LE_PH_MM\0"
  /* 18311 */ "PICK_PH_MM\0"
  /* 18322 */ "SHLL_PH_MM\0"
  /* 18333 */ "REPL_PH_MM\0"
  /* 18344 */ "PACKRL_PH_MM\0"
  /* 18357 */ "SUBQ_PH_MM\0"
  /* 18368 */ "ADDQ_PH_MM\0"
  /* 18379 */ "CMP_EQ_PH_MM\0"
  /* 18392 */ "SHRA_R_PH_MM\0"
  /* 18405 */ "SHRAV_R_PH_MM\0"
  /* 18419 */ "MULQ_RS_PH_MM\0"
  /* 18433 */ "SHLL_S_PH_MM\0"
  /* 18446 */ "SUBQ_S_PH_MM\0"
  /* 18459 */ "ADDQ_S_PH_MM\0"
  /* 18472 */ "ABSQ_S_PH_MM\0"
  /* 18485 */ "SHLLV_S_PH_MM\0"
  /* 18499 */ "CMP_LT_PH_MM\0"
  /* 18512 */ "SHRAV_PH_MM\0"
  /* 18524 */ "SHLLV_PH_MM\0"
  /* 18536 */ "REPLV_PH_MM\0"
  /* 18548 */ "DPAQ_S_W_PH_MM\0"
  /* 18563 */ "MULSAQ_S_W_PH_MM\0"
  /* 18580 */ "DPSQ_S_W_PH_MM\0"
  /* 18595 */ "SH_MM\0"
  /* 18601 */ "EXTR_S_H_MM\0"
  /* 18613 */ "EXTRV_S_H_MM\0"
  /* 18626 */ "SYNCI_MM\0"
  /* 18635 */ "DI_MM\0"
  /* 18641 */ "TGEI_MM\0"
  /* 18649 */ "TNEI_MM\0"
  /* 18657 */ "PseudoMFHI_MM\0"
  /* 18671 */ "PseudoMTLOHI_MM\0"
  /* 18687 */ "MTHI_MM\0"
  /* 18695 */ "TEQI_MM\0"
  /* 18703 */ "TLTI_MM\0"
  /* 18711 */ "TLBWI_MM\0"
  /* 18720 */ "TLBGWI_MM\0"
  /* 18730 */ "MOVF_I_MM\0"
  /* 18740 */ "MOVN_I_MM\0"
  /* 18750 */ "MOVT_I_MM\0"
  /* 18760 */ "MOVZ_I_MM\0"
  /* 18770 */ "J_MM\0"
  /* 18775 */ "BREAK_MM\0"
  /* 18784 */ "JAL_MM\0"
  /* 18791 */ "BGEZAL_MM\0"
  /* 18801 */ "BLTZAL_MM\0"
  /* 18811 */ "MULEU_S_PH_QBL_MM\0"
  /* 18829 */ "PRECEU_PH_QBL_MM\0"
  /* 18846 */ "PRECEQU_PH_QBL_MM\0"
  /* 18864 */ "DPAU_H_QBL_MM\0"
  /* 18878 */ "DPSU_H_QBL_MM\0"
  /* 18892 */ "MAQ_SA_W_PHL_MM\0"
  /* 18908 */ "PRECEQ_W_PHL_MM\0"
  /* 18924 */ "MAQ_S_W_PHL_MM\0"
  /* 18939 */ "MULEQ_S_W_PHL_MM\0"
  /* 18956 */ "TAILCALL_MM\0"
  /* 18968 */ "HYPCALL_MM\0"
  /* 18979 */ "SYSCALL_MM\0"
  /* 18990 */ "SLL_MM\0"
  /* 18997 */ "SRL_MM\0"
  /* 19004 */ "MUL_MM\0"
  /* 19011 */ "LWL_MM\0"
  /* 19018 */ "SWL_MM\0"
  /* 19025 */ "LWM_MM\0"
  /* 19032 */ "SWM_MM\0"
  /* 19039 */ "CLO_MM\0"
  /* 19046 */ "PseudoMFLO_MM\0"
  /* 19060 */ "SHILO_MM\0"
  /* 19069 */ "MTLO_MM\0"
  /* 19077 */ "TRAP_MM\0"
  /* 19085 */ "SDBBP_MM\0"
  /* 19094 */ "TLBP_MM\0"
  /* 19102 */ "EXTPDP_MM\0"
  /* 19112 */ "MOVEP_MM\0"
  /* 19121 */ "TLBGP_MM\0"
  /* 19130 */ "LWGP_MM\0"
  /* 19138 */ "MTHLIP_MM\0"
  /* 19148 */ "SSNOP_MM\0"
  /* 19157 */ "ADDIUR1SP_MM\0"
  /* 19170 */ "RDDSP_MM\0"
  /* 19179 */ "WRDSP_MM\0"
  /* 19188 */ "LWDSP_MM\0"
  /* 19197 */ "SWDSP_MM\0"
  /* 19206 */ "MSUB_DSP_MM\0"
  /* 19218 */ "MADD_DSP_MM\0"
  /* 19230 */ "MFHI_DSP_MM\0"
  /* 19242 */ "MTHI_DSP_MM\0"
  /* 19254 */ "MFLO_DSP_MM\0"
  /* 19266 */ "MTLO_DSP_MM\0"
  /* 19278 */ "MULT_DSP_MM\0"
  /* 19290 */ "MSUBU_DSP_MM\0"
  /* 19303 */ "MADDU_DSP_MM\0"
  /* 19316 */ "MULTU_DSP_MM\0"
  /* 19329 */ "ADDIUSP_MM\0"
  /* 19340 */ "LWSP_MM\0"
  /* 19348 */ "SWSP_MM\0"
  /* 19356 */ "EXTP_MM\0"
  /* 19364 */ "LWP_MM\0"
  /* 19371 */ "SWP_MM\0"
  /* 19378 */ "BEQ_MM\0"
  /* 19385 */ "TEQ_MM\0"
  /* 19392 */ "TLBR_MM\0"
  /* 19400 */ "MULEU_S_PH_QBR_MM\0"
  /* 19418 */ "PRECEU_PH_QBR_MM\0"
  /* 19435 */ "PRECEQU_PH_QBR_MM\0"
  /* 19453 */ "DPAU_H_QBR_MM\0"
  /* 19467 */ "DPSU_H_QBR_MM\0"
  /* 19481 */ "BAL_BR_MM\0"
  /* 19491 */ "TLBGR_MM\0"
  /* 19500 */ "MAQ_SA_W_PHR_MM\0"
  /* 19516 */ "PRECEQ_W_PHR_MM\0"
  /* 19532 */ "MAQ_S_W_PHR_MM\0"
  /* 19547 */ "MULEQ_S_W_PHR_MM\0"
  /* 19564 */ "JR_MM\0"
  /* 19570 */ "JALR_MM\0"
  /* 19578 */ "NOR_MM\0"
  /* 19585 */ "XOR_MM\0"
  /* 19592 */ "ROTR_MM\0"
  /* 19600 */ "TLBWR_MM\0"
  /* 19609 */ "TLBGWR_MM\0"
  /* 19619 */ "RDHWR_MM\0"
  /* 19628 */ "LWR_MM\0"
  /* 19635 */ "SWR_MM\0"
  /* 19642 */ "JALS_MM\0"
  /* 19650 */ "BGEZALS_MM\0"
  /* 19661 */ "BLTZALS_MM\0"
  /* 19672 */ "INS_MM\0"
  /* 19679 */ "JALRS_MM\0"
  /* 19688 */ "LWXS_MM\0"
  /* 19696 */ "CVT_D32_S_MM\0"
  /* 19709 */ "CVT_D64_S_MM\0"
  /* 19722 */ "FSUB_S_MM\0"
  /* 19732 */ "NMSUB_S_MM\0"
  /* 19743 */ "FADD_S_MM\0"
  /* 19753 */ "NMADD_S_MM\0"
  /* 19764 */ "C_NGE_S_MM\0"
  /* 19775 */ "C_NGLE_S_MM\0"
  /* 19787 */ "C_OLE_S_MM\0"
  /* 19798 */ "C_ULE_S_MM\0"
  /* 19809 */ "C_LE_S_MM\0"
  /* 19819 */ "C_SF_S_MM\0"
  /* 19829 */ "MOVF_S_MM\0"
  /* 19839 */ "C_F_S_MM\0"
  /* 19848 */ "FNEG_S_MM\0"
  /* 19858 */ "MOVN_I_S_MM\0"
  /* 19870 */ "MOVZ_I_S_MM\0"
  /* 19882 */ "C_NGL_S_MM\0"
  /* 19893 */ "FMUL_S_MM\0"
  /* 19903 */ "CVT_L_S_MM\0"
  /* 19914 */ "C_UN_S_MM\0"
  /* 19924 */ "RECIP_S_MM\0"
  /* 19935 */ "C_SEQ_S_MM\0"
  /* 19946 */ "C_UEQ_S_MM\0"
  /* 19957 */ "C_EQ_S_MM\0"
  /* 19967 */ "FABS_S_MM\0"
  /* 19977 */ "C_NGT_S_MM\0"
  /* 19988 */ "C_OLT_S_MM\0"
  /* 19999 */ "C_ULT_S_MM\0"
  /* 20010 */ "C_LT_S_MM\0"
  /* 20020 */ "FSQRT_S_MM\0"
  /* 20031 */ "RSQRT_S_MM\0"
  /* 20042 */ "MOVT_S_MM\0"
  /* 20052 */ "FDIV_S_MM\0"
  /* 20062 */ "FMOV_S_MM\0"
  /* 20072 */ "TRUNC_W_S_MM\0"
  /* 20085 */ "ROUND_W_S_MM\0"
  /* 20098 */ "CEIL_W_S_MM\0"
  /* 20110 */ "FLOOR_W_S_MM\0"
  /* 20123 */ "CVT_W_S_MM\0"
  /* 20134 */ "BC1T_MM\0"
  /* 20142 */ "DERET_MM\0"
  /* 20151 */ "WAIT_MM\0"
  /* 20159 */ "SLT_MM\0"
  /* 20166 */ "TLT_MM\0"
  /* 20173 */ "PseudoMULT_MM\0"
  /* 20187 */ "EXT_MM\0"
  /* 20194 */ "PseudoMSUBU_MM\0"
  /* 20209 */ "PseudoMADDU_MM\0"
  /* 20224 */ "TGEU_MM\0"
  /* 20232 */ "TGEIU_MM\0"
  /* 20241 */ "TLTIU_MM\0"
  /* 20250 */ "TLTU_MM\0"
  /* 20258 */ "LWU_MM\0"
  /* 20265 */ "SRAV_MM\0"
  /* 20273 */ "BITREV_MM\0"
  /* 20283 */ "SDIV_MM\0"
  /* 20291 */ "UDIV_MM\0"
  /* 20299 */ "SLLV_MM\0"
  /* 20307 */ "SRLV_MM\0"
  /* 20315 */ "TLBGINV_MM\0"
  /* 20326 */ "SHILOV_MM\0"
  /* 20336 */ "EXTPDPV_MM\0"
  /* 20347 */ "EXTPV_MM\0"
  /* 20356 */ "ROTRV_MM\0"
  /* 20365 */ "INSV_MM\0"
  /* 20373 */ "LW_MM\0"
  /* 20379 */ "SW_MM\0"
  /* 20385 */ "CVT_D32_W_MM\0"
  /* 20398 */ "CVT_D64_W_MM\0"
  /* 20411 */ "TRUNC_W_MM\0"
  /* 20422 */ "ROUND_W_MM\0"
  /* 20433 */ "PRECRQ_PH_W_MM\0"
  /* 20448 */ "PRECRQ_RS_PH_W_MM\0"
  /* 20466 */ "CEIL_W_MM\0"
  /* 20476 */ "DPAQ_SA_L_W_MM\0"
  /* 20491 */ "DPSQ_SA_L_W_MM\0"
  /* 20506 */ "FLOOR_W_MM\0"
  /* 20517 */ "EXTR_W_MM\0"
  /* 20527 */ "SHRA_R_W_MM\0"
  /* 20539 */ "EXTR_R_W_MM\0"
  /* 20551 */ "SHRAV_R_W_MM\0"
  /* 20564 */ "EXTRV_R_W_MM\0"
  /* 20577 */ "EXTR_RS_W_MM\0"
  /* 20590 */ "EXTRV_RS_W_MM\0"
  /* 20604 */ "SHLL_S_W_MM\0"
  /* 20616 */ "SUBQ_S_W_MM\0"
  /* 20628 */ "ADDQ_S_W_MM\0"
  /* 20640 */ "ABSQ_S_W_MM\0"
  /* 20652 */ "CVT_S_W_MM\0"
  /* 20663 */ "SHLLV_S_W_MM\0"
  /* 20676 */ "EXTRV_W_MM\0"
  /* 20687 */ "PREFX_MM\0"
  /* 20696 */ "LHX_MM\0"
  /* 20703 */ "JALX_MM\0"
  /* 20711 */ "LBUX_MM\0"
  /* 20719 */ "LWX_MM\0"
  /* 20726 */ "BGEZ_MM\0"
  /* 20734 */ "BLEZ_MM\0"
  /* 20742 */ "CLZ_MM\0"
  /* 20749 */ "BGTZ_MM\0"
  /* 20757 */ "BLTZ_MM\0"
  /* 20765 */ "PseudoIndirectBranch_MM\0"
  /* 20789 */ "ADDi_MM\0"
  /* 20797 */ "ANDi_MM\0"
  /* 20805 */ "XORi_MM\0"
  /* 20813 */ "SLTi_MM\0"
  /* 20821 */ "LUi_MM\0"
  /* 20828 */ "LBu_MM\0"
  /* 20835 */ "SUBu_MM\0"
  /* 20843 */ "ADDu_MM\0"
  /* 20851 */ "LHu_MM\0"
  /* 20858 */ "SLTu_MM\0"
  /* 20866 */ "PseudoMULTu_MM\0"
  /* 20881 */ "LEA_ADDiu_MM\0"
  /* 20894 */ "SLTiu_MM\0"
  /* 20903 */ "INLINEASM\0"
  /* 20913 */ "DINSM\0"
  /* 20919 */ "DEXTM\0"
  /* 20925 */ "G_FMINIMUM\0"
  /* 20936 */ "G_FMAXIMUM\0"
  /* 20947 */ "G_FMINNUM\0"
  /* 20957 */ "G_FMAXNUM\0"
  /* 20967 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 20989 */ "BALIGN\0"
  /* 20996 */ "DALIGN\0"
  /* 21003 */ "G_ASSERT_ALIGN\0"
  /* 21018 */ "G_FCOPYSIGN\0"
  /* 21030 */ "G_VECREDUCE_FMIN\0"
  /* 21047 */ "G_ATOMICRMW_FMIN\0"
  /* 21064 */ "G_VECREDUCE_SMIN\0"
  /* 21081 */ "G_SMIN\0"
  /* 21088 */ "G_VECREDUCE_UMIN\0"
  /* 21105 */ "G_UMIN\0"
  /* 21112 */ "G_ATOMICRMW_UMIN\0"
  /* 21129 */ "G_ATOMICRMW_MIN\0"
  /* 21145 */ "G_FSIN\0"
  /* 21152 */ "DMFC2_OCTEON\0"
  /* 21165 */ "DMTC2_OCTEON\0"
  /* 21178 */ "CFI_INSTRUCTION\0"
  /* 21194 */ "ADJCALLSTACKDOWN\0"
  /* 21211 */ "G_SSUBO\0"
  /* 21219 */ "G_USUBO\0"
  /* 21227 */ "G_SADDO\0"
  /* 21235 */ "G_UADDO\0"
  /* 21243 */ "FEXP2_D_1_PSEUDO\0"
  /* 21260 */ "FEXP2_W_1_PSEUDO\0"
  /* 21277 */ "BPOSGE32_PSEUDO\0"
  /* 21293 */ "INSERT_B_VIDX64_PSEUDO\0"
  /* 21316 */ "INSERT_FD_VIDX64_PSEUDO\0"
  /* 21340 */ "INSERT_D_VIDX64_PSEUDO\0"
  /* 21363 */ "INSERT_H_VIDX64_PSEUDO\0"
  /* 21386 */ "INSERT_FW_VIDX64_PSEUDO\0"
  /* 21410 */ "INSERT_W_VIDX64_PSEUDO\0"
  /* 21433 */ "SNZ_B_PSEUDO\0"
  /* 21446 */ "SZ_B_PSEUDO\0"
  /* 21458 */ "BSEL_FD_PSEUDO\0"
  /* 21473 */ "FILL_FD_PSEUDO\0"
  /* 21488 */ "INSERT_FD_PSEUDO\0"
  /* 21505 */ "COPY_FD_PSEUDO\0"
  /* 21520 */ "MSA_FP_EXTEND_D_PSEUDO\0"
  /* 21543 */ "MSA_FP_ROUND_D_PSEUDO\0"
  /* 21565 */ "BSEL_D_PSEUDO\0"
  /* 21579 */ "AND_V_D_PSEUDO\0"
  /* 21594 */ "NOR_V_D_PSEUDO\0"
  /* 21609 */ "XOR_V_D_PSEUDO\0"
  /* 21624 */ "SNZ_D_PSEUDO\0"
  /* 21637 */ "SZ_D_PSEUDO\0"
  /* 21649 */ "BSEL_H_PSEUDO\0"
  /* 21663 */ "AND_V_H_PSEUDO\0"
  /* 21678 */ "NOR_V_H_PSEUDO\0"
  /* 21693 */ "XOR_V_H_PSEUDO\0"
  /* 21708 */ "SNZ_H_PSEUDO\0"
  /* 21721 */ "SZ_H_PSEUDO\0"
  /* 21733 */ "SNZ_V_PSEUDO\0"
  /* 21746 */ "SZ_V_PSEUDO\0"
  /* 21758 */ "BSEL_FW_PSEUDO\0"
  /* 21773 */ "FILL_FW_PSEUDO\0"
  /* 21788 */ "INSERT_FW_PSEUDO\0"
  /* 21805 */ "COPY_FW_PSEUDO\0"
  /* 21820 */ "MSA_FP_EXTEND_W_PSEUDO\0"
  /* 21843 */ "MSA_FP_ROUND_W_PSEUDO\0"
  /* 21865 */ "BSEL_W_PSEUDO\0"
  /* 21879 */ "AND_V_W_PSEUDO\0"
  /* 21894 */ "NOR_V_W_PSEUDO\0"
  /* 21909 */ "XOR_V_W_PSEUDO\0"
  /* 21924 */ "SNZ_W_PSEUDO\0"
  /* 21937 */ "SZ_W_PSEUDO\0"
  /* 21949 */ "INSERT_B_VIDX_PSEUDO\0"
  /* 21970 */ "INSERT_FD_VIDX_PSEUDO\0"
  /* 21992 */ "INSERT_D_VIDX_PSEUDO\0"
  /* 22013 */ "INSERT_H_VIDX_PSEUDO\0"
  /* 22034 */ "INSERT_FW_VIDX_PSEUDO\0"
  /* 22056 */ "INSERT_W_VIDX_PSEUDO\0"
  /* 22077 */ "DCLO\0"
  /* 22082 */ "PseudoMFLO\0"
  /* 22093 */ "SHILO\0"
  /* 22099 */ "MFTLO\0"
  /* 22105 */ "MTLO\0"
  /* 22110 */ "MTTLO\0"
  /* 22116 */ "G_SMULO\0"
  /* 22124 */ "G_UMULO\0"
  /* 22132 */ "G_BZERO\0"
  /* 22140 */ "STACKMAP\0"
  /* 22149 */ "TRAP\0"
  /* 22154 */ "G_ATOMICRMW_UDEC_WRAP\0"
  /* 22176 */ "G_ATOMICRMW_UINC_WRAP\0"
  /* 22198 */ "G_BSWAP\0"
  /* 22206 */ "DBITSWAP\0"
  /* 22215 */ "SDBBP\0"
  /* 22221 */ "TLBP\0"
  /* 22226 */ "EXTPDP\0"
  /* 22233 */ "G_SITOFP\0"
  /* 22242 */ "G_UITOFP\0"
  /* 22251 */ "TLBGP\0"
  /* 22257 */ "MTHLIP\0"
  /* 22264 */ "G_FCMP\0"
  /* 22271 */ "G_ICMP\0"
  /* 22278 */ "SSNOP\0"
  /* 22284 */ "DPOP\0"
  /* 22289 */ "G_CTPOP\0"
  /* 22297 */ "PATCHABLE_OP\0"
  /* 22310 */ "FAULTING_OP\0"
  /* 22322 */ "LOAD_ACC64DSP\0"
  /* 22336 */ "STORE_ACC64DSP\0"
  /* 22351 */ "RDDSP\0"
  /* 22357 */ "WRDSP\0"
  /* 22363 */ "MFTDSP\0"
  /* 22370 */ "MTTDSP\0"
  /* 22377 */ "LWDSP\0"
  /* 22383 */ "SWDSP\0"
  /* 22389 */ "MSUB_DSP\0"
  /* 22398 */ "MADD_DSP\0"
  /* 22407 */ "LOAD_CCOND_DSP\0"
  /* 22422 */ "STORE_CCOND_DSP\0"
  /* 22438 */ "MFHI_DSP\0"
  /* 22447 */ "PseudoMTLOHI_DSP\0"
  /* 22464 */ "MTHI_DSP\0"
  /* 22473 */ "MFLO_DSP\0"
  /* 22482 */ "MTLO_DSP\0"
  /* 22491 */ "MULT_DSP\0"
  /* 22500 */ "MSUBU_DSP\0"
  /* 22510 */ "MADDU_DSP\0"
  /* 22520 */ "MULTU_DSP\0"
  /* 22530 */ "JRADDIUSP\0"
  /* 22540 */ "EXTP\0"
  /* 22545 */ "ADJCALLSTACKUP\0"
  /* 22560 */ "PREALLOCATED_SETUP\0"
  /* 22579 */ "DVP\0"
  /* 22583 */ "EVP\0"
  /* 22587 */ "G_FEXP\0"
  /* 22594 */ "BEQ\0"
  /* 22598 */ "SEQ\0"
  /* 22602 */ "TEQ\0"
  /* 22606 */ "TLBR\0"
  /* 22611 */ "MULEU_S_PH_QBR\0"
  /* 22626 */ "PRECEU_PH_QBR\0"
  /* 22640 */ "PRECEQU_PH_QBR\0"
  /* 22655 */ "DPAU_H_QBR\0"
  /* 22666 */ "DPSU_H_QBR\0"
  /* 22677 */ "G_BR\0"
  /* 22682 */ "BAL_BR\0"
  /* 22689 */ "INLINEASM_BR\0"
  /* 22702 */ "G_BLOCK_ADDR\0"
  /* 22715 */ "LDR\0"
  /* 22719 */ "SDR\0"
  /* 22723 */ "MEMBARRIER\0"
  /* 22734 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 22759 */ "G_READCYCLECOUNTER\0"
  /* 22778 */ "G_READ_REGISTER\0"
  /* 22794 */ "G_WRITE_REGISTER\0"
  /* 22811 */ "TLBGR\0"
  /* 22817 */ "LoadImmDoubleFGR\0"
  /* 22834 */ "LoadImmSingleFGR\0"
  /* 22851 */ "MAQ_SA_W_PHR\0"
  /* 22864 */ "PRECEQ_W_PHR\0"
  /* 22877 */ "MAQ_S_W_PHR\0"
  /* 22889 */ "MULEQ_S_W_PHR\0"
  /* 22903 */ "G_ASHR\0"
  /* 22910 */ "G_FSHR\0"
  /* 22917 */ "G_LSHR\0"
  /* 22924 */ "JR\0"
  /* 22927 */ "JALR\0"
  /* 22932 */ "NOR\0"
  /* 22936 */ "G_FFLOOR\0"
  /* 22945 */ "DROR\0"
  /* 22950 */ "G_BUILD_VECTOR\0"
  /* 22965 */ "G_SHUFFLE_VECTOR\0"
  /* 22982 */ "G_VECREDUCE_XOR\0"
  /* 22998 */ "G_XOR\0"
  /* 23004 */ "G_ATOMICRMW_XOR\0"
  /* 23020 */ "G_VECREDUCE_OR\0"
  /* 23035 */ "G_OR\0"
  /* 23040 */ "G_ATOMICRMW_OR\0"
  /* 23055 */ "MFTGPR\0"
  /* 23062 */ "MTTGPR\0"
  /* 23069 */ "LoadImmDoubleGPR\0"
  /* 23086 */ "LoadImmSingleGPR\0"
  /* 23103 */ "MFTR\0"
  /* 23108 */ "DROTR\0"
  /* 23114 */ "G_ROTR\0"
  /* 23121 */ "G_INTTOPTR\0"
  /* 23132 */ "MTTR\0"
  /* 23137 */ "TLBWR\0"
  /* 23143 */ "TLBGWR\0"
  /* 23150 */ "RDHWR\0"
  /* 23156 */ "LWR\0"
  /* 23160 */ "SWR\0"
  /* 23164 */ "G_FABS\0"
  /* 23171 */ "G_ABS\0"
  /* 23177 */ "G_UNMERGE_VALUES\0"
  /* 23194 */ "G_MERGE_VALUES\0"
  /* 23209 */ "CINS\0"
  /* 23214 */ "DINS\0"
  /* 23219 */ "G_FCOS\0"
  /* 23226 */ "G_CONCAT_VECTORS\0"
  /* 23243 */ "COPY_TO_REGCLASS\0"
  /* 23260 */ "G_IS_FPCLASS\0"
  /* 23273 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 23303 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 23330 */ "EXTS\0"
  /* 23335 */ "CVT_D32_S\0"
  /* 23345 */ "CVT_D64_S\0"
  /* 23355 */ "MOVN_I64_S\0"
  /* 23366 */ "MOVZ_I64_S\0"
  /* 23377 */ "MINA_S\0"
  /* 23384 */ "MAXA_S\0"
  /* 23391 */ "FSUB_S\0"
  /* 23398 */ "NMSUB_S\0"
  /* 23406 */ "FADD_S\0"
  /* 23413 */ "NMADD_S\0"
  /* 23421 */ "C_NGE_S\0"
  /* 23429 */ "C_NGLE_S\0"
  /* 23438 */ "C_OLE_S\0"
  /* 23446 */ "CMP_SLE_S\0"
  /* 23456 */ "CMP_SULE_S\0"
  /* 23467 */ "C_ULE_S\0"
  /* 23475 */ "CMP_ULE_S\0"
  /* 23485 */ "C_LE_S\0"
  /* 23492 */ "CMP_LE_S\0"
  /* 23501 */ "CMP_SAF_S\0"
  /* 23511 */ "MSUBF_S\0"
  /* 23519 */ "MADDF_S\0"
  /* 23527 */ "C_SF_S\0"
  /* 23534 */ "MOVF_S\0"
  /* 23541 */ "C_F_S\0"
  /* 23547 */ "PseudoSELECTFP_F_S\0"
  /* 23566 */ "CMP_F_S\0"
  /* 23574 */ "FNEG_S\0"
  /* 23581 */ "MOVN_I_S\0"
  /* 23590 */ "MOVZ_I_S\0"
  /* 23599 */ "SEL_S\0"
  /* 23605 */ "C_NGL_S\0"
  /* 23613 */ "FMUL_S\0"
  /* 23620 */ "TRUNC_L_S\0"
  /* 23630 */ "ROUND_L_S\0"
  /* 23640 */ "CEIL_L_S\0"
  /* 23649 */ "FLOOR_L_S\0"
  /* 23659 */ "CVT_L_S\0"
  /* 23667 */ "MIN_S\0"
  /* 23673 */ "CMP_SUN_S\0"
  /* 23683 */ "C_UN_S\0"
  /* 23690 */ "CMP_UN_S\0"
  /* 23699 */ "RECIP_S\0"
  /* 23707 */ "C_SEQ_S\0"
  /* 23715 */ "CMP_SEQ_S\0"
  /* 23725 */ "CMP_SUEQ_S\0"
  /* 23736 */ "C_UEQ_S\0"
  /* 23744 */ "CMP_UEQ_S\0"
  /* 23754 */ "C_EQ_S\0"
  /* 23761 */ "CMP_EQ_S\0"
  /* 23770 */ "FABS_S\0"
  /* 23777 */ "CLASS_S\0"
  /* 23785 */ "PseudoSELECT_S\0"
  /* 23800 */ "C_NGT_S\0"
  /* 23808 */ "C_OLT_S\0"
  /* 23816 */ "CMP_SLT_S\0"
  /* 23826 */ "CMP_SULT_S\0"
  /* 23837 */ "C_ULT_S\0"
  /* 23845 */ "CMP_ULT_S\0"
  /* 23855 */ "C_LT_S\0"
  /* 23862 */ "CMP_LT_S\0"
  /* 23871 */ "RINT_S\0"
  /* 23878 */ "FSQRT_S\0"
  /* 23886 */ "RSQRT_S\0"
  /* 23894 */ "MOVT_S\0"
  /* 23901 */ "PseudoSELECTFP_T_S\0"
  /* 23920 */ "FDIV_S\0"
  /* 23927 */ "FMOV_S\0"
  /* 23934 */ "PseudoTRUNC_W_S\0"
  /* 23950 */ "ROUND_W_S\0"
  /* 23960 */ "CEIL_W_S\0"
  /* 23969 */ "FLOOR_W_S\0"
  /* 23979 */ "CVT_W_S\0"
  /* 23987 */ "MAX_S\0"
  /* 23993 */ "SELNEZ_S\0"
  /* 24002 */ "SELEQZ_S\0"
  /* 24011 */ "BC1T\0"
  /* 24016 */ "G_SSUBSAT\0"
  /* 24026 */ "G_USUBSAT\0"
  /* 24036 */ "G_SADDSAT\0"
  /* 24046 */ "G_UADDSAT\0"
  /* 24056 */ "G_SSHLSAT\0"
  /* 24066 */ "G_USHLSAT\0"
  /* 24076 */ "G_SMULFIXSAT\0"
  /* 24089 */ "G_UMULFIXSAT\0"
  /* 24102 */ "G_SDIVFIXSAT\0"
  /* 24115 */ "G_UDIVFIXSAT\0"
  /* 24128 */ "G_EXTRACT\0"
  /* 24138 */ "G_SELECT\0"
  /* 24147 */ "G_BRINDIRECT\0"
  /* 24160 */ "DERET\0"
  /* 24166 */ "PATCHABLE_RET\0"
  /* 24180 */ "G_MEMSET\0"
  /* 24189 */ "BGT\0"
  /* 24193 */ "WAIT\0"
  /* 24198 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 24222 */ "G_BRJT\0"
  /* 24229 */ "BLT\0"
  /* 24233 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 24254 */ "G_INSERT_VECTOR_ELT\0"
  /* 24274 */ "SLT\0"
  /* 24278 */ "TLT\0"
  /* 24282 */ "PseudoDMULT\0"
  /* 24294 */ "PseudoMULT\0"
  /* 24305 */ "DMT\0"
  /* 24309 */ "EMT\0"
  /* 24313 */ "G_FCONSTANT\0"
  /* 24325 */ "G_CONSTANT\0"
  /* 24336 */ "STATEPOINT\0"
  /* 24347 */ "PATCHPOINT\0"
  /* 24358 */ "G_PTRTOINT\0"
  /* 24369 */ "G_FRINT\0"
  /* 24377 */ "G_INTRINSIC_LRINT\0"
  /* 24395 */ "G_FNEARBYINT\0"
  /* 24408 */ "G_VASTART\0"
  /* 24418 */ "LIFETIME_START\0"
  /* 24433 */ "G_INVOKE_REGION_START\0"
  /* 24455 */ "G_INSERT\0"
  /* 24464 */ "G_FSQRT\0"
  /* 24472 */ "G_STRICT_FSQRT\0"
  /* 24487 */ "G_BITCAST\0"
  /* 24497 */ "G_ADDRSPACE_CAST\0"
  /* 24514 */ "DBG_VALUE_LIST\0"
  /* 24529 */ "GINVT\0"
  /* 24535 */ "DEXT\0"
  /* 24540 */ "G_FPEXT\0"
  /* 24548 */ "G_SEXT\0"
  /* 24555 */ "G_ASSERT_SEXT\0"
  /* 24569 */ "G_ANYEXT\0"
  /* 24578 */ "G_ZEXT\0"
  /* 24585 */ "G_ASSERT_ZEXT\0"
  /* 24599 */ "PseudoMSUBU\0"
  /* 24611 */ "PseudoMADDU\0"
  /* 24623 */ "DMODU\0"
  /* 24629 */ "BGEU\0"
  /* 24634 */ "SGEU\0"
  /* 24639 */ "TGEU\0"
  /* 24644 */ "BLEU\0"
  /* 24649 */ "SLEU\0"
  /* 24654 */ "DMUHU\0"
  /* 24660 */ "TGEIU\0"
  /* 24666 */ "TTLTIU\0"
  /* 24673 */ "V3MULU\0"
  /* 24680 */ "DMULU\0"
  /* 24686 */ "VMULU\0"
  /* 24692 */ "DINSU\0"
  /* 24698 */ "BGTU\0"
  /* 24703 */ "BLTU\0"
  /* 24708 */ "TLTU\0"
  /* 24713 */ "DEXTU\0"
  /* 24719 */ "DDIVU\0"
  /* 24725 */ "DSRAV\0"
  /* 24731 */ "BITREV\0"
  /* 24738 */ "DDIV\0"
  /* 24743 */ "G_FDIV\0"
  /* 24750 */ "G_STRICT_FDIV\0"
  /* 24764 */ "PseudoDSDIV\0"
  /* 24776 */ "G_SDIV\0"
  /* 24783 */ "PseudoSDIV\0"
  /* 24794 */ "PseudoDUDIV\0"
  /* 24806 */ "G_UDIV\0"
  /* 24813 */ "PseudoUDIV\0"
  /* 24824 */ "DSLLV\0"
  /* 24830 */ "DSRLV\0"
  /* 24836 */ "TLBINV\0"
  /* 24843 */ "TLBGINV\0"
  /* 24851 */ "SHILOV\0"
  /* 24858 */ "EXTPDPV\0"
  /* 24866 */ "EXTPV\0"
  /* 24872 */ "DROTRV\0"
  /* 24879 */ "INSV\0"
  /* 24884 */ "AND_V\0"
  /* 24890 */ "MOVE_V\0"
  /* 24897 */ "BSEL_V\0"
  /* 24904 */ "NOR_V\0"
  /* 24910 */ "XOR_V\0"
  /* 24916 */ "BZ_V\0"
  /* 24921 */ "BMZ_V\0"
  /* 24927 */ "BNZ_V\0"
  /* 24933 */ "BMNZ_V\0"
  /* 24940 */ "CRC32W\0"
  /* 24947 */ "CRC32CW\0"
  /* 24955 */ "LW\0"
  /* 24958 */ "G_FPOW\0"
  /* 24965 */ "SW\0"
  /* 24968 */ "PseudoCVT_D32_W\0"
  /* 24984 */ "FLOG2_W\0"
  /* 24992 */ "FEXP2_W\0"
  /* 25000 */ "PseudoCVT_D64_W\0"
  /* 25016 */ "SRA_W\0"
  /* 25022 */ "ADD_A_W\0"
  /* 25030 */ "FMIN_A_W\0"
  /* 25039 */ "ADDS_A_W\0"
  /* 25048 */ "FMAX_A_W\0"
  /* 25057 */ "FSUB_W\0"
  /* 25064 */ "FMSUB_W\0"
  /* 25072 */ "NLOC_W\0"
  /* 25079 */ "NLZC_W\0"
  /* 25086 */ "FADD_W\0"
  /* 25093 */ "FMADD_W\0"
  /* 25101 */ "SLD_W\0"
  /* 25107 */ "PCKOD_W\0"
  /* 25115 */ "ILVOD_W\0"
  /* 25123 */ "FCLE_W\0"
  /* 25130 */ "FSLE_W\0"
  /* 25137 */ "FCULE_W\0"
  /* 25145 */ "FSULE_W\0"
  /* 25153 */ "FCNE_W\0"
  /* 25160 */ "FSNE_W\0"
  /* 25167 */ "FCUNE_W\0"
  /* 25175 */ "FSUNE_W\0"
  /* 25183 */ "INSVE_W\0"
  /* 25191 */ "FCAF_W\0"
  /* 25198 */ "FSAF_W\0"
  /* 25205 */ "VSHF_W\0"
  /* 25212 */ "BNEG_W\0"
  /* 25219 */ "PRECR_SRA_PH_W\0"
  /* 25234 */ "PRECRQ_PH_W\0"
  /* 25246 */ "PRECR_SRA_R_PH_W\0"
  /* 25263 */ "PRECRQ_RS_PH_W\0"
  /* 25278 */ "SUBQH_W\0"
  /* 25286 */ "ADDQH_W\0"
  /* 25294 */ "SRAI_W\0"
  /* 25301 */ "SLDI_W\0"
  /* 25308 */ "BNEGI_W\0"
  /* 25316 */ "SLLI_W\0"
  /* 25323 */ "SRLI_W\0"
  /* 25330 */ "BINSLI_W\0"
  /* 25339 */ "CEQI_W\0"
  /* 25346 */ "SRARI_W\0"
  /* 25354 */ "BCLRI_W\0"
  /* 25362 */ "SRLRI_W\0"
  /* 25370 */ "BINSRI_W\0"
  /* 25379 */ "SPLATI_W\0"
  /* 25388 */ "BSETI_W\0"
  /* 25396 */ "SUBVI_W\0"
  /* 25404 */ "ADDVI_W\0"
  /* 25412 */ "FILL_W\0"
  /* 25419 */ "SLL_W\0"
  /* 25425 */ "FEXUPL_W\0"
  /* 25434 */ "FFQL_W\0"
  /* 25441 */ "SRL_W\0"
  /* 25447 */ "BINSL_W\0"
  /* 25455 */ "FMUL_W\0"
  /* 25462 */ "ILVL_W\0"
  /* 25469 */ "DPAQ_SA_L_W\0"
  /* 25481 */ "DPSQ_SA_L_W\0"
  /* 25493 */ "FMIN_W\0"
  /* 25500 */ "FCUN_W\0"
  /* 25507 */ "FSUN_W\0"
  /* 25514 */ "FEXDO_W\0"
  /* 25522 */ "FRCP_W\0"
  /* 25529 */ "FCEQ_W\0"
  /* 25536 */ "FSEQ_W\0"
  /* 25543 */ "FCUEQ_W\0"
  /* 25551 */ "FSUEQ_W\0"
  /* 25559 */ "FTQ_W\0"
  /* 25565 */ "MSUB_Q_W\0"
  /* 25574 */ "MADD_Q_W\0"
  /* 25583 */ "MUL_Q_W\0"
  /* 25591 */ "MSUBR_Q_W\0"
  /* 25601 */ "MADDR_Q_W\0"
  /* 25611 */ "MULR_Q_W\0"
  /* 25620 */ "SRAR_W\0"
  /* 25627 */ "LDR_W\0"
  /* 25633 */ "BCLR_W\0"
  /* 25640 */ "SRLR_W\0"
  /* 25647 */ "FCOR_W\0"
  /* 25654 */ "FSOR_W\0"
  /* 25661 */ "FEXUPR_W\0"
  /* 25670 */ "FFQR_W\0"
  /* 25677 */ "BINSR_W\0"
  /* 25685 */ "STR_W\0"
  /* 25691 */ "EXTR_W\0"
  /* 25698 */ "ILVR_W\0"
  /* 25705 */ "SHRA_R_W\0"
  /* 25714 */ "SUBQH_R_W\0"
  /* 25724 */ "ADDQH_R_W\0"
  /* 25734 */ "EXTR_R_W\0"
  /* 25743 */ "SHRAV_R_W\0"
  /* 25753 */ "EXTRV_R_W\0"
  /* 25763 */ "FABS_W\0"
  /* 25770 */ "MULQ_RS_W\0"
  /* 25780 */ "EXTR_RS_W\0"
  /* 25790 */ "EXTRV_RS_W\0"
  /* 25801 */ "FCLASS_W\0"
  /* 25810 */ "ASUB_S_W\0"
  /* 25819 */ "HSUB_S_W\0"
  /* 25828 */ "DPSUB_S_W\0"
  /* 25838 */ "FTRUNC_S_W\0"
  /* 25849 */ "HADD_S_W\0"
  /* 25858 */ "DPADD_S_W\0"
  /* 25868 */ "MOD_S_W\0"
  /* 25876 */ "CLE_S_W\0"
  /* 25884 */ "AVE_S_W\0"
  /* 25892 */ "CLEI_S_W\0"
  /* 25901 */ "MINI_S_W\0"
  /* 25910 */ "CLTI_S_W\0"
  /* 25919 */ "MAXI_S_W\0"
  /* 25928 */ "SHLL_S_W\0"
  /* 25937 */ "MIN_S_W\0"
  /* 25945 */ "DOTP_S_W\0"
  /* 25954 */ "SUBQ_S_W\0"
  /* 25963 */ "ADDQ_S_W\0"
  /* 25972 */ "MULQ_S_W\0"
  /* 25981 */ "ABSQ_S_W\0"
  /* 25990 */ "AVER_S_W\0"
  /* 25999 */ "SUBS_S_W\0"
  /* 26008 */ "ADDS_S_W\0"
  /* 26017 */ "SAT_S_W\0"
  /* 26025 */ "CLT_S_W\0"
  /* 26033 */ "FFINT_S_W\0"
  /* 26043 */ "FTINT_S_W\0"
  /* 26053 */ "PseudoCVT_S_W\0"
  /* 26067 */ "SUBSUU_S_W\0"
  /* 26078 */ "DIV_S_W\0"
  /* 26086 */ "SHLLV_S_W\0"
  /* 26096 */ "MAX_S_W\0"
  /* 26104 */ "COPY_S_W\0"
  /* 26113 */ "SPLAT_W\0"
  /* 26121 */ "BSET_W\0"
  /* 26128 */ "FCLT_W\0"
  /* 26135 */ "FSLT_W\0"
  /* 26142 */ "FCULT_W\0"
  /* 26150 */ "FSULT_W\0"
  /* 26158 */ "PCNT_W\0"
  /* 26165 */ "FRINT_W\0"
  /* 26173 */ "INSERT_W\0"
  /* 26182 */ "FSQRT_W\0"
  /* 26190 */ "FRSQRT_W\0"
  /* 26199 */ "ST_W\0"
  /* 26204 */ "ASUB_U_W\0"
  /* 26213 */ "HSUB_U_W\0"
  /* 26222 */ "DPSUB_U_W\0"
  /* 26232 */ "FTRUNC_U_W\0"
  /* 26243 */ "HADD_U_W\0"
  /* 26252 */ "DPADD_U_W\0"
  /* 26262 */ "MOD_U_W\0"
  /* 26270 */ "CLE_U_W\0"
  /* 26278 */ "AVE_U_W\0"
  /* 26286 */ "CLEI_U_W\0"
  /* 26295 */ "MINI_U_W\0"
  /* 26304 */ "CLTI_U_W\0"
  /* 26313 */ "MAXI_U_W\0"
  /* 26322 */ "MIN_U_W\0"
  /* 26330 */ "DOTP_U_W\0"
  /* 26339 */ "AVER_U_W\0"
  /* 26348 */ "SUBS_U_W\0"
  /* 26357 */ "ADDS_U_W\0"
  /* 26366 */ "SUBSUS_U_W\0"
  /* 26377 */ "SAT_U_W\0"
  /* 26385 */ "CLT_U_W\0"
  /* 26393 */ "FFINT_U_W\0"
  /* 26403 */ "FTINT_U_W\0"
  /* 26413 */ "DIV_U_W\0"
  /* 26421 */ "MAX_U_W\0"
  /* 26429 */ "COPY_U_W\0"
  /* 26438 */ "MSUBV_W\0"
  /* 26446 */ "MADDV_W\0"
  /* 26454 */ "PCKEV_W\0"
  /* 26462 */ "ILVEV_W\0"
  /* 26470 */ "FDIV_W\0"
  /* 26477 */ "MULV_W\0"
  /* 26484 */ "EXTRV_W\0"
  /* 26492 */ "FMAX_W\0"
  /* 26499 */ "BZ_W\0"
  /* 26504 */ "BNZ_W\0"
  /* 26510 */ "G_VECREDUCE_FMAX\0"
  /* 26527 */ "G_ATOMICRMW_FMAX\0"
  /* 26544 */ "G_VECREDUCE_SMAX\0"
  /* 26561 */ "G_SMAX\0"
  /* 26568 */ "G_VECREDUCE_UMAX\0"
  /* 26585 */ "G_UMAX\0"
  /* 26592 */ "G_ATOMICRMW_UMAX\0"
  /* 26609 */ "G_ATOMICRMW_MAX\0"
  /* 26625 */ "MFTACX\0"
  /* 26632 */ "MTTACX\0"
  /* 26639 */ "G_FRAME_INDEX\0"
  /* 26653 */ "G_SBFX\0"
  /* 26660 */ "G_UBFX\0"
  /* 26667 */ "LHX\0"
  /* 26671 */ "G_SMULFIX\0"
  /* 26681 */ "G_UMULFIX\0"
  /* 26691 */ "G_SDIVFIX\0"
  /* 26701 */ "G_UDIVFIX\0"
  /* 26711 */ "JALX\0"
  /* 26716 */ "LBUX\0"
  /* 26721 */ "LWX\0"
  /* 26725 */ "G_MEMCPY\0"
  /* 26734 */ "COPY\0"
  /* 26739 */ "CONSTPOOL_ENTRY\0"
  /* 26755 */ "BGEZ\0"
  /* 26760 */ "BLEZ\0"
  /* 26765 */ "BC1NEZ\0"
  /* 26772 */ "BC2NEZ\0"
  /* 26779 */ "SELNEZ\0"
  /* 26786 */ "DCLZ\0"
  /* 26791 */ "G_CTLZ\0"
  /* 26798 */ "BC1EQZ\0"
  /* 26805 */ "BC2EQZ\0"
  /* 26812 */ "SELEQZ\0"
  /* 26819 */ "BGTZ\0"
  /* 26824 */ "BLTZ\0"
  /* 26829 */ "G_CTTZ\0"
  /* 26836 */ "SelBneZ\0"
  /* 26844 */ "SelBeqZ\0"
  /* 26852 */ "JalOneReg\0"
  /* 26862 */ "JalTwoReg\0"
  /* 26872 */ "PseudoIndirectHazardBranch\0"
  /* 26899 */ "PseudoIndirectBranch\0"
  /* 26920 */ "Ulh\0"
  /* 26924 */ "Ush\0"
  /* 26928 */ "DADDi\0"
  /* 26934 */ "ANDi\0"
  /* 26939 */ "SNEi\0"
  /* 26944 */ "SEQi\0"
  /* 26949 */ "XORi\0"
  /* 26954 */ "SLTi\0"
  /* 26959 */ "LONG_BRANCH_LUi\0"
  /* 26975 */ "SelTBtneZCmpi\0"
  /* 26989 */ "SelTBteqZCmpi\0"
  /* 27003 */ "SelTBtneZSlti\0"
  /* 27017 */ "SelTBteqZSlti\0"
  /* 27031 */ "SGEImm\0"
  /* 27038 */ "SLEImm\0"
  /* 27045 */ "DROLImm\0"
  /* 27053 */ "NORImm\0"
  /* 27060 */ "DRORImm\0"
  /* 27068 */ "SGTImm\0"
  /* 27075 */ "SGEUImm\0"
  /* 27083 */ "SLEUImm\0"
  /* 27091 */ "SGTUImm\0"
  /* 27099 */ "BneImm\0"
  /* 27106 */ "BeqImm\0"
  /* 27113 */ "PseudoReturn\0"
  /* 27126 */ "JALRHB64Pseudo\0"
  /* 27141 */ "JALR64Pseudo\0"
  /* 27154 */ "JALRHBPseudo\0"
  /* 27167 */ "JALRPseudo\0"
  /* 27178 */ "B_MMR6_Pseudo\0"
  /* 27192 */ "B_MM_Pseudo\0"
  /* 27204 */ "SDIV_MM_Pseudo\0"
  /* 27219 */ "UDIV_MM_Pseudo\0"
  /* 27234 */ "LDMacro\0"
  /* 27242 */ "SDMacro\0"
  /* 27250 */ "SNEMacro\0"
  /* 27259 */ "SNEIMacro\0"
  /* 27269 */ "SEQIMacro\0"
  /* 27279 */ "DSRemIMacro\0"
  /* 27291 */ "DURemIMacro\0"
  /* 27303 */ "DSDivIMacro\0"
  /* 27315 */ "DUDivIMacro\0"
  /* 27327 */ "DMULMacro\0"
  /* 27337 */ "DMULOMacro\0"
  /* 27348 */ "SEQMacro\0"
  /* 27357 */ "ABSMacro\0"
  /* 27366 */ "DMULOUMacro\0"
  /* 27378 */ "DSRemMacro\0"
  /* 27389 */ "DURemMacro\0"
  /* 27400 */ "BGEImmMacro\0"
  /* 27412 */ "BLEImmMacro\0"
  /* 27424 */ "BGELImmMacro\0"
  /* 27437 */ "BLELImmMacro\0"
  /* 27450 */ "BNELImmMacro\0"
  /* 27463 */ "BEQLImmMacro\0"
  /* 27476 */ "BGTLImmMacro\0"
  /* 27489 */ "BLTLImmMacro\0"
  /* 27502 */ "BGEULImmMacro\0"
  /* 27516 */ "BLEULImmMacro\0"
  /* 27530 */ "DMULImmMacro\0"
  /* 27543 */ "BGTULImmMacro\0"
  /* 27557 */ "BLTULImmMacro\0"
  /* 27571 */ "BGTImmMacro\0"
  /* 27583 */ "BLTImmMacro\0"
  /* 27595 */ "BGEUImmMacro\0"
  /* 27608 */ "BLEUImmMacro\0"
  /* 27621 */ "BGTUImmMacro\0"
  /* 27634 */ "BLTUImmMacro\0"
  /* 27647 */ "DSDivMacro\0"
  /* 27658 */ "DUDivMacro\0"
  /* 27669 */ "LONG_BRANCH_LUi2Op\0"
  /* 27688 */ "LONG_BRANCH_DADDiu2Op\0"
  /* 27710 */ "LONG_BRANCH_ADDiu2Op\0"
  /* 27731 */ "SelTBtneZCmp\0"
  /* 27744 */ "SelTBteqZCmp\0"
  /* 27757 */ "SaaAddr\0"
  /* 27765 */ "SaadAddr\0"
  /* 27774 */ "ERet\0"
  /* 27779 */ "SelTBtneZSlt\0"
  /* 27792 */ "SelTBteqZSlt\0"
  /* 27805 */ "LBu\0"
  /* 27809 */ "DSUBu\0"
  /* 27815 */ "BADDu\0"
  /* 27821 */ "DADDu\0"
  /* 27827 */ "LHu\0"
  /* 27831 */ "SLTu\0"
  /* 27836 */ "PseudoDMULTu\0"
  /* 27849 */ "PseudoMULTu\0"
  /* 27861 */ "LWu\0"
  /* 27865 */ "Ulhu\0"
  /* 27870 */ "LONG_BRANCH_DADDiu\0"
  /* 27889 */ "LEA_ADDiu\0"
  /* 27899 */ "LONG_BRANCH_ADDiu\0"
  /* 27917 */ "SLTiu\0"
  /* 27923 */ "SelTBtneZSltiu\0"
  /* 27938 */ "SelTBteqZSltiu\0"
  /* 27953 */ "SelTBtneZSltu\0"
  /* 27967 */ "SelTBteqZSltu\0"
  /* 27981 */ "Ulw\0"
  /* 27985 */ "Usw\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned MipsInstrNameIndices[] = {
    15358U, 20903U, 22689U, 21178U, 15706U, 15687U, 15715U, 15967U, 
    13725U, 13740U, 13605U, 13779U, 23243U, 13484U, 24514U, 13623U, 
    15354U, 15696U, 13233U, 26734U, 13355U, 24418U, 11679U, 13180U, 
    13221U, 22140U, 15939U, 24347U, 11769U, 22560U, 13842U, 24336U, 
    13408U, 22310U, 22297U, 22734U, 24166U, 24198U, 15871U, 15918U, 
    15891U, 15747U, 22723U, 24555U, 24585U, 21003U, 11562U, 10295U, 
    16123U, 24776U, 24806U, 16224U, 16231U, 16238U, 16248U, 11642U, 
    23035U, 22998U, 13603U, 15356U, 26639U, 13494U, 15977U, 24128U, 
    23177U, 24455U, 23194U, 22950U, 11181U, 23226U, 24358U, 23121U, 
    24487U, 13527U, 11738U, 11155U, 11720U, 24377U, 20967U, 22759U, 
    11435U, 11379U, 11409U, 11420U, 11360U, 11390U, 13447U, 13431U, 
    23273U, 13793U, 13810U, 11578U, 10301U, 11648U, 11609U, 23040U, 
    23004U, 26609U, 21129U, 26592U, 21112U, 11518U, 10267U, 26527U, 
    21047U, 22176U, 22154U, 13213U, 11692U, 24147U, 24433U, 11067U, 
    23303U, 24569U, 11173U, 24325U, 24313U, 24408U, 13834U, 24548U, 
    13766U, 24578U, 15832U, 22917U, 22903U, 15825U, 22910U, 23114U, 
    16024U, 22271U, 22264U, 24138U, 21235U, 13258U, 21219U, 13205U, 
    21227U, 13250U, 21211U, 13197U, 22124U, 22116U, 13896U, 13888U, 
    24046U, 24036U, 24026U, 24016U, 24066U, 24056U, 26671U, 26681U, 
    24076U, 24089U, 26691U, 26701U, 24102U, 24115U, 11476U, 10246U, 
    16065U, 8500U, 11353U, 24743U, 16203U, 24958U, 15436U, 22587U, 
    1205U, 13827U, 1187U, 0U, 13654U, 24540U, 11145U, 15384U, 
    15408U, 22233U, 22242U, 23164U, 21018U, 23260U, 13536U, 20947U, 
    20957U, 13266U, 13281U, 20925U, 20936U, 11568U, 15581U, 21081U, 
    26561U, 21105U, 26585U, 23171U, 11711U, 11701U, 22677U, 24222U, 
    24254U, 24233U, 22965U, 26829U, 13585U, 26791U, 13567U, 22289U, 
    22198U, 13465U, 15838U, 23219U, 21145U, 24464U, 22936U, 24369U, 
    24395U, 24497U, 22702U, 13342U, 11207U, 11504U, 10253U, 16093U, 
    24750U, 16210U, 8506U, 24472U, 22778U, 22794U, 26725U, 13384U, 
    13509U, 24180U, 22132U, 11483U, 16072U, 11459U, 16048U, 26510U, 
    21030U, 11546U, 16107U, 11626U, 23020U, 22982U, 26544U, 21064U, 
    26568U, 21088U, 26653U, 26660U, 27357U, 21194U, 22545U, 21579U, 
    21663U, 21879U, 4064U, 9386U, 884U, 8742U, 3089U, 9064U, 
    8370U, 9701U, 3946U, 9226U, 766U, 8582U, 2919U, 8904U, 
    8258U, 9547U, 3987U, 9281U, 807U, 8637U, 2960U, 8959U, 
    8297U, 9600U, 4144U, 9494U, 964U, 8850U, 3235U, 9172U, 
    8446U, 9805U, 4028U, 9336U, 848U, 8692U, 3053U, 9014U, 
    8336U, 9653U, 3966U, 9253U, 786U, 8609U, 2939U, 8931U, 
    8277U, 9573U, 4104U, 9440U, 924U, 8796U, 3129U, 9118U, 
    8408U, 9753U, 3926U, 9199U, 746U, 8555U, 2899U, 8877U, 
    8239U, 9521U, 4123U, 9466U, 943U, 8822U, 3214U, 9144U, 
    8426U, 9778U, 4007U, 9308U, 827U, 8664U, 3032U, 8986U, 
    8316U, 9626U, 4084U, 9413U, 904U, 8769U, 3109U, 9091U, 
    8389U, 9727U, 4048U, 9363U, 868U, 8719U, 3073U, 9041U, 
    8355U, 9679U, 9861U, 22682U, 19481U, 27463U, 13309U, 27400U, 
    15732U, 27424U, 24629U, 27595U, 16031U, 27502U, 24189U, 27571U, 
    16014U, 27476U, 24698U, 27621U, 16129U, 27543U, 13351U, 27412U, 
    15737U, 27437U, 24644U, 27608U, 16037U, 27516U, 24229U, 27583U, 
    16019U, 27489U, 24703U, 27634U, 16135U, 27557U, 27450U, 21277U, 
    21565U, 21458U, 21758U, 21649U, 21865U, 17673U, 27178U, 27192U, 
    27106U, 27099U, 4668U, 4215U, 4696U, 4245U, 4726U, 4757U, 
    4654U, 4200U, 4682U, 4230U, 4710U, 4742U, 2777U, 3547U, 
    122U, 26739U, 21505U, 21805U, 140U, 1144U, 27530U, 27327U, 
    27337U, 27366U, 15993U, 27045U, 22945U, 27060U, 27303U, 27647U, 
    27279U, 27378U, 27315U, 27658U, 27291U, 27389U, 27774U, 2790U, 
    3563U, 12472U, 25763U, 21243U, 21260U, 21473U, 21773U, 4815U, 
    21293U, 21949U, 21340U, 21992U, 21488U, 21316U, 21970U, 21788U, 
    21386U, 22034U, 21363U, 22013U, 21410U, 22056U, 27141U, 27126U, 
    27154U, 27167U, 6952U, 26852U, 26862U, 27234U, 12401U, 25627U, 
    3912U, 8214U, 2044U, 22322U, 22407U, 27899U, 27710U, 27870U, 
    27688U, 26959U, 27669U, 3593U, 19025U, 1112U, 3803U, 1079U, 
    3615U, 1102U, 3793U, 22817U, 1059U, 23069U, 22834U, 23086U, 
    1142U, 26625U, 43U, 128U, 22363U, 23055U, 103U, 15362U, 
    22099U, 1126U, 3832U, 21520U, 21820U, 21543U, 21843U, 26632U, 
    55U, 146U, 22370U, 23062U, 110U, 15373U, 22110U, 27531U, 
    27338U, 27367U, 5075U, 5208U, 5107U, 5260U, 22280U, 27053U, 
    3726U, 21594U, 21678U, 21894U, 21595U, 21679U, 21895U, 10041U, 
    9943U, 10156U, 14058U, 13953U, 14218U, 24968U, 16173U, 25000U, 
    16189U, 26053U, 24282U, 27836U, 24764U, 24794U, 15510U, 3148U, 
    26899U, 3658U, 5320U, 8191U, 20765U, 7985U, 26872U, 3629U, 
    5290U, 8163U, 11535U, 24611U, 20209U, 18005U, 15330U, 2838U, 
    18657U, 22082U, 3283U, 19046U, 10284U, 24599U, 20194U, 17936U, 
    15341U, 2851U, 22447U, 18671U, 24294U, 20173U, 27849U, 20866U, 
    13987U, 9978U, 27113U, 3817U, 24783U, 379U, 2362U, 15473U, 
    2989U, 23547U, 635U, 2675U, 15549U, 3193U, 23901U, 550U, 
    2590U, 15527U, 3167U, 23785U, 13124U, 674U, 23934U, 24813U, 
    15994U, 27046U, 22946U, 27061U, 9831U, 3897U, 203U, 27204U, 
    27242U, 27304U, 27648U, 27269U, 27348U, 13313U, 27031U, 3708U, 
    24634U, 27075U, 3753U, 27068U, 3735U, 27091U, 3773U, 13366U, 
    27038U, 3717U, 24649U, 27083U, 3763U, 3744U, 3783U, 27259U, 
    27250U, 21433U, 21624U, 21708U, 21733U, 21924U, 27280U, 27379U, 
    8226U, 2055U, 22336U, 22422U, 12459U, 25685U, 3919U, 19032U, 
    21446U, 21637U, 21721U, 21746U, 21937U, 27757U, 27765U, 26844U, 
    26836U, 27744U, 26989U, 27792U, 27017U, 27938U, 27967U, 27731U, 
    26975U, 27779U, 27003U, 27923U, 27953U, 5020U, 4479U, 4494U, 
    5032U, 5247U, 15846U, 13679U, 13661U, 13695U, 13711U, 13754U, 
    2808U, 9879U, 2000U, 18216U, 6829U, 18956U, 6961U, 22149U, 
    19077U, 27219U, 27316U, 27659U, 27292U, 27390U, 26920U, 27865U, 
    27981U, 26924U, 27985U, 21609U, 21693U, 21909U, 14177U, 18472U, 
    10101U, 1353U, 25981U, 20640U, 11455U, 11242U, 17958U, 6006U, 
    19157U, 16905U, 17318U, 19329U, 7871U, 13978U, 1456U, 14095U, 
    1511U, 25724U, 1869U, 25286U, 1841U, 14050U, 18368U, 14157U, 
    18459U, 25963U, 20628U, 3401U, 11266U, 17969U, 10339U, 11842U, 
    14457U, 25039U, 10747U, 12641U, 14946U, 26008U, 10939U, 13006U, 
    15195U, 26357U, 17535U, 5746U, 9969U, 1258U, 10079U, 1321U, 
    7841U, 14242U, 1599U, 10181U, 17859U, 14197U, 1571U, 10121U, 
    17806U, 10553U, 12206U, 14642U, 25404U, 11009U, 13087U, 15265U, 
    26447U, 11299U, 17978U, 10323U, 11825U, 14441U, 25022U, 18012U, 
    6228U, 26929U, 20789U, 27883U, 20885U, 27816U, 20843U, 20990U, 
    7019U, 11235U, 5994U, 11622U, 17346U, 5587U, 2178U, 17373U, 
    5620U, 10428U, 6884U, 18019U, 6237U, 24884U, 26934U, 3681U, 
    20797U, 11672U, 1413U, 10652U, 12488U, 14795U, 25810U, 10844U, 
    12853U, 15053U, 26204U, 15404U, 11229U, 5983U, 6912U, 10729U, 
    12623U, 14919U, 25990U, 10921U, 12988U, 15177U, 26339U, 10677U, 
    12562U, 14858U, 25884U, 10869U, 12927U, 15116U, 26278U, 4547U, 
    4423U, 4931U, 4575U, 4372U, 4871U, 4439U, 5234U, 5173U, 
    17330U, 27815U, 15591U, 11079U, 5862U, 20989U, 1774U, 76U, 
    222U, 216U, 230U, 11050U, 5527U, 26798U, 6169U, 13562U, 
    15767U, 18188U, 26765U, 6132U, 24011U, 16008U, 20134U, 26805U, 
    6182U, 26772U, 6145U, 10489U, 12156U, 14592U, 25354U, 10623U, 
    12407U, 14766U, 25633U, 5825U, 22594U, 3303U, 11261U, 2095U, 
    6029U, 15998U, 17580U, 11114U, 5922U, 11323U, 5574U, 2154U, 
    17996U, 6195U, 19378U, 11053U, 2067U, 5833U, 11277U, 2114U, 
    6068U, 26755U, 3501U, 15599U, 11090U, 5883U, 15951U, 19650U, 
    18791U, 11305U, 2130U, 6110U, 16149U, 20726U, 26819U, 3533U, 
    11122U, 5935U, 11329U, 2162U, 6206U, 16161U, 20749U, 10465U, 
    12132U, 14568U, 25330U, 10595U, 12255U, 14669U, 25447U, 10519U, 
    12172U, 14608U, 25370U, 10637U, 12451U, 14780U, 25677U, 24731U, 
    20273U, 22207U, 7039U, 26760U, 3508U, 11098U, 5896U, 11311U, 
    2138U, 6121U, 16155U, 20734U, 11272U, 2107U, 6058U, 11283U, 
    2122U, 6079U, 26824U, 3540U, 15606U, 11130U, 5948U, 15959U, 
    19661U, 18801U, 11335U, 2170U, 6217U, 16167U, 20757U, 10568U, 
    24933U, 10561U, 24921U, 13380U, 2771U, 11058U, 2074U, 5843U, 
    10435U, 12110U, 14546U, 25308U, 10407U, 12089U, 14525U, 25212U, 
    15742U, 17570U, 11106U, 5909U, 11317U, 5561U, 2146U, 17987U, 
    6158U, 18119U, 11289U, 6090U, 11044U, 13161U, 15300U, 24927U, 
    26504U, 11294U, 6100U, 737U, 1933U, 16847U, 15570U, 17401U, 
    5642U, 18775U, 6941U, 10443U, 24897U, 10537U, 12190U, 14626U, 
    25388U, 10816U, 12730U, 15025U, 26121U, 11039U, 13147U, 15295U, 
    24916U, 26499U, 4958U, 4604U, 4970U, 4617U, 4946U, 4591U, 
    4857U, 5282U, 4781U, 5274U, 4772U, 13321U, 13296U, 18047U, 
    18073U, 6772U, 8107U, 2457U, 6435U, 23640U, 7419U, 704U, 
    2738U, 6704U, 20466U, 23960U, 20098U, 7700U, 10474U, 12141U, 
    14577U, 25339U, 10610U, 12325U, 14692U, 25530U, 92U, 16296U, 
    16889U, 9842U, 23209U, 1006U, 1039U, 1093U, 12480U, 6577U, 
    23777U, 7561U, 10685U, 12570U, 14866U, 25892U, 10877U, 12935U, 
    15124U, 26286U, 10669U, 12554U, 14850U, 25876U, 10861U, 12919U, 
    15108U, 26270U, 22078U, 19039U, 7030U, 8139U, 10703U, 12588U, 
    14884U, 25910U, 10895U, 12953U, 15142U, 26304U, 10764U, 12658U, 
    14963U, 26025U, 10967U, 13034U, 15223U, 26385U, 26787U, 20742U, 
    7964U, 8156U, 10016U, 1272U, 9918U, 1226U, 10131U, 1368U, 
    10029U, 17764U, 9931U, 17691U, 10144U, 17819U, 10047U, 17779U, 
    9949U, 17706U, 10162U, 17834U, 6354U, 7314U, 12385U, 6563U, 
    14064U, 18379U, 23761U, 7547U, 12081U, 23566U, 11987U, 6325U, 
    13959U, 18298U, 23492U, 7285U, 12798U, 6636U, 14224U, 18499U, 
    23862U, 7620U, 12048U, 6339U, 23501U, 7299U, 12338U, 6517U, 
    23715U, 7501U, 11940U, 6279U, 23446U, 7239U, 12751U, 6590U, 
    23816U, 7574U, 12364U, 6532U, 23725U, 7516U, 11966U, 6294U, 
    23456U, 7254U, 12777U, 6605U, 23826U, 7589U, 12298U, 6488U, 
    23673U, 7472U, 12375U, 6548U, 23744U, 7532U, 11977U, 6310U, 
    23475U, 7270U, 12788U, 6621U, 23845U, 7605U, 12308U, 6503U, 
    23690U, 7487U, 10799U, 12713U, 15008U, 26104U, 10991U, 15247U, 
    26429U, 9856U, 9863U, 11442U, 13876U, 24947U, 11341U, 13859U, 
    24940U, 117U, 16312U, 16897U, 9849U, 23335U, 19696U, 24974U, 
    20385U, 16179U, 23345U, 19709U, 25006U, 20398U, 6993U, 2480U, 
    17103U, 6464U, 23659U, 19903U, 7448U, 3484U, 3451U, 3439U, 
    540U, 16708U, 2580U, 17191U, 16195U, 7006U, 3260U, 3468U, 
    26059U, 20652U, 7939U, 727U, 16834U, 2761U, 17305U, 23979U, 
    20123U, 7729U, 522U, 16684U, 2562U, 17167U, 23754U, 19957U, 
    371U, 16545U, 2354U, 17055U, 23541U, 19839U, 344U, 16509U, 
    2327U, 17031U, 23485U, 19809U, 597U, 16760U, 2637U, 17243U, 
    23855U, 20010U, 303U, 16456U, 2286U, 16978U, 23421U, 19764U, 
    313U, 16469U, 2296U, 16991U, 23429U, 19775U, 431U, 16596U, 
    2414U, 17078U, 23605U, 19882U, 567U, 16721U, 2607U, 17204U, 
    23800U, 19977U, 324U, 16483U, 2307U, 17005U, 23438U, 19787U, 
    577U, 16734U, 2617U, 17217U, 23808U, 19988U, 502U, 16658U, 
    2542U, 17141U, 23707U, 19935U, 353U, 16521U, 2336U, 17043U, 
    23527U, 19819U, 512U, 16671U, 2552U, 17154U, 23736U, 19946U, 
    334U, 16496U, 2317U, 17018U, 23467U, 19798U, 587U, 16747U, 
    2627U, 17230U, 23837U, 19999U, 474U, 16621U, 2514U, 17116U, 
    23683U, 19914U, 5055U, 4894U, 4521U, 11454U, 26928U, 27882U, 
    27821U, 15325U, 20996U, 15393U, 15403U, 22206U, 22077U, 8138U, 
    26786U, 8155U, 24738U, 24719U, 24160U, 20142U, 7781U, 24535U, 
    1049U, 20919U, 24713U, 15312U, 23214U, 20913U, 24692U, 24739U, 
    24720U, 7892U, 7902U, 10783U, 12697U, 14982U, 26078U, 10975U, 
    13062U, 15231U, 26413U, 18635U, 6886U, 9837U, 8070U, 9U, 
    97U, 1165U, 21152U, 15U, 11764U, 24623U, 24305U, 49U, 
    134U, 1171U, 21165U, 36U, 14430U, 24654U, 16043U, 24288U, 
    27842U, 24680U, 8130U, 12614U, 14910U, 25945U, 12979U, 15168U, 
    26330U, 12536U, 14832U, 25858U, 12901U, 15090U, 26252U, 14306U, 
    1656U, 14381U, 1708U, 25469U, 20476U, 14343U, 18548U, 15657U, 
    18864U, 22655U, 19453U, 14407U, 1744U, 14286U, 1626U, 22284U, 
    14320U, 1675U, 14394U, 1726U, 25481U, 20491U, 14369U, 18580U, 
    12506U, 14813U, 25828U, 12871U, 15071U, 26222U, 15668U, 18878U, 
    22666U, 19467U, 14417U, 1759U, 14334U, 1694U, 23108U, 998U, 
    24872U, 13866U, 24770U, 11594U, 15972U, 984U, 1029U, 24824U, 
    8550U, 238U, 24725U, 16003U, 991U, 24830U, 10241U, 27809U, 
    24800U, 22579U, 13421U, 7111U, 5141U, 5119U, 9875U, 17678U, 
    5777U, 15317U, 18643U, 6894U, 24309U, 24161U, 11138U, 5961U, 
    20143U, 7782U, 22583U, 13426U, 7120U, 24536U, 22540U, 22226U, 
    24858U, 20336U, 19102U, 24866U, 20347U, 19356U, 25790U, 20590U, 
    25753U, 20564U, 14990U, 18613U, 26484U, 20676U, 25780U, 20577U, 
    25734U, 20539U, 14928U, 18601U, 25691U, 20517U, 23330U, 1013U, 
    20187U, 7813U, 531U, 16696U, 2571U, 17179U, 23770U, 19967U, 
    11889U, 284U, 16431U, 2267U, 16966U, 3363U, 23406U, 19743U, 
    7227U, 25086U, 12034U, 25191U, 12324U, 25529U, 12479U, 25801U, 
    11926U, 25123U, 12737U, 26128U, 493U, 16646U, 2533U, 1020U, 
    16877U, 11996U, 25153U, 12421U, 25647U, 12348U, 25543U, 11950U, 
    25137U, 12761U, 26142U, 12010U, 25167U, 12284U, 25500U, 13110U, 
    656U, 16810U, 2696U, 17281U, 23920U, 20052U, 7646U, 26470U, 
    14684U, 25514U, 11797U, 24992U, 12233U, 25425U, 12435U, 25661U, 
    12666U, 26033U, 13042U, 26393U, 12242U, 25434U, 12444U, 25670U, 
    10576U, 12220U, 14650U, 25412U, 11789U, 24984U, 2468U, 6449U, 
    23649U, 7433U, 715U, 2749U, 6718U, 20506U, 23969U, 20110U, 
    7714U, 11896U, 25093U, 11851U, 25048U, 13140U, 26492U, 11833U, 
    25030U, 12277U, 25493U, 665U, 16822U, 2705U, 17293U, 6662U, 
    23927U, 20062U, 7658U, 11867U, 25064U, 12263U, 441U, 16609U, 
    2424U, 17091U, 3382U, 23613U, 19893U, 7377U, 25455U, 400U, 
    16556U, 2383U, 17066U, 23574U, 19848U, 7354U, 15576U, 12317U, 
    25522U, 12814U, 26165U, 12839U, 26190U, 12041U, 25198U, 12331U, 
    25536U, 11933U, 25130U, 12744U, 26135U, 12003U, 25160U, 12428U, 
    25654U, 12831U, 606U, 16772U, 2646U, 17255U, 23878U, 20020U, 
    26182U, 11860U, 265U, 16406U, 2248U, 16954U, 3353U, 23391U, 
    19722U, 7215U, 25057U, 12356U, 25551U, 11958U, 25145U, 12769U, 
    26150U, 12018U, 25175U, 12291U, 25507U, 12676U, 26043U, 13052U, 
    26403U, 14698U, 25559U, 12516U, 25838U, 12881U, 26232U, 15417U, 
    6930U, 24529U, 7802U, 12527U, 14823U, 25849U, 12892U, 15081U, 
    26243U, 12497U, 14804U, 25819U, 12862U, 15062U, 26213U, 15855U, 
    18968U, 11024U, 13102U, 15280U, 26462U, 10603U, 12270U, 14677U, 
    25462U, 10384U, 11918U, 14502U, 25115U, 10645U, 12465U, 14788U, 
    25698U, 23210U, 10830U, 12822U, 15039U, 26173U, 24879U, 10392U, 
    12026U, 14510U, 25183U, 20365U, 19672U, 7182U, 15568U, 15595U, 
    22927U, 17477U, 3314U, 5548U, 5786U, 6039U, 17496U, 19679U, 
    9899U, 2024U, 19570U, 19642U, 26711U, 20703U, 18784U, 11084U, 
    2087U, 5872U, 11063U, 2081U, 5853U, 22924U, 17469U, 3309U, 
    22530U, 17337U, 5537U, 7085U, 9893U, 2016U, 8043U, 8078U, 
    19564U, 18770U, 4865U, 3905U, 4798U, 4790U, 5004U, 4836U, 
    9907U, 2034U, 13176U, 18026U, 17516U, 26716U, 20711U, 7822U, 
    17685U, 5800U, 27805U, 3848U, 13552U, 18172U, 20828U, 11602U, 
    82U, 1948U, 5489U, 450U, 2490U, 1155U, 5407U, 8011U, 
    1913U, 10422U, 12104U, 14540U, 25302U, 15679U, 11224U, 22715U, 
    162U, 1962U, 10371U, 11905U, 14489U, 25102U, 27889U, 3867U, 
    20881U, 13893U, 2828U, 13327U, 18082U, 17545U, 26667U, 20696U, 
    18246U, 27827U, 3854U, 13557U, 18180U, 20851U, 17393U, 5632U, 
    15852U, 3255U, 8062U, 11605U, 8100U, 13362U, 18096U, 18962U, 
    6967U, 8124U, 9838U, 5768U, 8071U, 6921U, 174U, 1978U, 
    16344U, 26971U, 3702U, 20821U, 24955U, 17554U, 3479U, 152U, 
    16328U, 1177U, 5469U, 8027U, 1923U, 22377U, 19188U, 13519U, 
    18158U, 19130U, 16141U, 3271U, 13370U, 18103U, 19011U, 17430U, 
    5677U, 16859U, 11256U, 6019U, 19364U, 23156U, 3341U, 13455U, 
    18133U, 19628U, 19340U, 11250U, 20258U, 26721U, 186U, 16362U, 
    19688U, 20719U, 20373U, 7923U, 27861U, 4274U, 4338U, 4306U, 
    4355U, 4884U, 4625U, 4510U, 4984U, 4641U, 4391U, 4453U, 
    11541U, 12066U, 6381U, 23519U, 7341U, 14740U, 25601U, 24617U, 
    22510U, 19303U, 20215U, 11008U, 13086U, 15264U, 26446U, 294U, 
    16444U, 2277U, 22398U, 19218U, 18011U, 14713U, 25574U, 23414U, 
    19754U, 15773U, 18892U, 22851U, 19500U, 15799U, 18924U, 22877U, 
    19532U, 11818U, 6267U, 23384U, 7203U, 10712U, 12597U, 14893U, 
    25919U, 10904U, 12962U, 15151U, 26313U, 10348U, 11852U, 14466U, 
    25049U, 13141U, 6733U, 23987U, 10791U, 12705U, 15000U, 7742U, 
    26096U, 10983U, 13070U, 15239U, 26421U, 10U, 5345U, 98U, 
    2184U, 16304U, 5387U, 1166U, 5427U, 16U, 16258U, 5355U, 
    245U, 16380U, 2193U, 16916U, 5437U, 22U, 16267U, 15336U, 
    17383U, 2844U, 22438U, 19230U, 18663U, 22088U, 17448U, 3289U, 
    22473U, 19254U, 19052U, 23103U, 11805U, 6255U, 23377U, 7191U, 
    10694U, 12579U, 14875U, 25901U, 10886U, 12944U, 15133U, 26295U, 
    10331U, 11834U, 14449U, 25031U, 12278U, 6477U, 23667U, 10721U, 
    12606U, 14902U, 7461U, 25937U, 10913U, 12971U, 15160U, 26322U, 
    11765U, 10239U, 17926U, 24624U, 7851U, 6246U, 10661U, 12546U, 
    14842U, 25868U, 10853U, 12911U, 15100U, 26262U, 17355U, 5598U, 
    19112U, 7063U, 24890U, 362U, 16533U, 2345U, 15466U, 2980U, 
    18730U, 23534U, 19829U, 2222U, 15444U, 2873U, 23355U, 409U, 
    16568U, 2392U, 15492U, 3010U, 18740U, 23581U, 19858U, 626U, 
    16798U, 2666U, 15542U, 3184U, 18750U, 23894U, 20042U, 2235U, 
    15455U, 2886U, 23366U, 420U, 16582U, 2403U, 15501U, 3021U, 
    18760U, 23590U, 19870U, 10290U, 12058U, 6368U, 23511U, 7328U, 
    14730U, 25591U, 24605U, 22500U, 19290U, 20200U, 11000U, 13078U, 
    15256U, 26438U, 275U, 16419U, 2258U, 22389U, 19206U, 17942U, 
    14704U, 25565U, 23399U, 19733U, 50U, 5377U, 135U, 2213U, 
    16942U, 16320U, 5397U, 1172U, 5459U, 37U, 16287U, 5366U, 
    255U, 16393U, 2203U, 16929U, 5448U, 29U, 16277U, 15368U, 
    2866U, 22464U, 19242U, 18687U, 22257U, 19138U, 22105U, 3296U, 
    22482U, 19266U, 19069U, 66U, 198U, 1195U, 71U, 211U, 
    1200U, 23132U, 14431U, 24655U, 7861U, 6864U, 16044U, 15811U, 
    18939U, 22889U, 19547U, 15613U, 18811U, 22611U, 19400U, 14117U, 
    18419U, 25770U, 1884U, 14167U, 1541U, 25972U, 1899U, 3411U, 
    14750U, 25611U, 14355U, 18563U, 14295U, 1640U, 24289U, 22520U, 
    19316U, 22491U, 19278U, 20179U, 27843U, 20872U, 24675U, 7882U, 
    11032U, 13117U, 15288U, 26477U, 19004U, 6984U, 14035U, 1483U, 
    14722U, 25583U, 8131U, 14138U, 1527U, 4850U, 4977U, 4164U, 
    3887U, 10356U, 11875U, 14474U, 25072U, 10363U, 11882U, 14481U, 
    25079U, 293U, 16443U, 2276U, 23413U, 19753U, 274U, 16418U, 
    2257U, 23398U, 19732U, 22932U, 3321U, 10505U, 19578U, 7129U, 
    24904U, 17507U, 5723U, 5045U, 5086U, 22933U, 17488U, 5713U, 
    3322U, 10506U, 6903U, 19579U, 7130U, 24905U, 26950U, 3689U, 
    20806U, 5185U, 14025U, 18344U, 13478U, 18149U, 6795U, 11016U, 
    13094U, 15272U, 26454U, 10376U, 11910U, 14494U, 25107U, 10823U, 
    12807U, 15032U, 26158U, 13993U, 18311U, 9984U, 17720U, 3373U, 
    3421U, 22285U, 15642U, 8484U, 17608U, 18846U, 22640U, 8534U, 
    17645U, 19435U, 15786U, 18908U, 22864U, 19516U, 15628U, 8469U, 
    17590U, 18829U, 22626U, 8519U, 17627U, 19418U, 13937U, 18279U, 
    25234U, 20433U, 13912U, 18263U, 25263U, 20448U, 13925U, 1425U, 
    25219U, 1786U, 25246U, 1806U, 13618U, 13303U, 18057U, 20687U, 
    18196U, 6806U, 8116U, 11664U, 1400U, 3392U, 3430U, 10225U, 
    17906U, 22351U, 19170U, 23150U, 3333U, 19619U, 7171U, 7147U, 
    483U, 16633U, 2523U, 17128U, 23699U, 19924U, 14268U, 18536U, 
    10207U, 17882U, 14009U, 18333U, 10000U, 17742U, 12815U, 6650U, 
    23871U, 7634U, 23109U, 24873U, 20356U, 19592U, 2445U, 6420U, 
    23630U, 7404U, 692U, 2726U, 6689U, 20422U, 23950U, 20085U, 
    7685U, 616U, 16785U, 2656U, 17268U, 23886U, 20031U, 4805U, 
    4181U, 8465U, 11348U, 10756U, 12650U, 14955U, 26017U, 10959U, 
    13026U, 15215U, 26377U, 10236U, 17329U, 5517U, 2039U, 13193U, 
    18033U, 17920U, 5808U, 11269U, 2102U, 8054U, 11450U, 8093U, 
    13246U, 18040U, 17972U, 6050U, 8087U, 11786U, 22215U, 17458U, 
    5699U, 19085U, 7052U, 8146U, 87U, 1955U, 5503U, 462U, 
    2502U, 1160U, 5417U, 8019U, 1918U, 24771U, 20283U, 15683U, 
    22719U, 168U, 1970U, 9871U, 1994U, 17671U, 13884U, 2822U, 
    18239U, 26812U, 3524U, 13167U, 6758U, 7973U, 24002U, 7767U, 
    26779U, 3515U, 13152U, 6744U, 7952U, 23993U, 7753U, 12214U, 
    6394U, 23599U, 7366U, 22598U, 26944U, 14427U, 17365U, 5610U, 
    2833U, 13331U, 18089U, 10401U, 14519U, 25206U, 22093U, 24851U, 
    20326U, 19060U, 14259U, 18524U, 10198U, 17870U, 14207U, 18485U, 
    26086U, 20663U, 14001U, 18322U, 9992U, 17731U, 14128U, 18433U, 
    25928U, 20604U, 14250U, 18512U, 10189U, 1386U, 14106U, 18405U, 
    10090U, 1337U, 25743U, 20551U, 13904U, 18252U, 9910U, 1213U, 
    14074U, 18392U, 10058U, 1290U, 25705U, 20527U, 14277U, 1612U, 
    10216U, 17894U, 14017U, 1470U, 10008U, 17753U, 18595U, 6856U, 
    13335U, 6783U, 10421U, 12103U, 14539U, 25301U, 10370U, 11904U, 
    14488U, 25101U, 15973U, 17412U, 5655U, 1030U, 3584U, 10451U, 
    12118U, 14554U, 25316U, 24825U, 20299U, 10583U, 12227U, 14657U, 
    18990U, 6975U, 25419U, 24274U, 3462U, 20159U, 26954U, 3695U, 
    20813U, 27917U, 3879U, 20894U, 27831U, 3860U, 20858U, 13400U, 
    26939U, 10528U, 12181U, 14617U, 25379U, 10808U, 12722U, 15017U, 
    26113U, 8551U, 10414U, 12096U, 14532U, 25294U, 10481U, 12148U, 
    14584U, 25346U, 10616U, 12394U, 14759U, 25620U, 24726U, 20265U, 
    10317U, 11812U, 14435U, 17664U, 25016U, 16004U, 17421U, 5666U, 
    10458U, 12125U, 14561U, 25323U, 10497U, 12164U, 14600U, 25362U, 
    10630U, 12414U, 14773U, 25640U, 24831U, 20307U, 10589U, 12249U, 
    14663U, 18997U, 25441U, 22278U, 19148U, 7074U, 10839U, 12848U, 
    15048U, 26199U, 10242U, 13969U, 1442U, 14084U, 1495U, 25714U, 
    1854U, 25278U, 1828U, 14042U, 18357U, 14147U, 18446U, 25954U, 
    20616U, 10948U, 13015U, 15204U, 26366U, 10772U, 12686U, 14971U, 
    26067U, 10738U, 12632U, 14937U, 25999U, 10930U, 12997U, 15186U, 
    26348U, 17525U, 5734U, 9960U, 1244U, 10068U, 1305U, 7831U, 
    14234U, 1586U, 10173U, 17848U, 14187U, 1556U, 10111U, 17793U, 
    10545U, 12198U, 14634U, 25396U, 11001U, 13079U, 15257U, 26439U, 
    17929U, 5816U, 27810U, 20835U, 180U, 1986U, 16353U, 24965U, 
    17562U, 5758U, 3496U, 157U, 16336U, 1182U, 5479U, 8035U, 
    1928U, 22383U, 19197U, 13523U, 18165U, 16145U, 3277U, 13375U, 
    18111U, 19018U, 17439U, 5688U, 16868U, 19371U, 23160U, 3347U, 
    13460U, 18141U, 19635U, 19348U, 7101U, 192U, 16371U, 20379U, 
    7931U, 11202U, 15306U, 18626U, 6873U, 17950U, 5973U, 15863U, 
    18979U, 4829U, 4192U, 4290U, 4996U, 5012U, 4322U, 4260U, 
    5151U, 5065U, 4906U, 4534U, 4918U, 4561U, 5096U, 4174U, 
    5130U, 4267U, 5162U, 5221U, 4407U, 4466U, 22602U, 15379U, 
    18695U, 19385U, 13317U, 15315U, 24660U, 20232U, 18641U, 24639U, 
    20224U, 18066U, 24843U, 13645U, 18204U, 20315U, 22251U, 19121U, 
    22811U, 19491U, 15429U, 18720U, 23143U, 19609U, 24836U, 13637U, 
    6816U, 7911U, 22221U, 19094U, 22606U, 19392U, 15423U, 18711U, 
    23137U, 19600U, 24278U, 15398U, 20241U, 18703U, 24708U, 20250U, 
    20166U, 13404U, 15320U, 18649U, 18126U, 2433U, 6405U, 23620U, 
    7389U, 680U, 2714U, 6674U, 20411U, 23940U, 20072U, 7670U, 
    24666U, 24801U, 20291U, 24673U, 61U, 24686U, 10400U, 12074U, 
    14518U, 25205U, 24193U, 20151U, 7792U, 22357U, 19179U, 7159U, 
    13871U, 18231U, 6846U, 22994U, 17487U, 5712U, 3327U, 10512U, 
    6902U, 19585U, 7138U, 24910U, 26949U, 3688U, 20805U, 5196U, 
    11599U, 
};

static inline void InitMipsMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, nullptr, nullptr, 2849);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct MipsGenInstrInfo : public TargetInstrInfo {
  explicit MipsGenInstrInfo(unsigned CFSetupOpcode = ~0u, unsigned CFDestroyOpcode = ~0u, unsigned CatchRetOpcode = ~0u, unsigned ReturnOpcode = ~0u);
  ~MipsGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc MipsInsts[];
extern const unsigned MipsInstrNameIndices[];
extern const char MipsInstrNameData[];
MipsGenInstrInfo::MipsGenInstrInfo(unsigned CFSetupOpcode, unsigned CFDestroyOpcode, unsigned CatchRetOpcode, unsigned ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(MipsInsts, MipsInstrNameIndices, MipsInstrNameData, nullptr, nullptr, 2849);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace Mips {
namespace OpName {
enum {
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace Mips
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace Mips {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  return -1;
}
} // end namespace Mips
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace Mips {
namespace OpTypes {
enum OperandType {
  InvertedImOperand = 0,
  InvertedImOperand64 = 1,
  PtrRC = 2,
  brtarget = 3,
  brtarget10_mm = 4,
  brtarget1SImm16 = 5,
  brtarget21 = 6,
  brtarget21_mm = 7,
  brtarget26 = 8,
  brtarget26_mm = 9,
  brtarget7_mm = 10,
  brtarget_lsl2_mm = 11,
  brtarget_mm = 12,
  brtargetr6 = 13,
  calloffset16 = 14,
  calltarget = 15,
  calltarget_mm = 16,
  condcode = 17,
  cpinst_operand = 18,
  f32imm = 19,
  f64imm = 20,
  i16imm = 21,
  i1imm = 22,
  i32imm = 23,
  i64imm = 24,
  i8imm = 25,
  imm64 = 26,
  jmpoffset16 = 27,
  jmptarget = 28,
  jmptarget_mm = 29,
  li16_imm = 30,
  mem = 31,
  mem16 = 32,
  mem16_ea = 33,
  mem16sp = 34,
  mem_ea = 35,
  mem_mm_11 = 36,
  mem_mm_12 = 37,
  mem_mm_16 = 38,
  mem_mm_4 = 39,
  mem_mm_4_lsl1 = 40,
  mem_mm_4_lsl2 = 41,
  mem_mm_4sp = 42,
  mem_mm_9 = 43,
  mem_mm_gp_simm7_lsl2 = 44,
  mem_mm_sp_imm5_lsl2 = 45,
  mem_msa = 46,
  mem_simm10 = 47,
  mem_simm10_lsl1 = 48,
  mem_simm10_lsl2 = 49,
  mem_simm10_lsl3 = 50,
  mem_simm11 = 51,
  mem_simm12 = 52,
  mem_simm16 = 53,
  mem_simm9 = 54,
  mem_simm9_exp = 55,
  mem_simmptr = 56,
  pcrel16 = 57,
  ptype0 = 58,
  ptype1 = 59,
  ptype2 = 60,
  ptype3 = 61,
  ptype4 = 62,
  ptype5 = 63,
  reglist = 64,
  reglist16 = 65,
  simm10 = 66,
  simm10_64 = 67,
  simm10_lsl1 = 68,
  simm10_lsl2 = 69,
  simm10_lsl3 = 70,
  simm11 = 71,
  simm12 = 72,
  simm16 = 73,
  simm16_64 = 74,
  simm16_relaxed = 75,
  simm18_lsl3 = 76,
  simm19_lsl2 = 77,
  simm23_lsl2 = 78,
  simm32 = 79,
  simm32_relaxed = 80,
  simm3_lsa2 = 81,
  simm4 = 82,
  simm5 = 83,
  simm6 = 84,
  simm7_lsl2 = 85,
  simm9 = 86,
  simm9_addiusp = 87,
  size_ins = 88,
  type0 = 89,
  type1 = 90,
  type2 = 91,
  type3 = 92,
  type4 = 93,
  type5 = 94,
  uimm1 = 95,
  uimm10 = 96,
  uimm16 = 97,
  uimm16_64 = 98,
  uimm16_64_relaxed = 99,
  uimm16_altrelaxed = 100,
  uimm16_relaxed = 101,
  uimm1_ptr = 102,
  uimm2 = 103,
  uimm20 = 104,
  uimm26 = 105,
  uimm2_plus1 = 106,
  uimm2_ptr = 107,
  uimm3 = 108,
  uimm32_coerced = 109,
  uimm3_ptr = 110,
  uimm3_shift = 111,
  uimm4 = 112,
  uimm4_andi = 113,
  uimm4_ptr = 114,
  uimm5 = 115,
  uimm5_64 = 116,
  uimm5_64_report_uimm6 = 117,
  uimm5_inssize_plus1 = 118,
  uimm5_lsl2 = 119,
  uimm5_plus1 = 120,
  uimm5_plus1_report_uimm6 = 121,
  uimm5_plus32 = 122,
  uimm5_plus32_normalize = 123,
  uimm5_plus32_normalize_64 = 124,
  uimm5_plus33 = 125,
  uimm5_report_uimm6 = 126,
  uimm6 = 127,
  uimm6_lsl2 = 128,
  uimm7 = 129,
  uimm8 = 130,
  uimm_range_2_64 = 131,
  uimmz = 132,
  untyped_imm_0 = 133,
  vsplat_simm10 = 134,
  vsplat_simm5 = 135,
  vsplat_uimm1 = 136,
  vsplat_uimm2 = 137,
  vsplat_uimm3 = 138,
  vsplat_uimm4 = 139,
  vsplat_uimm5 = 140,
  vsplat_uimm6 = 141,
  vsplat_uimm8 = 142,
  ACC64DSPOpnd = 143,
  AFGR64Opnd = 144,
  CCROpnd = 145,
  COP0Opnd = 146,
  COP2Opnd = 147,
  COP3Opnd = 148,
  DSPROpnd = 149,
  FCCRegsOpnd = 150,
  FGR32Opnd = 151,
  FGR64Opnd = 152,
  FGRCCOpnd = 153,
  GPR32NonZeroOpnd = 154,
  GPR32Opnd = 155,
  GPR32ZeroOpnd = 156,
  GPR64Opnd = 157,
  GPRMM16Opnd = 158,
  GPRMM16OpndMoveP = 159,
  GPRMM16OpndMovePPairFirst = 160,
  GPRMM16OpndMovePPairSecond = 161,
  GPRMM16OpndZero = 162,
  HI32DSPOpnd = 163,
  HWRegsOpnd = 164,
  LO32DSPOpnd = 165,
  MSA128BOpnd = 166,
  MSA128CROpnd = 167,
  MSA128DOpnd = 168,
  MSA128F16Opnd = 169,
  MSA128HOpnd = 170,
  MSA128WOpnd = 171,
  StrictlyAFGR64Opnd = 172,
  StrictlyFGR32Opnd = 173,
  StrictlyFGR64Opnd = 174,
  ACC128 = 175,
  ACC64 = 176,
  ACC64DSP = 177,
  AFGR64 = 178,
  CCR = 179,
  COP0 = 180,
  COP2 = 181,
  COP3 = 182,
  CPU16Regs = 183,
  CPU16RegsPlusSP = 184,
  CPURAReg = 185,
  CPUSPReg = 186,
  DSPCC = 187,
  DSPR = 188,
  FCC = 189,
  FGR32 = 190,
  FGR64 = 191,
  FGRCC = 192,
  GP32 = 193,
  GP64 = 194,
  GPR32 = 195,
  GPR32NONZERO = 196,
  GPR32ZERO = 197,
  GPR64 = 198,
  GPRMM16 = 199,
  GPRMM16MoveP = 200,
  GPRMM16MovePPairFirst = 201,
  GPRMM16MovePPairSecond = 202,
  GPRMM16Zero = 203,
  HI32 = 204,
  HI32DSP = 205,
  HI64 = 206,
  HWRegs = 207,
  LO32 = 208,
  LO32DSP = 209,
  LO64 = 210,
  MSA128B = 211,
  MSA128D = 212,
  MSA128F16 = 213,
  MSA128H = 214,
  MSA128W = 215,
  MSA128WEvens = 216,
  MSACtrl = 217,
  OCTEON_MPL = 218,
  OCTEON_P = 219,
  SP32 = 220,
  SP64 = 221,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace Mips {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  static const uint16_t Offsets[] = {
    /* PHI */
    0,
    /* INLINEASM */
    1,
    /* INLINEASM_BR */
    1,
    /* CFI_INSTRUCTION */
    1,
    /* EH_LABEL */
    2,
    /* GC_LABEL */
    3,
    /* ANNOTATION_LABEL */
    4,
    /* KILL */
    5,
    /* EXTRACT_SUBREG */
    5,
    /* INSERT_SUBREG */
    8,
    /* IMPLICIT_DEF */
    12,
    /* SUBREG_TO_REG */
    13,
    /* COPY_TO_REGCLASS */
    17,
    /* DBG_VALUE */
    20,
    /* DBG_VALUE_LIST */
    20,
    /* DBG_INSTR_REF */
    20,
    /* DBG_PHI */
    20,
    /* DBG_LABEL */
    20,
    /* REG_SEQUENCE */
    21,
    /* COPY */
    23,
    /* BUNDLE */
    25,
    /* LIFETIME_START */
    25,
    /* LIFETIME_END */
    26,
    /* PSEUDO_PROBE */
    27,
    /* ARITH_FENCE */
    31,
    /* STACKMAP */
    33,
    /* FENTRY_CALL */
    35,
    /* PATCHPOINT */
    35,
    /* LOAD_STACK_GUARD */
    41,
    /* PREALLOCATED_SETUP */
    42,
    /* PREALLOCATED_ARG */
    43,
    /* STATEPOINT */
    46,
    /* LOCAL_ESCAPE */
    46,
    /* FAULTING_OP */
    48,
    /* PATCHABLE_OP */
    49,
    /* PATCHABLE_FUNCTION_ENTER */
    49,
    /* PATCHABLE_RET */
    49,
    /* PATCHABLE_FUNCTION_EXIT */
    49,
    /* PATCHABLE_TAIL_CALL */
    49,
    /* PATCHABLE_EVENT_CALL */
    49,
    /* PATCHABLE_TYPED_EVENT_CALL */
    51,
    /* ICALL_BRANCH_FUNNEL */
    54,
    /* MEMBARRIER */
    54,
    /* G_ASSERT_SEXT */
    54,
    /* G_ASSERT_ZEXT */
    57,
    /* G_ASSERT_ALIGN */
    60,
    /* G_ADD */
    63,
    /* G_SUB */
    66,
    /* G_MUL */
    69,
    /* G_SDIV */
    72,
    /* G_UDIV */
    75,
    /* G_SREM */
    78,
    /* G_UREM */
    81,
    /* G_SDIVREM */
    84,
    /* G_UDIVREM */
    88,
    /* G_AND */
    92,
    /* G_OR */
    95,
    /* G_XOR */
    98,
    /* G_IMPLICIT_DEF */
    101,
    /* G_PHI */
    102,
    /* G_FRAME_INDEX */
    103,
    /* G_GLOBAL_VALUE */
    105,
    /* G_CONSTANT_POOL */
    107,
    /* G_EXTRACT */
    109,
    /* G_UNMERGE_VALUES */
    112,
    /* G_INSERT */
    114,
    /* G_MERGE_VALUES */
    118,
    /* G_BUILD_VECTOR */
    120,
    /* G_BUILD_VECTOR_TRUNC */
    122,
    /* G_CONCAT_VECTORS */
    124,
    /* G_PTRTOINT */
    126,
    /* G_INTTOPTR */
    128,
    /* G_BITCAST */
    130,
    /* G_FREEZE */
    132,
    /* G_INTRINSIC_FPTRUNC_ROUND */
    134,
    /* G_INTRINSIC_TRUNC */
    137,
    /* G_INTRINSIC_ROUND */
    139,
    /* G_INTRINSIC_LRINT */
    141,
    /* G_INTRINSIC_ROUNDEVEN */
    143,
    /* G_READCYCLECOUNTER */
    145,
    /* G_LOAD */
    146,
    /* G_SEXTLOAD */
    148,
    /* G_ZEXTLOAD */
    150,
    /* G_INDEXED_LOAD */
    152,
    /* G_INDEXED_SEXTLOAD */
    157,
    /* G_INDEXED_ZEXTLOAD */
    162,
    /* G_STORE */
    167,
    /* G_INDEXED_STORE */
    169,
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    174,
    /* G_ATOMIC_CMPXCHG */
    179,
    /* G_ATOMICRMW_XCHG */
    183,
    /* G_ATOMICRMW_ADD */
    186,
    /* G_ATOMICRMW_SUB */
    189,
    /* G_ATOMICRMW_AND */
    192,
    /* G_ATOMICRMW_NAND */
    195,
    /* G_ATOMICRMW_OR */
    198,
    /* G_ATOMICRMW_XOR */
    201,
    /* G_ATOMICRMW_MAX */
    204,
    /* G_ATOMICRMW_MIN */
    207,
    /* G_ATOMICRMW_UMAX */
    210,
    /* G_ATOMICRMW_UMIN */
    213,
    /* G_ATOMICRMW_FADD */
    216,
    /* G_ATOMICRMW_FSUB */
    219,
    /* G_ATOMICRMW_FMAX */
    222,
    /* G_ATOMICRMW_FMIN */
    225,
    /* G_ATOMICRMW_UINC_WRAP */
    228,
    /* G_ATOMICRMW_UDEC_WRAP */
    231,
    /* G_FENCE */
    234,
    /* G_BRCOND */
    236,
    /* G_BRINDIRECT */
    238,
    /* G_INVOKE_REGION_START */
    239,
    /* G_INTRINSIC */
    239,
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    240,
    /* G_ANYEXT */
    241,
    /* G_TRUNC */
    243,
    /* G_CONSTANT */
    245,
    /* G_FCONSTANT */
    247,
    /* G_VASTART */
    249,
    /* G_VAARG */
    250,
    /* G_SEXT */
    253,
    /* G_SEXT_INREG */
    255,
    /* G_ZEXT */
    258,
    /* G_SHL */
    260,
    /* G_LSHR */
    263,
    /* G_ASHR */
    266,
    /* G_FSHL */
    269,
    /* G_FSHR */
    273,
    /* G_ROTR */
    277,
    /* G_ROTL */
    280,
    /* G_ICMP */
    283,
    /* G_FCMP */
    287,
    /* G_SELECT */
    291,
    /* G_UADDO */
    295,
    /* G_UADDE */
    299,
    /* G_USUBO */
    304,
    /* G_USUBE */
    308,
    /* G_SADDO */
    313,
    /* G_SADDE */
    317,
    /* G_SSUBO */
    322,
    /* G_SSUBE */
    326,
    /* G_UMULO */
    331,
    /* G_SMULO */
    335,
    /* G_UMULH */
    339,
    /* G_SMULH */
    342,
    /* G_UADDSAT */
    345,
    /* G_SADDSAT */
    348,
    /* G_USUBSAT */
    351,
    /* G_SSUBSAT */
    354,
    /* G_USHLSAT */
    357,
    /* G_SSHLSAT */
    360,
    /* G_SMULFIX */
    363,
    /* G_UMULFIX */
    367,
    /* G_SMULFIXSAT */
    371,
    /* G_UMULFIXSAT */
    375,
    /* G_SDIVFIX */
    379,
    /* G_UDIVFIX */
    383,
    /* G_SDIVFIXSAT */
    387,
    /* G_UDIVFIXSAT */
    391,
    /* G_FADD */
    395,
    /* G_FSUB */
    398,
    /* G_FMUL */
    401,
    /* G_FMA */
    404,
    /* G_FMAD */
    408,
    /* G_FDIV */
    412,
    /* G_FREM */
    415,
    /* G_FPOW */
    418,
    /* G_FPOWI */
    421,
    /* G_FEXP */
    424,
    /* G_FEXP2 */
    426,
    /* G_FLOG */
    428,
    /* G_FLOG2 */
    430,
    /* G_FLOG10 */
    432,
    /* G_FNEG */
    434,
    /* G_FPEXT */
    436,
    /* G_FPTRUNC */
    438,
    /* G_FPTOSI */
    440,
    /* G_FPTOUI */
    442,
    /* G_SITOFP */
    444,
    /* G_UITOFP */
    446,
    /* G_FABS */
    448,
    /* G_FCOPYSIGN */
    450,
    /* G_IS_FPCLASS */
    453,
    /* G_FCANONICALIZE */
    456,
    /* G_FMINNUM */
    458,
    /* G_FMAXNUM */
    461,
    /* G_FMINNUM_IEEE */
    464,
    /* G_FMAXNUM_IEEE */
    467,
    /* G_FMINIMUM */
    470,
    /* G_FMAXIMUM */
    473,
    /* G_PTR_ADD */
    476,
    /* G_PTRMASK */
    479,
    /* G_SMIN */
    482,
    /* G_SMAX */
    485,
    /* G_UMIN */
    488,
    /* G_UMAX */
    491,
    /* G_ABS */
    494,
    /* G_LROUND */
    496,
    /* G_LLROUND */
    498,
    /* G_BR */
    500,
    /* G_BRJT */
    501,
    /* G_INSERT_VECTOR_ELT */
    504,
    /* G_EXTRACT_VECTOR_ELT */
    508,
    /* G_SHUFFLE_VECTOR */
    511,
    /* G_CTTZ */
    515,
    /* G_CTTZ_ZERO_UNDEF */
    517,
    /* G_CTLZ */
    519,
    /* G_CTLZ_ZERO_UNDEF */
    521,
    /* G_CTPOP */
    523,
    /* G_BSWAP */
    525,
    /* G_BITREVERSE */
    527,
    /* G_FCEIL */
    529,
    /* G_FCOS */
    531,
    /* G_FSIN */
    533,
    /* G_FSQRT */
    535,
    /* G_FFLOOR */
    537,
    /* G_FRINT */
    539,
    /* G_FNEARBYINT */
    541,
    /* G_ADDRSPACE_CAST */
    543,
    /* G_BLOCK_ADDR */
    545,
    /* G_JUMP_TABLE */
    547,
    /* G_DYN_STACKALLOC */
    549,
    /* G_STRICT_FADD */
    552,
    /* G_STRICT_FSUB */
    555,
    /* G_STRICT_FMUL */
    558,
    /* G_STRICT_FDIV */
    561,
    /* G_STRICT_FREM */
    564,
    /* G_STRICT_FMA */
    567,
    /* G_STRICT_FSQRT */
    571,
    /* G_READ_REGISTER */
    573,
    /* G_WRITE_REGISTER */
    575,
    /* G_MEMCPY */
    577,
    /* G_MEMCPY_INLINE */
    581,
    /* G_MEMMOVE */
    584,
    /* G_MEMSET */
    588,
    /* G_BZERO */
    592,
    /* G_VECREDUCE_SEQ_FADD */
    595,
    /* G_VECREDUCE_SEQ_FMUL */
    598,
    /* G_VECREDUCE_FADD */
    601,
    /* G_VECREDUCE_FMUL */
    603,
    /* G_VECREDUCE_FMAX */
    605,
    /* G_VECREDUCE_FMIN */
    607,
    /* G_VECREDUCE_ADD */
    609,
    /* G_VECREDUCE_MUL */
    611,
    /* G_VECREDUCE_AND */
    613,
    /* G_VECREDUCE_OR */
    615,
    /* G_VECREDUCE_XOR */
    617,
    /* G_VECREDUCE_SMAX */
    619,
    /* G_VECREDUCE_SMIN */
    621,
    /* G_VECREDUCE_UMAX */
    623,
    /* G_VECREDUCE_UMIN */
    625,
    /* G_SBFX */
    627,
    /* G_UBFX */
    631,
    /* ABSMacro */
    635,
    /* ADJCALLSTACKDOWN */
    637,
    /* ADJCALLSTACKUP */
    639,
    /* AND_V_D_PSEUDO */
    641,
    /* AND_V_H_PSEUDO */
    644,
    /* AND_V_W_PSEUDO */
    647,
    /* ATOMIC_CMP_SWAP_I16 */
    650,
    /* ATOMIC_CMP_SWAP_I16_POSTRA */
    654,
    /* ATOMIC_CMP_SWAP_I32 */
    661,
    /* ATOMIC_CMP_SWAP_I32_POSTRA */
    665,
    /* ATOMIC_CMP_SWAP_I64 */
    669,
    /* ATOMIC_CMP_SWAP_I64_POSTRA */
    673,
    /* ATOMIC_CMP_SWAP_I8 */
    677,
    /* ATOMIC_CMP_SWAP_I8_POSTRA */
    681,
    /* ATOMIC_LOAD_ADD_I16 */
    688,
    /* ATOMIC_LOAD_ADD_I16_POSTRA */
    691,
    /* ATOMIC_LOAD_ADD_I32 */
    697,
    /* ATOMIC_LOAD_ADD_I32_POSTRA */
    700,
    /* ATOMIC_LOAD_ADD_I64 */
    703,
    /* ATOMIC_LOAD_ADD_I64_POSTRA */
    706,
    /* ATOMIC_LOAD_ADD_I8 */
    709,
    /* ATOMIC_LOAD_ADD_I8_POSTRA */
    712,
    /* ATOMIC_LOAD_AND_I16 */
    718,
    /* ATOMIC_LOAD_AND_I16_POSTRA */
    721,
    /* ATOMIC_LOAD_AND_I32 */
    727,
    /* ATOMIC_LOAD_AND_I32_POSTRA */
    730,
    /* ATOMIC_LOAD_AND_I64 */
    733,
    /* ATOMIC_LOAD_AND_I64_POSTRA */
    736,
    /* ATOMIC_LOAD_AND_I8 */
    739,
    /* ATOMIC_LOAD_AND_I8_POSTRA */
    742,
    /* ATOMIC_LOAD_MAX_I16 */
    748,
    /* ATOMIC_LOAD_MAX_I16_POSTRA */
    751,
    /* ATOMIC_LOAD_MAX_I32 */
    757,
    /* ATOMIC_LOAD_MAX_I32_POSTRA */
    760,
    /* ATOMIC_LOAD_MAX_I64 */
    763,
    /* ATOMIC_LOAD_MAX_I64_POSTRA */
    766,
    /* ATOMIC_LOAD_MAX_I8 */
    769,
    /* ATOMIC_LOAD_MAX_I8_POSTRA */
    772,
    /* ATOMIC_LOAD_MIN_I16 */
    778,
    /* ATOMIC_LOAD_MIN_I16_POSTRA */
    781,
    /* ATOMIC_LOAD_MIN_I32 */
    787,
    /* ATOMIC_LOAD_MIN_I32_POSTRA */
    790,
    /* ATOMIC_LOAD_MIN_I64 */
    793,
    /* ATOMIC_LOAD_MIN_I64_POSTRA */
    796,
    /* ATOMIC_LOAD_MIN_I8 */
    799,
    /* ATOMIC_LOAD_MIN_I8_POSTRA */
    802,
    /* ATOMIC_LOAD_NAND_I16 */
    808,
    /* ATOMIC_LOAD_NAND_I16_POSTRA */
    811,
    /* ATOMIC_LOAD_NAND_I32 */
    817,
    /* ATOMIC_LOAD_NAND_I32_POSTRA */
    820,
    /* ATOMIC_LOAD_NAND_I64 */
    823,
    /* ATOMIC_LOAD_NAND_I64_POSTRA */
    826,
    /* ATOMIC_LOAD_NAND_I8 */
    829,
    /* ATOMIC_LOAD_NAND_I8_POSTRA */
    832,
    /* ATOMIC_LOAD_OR_I16 */
    838,
    /* ATOMIC_LOAD_OR_I16_POSTRA */
    841,
    /* ATOMIC_LOAD_OR_I32 */
    847,
    /* ATOMIC_LOAD_OR_I32_POSTRA */
    850,
    /* ATOMIC_LOAD_OR_I64 */
    853,
    /* ATOMIC_LOAD_OR_I64_POSTRA */
    856,
    /* ATOMIC_LOAD_OR_I8 */
    859,
    /* ATOMIC_LOAD_OR_I8_POSTRA */
    862,
    /* ATOMIC_LOAD_SUB_I16 */
    868,
    /* ATOMIC_LOAD_SUB_I16_POSTRA */
    871,
    /* ATOMIC_LOAD_SUB_I32 */
    877,
    /* ATOMIC_LOAD_SUB_I32_POSTRA */
    880,
    /* ATOMIC_LOAD_SUB_I64 */
    883,
    /* ATOMIC_LOAD_SUB_I64_POSTRA */
    886,
    /* ATOMIC_LOAD_SUB_I8 */
    889,
    /* ATOMIC_LOAD_SUB_I8_POSTRA */
    892,
    /* ATOMIC_LOAD_UMAX_I16 */
    898,
    /* ATOMIC_LOAD_UMAX_I16_POSTRA */
    901,
    /* ATOMIC_LOAD_UMAX_I32 */
    907,
    /* ATOMIC_LOAD_UMAX_I32_POSTRA */
    910,
    /* ATOMIC_LOAD_UMAX_I64 */
    913,
    /* ATOMIC_LOAD_UMAX_I64_POSTRA */
    916,
    /* ATOMIC_LOAD_UMAX_I8 */
    919,
    /* ATOMIC_LOAD_UMAX_I8_POSTRA */
    922,
    /* ATOMIC_LOAD_UMIN_I16 */
    928,
    /* ATOMIC_LOAD_UMIN_I16_POSTRA */
    931,
    /* ATOMIC_LOAD_UMIN_I32 */
    937,
    /* ATOMIC_LOAD_UMIN_I32_POSTRA */
    940,
    /* ATOMIC_LOAD_UMIN_I64 */
    943,
    /* ATOMIC_LOAD_UMIN_I64_POSTRA */
    946,
    /* ATOMIC_LOAD_UMIN_I8 */
    949,
    /* ATOMIC_LOAD_UMIN_I8_POSTRA */
    952,
    /* ATOMIC_LOAD_XOR_I16 */
    958,
    /* ATOMIC_LOAD_XOR_I16_POSTRA */
    961,
    /* ATOMIC_LOAD_XOR_I32 */
    967,
    /* ATOMIC_LOAD_XOR_I32_POSTRA */
    970,
    /* ATOMIC_LOAD_XOR_I64 */
    973,
    /* ATOMIC_LOAD_XOR_I64_POSTRA */
    976,
    /* ATOMIC_LOAD_XOR_I8 */
    979,
    /* ATOMIC_LOAD_XOR_I8_POSTRA */
    982,
    /* ATOMIC_SWAP_I16 */
    988,
    /* ATOMIC_SWAP_I16_POSTRA */
    991,
    /* ATOMIC_SWAP_I32 */
    997,
    /* ATOMIC_SWAP_I32_POSTRA */
    1000,
    /* ATOMIC_SWAP_I64 */
    1003,
    /* ATOMIC_SWAP_I64_POSTRA */
    1006,
    /* ATOMIC_SWAP_I8 */
    1009,
    /* ATOMIC_SWAP_I8_POSTRA */
    1012,
    /* B */
    1018,
    /* BAL_BR */
    1019,
    /* BAL_BR_MM */
    1020,
    /* BEQLImmMacro */
    1021,
    /* BGE */
    1024,
    /* BGEImmMacro */
    1027,
    /* BGEL */
    1030,
    /* BGELImmMacro */
    1033,
    /* BGEU */
    1036,
    /* BGEUImmMacro */
    1039,
    /* BGEUL */
    1042,
    /* BGEULImmMacro */
    1045,
    /* BGT */
    1048,
    /* BGTImmMacro */
    1051,
    /* BGTL */
    1054,
    /* BGTLImmMacro */
    1057,
    /* BGTU */
    1060,
    /* BGTUImmMacro */
    1063,
    /* BGTUL */
    1066,
    /* BGTULImmMacro */
    1069,
    /* BLE */
    1072,
    /* BLEImmMacro */
    1075,
    /* BLEL */
    1078,
    /* BLELImmMacro */
    1081,
    /* BLEU */
    1084,
    /* BLEUImmMacro */
    1087,
    /* BLEUL */
    1090,
    /* BLEULImmMacro */
    1093,
    /* BLT */
    1096,
    /* BLTImmMacro */
    1099,
    /* BLTL */
    1102,
    /* BLTLImmMacro */
    1105,
    /* BLTU */
    1108,
    /* BLTUImmMacro */
    1111,
    /* BLTUL */
    1114,
    /* BLTULImmMacro */
    1117,
    /* BNELImmMacro */
    1120,
    /* BPOSGE32_PSEUDO */
    1123,
    /* BSEL_D_PSEUDO */
    1124,
    /* BSEL_FD_PSEUDO */
    1128,
    /* BSEL_FW_PSEUDO */
    1132,
    /* BSEL_H_PSEUDO */
    1136,
    /* BSEL_W_PSEUDO */
    1140,
    /* B_MM */
    1144,
    /* B_MMR6_Pseudo */
    1145,
    /* B_MM_Pseudo */
    1146,
    /* BeqImm */
    1147,
    /* BneImm */
    1150,
    /* BteqzT8CmpX16 */
    1153,
    /* BteqzT8CmpiX16 */
    1156,
    /* BteqzT8SltX16 */
    1159,
    /* BteqzT8SltiX16 */
    1162,
    /* BteqzT8SltiuX16 */
    1165,
    /* BteqzT8SltuX16 */
    1168,
    /* BtnezT8CmpX16 */
    1171,
    /* BtnezT8CmpiX16 */
    1174,
    /* BtnezT8SltX16 */
    1177,
    /* BtnezT8SltiX16 */
    1180,
    /* BtnezT8SltiuX16 */
    1183,
    /* BtnezT8SltuX16 */
    1186,
    /* BuildPairF64 */
    1189,
    /* BuildPairF64_64 */
    1192,
    /* CFTC1 */
    1195,
    /* CONSTPOOL_ENTRY */
    1197,
    /* COPY_FD_PSEUDO */
    1200,
    /* COPY_FW_PSEUDO */
    1203,
    /* CTTC1 */
    1206,
    /* Constant32 */
    1208,
    /* DMULImmMacro */
    1209,
    /* DMULMacro */
    1212,
    /* DMULOMacro */
    1215,
    /* DMULOUMacro */
    1218,
    /* DROL */
    1221,
    /* DROLImm */
    1224,
    /* DROR */
    1227,
    /* DRORImm */
    1230,
    /* DSDivIMacro */
    1233,
    /* DSDivMacro */
    1236,
    /* DSRemIMacro */
    1239,
    /* DSRemMacro */
    1242,
    /* DUDivIMacro */
    1245,
    /* DUDivMacro */
    1248,
    /* DURemIMacro */
    1251,
    /* DURemMacro */
    1254,
    /* ERet */
    1257,
    /* ExtractElementF64 */
    1257,
    /* ExtractElementF64_64 */
    1260,
    /* FABS_D */
    1263,
    /* FABS_W */
    1265,
    /* FEXP2_D_1_PSEUDO */
    1267,
    /* FEXP2_W_1_PSEUDO */
    1269,
    /* FILL_FD_PSEUDO */
    1271,
    /* FILL_FW_PSEUDO */
    1273,
    /* GotPrologue16 */
    1275,
    /* INSERT_B_VIDX64_PSEUDO */
    1279,
    /* INSERT_B_VIDX_PSEUDO */
    1283,
    /* INSERT_D_VIDX64_PSEUDO */
    1287,
    /* INSERT_D_VIDX_PSEUDO */
    1291,
    /* INSERT_FD_PSEUDO */
    1295,
    /* INSERT_FD_VIDX64_PSEUDO */
    1299,
    /* INSERT_FD_VIDX_PSEUDO */
    1303,
    /* INSERT_FW_PSEUDO */
    1307,
    /* INSERT_FW_VIDX64_PSEUDO */
    1311,
    /* INSERT_FW_VIDX_PSEUDO */
    1315,
    /* INSERT_H_VIDX64_PSEUDO */
    1319,
    /* INSERT_H_VIDX_PSEUDO */
    1323,
    /* INSERT_W_VIDX64_PSEUDO */
    1327,
    /* INSERT_W_VIDX_PSEUDO */
    1331,
    /* JALR64Pseudo */
    1335,
    /* JALRHB64Pseudo */
    1336,
    /* JALRHBPseudo */
    1337,
    /* JALRPseudo */
    1338,
    /* JAL_MMR6 */
    1339,
    /* JalOneReg */
    1340,
    /* JalTwoReg */
    1341,
    /* LDMacro */
    1343,
    /* LDR_D */
    1346,
    /* LDR_W */
    1349,
    /* LD_F16 */
    1352,
    /* LOAD_ACC128 */
    1355,
    /* LOAD_ACC64 */
    1358,
    /* LOAD_ACC64DSP */
    1361,
    /* LOAD_CCOND_DSP */
    1364,
    /* LONG_BRANCH_ADDiu */
    1367,
    /* LONG_BRANCH_ADDiu2Op */
    1371,
    /* LONG_BRANCH_DADDiu */
    1374,
    /* LONG_BRANCH_DADDiu2Op */
    1378,
    /* LONG_BRANCH_LUi */
    1381,
    /* LONG_BRANCH_LUi2Op */
    1384,
    /* LONG_BRANCH_LUi2Op_64 */
    1386,
    /* LWM_MM */
    1388,
    /* LoadAddrImm32 */
    1391,
    /* LoadAddrImm64 */
    1393,
    /* LoadAddrReg32 */
    1395,
    /* LoadAddrReg64 */
    1398,
    /* LoadImm32 */
    1401,
    /* LoadImm64 */
    1403,
    /* LoadImmDoubleFGR */
    1405,
    /* LoadImmDoubleFGR_32 */
    1407,
    /* LoadImmDoubleGPR */
    1409,
    /* LoadImmSingleFGR */
    1411,
    /* LoadImmSingleGPR */
    1413,
    /* LwConstant32 */
    1415,
    /* MFTACX */
    1418,
    /* MFTC0 */
    1420,
    /* MFTC1 */
    1423,
    /* MFTDSP */
    1425,
    /* MFTGPR */
    1426,
    /* MFTHC1 */
    1429,
    /* MFTHI */
    1431,
    /* MFTLO */
    1433,
    /* MIPSeh_return32 */
    1435,
    /* MIPSeh_return64 */
    1437,
    /* MSA_FP_EXTEND_D_PSEUDO */
    1439,
    /* MSA_FP_EXTEND_W_PSEUDO */
    1441,
    /* MSA_FP_ROUND_D_PSEUDO */
    1443,
    /* MSA_FP_ROUND_W_PSEUDO */
    1445,
    /* MTTACX */
    1447,
    /* MTTC0 */
    1449,
    /* MTTC1 */
    1452,
    /* MTTDSP */
    1454,
    /* MTTGPR */
    1455,
    /* MTTHC1 */
    1457,
    /* MTTHI */
    1459,
    /* MTTLO */
    1461,
    /* MULImmMacro */
    1463,
    /* MULOMacro */
    1466,
    /* MULOUMacro */
    1469,
    /* MultRxRy16 */
    1472,
    /* MultRxRyRz16 */
    1474,
    /* MultuRxRy16 */
    1477,
    /* MultuRxRyRz16 */
    1479,
    /* NOP */
    1482,
    /* NORImm */
    1482,
    /* NORImm64 */
    1485,
    /* NOR_V_D_PSEUDO */
    1488,
    /* NOR_V_H_PSEUDO */
    1491,
    /* NOR_V_W_PSEUDO */
    1494,
    /* OR_V_D_PSEUDO */
    1497,
    /* OR_V_H_PSEUDO */
    1500,
    /* OR_V_W_PSEUDO */
    1503,
    /* PseudoCMPU_EQ_QB */
    1506,
    /* PseudoCMPU_LE_QB */
    1509,
    /* PseudoCMPU_LT_QB */
    1512,
    /* PseudoCMP_EQ_PH */
    1515,
    /* PseudoCMP_LE_PH */
    1518,
    /* PseudoCMP_LT_PH */
    1521,
    /* PseudoCVT_D32_W */
    1524,
    /* PseudoCVT_D64_L */
    1526,
    /* PseudoCVT_D64_W */
    1528,
    /* PseudoCVT_S_L */
    1530,
    /* PseudoCVT_S_W */
    1532,
    /* PseudoDMULT */
    1534,
    /* PseudoDMULTu */
    1537,
    /* PseudoDSDIV */
    1540,
    /* PseudoDUDIV */
    1543,
    /* PseudoD_SELECT_I */
    1546,
    /* PseudoD_SELECT_I64 */
    1553,
    /* PseudoIndirectBranch */
    1560,
    /* PseudoIndirectBranch64 */
    1561,
    /* PseudoIndirectBranch64R6 */
    1562,
    /* PseudoIndirectBranchR6 */
    1563,
    /* PseudoIndirectBranch_MM */
    1564,
    /* PseudoIndirectBranch_MMR6 */
    1565,
    /* PseudoIndirectHazardBranch */
    1566,
    /* PseudoIndirectHazardBranch64 */
    1567,
    /* PseudoIndrectHazardBranch64R6 */
    1568,
    /* PseudoIndrectHazardBranchR6 */
    1569,
    /* PseudoMADD */
    1570,
    /* PseudoMADDU */
    1574,
    /* PseudoMADDU_MM */
    1578,
    /* PseudoMADD_MM */
    1582,
    /* PseudoMFHI */
    1586,
    /* PseudoMFHI64 */
    1588,
    /* PseudoMFHI_MM */
    1590,
    /* PseudoMFLO */
    1592,
    /* PseudoMFLO64 */
    1594,
    /* PseudoMFLO_MM */
    1596,
    /* PseudoMSUB */
    1598,
    /* PseudoMSUBU */
    1602,
    /* PseudoMSUBU_MM */
    1606,
    /* PseudoMSUB_MM */
    1610,
    /* PseudoMTLOHI */
    1614,
    /* PseudoMTLOHI64 */
    1617,
    /* PseudoMTLOHI_DSP */
    1620,
    /* PseudoMTLOHI_MM */
    1623,
    /* PseudoMULT */
    1626,
    /* PseudoMULT_MM */
    1629,
    /* PseudoMULTu */
    1632,
    /* PseudoMULTu_MM */
    1635,
    /* PseudoPICK_PH */
    1638,
    /* PseudoPICK_QB */
    1642,
    /* PseudoReturn */
    1646,
    /* PseudoReturn64 */
    1647,
    /* PseudoSDIV */
    1648,
    /* PseudoSELECTFP_F_D32 */
    1651,
    /* PseudoSELECTFP_F_D64 */
    1655,
    /* PseudoSELECTFP_F_I */
    1659,
    /* PseudoSELECTFP_F_I64 */
    1663,
    /* PseudoSELECTFP_F_S */
    1667,
    /* PseudoSELECTFP_T_D32 */
    1671,
    /* PseudoSELECTFP_T_D64 */
    1675,
    /* PseudoSELECTFP_T_I */
    1679,
    /* PseudoSELECTFP_T_I64 */
    1683,
    /* PseudoSELECTFP_T_S */
    1687,
    /* PseudoSELECT_D32 */
    1691,
    /* PseudoSELECT_D64 */
    1695,
    /* PseudoSELECT_I */
    1699,
    /* PseudoSELECT_I64 */
    1703,
    /* PseudoSELECT_S */
    1707,
    /* PseudoTRUNC_W_D */
    1711,
    /* PseudoTRUNC_W_D32 */
    1714,
    /* PseudoTRUNC_W_S */
    1717,
    /* PseudoUDIV */
    1720,
    /* ROL */
    1723,
    /* ROLImm */
    1726,
    /* ROR */
    1729,
    /* RORImm */
    1732,
    /* RetRA */
    1735,
    /* RetRA16 */
    1735,
    /* SDC1_M1 */
    1735,
    /* SDIV_MM_Pseudo */
    1738,
    /* SDMacro */
    1741,
    /* SDivIMacro */
    1744,
    /* SDivMacro */
    1747,
    /* SEQIMacro */
    1750,
    /* SEQMacro */
    1753,
    /* SGE */
    1756,
    /* SGEImm */
    1759,
    /* SGEImm64 */
    1762,
    /* SGEU */
    1765,
    /* SGEUImm */
    1768,
    /* SGEUImm64 */
    1771,
    /* SGTImm */
    1774,
    /* SGTImm64 */
    1777,
    /* SGTUImm */
    1780,
    /* SGTUImm64 */
    1783,
    /* SLE */
    1786,
    /* SLEImm */
    1789,
    /* SLEImm64 */
    1792,
    /* SLEU */
    1795,
    /* SLEUImm */
    1798,
    /* SLEUImm64 */
    1801,
    /* SLTImm64 */
    1804,
    /* SLTUImm64 */
    1807,
    /* SNEIMacro */
    1810,
    /* SNEMacro */
    1813,
    /* SNZ_B_PSEUDO */
    1816,
    /* SNZ_D_PSEUDO */
    1818,
    /* SNZ_H_PSEUDO */
    1820,
    /* SNZ_V_PSEUDO */
    1822,
    /* SNZ_W_PSEUDO */
    1824,
    /* SRemIMacro */
    1826,
    /* SRemMacro */
    1829,
    /* STORE_ACC128 */
    1832,
    /* STORE_ACC64 */
    1835,
    /* STORE_ACC64DSP */
    1838,
    /* STORE_CCOND_DSP */
    1841,
    /* STR_D */
    1844,
    /* STR_W */
    1847,
    /* ST_F16 */
    1850,
    /* SWM_MM */
    1853,
    /* SZ_B_PSEUDO */
    1856,
    /* SZ_D_PSEUDO */
    1858,
    /* SZ_H_PSEUDO */
    1860,
    /* SZ_V_PSEUDO */
    1862,
    /* SZ_W_PSEUDO */
    1864,
    /* SaaAddr */
    1866,
    /* SaadAddr */
    1869,
    /* SelBeqZ */
    1872,
    /* SelBneZ */
    1876,
    /* SelTBteqZCmp */
    1880,
    /* SelTBteqZCmpi */
    1885,
    /* SelTBteqZSlt */
    1890,
    /* SelTBteqZSlti */
    1895,
    /* SelTBteqZSltiu */
    1900,
    /* SelTBteqZSltu */
    1905,
    /* SelTBtneZCmp */
    1910,
    /* SelTBtneZCmpi */
    1915,
    /* SelTBtneZSlt */
    1920,
    /* SelTBtneZSlti */
    1925,
    /* SelTBtneZSltiu */
    1930,
    /* SelTBtneZSltu */
    1935,
    /* SltCCRxRy16 */
    1940,
    /* SltiCCRxImmX16 */
    1943,
    /* SltiuCCRxImmX16 */
    1946,
    /* SltuCCRxRy16 */
    1949,
    /* SltuRxRyRz16 */
    1952,
    /* TAILCALL */
    1955,
    /* TAILCALL64R6REG */
    1956,
    /* TAILCALLHB64R6REG */
    1957,
    /* TAILCALLHBR6REG */
    1958,
    /* TAILCALLR6REG */
    1959,
    /* TAILCALLREG */
    1960,
    /* TAILCALLREG64 */
    1961,
    /* TAILCALLREGHB */
    1962,
    /* TAILCALLREGHB64 */
    1963,
    /* TAILCALLREG_MM */
    1964,
    /* TAILCALLREG_MMR6 */
    1965,
    /* TAILCALL_MM */
    1966,
    /* TAILCALL_MMR6 */
    1967,
    /* TRAP */
    1968,
    /* TRAP_MM */
    1968,
    /* UDIV_MM_Pseudo */
    1968,
    /* UDivIMacro */
    1971,
    /* UDivMacro */
    1974,
    /* URemIMacro */
    1977,
    /* URemMacro */
    1980,
    /* Ulh */
    1983,
    /* Ulhu */
    1986,
    /* Ulw */
    1989,
    /* Ush */
    1992,
    /* Usw */
    1995,
    /* XOR_V_D_PSEUDO */
    1998,
    /* XOR_V_H_PSEUDO */
    2001,
    /* XOR_V_W_PSEUDO */
    2004,
    /* ABSQ_S_PH */
    2007,
    /* ABSQ_S_PH_MM */
    2009,
    /* ABSQ_S_QB */
    2011,
    /* ABSQ_S_QB_MMR2 */
    2013,
    /* ABSQ_S_W */
    2015,
    /* ABSQ_S_W_MM */
    2017,
    /* ADD */
    2019,
    /* ADDIUPC */
    2022,
    /* ADDIUPC_MM */
    2024,
    /* ADDIUPC_MMR6 */
    2026,
    /* ADDIUR1SP_MM */
    2028,
    /* ADDIUR2_MM */
    2030,
    /* ADDIUS5_MM */
    2033,
    /* ADDIUSP_MM */
    2036,
    /* ADDIU_MMR6 */
    2037,
    /* ADDQH_PH */
    2040,
    /* ADDQH_PH_MMR2 */
    2043,
    /* ADDQH_R_PH */
    2046,
    /* ADDQH_R_PH_MMR2 */
    2049,
    /* ADDQH_R_W */
    2052,
    /* ADDQH_R_W_MMR2 */
    2055,
    /* ADDQH_W */
    2058,
    /* ADDQH_W_MMR2 */
    2061,
    /* ADDQ_PH */
    2064,
    /* ADDQ_PH_MM */
    2067,
    /* ADDQ_S_PH */
    2070,
    /* ADDQ_S_PH_MM */
    2073,
    /* ADDQ_S_W */
    2076,
    /* ADDQ_S_W_MM */
    2079,
    /* ADDR_PS64 */
    2082,
    /* ADDSC */
    2085,
    /* ADDSC_MM */
    2088,
    /* ADDS_A_B */
    2091,
    /* ADDS_A_D */
    2094,
    /* ADDS_A_H */
    2097,
    /* ADDS_A_W */
    2100,
    /* ADDS_S_B */
    2103,
    /* ADDS_S_D */
    2106,
    /* ADDS_S_H */
    2109,
    /* ADDS_S_W */
    2112,
    /* ADDS_U_B */
    2115,
    /* ADDS_U_D */
    2118,
    /* ADDS_U_H */
    2121,
    /* ADDS_U_W */
    2124,
    /* ADDU16_MM */
    2127,
    /* ADDU16_MMR6 */
    2130,
    /* ADDUH_QB */
    2133,
    /* ADDUH_QB_MMR2 */
    2136,
    /* ADDUH_R_QB */
    2139,
    /* ADDUH_R_QB_MMR2 */
    2142,
    /* ADDU_MMR6 */
    2145,
    /* ADDU_PH */
    2148,
    /* ADDU_PH_MMR2 */
    2151,
    /* ADDU_QB */
    2154,
    /* ADDU_QB_MM */
    2157,
    /* ADDU_S_PH */
    2160,
    /* ADDU_S_PH_MMR2 */
    2163,
    /* ADDU_S_QB */
    2166,
    /* ADDU_S_QB_MM */
    2169,
    /* ADDVI_B */
    2172,
    /* ADDVI_D */
    2175,
    /* ADDVI_H */
    2178,
    /* ADDVI_W */
    2181,
    /* ADDV_B */
    2184,
    /* ADDV_D */
    2187,
    /* ADDV_H */
    2190,
    /* ADDV_W */
    2193,
    /* ADDWC */
    2196,
    /* ADDWC_MM */
    2199,
    /* ADD_A_B */
    2202,
    /* ADD_A_D */
    2205,
    /* ADD_A_H */
    2208,
    /* ADD_A_W */
    2211,
    /* ADD_MM */
    2214,
    /* ADD_MMR6 */
    2217,
    /* ADDi */
    2220,
    /* ADDi_MM */
    2223,
    /* ADDiu */
    2226,
    /* ADDiu_MM */
    2229,
    /* ADDu */
    2232,
    /* ADDu_MM */
    2235,
    /* ALIGN */
    2238,
    /* ALIGN_MMR6 */
    2242,
    /* ALUIPC */
    2246,
    /* ALUIPC_MMR6 */
    2248,
    /* AND */
    2250,
    /* AND16_MM */
    2253,
    /* AND16_MMR6 */
    2256,
    /* AND64 */
    2259,
    /* ANDI16_MM */
    2262,
    /* ANDI16_MMR6 */
    2265,
    /* ANDI_B */
    2268,
    /* ANDI_MMR6 */
    2271,
    /* AND_MM */
    2274,
    /* AND_MMR6 */
    2277,
    /* AND_V */
    2280,
    /* ANDi */
    2283,
    /* ANDi64 */
    2286,
    /* ANDi_MM */
    2289,
    /* APPEND */
    2292,
    /* APPEND_MMR2 */
    2296,
    /* ASUB_S_B */
    2300,
    /* ASUB_S_D */
    2303,
    /* ASUB_S_H */
    2306,
    /* ASUB_S_W */
    2309,
    /* ASUB_U_B */
    2312,
    /* ASUB_U_D */
    2315,
    /* ASUB_U_H */
    2318,
    /* ASUB_U_W */
    2321,
    /* AUI */
    2324,
    /* AUIPC */
    2327,
    /* AUIPC_MMR6 */
    2329,
    /* AUI_MMR6 */
    2331,
    /* AVER_S_B */
    2334,
    /* AVER_S_D */
    2337,
    /* AVER_S_H */
    2340,
    /* AVER_S_W */
    2343,
    /* AVER_U_B */
    2346,
    /* AVER_U_D */
    2349,
    /* AVER_U_H */
    2352,
    /* AVER_U_W */
    2355,
    /* AVE_S_B */
    2358,
    /* AVE_S_D */
    2361,
    /* AVE_S_H */
    2364,
    /* AVE_S_W */
    2367,
    /* AVE_U_B */
    2370,
    /* AVE_U_D */
    2373,
    /* AVE_U_H */
    2376,
    /* AVE_U_W */
    2379,
    /* AddiuRxImmX16 */
    2382,
    /* AddiuRxPcImmX16 */
    2384,
    /* AddiuRxRxImm16 */
    2386,
    /* AddiuRxRxImmX16 */
    2389,
    /* AddiuRxRyOffMemX16 */
    2392,
    /* AddiuSpImm16 */
    2395,
    /* AddiuSpImmX16 */
    2396,
    /* AdduRxRyRz16 */
    2397,
    /* AndRxRxRy16 */
    2400,
    /* B16_MM */
    2403,
    /* BADDu */
    2404,
    /* BAL */
    2407,
    /* BALC */
    2408,
    /* BALC_MMR6 */
    2409,
    /* BALIGN */
    2410,
    /* BALIGN_MMR2 */
    2414,
    /* BBIT0 */
    2418,
    /* BBIT032 */
    2421,
    /* BBIT1 */
    2424,
    /* BBIT132 */
    2427,
    /* BC */
    2430,
    /* BC16_MMR6 */
    2431,
    /* BC1EQZ */
    2432,
    /* BC1EQZC_MMR6 */
    2434,
    /* BC1F */
    2436,
    /* BC1FL */
    2438,
    /* BC1F_MM */
    2440,
    /* BC1NEZ */
    2442,
    /* BC1NEZC_MMR6 */
    2444,
    /* BC1T */
    2446,
    /* BC1TL */
    2448,
    /* BC1T_MM */
    2450,
    /* BC2EQZ */
    2452,
    /* BC2EQZC_MMR6 */
    2454,
    /* BC2NEZ */
    2456,
    /* BC2NEZC_MMR6 */
    2458,
    /* BCLRI_B */
    2460,
    /* BCLRI_D */
    2463,
    /* BCLRI_H */
    2466,
    /* BCLRI_W */
    2469,
    /* BCLR_B */
    2472,
    /* BCLR_D */
    2475,
    /* BCLR_H */
    2478,
    /* BCLR_W */
    2481,
    /* BC_MMR6 */
    2484,
    /* BEQ */
    2485,
    /* BEQ64 */
    2488,
    /* BEQC */
    2491,
    /* BEQC64 */
    2494,
    /* BEQC_MMR6 */
    2497,
    /* BEQL */
    2500,
    /* BEQZ16_MM */
    2503,
    /* BEQZALC */
    2505,
    /* BEQZALC_MMR6 */
    2507,
    /* BEQZC */
    2509,
    /* BEQZC16_MMR6 */
    2511,
    /* BEQZC64 */
    2513,
    /* BEQZC_MM */
    2515,
    /* BEQZC_MMR6 */
    2517,
    /* BEQ_MM */
    2519,
    /* BGEC */
    2522,
    /* BGEC64 */
    2525,
    /* BGEC_MMR6 */
    2528,
    /* BGEUC */
    2531,
    /* BGEUC64 */
    2534,
    /* BGEUC_MMR6 */
    2537,
    /* BGEZ */
    2540,
    /* BGEZ64 */
    2542,
    /* BGEZAL */
    2544,
    /* BGEZALC */
    2546,
    /* BGEZALC_MMR6 */
    2548,
    /* BGEZALL */
    2550,
    /* BGEZALS_MM */
    2552,
    /* BGEZAL_MM */
    2554,
    /* BGEZC */
    2556,
    /* BGEZC64 */
    2558,
    /* BGEZC_MMR6 */
    2560,
    /* BGEZL */
    2562,
    /* BGEZ_MM */
    2564,
    /* BGTZ */
    2566,
    /* BGTZ64 */
    2568,
    /* BGTZALC */
    2570,
    /* BGTZALC_MMR6 */
    2572,
    /* BGTZC */
    2574,
    /* BGTZC64 */
    2576,
    /* BGTZC_MMR6 */
    2578,
    /* BGTZL */
    2580,
    /* BGTZ_MM */
    2582,
    /* BINSLI_B */
    2584,
    /* BINSLI_D */
    2588,
    /* BINSLI_H */
    2592,
    /* BINSLI_W */
    2596,
    /* BINSL_B */
    2600,
    /* BINSL_D */
    2604,
    /* BINSL_H */
    2608,
    /* BINSL_W */
    2612,
    /* BINSRI_B */
    2616,
    /* BINSRI_D */
    2620,
    /* BINSRI_H */
    2624,
    /* BINSRI_W */
    2628,
    /* BINSR_B */
    2632,
    /* BINSR_D */
    2636,
    /* BINSR_H */
    2640,
    /* BINSR_W */
    2644,
    /* BITREV */
    2648,
    /* BITREV_MM */
    2650,
    /* BITSWAP */
    2652,
    /* BITSWAP_MMR6 */
    2654,
    /* BLEZ */
    2656,
    /* BLEZ64 */
    2658,
    /* BLEZALC */
    2660,
    /* BLEZALC_MMR6 */
    2662,
    /* BLEZC */
    2664,
    /* BLEZC64 */
    2666,
    /* BLEZC_MMR6 */
    2668,
    /* BLEZL */
    2670,
    /* BLEZ_MM */
    2672,
    /* BLTC */
    2674,
    /* BLTC64 */
    2677,
    /* BLTC_MMR6 */
    2680,
    /* BLTUC */
    2683,
    /* BLTUC64 */
    2686,
    /* BLTUC_MMR6 */
    2689,
    /* BLTZ */
    2692,
    /* BLTZ64 */
    2694,
    /* BLTZAL */
    2696,
    /* BLTZALC */
    2698,
    /* BLTZALC_MMR6 */
    2700,
    /* BLTZALL */
    2702,
    /* BLTZALS_MM */
    2704,
    /* BLTZAL_MM */
    2706,
    /* BLTZC */
    2708,
    /* BLTZC64 */
    2710,
    /* BLTZC_MMR6 */
    2712,
    /* BLTZL */
    2714,
    /* BLTZ_MM */
    2716,
    /* BMNZI_B */
    2718,
    /* BMNZ_V */
    2722,
    /* BMZI_B */
    2726,
    /* BMZ_V */
    2730,
    /* BNE */
    2734,
    /* BNE64 */
    2737,
    /* BNEC */
    2740,
    /* BNEC64 */
    2743,
    /* BNEC_MMR6 */
    2746,
    /* BNEGI_B */
    2749,
    /* BNEGI_D */
    2752,
    /* BNEGI_H */
    2755,
    /* BNEGI_W */
    2758,
    /* BNEG_B */
    2761,
    /* BNEG_D */
    2764,
    /* BNEG_H */
    2767,
    /* BNEG_W */
    2770,
    /* BNEL */
    2773,
    /* BNEZ16_MM */
    2776,
    /* BNEZALC */
    2778,
    /* BNEZALC_MMR6 */
    2780,
    /* BNEZC */
    2782,
    /* BNEZC16_MMR6 */
    2784,
    /* BNEZC64 */
    2786,
    /* BNEZC_MM */
    2788,
    /* BNEZC_MMR6 */
    2790,
    /* BNE_MM */
    2792,
    /* BNVC */
    2795,
    /* BNVC_MMR6 */
    2798,
    /* BNZ_B */
    2801,
    /* BNZ_D */
    2803,
    /* BNZ_H */
    2805,
    /* BNZ_V */
    2807,
    /* BNZ_W */
    2809,
    /* BOVC */
    2811,
    /* BOVC_MMR6 */
    2814,
    /* BPOSGE32 */
    2817,
    /* BPOSGE32C_MMR3 */
    2818,
    /* BPOSGE32_MM */
    2819,
    /* BREAK */
    2820,
    /* BREAK16_MM */
    2822,
    /* BREAK16_MMR6 */
    2823,
    /* BREAK_MM */
    2824,
    /* BREAK_MMR6 */
    2826,
    /* BSELI_B */
    2828,
    /* BSEL_V */
    2832,
    /* BSETI_B */
    2836,
    /* BSETI_D */
    2839,
    /* BSETI_H */
    2842,
    /* BSETI_W */
    2845,
    /* BSET_B */
    2848,
    /* BSET_D */
    2851,
    /* BSET_H */
    2854,
    /* BSET_W */
    2857,
    /* BZ_B */
    2860,
    /* BZ_D */
    2862,
    /* BZ_H */
    2864,
    /* BZ_V */
    2866,
    /* BZ_W */
    2868,
    /* BeqzRxImm16 */
    2870,
    /* BeqzRxImmX16 */
    2872,
    /* Bimm16 */
    2874,
    /* BimmX16 */
    2875,
    /* BnezRxImm16 */
    2876,
    /* BnezRxImmX16 */
    2878,
    /* Break16 */
    2880,
    /* Bteqz16 */
    2880,
    /* BteqzX16 */
    2881,
    /* Btnez16 */
    2882,
    /* BtnezX16 */
    2883,
    /* CACHE */
    2884,
    /* CACHEE */
    2887,
    /* CACHEE_MM */
    2890,
    /* CACHE_MM */
    2893,
    /* CACHE_MMR6 */
    2896,
    /* CACHE_R6 */
    2899,
    /* CEIL_L_D64 */
    2902,
    /* CEIL_L_D_MMR6 */
    2904,
    /* CEIL_L_S */
    2906,
    /* CEIL_L_S_MMR6 */
    2908,
    /* CEIL_W_D32 */
    2910,
    /* CEIL_W_D64 */
    2912,
    /* CEIL_W_D_MMR6 */
    2914,
    /* CEIL_W_MM */
    2916,
    /* CEIL_W_S */
    2918,
    /* CEIL_W_S_MM */
    2920,
    /* CEIL_W_S_MMR6 */
    2922,
    /* CEQI_B */
    2924,
    /* CEQI_D */
    2927,
    /* CEQI_H */
    2930,
    /* CEQI_W */
    2933,
    /* CEQ_B */
    2936,
    /* CEQ_D */
    2939,
    /* CEQ_H */
    2942,
    /* CEQ_W */
    2945,
    /* CFC1 */
    2948,
    /* CFC1_MM */
    2950,
    /* CFC2_MM */
    2952,
    /* CFCMSA */
    2954,
    /* CINS */
    2956,
    /* CINS32 */
    2960,
    /* CINS64_32 */
    2964,
    /* CINS_i32 */
    2968,
    /* CLASS_D */
    2972,
    /* CLASS_D_MMR6 */
    2974,
    /* CLASS_S */
    2976,
    /* CLASS_S_MMR6 */
    2978,
    /* CLEI_S_B */
    2980,
    /* CLEI_S_D */
    2983,
    /* CLEI_S_H */
    2986,
    /* CLEI_S_W */
    2989,
    /* CLEI_U_B */
    2992,
    /* CLEI_U_D */
    2995,
    /* CLEI_U_H */
    2998,
    /* CLEI_U_W */
    3001,
    /* CLE_S_B */
    3004,
    /* CLE_S_D */
    3007,
    /* CLE_S_H */
    3010,
    /* CLE_S_W */
    3013,
    /* CLE_U_B */
    3016,
    /* CLE_U_D */
    3019,
    /* CLE_U_H */
    3022,
    /* CLE_U_W */
    3025,
    /* CLO */
    3028,
    /* CLO_MM */
    3030,
    /* CLO_MMR6 */
    3032,
    /* CLO_R6 */
    3034,
    /* CLTI_S_B */
    3036,
    /* CLTI_S_D */
    3039,
    /* CLTI_S_H */
    3042,
    /* CLTI_S_W */
    3045,
    /* CLTI_U_B */
    3048,
    /* CLTI_U_D */
    3051,
    /* CLTI_U_H */
    3054,
    /* CLTI_U_W */
    3057,
    /* CLT_S_B */
    3060,
    /* CLT_S_D */
    3063,
    /* CLT_S_H */
    3066,
    /* CLT_S_W */
    3069,
    /* CLT_U_B */
    3072,
    /* CLT_U_D */
    3075,
    /* CLT_U_H */
    3078,
    /* CLT_U_W */
    3081,
    /* CLZ */
    3084,
    /* CLZ_MM */
    3086,
    /* CLZ_MMR6 */
    3088,
    /* CLZ_R6 */
    3090,
    /* CMPGDU_EQ_QB */
    3092,
    /* CMPGDU_EQ_QB_MMR2 */
    3095,
    /* CMPGDU_LE_QB */
    3098,
    /* CMPGDU_LE_QB_MMR2 */
    3101,
    /* CMPGDU_LT_QB */
    3104,
    /* CMPGDU_LT_QB_MMR2 */
    3107,
    /* CMPGU_EQ_QB */
    3110,
    /* CMPGU_EQ_QB_MM */
    3113,
    /* CMPGU_LE_QB */
    3116,
    /* CMPGU_LE_QB_MM */
    3119,
    /* CMPGU_LT_QB */
    3122,
    /* CMPGU_LT_QB_MM */
    3125,
    /* CMPU_EQ_QB */
    3128,
    /* CMPU_EQ_QB_MM */
    3130,
    /* CMPU_LE_QB */
    3132,
    /* CMPU_LE_QB_MM */
    3134,
    /* CMPU_LT_QB */
    3136,
    /* CMPU_LT_QB_MM */
    3138,
    /* CMP_AF_D_MMR6 */
    3140,
    /* CMP_AF_S_MMR6 */
    3143,
    /* CMP_EQ_D */
    3146,
    /* CMP_EQ_D_MMR6 */
    3149,
    /* CMP_EQ_PH */
    3152,
    /* CMP_EQ_PH_MM */
    3154,
    /* CMP_EQ_S */
    3156,
    /* CMP_EQ_S_MMR6 */
    3159,
    /* CMP_F_D */
    3162,
    /* CMP_F_S */
    3165,
    /* CMP_LE_D */
    3168,
    /* CMP_LE_D_MMR6 */
    3171,
    /* CMP_LE_PH */
    3174,
    /* CMP_LE_PH_MM */
    3176,
    /* CMP_LE_S */
    3178,
    /* CMP_LE_S_MMR6 */
    3181,
    /* CMP_LT_D */
    3184,
    /* CMP_LT_D_MMR6 */
    3187,
    /* CMP_LT_PH */
    3190,
    /* CMP_LT_PH_MM */
    3192,
    /* CMP_LT_S */
    3194,
    /* CMP_LT_S_MMR6 */
    3197,
    /* CMP_SAF_D */
    3200,
    /* CMP_SAF_D_MMR6 */
    3203,
    /* CMP_SAF_S */
    3206,
    /* CMP_SAF_S_MMR6 */
    3209,
    /* CMP_SEQ_D */
    3212,
    /* CMP_SEQ_D_MMR6 */
    3215,
    /* CMP_SEQ_S */
    3218,
    /* CMP_SEQ_S_MMR6 */
    3221,
    /* CMP_SLE_D */
    3224,
    /* CMP_SLE_D_MMR6 */
    3227,
    /* CMP_SLE_S */
    3230,
    /* CMP_SLE_S_MMR6 */
    3233,
    /* CMP_SLT_D */
    3236,
    /* CMP_SLT_D_MMR6 */
    3239,
    /* CMP_SLT_S */
    3242,
    /* CMP_SLT_S_MMR6 */
    3245,
    /* CMP_SUEQ_D */
    3248,
    /* CMP_SUEQ_D_MMR6 */
    3251,
    /* CMP_SUEQ_S */
    3254,
    /* CMP_SUEQ_S_MMR6 */
    3257,
    /* CMP_SULE_D */
    3260,
    /* CMP_SULE_D_MMR6 */
    3263,
    /* CMP_SULE_S */
    3266,
    /* CMP_SULE_S_MMR6 */
    3269,
    /* CMP_SULT_D */
    3272,
    /* CMP_SULT_D_MMR6 */
    3275,
    /* CMP_SULT_S */
    3278,
    /* CMP_SULT_S_MMR6 */
    3281,
    /* CMP_SUN_D */
    3284,
    /* CMP_SUN_D_MMR6 */
    3287,
    /* CMP_SUN_S */
    3290,
    /* CMP_SUN_S_MMR6 */
    3293,
    /* CMP_UEQ_D */
    3296,
    /* CMP_UEQ_D_MMR6 */
    3299,
    /* CMP_UEQ_S */
    3302,
    /* CMP_UEQ_S_MMR6 */
    3305,
    /* CMP_ULE_D */
    3308,
    /* CMP_ULE_D_MMR6 */
    3311,
    /* CMP_ULE_S */
    3314,
    /* CMP_ULE_S_MMR6 */
    3317,
    /* CMP_ULT_D */
    3320,
    /* CMP_ULT_D_MMR6 */
    3323,
    /* CMP_ULT_S */
    3326,
    /* CMP_ULT_S_MMR6 */
    3329,
    /* CMP_UN_D */
    3332,
    /* CMP_UN_D_MMR6 */
    3335,
    /* CMP_UN_S */
    3338,
    /* CMP_UN_S_MMR6 */
    3341,
    /* COPY_S_B */
    3344,
    /* COPY_S_D */
    3347,
    /* COPY_S_H */
    3350,
    /* COPY_S_W */
    3353,
    /* COPY_U_B */
    3356,
    /* COPY_U_H */
    3359,
    /* COPY_U_W */
    3362,
    /* CRC32B */
    3365,
    /* CRC32CB */
    3368,
    /* CRC32CD */
    3371,
    /* CRC32CH */
    3374,
    /* CRC32CW */
    3377,
    /* CRC32D */
    3380,
    /* CRC32H */
    3383,
    /* CRC32W */
    3386,
    /* CTC1 */
    3389,
    /* CTC1_MM */
    3391,
    /* CTC2_MM */
    3393,
    /* CTCMSA */
    3395,
    /* CVT_D32_S */
    3397,
    /* CVT_D32_S_MM */
    3399,
    /* CVT_D32_W */
    3401,
    /* CVT_D32_W_MM */
    3403,
    /* CVT_D64_L */
    3405,
    /* CVT_D64_S */
    3407,
    /* CVT_D64_S_MM */
    3409,
    /* CVT_D64_W */
    3411,
    /* CVT_D64_W_MM */
    3413,
    /* CVT_D_L_MMR6 */
    3415,
    /* CVT_L_D64 */
    3417,
    /* CVT_L_D64_MM */
    3419,
    /* CVT_L_D_MMR6 */
    3421,
    /* CVT_L_S */
    3423,
    /* CVT_L_S_MM */
    3425,
    /* CVT_L_S_MMR6 */
    3427,
    /* CVT_PS_PW64 */
    3429,
    /* CVT_PS_S64 */
    3431,
    /* CVT_PW_PS64 */
    3434,
    /* CVT_S_D32 */
    3436,
    /* CVT_S_D32_MM */
    3438,
    /* CVT_S_D64 */
    3440,
    /* CVT_S_D64_MM */
    3442,
    /* CVT_S_L */
    3444,
    /* CVT_S_L_MMR6 */
    3446,
    /* CVT_S_PL64 */
    3448,
    /* CVT_S_PU64 */
    3450,
    /* CVT_S_W */
    3452,
    /* CVT_S_W_MM */
    3454,
    /* CVT_S_W_MMR6 */
    3456,
    /* CVT_W_D32 */
    3458,
    /* CVT_W_D32_MM */
    3460,
    /* CVT_W_D64 */
    3462,
    /* CVT_W_D64_MM */
    3464,
    /* CVT_W_S */
    3466,
    /* CVT_W_S_MM */
    3468,
    /* CVT_W_S_MMR6 */
    3470,
    /* C_EQ_D32 */
    3472,
    /* C_EQ_D32_MM */
    3475,
    /* C_EQ_D64 */
    3478,
    /* C_EQ_D64_MM */
    3481,
    /* C_EQ_S */
    3484,
    /* C_EQ_S_MM */
    3487,
    /* C_F_D32 */
    3490,
    /* C_F_D32_MM */
    3493,
    /* C_F_D64 */
    3496,
    /* C_F_D64_MM */
    3499,
    /* C_F_S */
    3502,
    /* C_F_S_MM */
    3505,
    /* C_LE_D32 */
    3508,
    /* C_LE_D32_MM */
    3511,
    /* C_LE_D64 */
    3514,
    /* C_LE_D64_MM */
    3517,
    /* C_LE_S */
    3520,
    /* C_LE_S_MM */
    3523,
    /* C_LT_D32 */
    3526,
    /* C_LT_D32_MM */
    3529,
    /* C_LT_D64 */
    3532,
    /* C_LT_D64_MM */
    3535,
    /* C_LT_S */
    3538,
    /* C_LT_S_MM */
    3541,
    /* C_NGE_D32 */
    3544,
    /* C_NGE_D32_MM */
    3547,
    /* C_NGE_D64 */
    3550,
    /* C_NGE_D64_MM */
    3553,
    /* C_NGE_S */
    3556,
    /* C_NGE_S_MM */
    3559,
    /* C_NGLE_D32 */
    3562,
    /* C_NGLE_D32_MM */
    3565,
    /* C_NGLE_D64 */
    3568,
    /* C_NGLE_D64_MM */
    3571,
    /* C_NGLE_S */
    3574,
    /* C_NGLE_S_MM */
    3577,
    /* C_NGL_D32 */
    3580,
    /* C_NGL_D32_MM */
    3583,
    /* C_NGL_D64 */
    3586,
    /* C_NGL_D64_MM */
    3589,
    /* C_NGL_S */
    3592,
    /* C_NGL_S_MM */
    3595,
    /* C_NGT_D32 */
    3598,
    /* C_NGT_D32_MM */
    3601,
    /* C_NGT_D64 */
    3604,
    /* C_NGT_D64_MM */
    3607,
    /* C_NGT_S */
    3610,
    /* C_NGT_S_MM */
    3613,
    /* C_OLE_D32 */
    3616,
    /* C_OLE_D32_MM */
    3619,
    /* C_OLE_D64 */
    3622,
    /* C_OLE_D64_MM */
    3625,
    /* C_OLE_S */
    3628,
    /* C_OLE_S_MM */
    3631,
    /* C_OLT_D32 */
    3634,
    /* C_OLT_D32_MM */
    3637,
    /* C_OLT_D64 */
    3640,
    /* C_OLT_D64_MM */
    3643,
    /* C_OLT_S */
    3646,
    /* C_OLT_S_MM */
    3649,
    /* C_SEQ_D32 */
    3652,
    /* C_SEQ_D32_MM */
    3655,
    /* C_SEQ_D64 */
    3658,
    /* C_SEQ_D64_MM */
    3661,
    /* C_SEQ_S */
    3664,
    /* C_SEQ_S_MM */
    3667,
    /* C_SF_D32 */
    3670,
    /* C_SF_D32_MM */
    3673,
    /* C_SF_D64 */
    3676,
    /* C_SF_D64_MM */
    3679,
    /* C_SF_S */
    3682,
    /* C_SF_S_MM */
    3685,
    /* C_UEQ_D32 */
    3688,
    /* C_UEQ_D32_MM */
    3691,
    /* C_UEQ_D64 */
    3694,
    /* C_UEQ_D64_MM */
    3697,
    /* C_UEQ_S */
    3700,
    /* C_UEQ_S_MM */
    3703,
    /* C_ULE_D32 */
    3706,
    /* C_ULE_D32_MM */
    3709,
    /* C_ULE_D64 */
    3712,
    /* C_ULE_D64_MM */
    3715,
    /* C_ULE_S */
    3718,
    /* C_ULE_S_MM */
    3721,
    /* C_ULT_D32 */
    3724,
    /* C_ULT_D32_MM */
    3727,
    /* C_ULT_D64 */
    3730,
    /* C_ULT_D64_MM */
    3733,
    /* C_ULT_S */
    3736,
    /* C_ULT_S_MM */
    3739,
    /* C_UN_D32 */
    3742,
    /* C_UN_D32_MM */
    3745,
    /* C_UN_D64 */
    3748,
    /* C_UN_D64_MM */
    3751,
    /* C_UN_S */
    3754,
    /* C_UN_S_MM */
    3757,
    /* CmpRxRy16 */
    3760,
    /* CmpiRxImm16 */
    3762,
    /* CmpiRxImmX16 */
    3764,
    /* DADD */
    3766,
    /* DADDi */
    3769,
    /* DADDiu */
    3772,
    /* DADDu */
    3775,
    /* DAHI */
    3778,
    /* DALIGN */
    3781,
    /* DATI */
    3785,
    /* DAUI */
    3788,
    /* DBITSWAP */
    3791,
    /* DCLO */
    3793,
    /* DCLO_R6 */
    3795,
    /* DCLZ */
    3797,
    /* DCLZ_R6 */
    3799,
    /* DDIV */
    3801,
    /* DDIVU */
    3804,
    /* DERET */
    3807,
    /* DERET_MM */
    3807,
    /* DERET_MMR6 */
    3807,
    /* DEXT */
    3807,
    /* DEXT64_32 */
    3811,
    /* DEXTM */
    3815,
    /* DEXTU */
    3819,
    /* DI */
    3823,
    /* DINS */
    3824,
    /* DINSM */
    3829,
    /* DINSU */
    3834,
    /* DIV */
    3839,
    /* DIVU */
    3842,
    /* DIVU_MMR6 */
    3845,
    /* DIV_MMR6 */
    3848,
    /* DIV_S_B */
    3851,
    /* DIV_S_D */
    3854,
    /* DIV_S_H */
    3857,
    /* DIV_S_W */
    3860,
    /* DIV_U_B */
    3863,
    /* DIV_U_D */
    3866,
    /* DIV_U_H */
    3869,
    /* DIV_U_W */
    3872,
    /* DI_MM */
    3875,
    /* DI_MMR6 */
    3876,
    /* DLSA */
    3877,
    /* DLSA_R6 */
    3881,
    /* DMFC0 */
    3885,
    /* DMFC1 */
    3888,
    /* DMFC2 */
    3890,
    /* DMFC2_OCTEON */
    3893,
    /* DMFGC0 */
    3895,
    /* DMOD */
    3898,
    /* DMODU */
    3901,
    /* DMT */
    3904,
    /* DMTC0 */
    3905,
    /* DMTC1 */
    3908,
    /* DMTC2 */
    3910,
    /* DMTC2_OCTEON */
    3913,
    /* DMTGC0 */
    3915,
    /* DMUH */
    3918,
    /* DMUHU */
    3921,
    /* DMUL */
    3924,
    /* DMULT */
    3927,
    /* DMULTu */
    3929,
    /* DMULU */
    3931,
    /* DMUL_R6 */
    3934,
    /* DOTP_S_D */
    3937,
    /* DOTP_S_H */
    3940,
    /* DOTP_S_W */
    3943,
    /* DOTP_U_D */
    3946,
    /* DOTP_U_H */
    3949,
    /* DOTP_U_W */
    3952,
    /* DPADD_S_D */
    3955,
    /* DPADD_S_H */
    3959,
    /* DPADD_S_W */
    3963,
    /* DPADD_U_D */
    3967,
    /* DPADD_U_H */
    3971,
    /* DPADD_U_W */
    3975,
    /* DPAQX_SA_W_PH */
    3979,
    /* DPAQX_SA_W_PH_MMR2 */
    3983,
    /* DPAQX_S_W_PH */
    3987,
    /* DPAQX_S_W_PH_MMR2 */
    3991,
    /* DPAQ_SA_L_W */
    3995,
    /* DPAQ_SA_L_W_MM */
    3999,
    /* DPAQ_S_W_PH */
    4003,
    /* DPAQ_S_W_PH_MM */
    4007,
    /* DPAU_H_QBL */
    4011,
    /* DPAU_H_QBL_MM */
    4015,
    /* DPAU_H_QBR */
    4019,
    /* DPAU_H_QBR_MM */
    4023,
    /* DPAX_W_PH */
    4027,
    /* DPAX_W_PH_MMR2 */
    4031,
    /* DPA_W_PH */
    4035,
    /* DPA_W_PH_MMR2 */
    4039,
    /* DPOP */
    4043,
    /* DPSQX_SA_W_PH */
    4045,
    /* DPSQX_SA_W_PH_MMR2 */
    4049,
    /* DPSQX_S_W_PH */
    4053,
    /* DPSQX_S_W_PH_MMR2 */
    4057,
    /* DPSQ_SA_L_W */
    4061,
    /* DPSQ_SA_L_W_MM */
    4065,
    /* DPSQ_S_W_PH */
    4069,
    /* DPSQ_S_W_PH_MM */
    4073,
    /* DPSUB_S_D */
    4077,
    /* DPSUB_S_H */
    4081,
    /* DPSUB_S_W */
    4085,
    /* DPSUB_U_D */
    4089,
    /* DPSUB_U_H */
    4093,
    /* DPSUB_U_W */
    4097,
    /* DPSU_H_QBL */
    4101,
    /* DPSU_H_QBL_MM */
    4105,
    /* DPSU_H_QBR */
    4109,
    /* DPSU_H_QBR_MM */
    4113,
    /* DPSX_W_PH */
    4117,
    /* DPSX_W_PH_MMR2 */
    4121,
    /* DPS_W_PH */
    4125,
    /* DPS_W_PH_MMR2 */
    4129,
    /* DROTR */
    4133,
    /* DROTR32 */
    4136,
    /* DROTRV */
    4139,
    /* DSBH */
    4142,
    /* DSDIV */
    4144,
    /* DSHD */
    4146,
    /* DSLL */
    4148,
    /* DSLL32 */
    4151,
    /* DSLL64_32 */
    4154,
    /* DSLLV */
    4156,
    /* DSRA */
    4159,
    /* DSRA32 */
    4162,
    /* DSRAV */
    4165,
    /* DSRL */
    4168,
    /* DSRL32 */
    4171,
    /* DSRLV */
    4174,
    /* DSUB */
    4177,
    /* DSUBu */
    4180,
    /* DUDIV */
    4183,
    /* DVP */
    4185,
    /* DVPE */
    4186,
    /* DVP_MMR6 */
    4187,
    /* DivRxRy16 */
    4188,
    /* DivuRxRy16 */
    4190,
    /* EHB */
    4192,
    /* EHB_MM */
    4192,
    /* EHB_MMR6 */
    4192,
    /* EI */
    4192,
    /* EI_MM */
    4193,
    /* EI_MMR6 */
    4194,
    /* EMT */
    4195,
    /* ERET */
    4196,
    /* ERETNC */
    4196,
    /* ERETNC_MMR6 */
    4196,
    /* ERET_MM */
    4196,
    /* ERET_MMR6 */
    4196,
    /* EVP */
    4196,
    /* EVPE */
    4197,
    /* EVP_MMR6 */
    4198,
    /* EXT */
    4199,
    /* EXTP */
    4203,
    /* EXTPDP */
    4206,
    /* EXTPDPV */
    4209,
    /* EXTPDPV_MM */
    4212,
    /* EXTPDP_MM */
    4215,
    /* EXTPV */
    4218,
    /* EXTPV_MM */
    4221,
    /* EXTP_MM */
    4224,
    /* EXTRV_RS_W */
    4227,
    /* EXTRV_RS_W_MM */
    4230,
    /* EXTRV_R_W */
    4233,
    /* EXTRV_R_W_MM */
    4236,
    /* EXTRV_S_H */
    4239,
    /* EXTRV_S_H_MM */
    4242,
    /* EXTRV_W */
    4245,
    /* EXTRV_W_MM */
    4248,
    /* EXTR_RS_W */
    4251,
    /* EXTR_RS_W_MM */
    4254,
    /* EXTR_R_W */
    4257,
    /* EXTR_R_W_MM */
    4260,
    /* EXTR_S_H */
    4263,
    /* EXTR_S_H_MM */
    4266,
    /* EXTR_W */
    4269,
    /* EXTR_W_MM */
    4272,
    /* EXTS */
    4275,
    /* EXTS32 */
    4279,
    /* EXT_MM */
    4283,
    /* EXT_MMR6 */
    4287,
    /* FABS_D32 */
    4291,
    /* FABS_D32_MM */
    4293,
    /* FABS_D64 */
    4295,
    /* FABS_D64_MM */
    4297,
    /* FABS_S */
    4299,
    /* FABS_S_MM */
    4301,
    /* FADD_D */
    4303,
    /* FADD_D32 */
    4306,
    /* FADD_D32_MM */
    4309,
    /* FADD_D64 */
    4312,
    /* FADD_D64_MM */
    4315,
    /* FADD_PS64 */
    4318,
    /* FADD_S */
    4321,
    /* FADD_S_MM */
    4324,
    /* FADD_S_MMR6 */
    4327,
    /* FADD_W */
    4330,
    /* FCAF_D */
    4333,
    /* FCAF_W */
    4336,
    /* FCEQ_D */
    4339,
    /* FCEQ_W */
    4342,
    /* FCLASS_D */
    4345,
    /* FCLASS_W */
    4347,
    /* FCLE_D */
    4349,
    /* FCLE_W */
    4352,
    /* FCLT_D */
    4355,
    /* FCLT_W */
    4358,
    /* FCMP_D32 */
    4361,
    /* FCMP_D32_MM */
    4364,
    /* FCMP_D64 */
    4367,
    /* FCMP_S32 */
    4370,
    /* FCMP_S32_MM */
    4373,
    /* FCNE_D */
    4376,
    /* FCNE_W */
    4379,
    /* FCOR_D */
    4382,
    /* FCOR_W */
    4385,
    /* FCUEQ_D */
    4388,
    /* FCUEQ_W */
    4391,
    /* FCULE_D */
    4394,
    /* FCULE_W */
    4397,
    /* FCULT_D */
    4400,
    /* FCULT_W */
    4403,
    /* FCUNE_D */
    4406,
    /* FCUNE_W */
    4409,
    /* FCUN_D */
    4412,
    /* FCUN_W */
    4415,
    /* FDIV_D */
    4418,
    /* FDIV_D32 */
    4421,
    /* FDIV_D32_MM */
    4424,
    /* FDIV_D64 */
    4427,
    /* FDIV_D64_MM */
    4430,
    /* FDIV_S */
    4433,
    /* FDIV_S_MM */
    4436,
    /* FDIV_S_MMR6 */
    4439,
    /* FDIV_W */
    4442,
    /* FEXDO_H */
    4445,
    /* FEXDO_W */
    4448,
    /* FEXP2_D */
    4451,
    /* FEXP2_W */
    4454,
    /* FEXUPL_D */
    4457,
    /* FEXUPL_W */
    4459,
    /* FEXUPR_D */
    4461,
    /* FEXUPR_W */
    4463,
    /* FFINT_S_D */
    4465,
    /* FFINT_S_W */
    4467,
    /* FFINT_U_D */
    4469,
    /* FFINT_U_W */
    4471,
    /* FFQL_D */
    4473,
    /* FFQL_W */
    4475,
    /* FFQR_D */
    4477,
    /* FFQR_W */
    4479,
    /* FILL_B */
    4481,
    /* FILL_D */
    4483,
    /* FILL_H */
    4485,
    /* FILL_W */
    4487,
    /* FLOG2_D */
    4489,
    /* FLOG2_W */
    4491,
    /* FLOOR_L_D64 */
    4493,
    /* FLOOR_L_D_MMR6 */
    4495,
    /* FLOOR_L_S */
    4497,
    /* FLOOR_L_S_MMR6 */
    4499,
    /* FLOOR_W_D32 */
    4501,
    /* FLOOR_W_D64 */
    4503,
    /* FLOOR_W_D_MMR6 */
    4505,
    /* FLOOR_W_MM */
    4507,
    /* FLOOR_W_S */
    4509,
    /* FLOOR_W_S_MM */
    4511,
    /* FLOOR_W_S_MMR6 */
    4513,
    /* FMADD_D */
    4515,
    /* FMADD_W */
    4519,
    /* FMAX_A_D */
    4523,
    /* FMAX_A_W */
    4526,
    /* FMAX_D */
    4529,
    /* FMAX_W */
    4532,
    /* FMIN_A_D */
    4535,
    /* FMIN_A_W */
    4538,
    /* FMIN_D */
    4541,
    /* FMIN_W */
    4544,
    /* FMOV_D32 */
    4547,
    /* FMOV_D32_MM */
    4549,
    /* FMOV_D64 */
    4551,
    /* FMOV_D64_MM */
    4553,
    /* FMOV_D_MMR6 */
    4555,
    /* FMOV_S */
    4557,
    /* FMOV_S_MM */
    4559,
    /* FMOV_S_MMR6 */
    4561,
    /* FMSUB_D */
    4563,
    /* FMSUB_W */
    4567,
    /* FMUL_D */
    4571,
    /* FMUL_D32 */
    4574,
    /* FMUL_D32_MM */
    4577,
    /* FMUL_D64 */
    4580,
    /* FMUL_D64_MM */
    4583,
    /* FMUL_PS64 */
    4586,
    /* FMUL_S */
    4589,
    /* FMUL_S_MM */
    4592,
    /* FMUL_S_MMR6 */
    4595,
    /* FMUL_W */
    4598,
    /* FNEG_D32 */
    4601,
    /* FNEG_D32_MM */
    4603,
    /* FNEG_D64 */
    4605,
    /* FNEG_D64_MM */
    4607,
    /* FNEG_S */
    4609,
    /* FNEG_S_MM */
    4611,
    /* FNEG_S_MMR6 */
    4613,
    /* FORK */
    4615,
    /* FRCP_D */
    4618,
    /* FRCP_W */
    4620,
    /* FRINT_D */
    4622,
    /* FRINT_W */
    4624,
    /* FRSQRT_D */
    4626,
    /* FRSQRT_W */
    4628,
    /* FSAF_D */
    4630,
    /* FSAF_W */
    4633,
    /* FSEQ_D */
    4636,
    /* FSEQ_W */
    4639,
    /* FSLE_D */
    4642,
    /* FSLE_W */
    4645,
    /* FSLT_D */
    4648,
    /* FSLT_W */
    4651,
    /* FSNE_D */
    4654,
    /* FSNE_W */
    4657,
    /* FSOR_D */
    4660,
    /* FSOR_W */
    4663,
    /* FSQRT_D */
    4666,
    /* FSQRT_D32 */
    4668,
    /* FSQRT_D32_MM */
    4670,
    /* FSQRT_D64 */
    4672,
    /* FSQRT_D64_MM */
    4674,
    /* FSQRT_S */
    4676,
    /* FSQRT_S_MM */
    4678,
    /* FSQRT_W */
    4680,
    /* FSUB_D */
    4682,
    /* FSUB_D32 */
    4685,
    /* FSUB_D32_MM */
    4688,
    /* FSUB_D64 */
    4691,
    /* FSUB_D64_MM */
    4694,
    /* FSUB_PS64 */
    4697,
    /* FSUB_S */
    4700,
    /* FSUB_S_MM */
    4703,
    /* FSUB_S_MMR6 */
    4706,
    /* FSUB_W */
    4709,
    /* FSUEQ_D */
    4712,
    /* FSUEQ_W */
    4715,
    /* FSULE_D */
    4718,
    /* FSULE_W */
    4721,
    /* FSULT_D */
    4724,
    /* FSULT_W */
    4727,
    /* FSUNE_D */
    4730,
    /* FSUNE_W */
    4733,
    /* FSUN_D */
    4736,
    /* FSUN_W */
    4739,
    /* FTINT_S_D */
    4742,
    /* FTINT_S_W */
    4744,
    /* FTINT_U_D */
    4746,
    /* FTINT_U_W */
    4748,
    /* FTQ_H */
    4750,
    /* FTQ_W */
    4753,
    /* FTRUNC_S_D */
    4756,
    /* FTRUNC_S_W */
    4758,
    /* FTRUNC_U_D */
    4760,
    /* FTRUNC_U_W */
    4762,
    /* GINVI */
    4764,
    /* GINVI_MMR6 */
    4765,
    /* GINVT */
    4766,
    /* GINVT_MMR6 */
    4768,
    /* HADD_S_D */
    4770,
    /* HADD_S_H */
    4773,
    /* HADD_S_W */
    4776,
    /* HADD_U_D */
    4779,
    /* HADD_U_H */
    4782,
    /* HADD_U_W */
    4785,
    /* HSUB_S_D */
    4788,
    /* HSUB_S_H */
    4791,
    /* HSUB_S_W */
    4794,
    /* HSUB_U_D */
    4797,
    /* HSUB_U_H */
    4800,
    /* HSUB_U_W */
    4803,
    /* HYPCALL */
    4806,
    /* HYPCALL_MM */
    4807,
    /* ILVEV_B */
    4808,
    /* ILVEV_D */
    4811,
    /* ILVEV_H */
    4814,
    /* ILVEV_W */
    4817,
    /* ILVL_B */
    4820,
    /* ILVL_D */
    4823,
    /* ILVL_H */
    4826,
    /* ILVL_W */
    4829,
    /* ILVOD_B */
    4832,
    /* ILVOD_D */
    4835,
    /* ILVOD_H */
    4838,
    /* ILVOD_W */
    4841,
    /* ILVR_B */
    4844,
    /* ILVR_D */
    4847,
    /* ILVR_H */
    4850,
    /* ILVR_W */
    4853,
    /* INS */
    4856,
    /* INSERT_B */
    4861,
    /* INSERT_D */
    4865,
    /* INSERT_H */
    4869,
    /* INSERT_W */
    4873,
    /* INSV */
    4877,
    /* INSVE_B */
    4880,
    /* INSVE_D */
    4885,
    /* INSVE_H */
    4890,
    /* INSVE_W */
    4895,
    /* INSV_MM */
    4900,
    /* INS_MM */
    4903,
    /* INS_MMR6 */
    4908,
    /* J */
    4913,
    /* JAL */
    4914,
    /* JALR */
    4915,
    /* JALR16_MM */
    4917,
    /* JALR64 */
    4918,
    /* JALRC16_MMR6 */
    4920,
    /* JALRC_HB_MMR6 */
    4921,
    /* JALRC_MMR6 */
    4923,
    /* JALRS16_MM */
    4925,
    /* JALRS_MM */
    4926,
    /* JALR_HB */
    4928,
    /* JALR_HB64 */
    4930,
    /* JALR_MM */
    4932,
    /* JALS_MM */
    4934,
    /* JALX */
    4935,
    /* JALX_MM */
    4936,
    /* JAL_MM */
    4937,
    /* JIALC */
    4938,
    /* JIALC64 */
    4940,
    /* JIALC_MMR6 */
    4942,
    /* JIC */
    4944,
    /* JIC64 */
    4946,
    /* JIC_MMR6 */
    4948,
    /* JR */
    4950,
    /* JR16_MM */
    4951,
    /* JR64 */
    4952,
    /* JRADDIUSP */
    4953,
    /* JRC16_MM */
    4954,
    /* JRC16_MMR6 */
    4955,
    /* JRCADDIUSP_MMR6 */
    4956,
    /* JR_HB */
    4957,
    /* JR_HB64 */
    4958,
    /* JR_HB64_R6 */
    4959,
    /* JR_HB_R6 */
    4960,
    /* JR_MM */
    4961,
    /* J_MM */
    4962,
    /* Jal16 */
    4963,
    /* JalB16 */
    4964,
    /* JrRa16 */
    4965,
    /* JrcRa16 */
    4965,
    /* JrcRx16 */
    4965,
    /* JumpLinkReg16 */
    4966,
    /* LB */
    4967,
    /* LB64 */
    4970,
    /* LBE */
    4973,
    /* LBE_MM */
    4976,
    /* LBU16_MM */
    4979,
    /* LBUX */
    4982,
    /* LBUX_MM */
    4985,
    /* LBU_MMR6 */
    4988,
    /* LB_MM */
    4991,
    /* LB_MMR6 */
    4994,
    /* LBu */
    4997,
    /* LBu64 */
    5000,
    /* LBuE */
    5003,
    /* LBuE_MM */
    5006,
    /* LBu_MM */
    5009,
    /* LD */
    5012,
    /* LDC1 */
    5015,
    /* LDC164 */
    5018,
    /* LDC1_D64_MMR6 */
    5021,
    /* LDC1_MM_D32 */
    5024,
    /* LDC1_MM_D64 */
    5027,
    /* LDC2 */
    5030,
    /* LDC2_MMR6 */
    5033,
    /* LDC2_R6 */
    5036,
    /* LDC3 */
    5039,
    /* LDI_B */
    5042,
    /* LDI_D */
    5044,
    /* LDI_H */
    5046,
    /* LDI_W */
    5048,
    /* LDL */
    5050,
    /* LDPC */
    5054,
    /* LDR */
    5056,
    /* LDXC1 */
    5060,
    /* LDXC164 */
    5063,
    /* LD_B */
    5066,
    /* LD_D */
    5069,
    /* LD_H */
    5072,
    /* LD_W */
    5075,
    /* LEA_ADDiu */
    5078,
    /* LEA_ADDiu64 */
    5081,
    /* LEA_ADDiu_MM */
    5084,
    /* LH */
    5087,
    /* LH64 */
    5090,
    /* LHE */
    5093,
    /* LHE_MM */
    5096,
    /* LHU16_MM */
    5099,
    /* LHX */
    5102,
    /* LHX_MM */
    5105,
    /* LH_MM */
    5108,
    /* LHu */
    5111,
    /* LHu64 */
    5114,
    /* LHuE */
    5117,
    /* LHuE_MM */
    5120,
    /* LHu_MM */
    5123,
    /* LI16_MM */
    5126,
    /* LI16_MMR6 */
    5128,
    /* LL */
    5130,
    /* LL64 */
    5133,
    /* LL64_R6 */
    5136,
    /* LLD */
    5139,
    /* LLD_R6 */
    5142,
    /* LLE */
    5145,
    /* LLE_MM */
    5148,
    /* LL_MM */
    5151,
    /* LL_MMR6 */
    5154,
    /* LL_R6 */
    5157,
    /* LSA */
    5160,
    /* LSA_MMR6 */
    5164,
    /* LSA_R6 */
    5168,
    /* LUI_MMR6 */
    5172,
    /* LUXC1 */
    5174,
    /* LUXC164 */
    5177,
    /* LUXC1_MM */
    5180,
    /* LUi */
    5183,
    /* LUi64 */
    5185,
    /* LUi_MM */
    5187,
    /* LW */
    5189,
    /* LW16_MM */
    5192,
    /* LW64 */
    5195,
    /* LWC1 */
    5198,
    /* LWC1_MM */
    5201,
    /* LWC2 */
    5204,
    /* LWC2_MMR6 */
    5207,
    /* LWC2_R6 */
    5210,
    /* LWC3 */
    5213,
    /* LWDSP */
    5216,
    /* LWDSP_MM */
    5219,
    /* LWE */
    5222,
    /* LWE_MM */
    5225,
    /* LWGP_MM */
    5228,
    /* LWL */
    5231,
    /* LWL64 */
    5235,
    /* LWLE */
    5239,
    /* LWLE_MM */
    5243,
    /* LWL_MM */
    5247,
    /* LWM16_MM */
    5251,
    /* LWM16_MMR6 */
    5254,
    /* LWM32_MM */
    5257,
    /* LWPC */
    5260,
    /* LWPC_MMR6 */
    5262,
    /* LWP_MM */
    5264,
    /* LWR */
    5268,
    /* LWR64 */
    5272,
    /* LWRE */
    5276,
    /* LWRE_MM */
    5280,
    /* LWR_MM */
    5284,
    /* LWSP_MM */
    5288,
    /* LWUPC */
    5291,
    /* LWU_MM */
    5293,
    /* LWX */
    5296,
    /* LWXC1 */
    5299,
    /* LWXC1_MM */
    5302,
    /* LWXS_MM */
    5305,
    /* LWX_MM */
    5308,
    /* LW_MM */
    5311,
    /* LW_MMR6 */
    5314,
    /* LWu */
    5317,
    /* LbRxRyOffMemX16 */
    5320,
    /* LbuRxRyOffMemX16 */
    5323,
    /* LhRxRyOffMemX16 */
    5326,
    /* LhuRxRyOffMemX16 */
    5329,
    /* LiRxImm16 */
    5332,
    /* LiRxImmAlignX16 */
    5334,
    /* LiRxImmX16 */
    5336,
    /* LwRxPcTcp16 */
    5338,
    /* LwRxPcTcpX16 */
    5341,
    /* LwRxRyOffMemX16 */
    5344,
    /* LwRxSpImmX16 */
    5347,
    /* MADD */
    5350,
    /* MADDF_D */
    5352,
    /* MADDF_D_MMR6 */
    5356,
    /* MADDF_S */
    5360,
    /* MADDF_S_MMR6 */
    5364,
    /* MADDR_Q_H */
    5368,
    /* MADDR_Q_W */
    5372,
    /* MADDU */
    5376,
    /* MADDU_DSP */
    5378,
    /* MADDU_DSP_MM */
    5382,
    /* MADDU_MM */
    5386,
    /* MADDV_B */
    5388,
    /* MADDV_D */
    5392,
    /* MADDV_H */
    5396,
    /* MADDV_W */
    5400,
    /* MADD_D32 */
    5404,
    /* MADD_D32_MM */
    5408,
    /* MADD_D64 */
    5412,
    /* MADD_DSP */
    5416,
    /* MADD_DSP_MM */
    5420,
    /* MADD_MM */
    5424,
    /* MADD_Q_H */
    5426,
    /* MADD_Q_W */
    5430,
    /* MADD_S */
    5434,
    /* MADD_S_MM */
    5438,
    /* MAQ_SA_W_PHL */
    5442,
    /* MAQ_SA_W_PHL_MM */
    5446,
    /* MAQ_SA_W_PHR */
    5450,
    /* MAQ_SA_W_PHR_MM */
    5454,
    /* MAQ_S_W_PHL */
    5458,
    /* MAQ_S_W_PHL_MM */
    5462,
    /* MAQ_S_W_PHR */
    5466,
    /* MAQ_S_W_PHR_MM */
    5470,
    /* MAXA_D */
    5474,
    /* MAXA_D_MMR6 */
    5477,
    /* MAXA_S */
    5480,
    /* MAXA_S_MMR6 */
    5483,
    /* MAXI_S_B */
    5486,
    /* MAXI_S_D */
    5489,
    /* MAXI_S_H */
    5492,
    /* MAXI_S_W */
    5495,
    /* MAXI_U_B */
    5498,
    /* MAXI_U_D */
    5501,
    /* MAXI_U_H */
    5504,
    /* MAXI_U_W */
    5507,
    /* MAX_A_B */
    5510,
    /* MAX_A_D */
    5513,
    /* MAX_A_H */
    5516,
    /* MAX_A_W */
    5519,
    /* MAX_D */
    5522,
    /* MAX_D_MMR6 */
    5525,
    /* MAX_S */
    5528,
    /* MAX_S_B */
    5531,
    /* MAX_S_D */
    5534,
    /* MAX_S_H */
    5537,
    /* MAX_S_MMR6 */
    5540,
    /* MAX_S_W */
    5543,
    /* MAX_U_B */
    5546,
    /* MAX_U_D */
    5549,
    /* MAX_U_H */
    5552,
    /* MAX_U_W */
    5555,
    /* MFC0 */
    5558,
    /* MFC0_MMR6 */
    5561,
    /* MFC1 */
    5564,
    /* MFC1_D64 */
    5566,
    /* MFC1_MM */
    5568,
    /* MFC1_MMR6 */
    5570,
    /* MFC2 */
    5572,
    /* MFC2_MMR6 */
    5575,
    /* MFGC0 */
    5577,
    /* MFGC0_MM */
    5580,
    /* MFHC0_MMR6 */
    5583,
    /* MFHC1_D32 */
    5586,
    /* MFHC1_D32_MM */
    5588,
    /* MFHC1_D64 */
    5590,
    /* MFHC1_D64_MM */
    5592,
    /* MFHC2_MMR6 */
    5594,
    /* MFHGC0 */
    5596,
    /* MFHGC0_MM */
    5599,
    /* MFHI */
    5602,
    /* MFHI16_MM */
    5603,
    /* MFHI64 */
    5604,
    /* MFHI_DSP */
    5605,
    /* MFHI_DSP_MM */
    5607,
    /* MFHI_MM */
    5609,
    /* MFLO */
    5610,
    /* MFLO16_MM */
    5611,
    /* MFLO64 */
    5612,
    /* MFLO_DSP */
    5613,
    /* MFLO_DSP_MM */
    5615,
    /* MFLO_MM */
    5617,
    /* MFTR */
    5618,
    /* MINA_D */
    5623,
    /* MINA_D_MMR6 */
    5626,
    /* MINA_S */
    5629,
    /* MINA_S_MMR6 */
    5632,
    /* MINI_S_B */
    5635,
    /* MINI_S_D */
    5638,
    /* MINI_S_H */
    5641,
    /* MINI_S_W */
    5644,
    /* MINI_U_B */
    5647,
    /* MINI_U_D */
    5650,
    /* MINI_U_H */
    5653,
    /* MINI_U_W */
    5656,
    /* MIN_A_B */
    5659,
    /* MIN_A_D */
    5662,
    /* MIN_A_H */
    5665,
    /* MIN_A_W */
    5668,
    /* MIN_D */
    5671,
    /* MIN_D_MMR6 */
    5674,
    /* MIN_S */
    5677,
    /* MIN_S_B */
    5680,
    /* MIN_S_D */
    5683,
    /* MIN_S_H */
    5686,
    /* MIN_S_MMR6 */
    5689,
    /* MIN_S_W */
    5692,
    /* MIN_U_B */
    5695,
    /* MIN_U_D */
    5698,
    /* MIN_U_H */
    5701,
    /* MIN_U_W */
    5704,
    /* MOD */
    5707,
    /* MODSUB */
    5710,
    /* MODSUB_MM */
    5713,
    /* MODU */
    5716,
    /* MODU_MMR6 */
    5719,
    /* MOD_MMR6 */
    5722,
    /* MOD_S_B */
    5725,
    /* MOD_S_D */
    5728,
    /* MOD_S_H */
    5731,
    /* MOD_S_W */
    5734,
    /* MOD_U_B */
    5737,
    /* MOD_U_D */
    5740,
    /* MOD_U_H */
    5743,
    /* MOD_U_W */
    5746,
    /* MOVE16_MM */
    5749,
    /* MOVE16_MMR6 */
    5751,
    /* MOVEP_MM */
    5753,
    /* MOVEP_MMR6 */
    5757,
    /* MOVE_V */
    5761,
    /* MOVF_D32 */
    5763,
    /* MOVF_D32_MM */
    5767,
    /* MOVF_D64 */
    5771,
    /* MOVF_I */
    5775,
    /* MOVF_I64 */
    5779,
    /* MOVF_I_MM */
    5783,
    /* MOVF_S */
    5787,
    /* MOVF_S_MM */
    5791,
    /* MOVN_I64_D64 */
    5795,
    /* MOVN_I64_I */
    5799,
    /* MOVN_I64_I64 */
    5803,
    /* MOVN_I64_S */
    5807,
    /* MOVN_I_D32 */
    5811,
    /* MOVN_I_D32_MM */
    5815,
    /* MOVN_I_D64 */
    5819,
    /* MOVN_I_I */
    5823,
    /* MOVN_I_I64 */
    5827,
    /* MOVN_I_MM */
    5831,
    /* MOVN_I_S */
    5835,
    /* MOVN_I_S_MM */
    5839,
    /* MOVT_D32 */
    5843,
    /* MOVT_D32_MM */
    5847,
    /* MOVT_D64 */
    5851,
    /* MOVT_I */
    5855,
    /* MOVT_I64 */
    5859,
    /* MOVT_I_MM */
    5863,
    /* MOVT_S */
    5867,
    /* MOVT_S_MM */
    5871,
    /* MOVZ_I64_D64 */
    5875,
    /* MOVZ_I64_I */
    5879,
    /* MOVZ_I64_I64 */
    5883,
    /* MOVZ_I64_S */
    5887,
    /* MOVZ_I_D32 */
    5891,
    /* MOVZ_I_D32_MM */
    5895,
    /* MOVZ_I_D64 */
    5899,
    /* MOVZ_I_I */
    5903,
    /* MOVZ_I_I64 */
    5907,
    /* MOVZ_I_MM */
    5911,
    /* MOVZ_I_S */
    5915,
    /* MOVZ_I_S_MM */
    5919,
    /* MSUB */
    5923,
    /* MSUBF_D */
    5925,
    /* MSUBF_D_MMR6 */
    5929,
    /* MSUBF_S */
    5933,
    /* MSUBF_S_MMR6 */
    5937,
    /* MSUBR_Q_H */
    5941,
    /* MSUBR_Q_W */
    5945,
    /* MSUBU */
    5949,
    /* MSUBU_DSP */
    5951,
    /* MSUBU_DSP_MM */
    5955,
    /* MSUBU_MM */
    5959,
    /* MSUBV_B */
    5961,
    /* MSUBV_D */
    5965,
    /* MSUBV_H */
    5969,
    /* MSUBV_W */
    5973,
    /* MSUB_D32 */
    5977,
    /* MSUB_D32_MM */
    5981,
    /* MSUB_D64 */
    5985,
    /* MSUB_DSP */
    5989,
    /* MSUB_DSP_MM */
    5993,
    /* MSUB_MM */
    5997,
    /* MSUB_Q_H */
    5999,
    /* MSUB_Q_W */
    6003,
    /* MSUB_S */
    6007,
    /* MSUB_S_MM */
    6011,
    /* MTC0 */
    6015,
    /* MTC0_MMR6 */
    6018,
    /* MTC1 */
    6021,
    /* MTC1_D64 */
    6023,
    /* MTC1_D64_MM */
    6025,
    /* MTC1_MM */
    6027,
    /* MTC1_MMR6 */
    6029,
    /* MTC2 */
    6031,
    /* MTC2_MMR6 */
    6034,
    /* MTGC0 */
    6036,
    /* MTGC0_MM */
    6039,
    /* MTHC0_MMR6 */
    6042,
    /* MTHC1_D32 */
    6045,
    /* MTHC1_D32_MM */
    6048,
    /* MTHC1_D64 */
    6051,
    /* MTHC1_D64_MM */
    6054,
    /* MTHC2_MMR6 */
    6057,
    /* MTHGC0 */
    6059,
    /* MTHGC0_MM */
    6062,
    /* MTHI */
    6065,
    /* MTHI64 */
    6066,
    /* MTHI_DSP */
    6067,
    /* MTHI_DSP_MM */
    6069,
    /* MTHI_MM */
    6071,
    /* MTHLIP */
    6072,
    /* MTHLIP_MM */
    6075,
    /* MTLO */
    6078,
    /* MTLO64 */
    6079,
    /* MTLO_DSP */
    6080,
    /* MTLO_DSP_MM */
    6082,
    /* MTLO_MM */
    6084,
    /* MTM0 */
    6085,
    /* MTM1 */
    6086,
    /* MTM2 */
    6087,
    /* MTP0 */
    6088,
    /* MTP1 */
    6089,
    /* MTP2 */
    6090,
    /* MTTR */
    6091,
    /* MUH */
    6096,
    /* MUHU */
    6099,
    /* MUHU_MMR6 */
    6102,
    /* MUH_MMR6 */
    6105,
    /* MUL */
    6108,
    /* MULEQ_S_W_PHL */
    6111,
    /* MULEQ_S_W_PHL_MM */
    6114,
    /* MULEQ_S_W_PHR */
    6117,
    /* MULEQ_S_W_PHR_MM */
    6120,
    /* MULEU_S_PH_QBL */
    6123,
    /* MULEU_S_PH_QBL_MM */
    6126,
    /* MULEU_S_PH_QBR */
    6129,
    /* MULEU_S_PH_QBR_MM */
    6132,
    /* MULQ_RS_PH */
    6135,
    /* MULQ_RS_PH_MM */
    6138,
    /* MULQ_RS_W */
    6141,
    /* MULQ_RS_W_MMR2 */
    6144,
    /* MULQ_S_PH */
    6147,
    /* MULQ_S_PH_MMR2 */
    6150,
    /* MULQ_S_W */
    6153,
    /* MULQ_S_W_MMR2 */
    6156,
    /* MULR_PS64 */
    6159,
    /* MULR_Q_H */
    6162,
    /* MULR_Q_W */
    6165,
    /* MULSAQ_S_W_PH */
    6168,
    /* MULSAQ_S_W_PH_MM */
    6172,
    /* MULSA_W_PH */
    6176,
    /* MULSA_W_PH_MMR2 */
    6180,
    /* MULT */
    6184,
    /* MULTU_DSP */
    6186,
    /* MULTU_DSP_MM */
    6189,
    /* MULT_DSP */
    6192,
    /* MULT_DSP_MM */
    6195,
    /* MULT_MM */
    6198,
    /* MULTu */
    6200,
    /* MULTu_MM */
    6202,
    /* MULU */
    6204,
    /* MULU_MMR6 */
    6207,
    /* MULV_B */
    6210,
    /* MULV_D */
    6213,
    /* MULV_H */
    6216,
    /* MULV_W */
    6219,
    /* MUL_MM */
    6222,
    /* MUL_MMR6 */
    6225,
    /* MUL_PH */
    6228,
    /* MUL_PH_MMR2 */
    6231,
    /* MUL_Q_H */
    6234,
    /* MUL_Q_W */
    6237,
    /* MUL_R6 */
    6240,
    /* MUL_S_PH */
    6243,
    /* MUL_S_PH_MMR2 */
    6246,
    /* Mfhi16 */
    6249,
    /* Mflo16 */
    6250,
    /* Move32R16 */
    6251,
    /* MoveR3216 */
    6253,
    /* NLOC_B */
    6255,
    /* NLOC_D */
    6257,
    /* NLOC_H */
    6259,
    /* NLOC_W */
    6261,
    /* NLZC_B */
    6263,
    /* NLZC_D */
    6265,
    /* NLZC_H */
    6267,
    /* NLZC_W */
    6269,
    /* NMADD_D32 */
    6271,
    /* NMADD_D32_MM */
    6275,
    /* NMADD_D64 */
    6279,
    /* NMADD_S */
    6283,
    /* NMADD_S_MM */
    6287,
    /* NMSUB_D32 */
    6291,
    /* NMSUB_D32_MM */
    6295,
    /* NMSUB_D64 */
    6299,
    /* NMSUB_S */
    6303,
    /* NMSUB_S_MM */
    6307,
    /* NOR */
    6311,
    /* NOR64 */
    6314,
    /* NORI_B */
    6317,
    /* NOR_MM */
    6320,
    /* NOR_MMR6 */
    6323,
    /* NOR_V */
    6326,
    /* NOT16_MM */
    6329,
    /* NOT16_MMR6 */
    6331,
    /* NegRxRy16 */
    6333,
    /* NotRxRy16 */
    6335,
    /* OR */
    6337,
    /* OR16_MM */
    6340,
    /* OR16_MMR6 */
    6343,
    /* OR64 */
    6346,
    /* ORI_B */
    6349,
    /* ORI_MMR6 */
    6352,
    /* OR_MM */
    6355,
    /* OR_MMR6 */
    6358,
    /* OR_V */
    6361,
    /* ORi */
    6364,
    /* ORi64 */
    6367,
    /* ORi_MM */
    6370,
    /* OrRxRxRy16 */
    6373,
    /* PACKRL_PH */
    6376,
    /* PACKRL_PH_MM */
    6379,
    /* PAUSE */
    6382,
    /* PAUSE_MM */
    6382,
    /* PAUSE_MMR6 */
    6382,
    /* PCKEV_B */
    6382,
    /* PCKEV_D */
    6385,
    /* PCKEV_H */
    6388,
    /* PCKEV_W */
    6391,
    /* PCKOD_B */
    6394,
    /* PCKOD_D */
    6397,
    /* PCKOD_H */
    6400,
    /* PCKOD_W */
    6403,
    /* PCNT_B */
    6406,
    /* PCNT_D */
    6408,
    /* PCNT_H */
    6410,
    /* PCNT_W */
    6412,
    /* PICK_PH */
    6414,
    /* PICK_PH_MM */
    6417,
    /* PICK_QB */
    6420,
    /* PICK_QB_MM */
    6423,
    /* PLL_PS64 */
    6426,
    /* PLU_PS64 */
    6429,
    /* POP */
    6432,
    /* PRECEQU_PH_QBL */
    6434,
    /* PRECEQU_PH_QBLA */
    6436,
    /* PRECEQU_PH_QBLA_MM */
    6438,
    /* PRECEQU_PH_QBL_MM */
    6440,
    /* PRECEQU_PH_QBR */
    6442,
    /* PRECEQU_PH_QBRA */
    6444,
    /* PRECEQU_PH_QBRA_MM */
    6446,
    /* PRECEQU_PH_QBR_MM */
    6448,
    /* PRECEQ_W_PHL */
    6450,
    /* PRECEQ_W_PHL_MM */
    6452,
    /* PRECEQ_W_PHR */
    6454,
    /* PRECEQ_W_PHR_MM */
    6456,
    /* PRECEU_PH_QBL */
    6458,
    /* PRECEU_PH_QBLA */
    6460,
    /* PRECEU_PH_QBLA_MM */
    6462,
    /* PRECEU_PH_QBL_MM */
    6464,
    /* PRECEU_PH_QBR */
    6466,
    /* PRECEU_PH_QBRA */
    6468,
    /* PRECEU_PH_QBRA_MM */
    6470,
    /* PRECEU_PH_QBR_MM */
    6472,
    /* PRECRQU_S_QB_PH */
    6474,
    /* PRECRQU_S_QB_PH_MM */
    6477,
    /* PRECRQ_PH_W */
    6480,
    /* PRECRQ_PH_W_MM */
    6483,
    /* PRECRQ_QB_PH */
    6486,
    /* PRECRQ_QB_PH_MM */
    6489,
    /* PRECRQ_RS_PH_W */
    6492,
    /* PRECRQ_RS_PH_W_MM */
    6495,
    /* PRECR_QB_PH */
    6498,
    /* PRECR_QB_PH_MMR2 */
    6501,
    /* PRECR_SRA_PH_W */
    6504,
    /* PRECR_SRA_PH_W_MMR2 */
    6508,
    /* PRECR_SRA_R_PH_W */
    6512,
    /* PRECR_SRA_R_PH_W_MMR2 */
    6516,
    /* PREF */
    6520,
    /* PREFE */
    6523,
    /* PREFE_MM */
    6526,
    /* PREFX_MM */
    6529,
    /* PREF_MM */
    6532,
    /* PREF_MMR6 */
    6535,
    /* PREF_R6 */
    6538,
    /* PREPEND */
    6541,
    /* PREPEND_MMR2 */
    6545,
    /* PUL_PS64 */
    6549,
    /* PUU_PS64 */
    6552,
    /* RADDU_W_QB */
    6555,
    /* RADDU_W_QB_MM */
    6557,
    /* RDDSP */
    6559,
    /* RDDSP_MM */
    6561,
    /* RDHWR */
    6563,
    /* RDHWR64 */
    6566,
    /* RDHWR_MM */
    6569,
    /* RDHWR_MMR6 */
    6572,
    /* RDPGPR_MMR6 */
    6575,
    /* RECIP_D32 */
    6577,
    /* RECIP_D32_MM */
    6579,
    /* RECIP_D64 */
    6581,
    /* RECIP_D64_MM */
    6583,
    /* RECIP_S */
    6585,
    /* RECIP_S_MM */
    6587,
    /* REPLV_PH */
    6589,
    /* REPLV_PH_MM */
    6591,
    /* REPLV_QB */
    6593,
    /* REPLV_QB_MM */
    6595,
    /* REPL_PH */
    6597,
    /* REPL_PH_MM */
    6599,
    /* REPL_QB */
    6601,
    /* REPL_QB_MM */
    6603,
    /* RINT_D */
    6605,
    /* RINT_D_MMR6 */
    6607,
    /* RINT_S */
    6609,
    /* RINT_S_MMR6 */
    6611,
    /* ROTR */
    6613,
    /* ROTRV */
    6616,
    /* ROTRV_MM */
    6619,
    /* ROTR_MM */
    6622,
    /* ROUND_L_D64 */
    6625,
    /* ROUND_L_D_MMR6 */
    6627,
    /* ROUND_L_S */
    6629,
    /* ROUND_L_S_MMR6 */
    6631,
    /* ROUND_W_D32 */
    6633,
    /* ROUND_W_D64 */
    6635,
    /* ROUND_W_D_MMR6 */
    6637,
    /* ROUND_W_MM */
    6639,
    /* ROUND_W_S */
    6641,
    /* ROUND_W_S_MM */
    6643,
    /* ROUND_W_S_MMR6 */
    6645,
    /* RSQRT_D32 */
    6647,
    /* RSQRT_D32_MM */
    6649,
    /* RSQRT_D64 */
    6651,
    /* RSQRT_D64_MM */
    6653,
    /* RSQRT_S */
    6655,
    /* RSQRT_S_MM */
    6657,
    /* Restore16 */
    6659,
    /* RestoreX16 */
    6659,
    /* SAA */
    6659,
    /* SAAD */
    6661,
    /* SAT_S_B */
    6663,
    /* SAT_S_D */
    6666,
    /* SAT_S_H */
    6669,
    /* SAT_S_W */
    6672,
    /* SAT_U_B */
    6675,
    /* SAT_U_D */
    6678,
    /* SAT_U_H */
    6681,
    /* SAT_U_W */
    6684,
    /* SB */
    6687,
    /* SB16_MM */
    6690,
    /* SB16_MMR6 */
    6693,
    /* SB64 */
    6696,
    /* SBE */
    6699,
    /* SBE_MM */
    6702,
    /* SB_MM */
    6705,
    /* SB_MMR6 */
    6708,
    /* SC */
    6711,
    /* SC64 */
    6715,
    /* SC64_R6 */
    6719,
    /* SCD */
    6723,
    /* SCD_R6 */
    6727,
    /* SCE */
    6731,
    /* SCE_MM */
    6735,
    /* SC_MM */
    6739,
    /* SC_MMR6 */
    6743,
    /* SC_R6 */
    6747,
    /* SD */
    6751,
    /* SDBBP */
    6754,
    /* SDBBP16_MM */
    6755,
    /* SDBBP16_MMR6 */
    6756,
    /* SDBBP_MM */
    6757,
    /* SDBBP_MMR6 */
    6758,
    /* SDBBP_R6 */
    6759,
    /* SDC1 */
    6760,
    /* SDC164 */
    6763,
    /* SDC1_D64_MMR6 */
    6766,
    /* SDC1_MM_D32 */
    6769,
    /* SDC1_MM_D64 */
    6772,
    /* SDC2 */
    6775,
    /* SDC2_MMR6 */
    6778,
    /* SDC2_R6 */
    6781,
    /* SDC3 */
    6784,
    /* SDIV */
    6787,
    /* SDIV_MM */
    6789,
    /* SDL */
    6791,
    /* SDR */
    6794,
    /* SDXC1 */
    6797,
    /* SDXC164 */
    6800,
    /* SEB */
    6803,
    /* SEB64 */
    6805,
    /* SEB_MM */
    6807,
    /* SEH */
    6809,
    /* SEH64 */
    6811,
    /* SEH_MM */
    6813,
    /* SELEQZ */
    6815,
    /* SELEQZ64 */
    6818,
    /* SELEQZ_D */
    6821,
    /* SELEQZ_D_MMR6 */
    6824,
    /* SELEQZ_MMR6 */
    6827,
    /* SELEQZ_S */
    6830,
    /* SELEQZ_S_MMR6 */
    6833,
    /* SELNEZ */
    6836,
    /* SELNEZ64 */
    6839,
    /* SELNEZ_D */
    6842,
    /* SELNEZ_D_MMR6 */
    6845,
    /* SELNEZ_MMR6 */
    6848,
    /* SELNEZ_S */
    6851,
    /* SELNEZ_S_MMR6 */
    6854,
    /* SEL_D */
    6857,
    /* SEL_D_MMR6 */
    6861,
    /* SEL_S */
    6865,
    /* SEL_S_MMR6 */
    6869,
    /* SEQ */
    6873,
    /* SEQi */
    6876,
    /* SH */
    6879,
    /* SH16_MM */
    6882,
    /* SH16_MMR6 */
    6885,
    /* SH64 */
    6888,
    /* SHE */
    6891,
    /* SHE_MM */
    6894,
    /* SHF_B */
    6897,
    /* SHF_H */
    6900,
    /* SHF_W */
    6903,
    /* SHILO */
    6906,
    /* SHILOV */
    6909,
    /* SHILOV_MM */
    6912,
    /* SHILO_MM */
    6915,
    /* SHLLV_PH */
    6918,
    /* SHLLV_PH_MM */
    6921,
    /* SHLLV_QB */
    6924,
    /* SHLLV_QB_MM */
    6927,
    /* SHLLV_S_PH */
    6930,
    /* SHLLV_S_PH_MM */
    6933,
    /* SHLLV_S_W */
    6936,
    /* SHLLV_S_W_MM */
    6939,
    /* SHLL_PH */
    6942,
    /* SHLL_PH_MM */
    6945,
    /* SHLL_QB */
    6948,
    /* SHLL_QB_MM */
    6951,
    /* SHLL_S_PH */
    6954,
    /* SHLL_S_PH_MM */
    6957,
    /* SHLL_S_W */
    6960,
    /* SHLL_S_W_MM */
    6963,
    /* SHRAV_PH */
    6966,
    /* SHRAV_PH_MM */
    6969,
    /* SHRAV_QB */
    6972,
    /* SHRAV_QB_MMR2 */
    6975,
    /* SHRAV_R_PH */
    6978,
    /* SHRAV_R_PH_MM */
    6981,
    /* SHRAV_R_QB */
    6984,
    /* SHRAV_R_QB_MMR2 */
    6987,
    /* SHRAV_R_W */
    6990,
    /* SHRAV_R_W_MM */
    6993,
    /* SHRA_PH */
    6996,
    /* SHRA_PH_MM */
    6999,
    /* SHRA_QB */
    7002,
    /* SHRA_QB_MMR2 */
    7005,
    /* SHRA_R_PH */
    7008,
    /* SHRA_R_PH_MM */
    7011,
    /* SHRA_R_QB */
    7014,
    /* SHRA_R_QB_MMR2 */
    7017,
    /* SHRA_R_W */
    7020,
    /* SHRA_R_W_MM */
    7023,
    /* SHRLV_PH */
    7026,
    /* SHRLV_PH_MMR2 */
    7029,
    /* SHRLV_QB */
    7032,
    /* SHRLV_QB_MM */
    7035,
    /* SHRL_PH */
    7038,
    /* SHRL_PH_MMR2 */
    7041,
    /* SHRL_QB */
    7044,
    /* SHRL_QB_MM */
    7047,
    /* SH_MM */
    7050,
    /* SH_MMR6 */
    7053,
    /* SIGRIE */
    7056,
    /* SIGRIE_MMR6 */
    7057,
    /* SLDI_B */
    7058,
    /* SLDI_D */
    7062,
    /* SLDI_H */
    7066,
    /* SLDI_W */
    7070,
    /* SLD_B */
    7074,
    /* SLD_D */
    7078,
    /* SLD_H */
    7082,
    /* SLD_W */
    7086,
    /* SLL */
    7090,
    /* SLL16_MM */
    7093,
    /* SLL16_MMR6 */
    7096,
    /* SLL64_32 */
    7099,
    /* SLL64_64 */
    7101,
    /* SLLI_B */
    7103,
    /* SLLI_D */
    7106,
    /* SLLI_H */
    7109,
    /* SLLI_W */
    7112,
    /* SLLV */
    7115,
    /* SLLV_MM */
    7118,
    /* SLL_B */
    7121,
    /* SLL_D */
    7124,
    /* SLL_H */
    7127,
    /* SLL_MM */
    7130,
    /* SLL_MMR6 */
    7133,
    /* SLL_W */
    7136,
    /* SLT */
    7139,
    /* SLT64 */
    7142,
    /* SLT_MM */
    7145,
    /* SLTi */
    7148,
    /* SLTi64 */
    7151,
    /* SLTi_MM */
    7154,
    /* SLTiu */
    7157,
    /* SLTiu64 */
    7160,
    /* SLTiu_MM */
    7163,
    /* SLTu */
    7166,
    /* SLTu64 */
    7169,
    /* SLTu_MM */
    7172,
    /* SNE */
    7175,
    /* SNEi */
    7178,
    /* SPLATI_B */
    7181,
    /* SPLATI_D */
    7184,
    /* SPLATI_H */
    7187,
    /* SPLATI_W */
    7190,
    /* SPLAT_B */
    7193,
    /* SPLAT_D */
    7196,
    /* SPLAT_H */
    7199,
    /* SPLAT_W */
    7202,
    /* SRA */
    7205,
    /* SRAI_B */
    7208,
    /* SRAI_D */
    7211,
    /* SRAI_H */
    7214,
    /* SRAI_W */
    7217,
    /* SRARI_B */
    7220,
    /* SRARI_D */
    7223,
    /* SRARI_H */
    7226,
    /* SRARI_W */
    7229,
    /* SRAR_B */
    7232,
    /* SRAR_D */
    7235,
    /* SRAR_H */
    7238,
    /* SRAR_W */
    7241,
    /* SRAV */
    7244,
    /* SRAV_MM */
    7247,
    /* SRA_B */
    7250,
    /* SRA_D */
    7253,
    /* SRA_H */
    7256,
    /* SRA_MM */
    7259,
    /* SRA_W */
    7262,
    /* SRL */
    7265,
    /* SRL16_MM */
    7268,
    /* SRL16_MMR6 */
    7271,
    /* SRLI_B */
    7274,
    /* SRLI_D */
    7277,
    /* SRLI_H */
    7280,
    /* SRLI_W */
    7283,
    /* SRLRI_B */
    7286,
    /* SRLRI_D */
    7289,
    /* SRLRI_H */
    7292,
    /* SRLRI_W */
    7295,
    /* SRLR_B */
    7298,
    /* SRLR_D */
    7301,
    /* SRLR_H */
    7304,
    /* SRLR_W */
    7307,
    /* SRLV */
    7310,
    /* SRLV_MM */
    7313,
    /* SRL_B */
    7316,
    /* SRL_D */
    7319,
    /* SRL_H */
    7322,
    /* SRL_MM */
    7325,
    /* SRL_W */
    7328,
    /* SSNOP */
    7331,
    /* SSNOP_MM */
    7331,
    /* SSNOP_MMR6 */
    7331,
    /* ST_B */
    7331,
    /* ST_D */
    7334,
    /* ST_H */
    7337,
    /* ST_W */
    7340,
    /* SUB */
    7343,
    /* SUBQH_PH */
    7346,
    /* SUBQH_PH_MMR2 */
    7349,
    /* SUBQH_R_PH */
    7352,
    /* SUBQH_R_PH_MMR2 */
    7355,
    /* SUBQH_R_W */
    7358,
    /* SUBQH_R_W_MMR2 */
    7361,
    /* SUBQH_W */
    7364,
    /* SUBQH_W_MMR2 */
    7367,
    /* SUBQ_PH */
    7370,
    /* SUBQ_PH_MM */
    7373,
    /* SUBQ_S_PH */
    7376,
    /* SUBQ_S_PH_MM */
    7379,
    /* SUBQ_S_W */
    7382,
    /* SUBQ_S_W_MM */
    7385,
    /* SUBSUS_U_B */
    7388,
    /* SUBSUS_U_D */
    7391,
    /* SUBSUS_U_H */
    7394,
    /* SUBSUS_U_W */
    7397,
    /* SUBSUU_S_B */
    7400,
    /* SUBSUU_S_D */
    7403,
    /* SUBSUU_S_H */
    7406,
    /* SUBSUU_S_W */
    7409,
    /* SUBS_S_B */
    7412,
    /* SUBS_S_D */
    7415,
    /* SUBS_S_H */
    7418,
    /* SUBS_S_W */
    7421,
    /* SUBS_U_B */
    7424,
    /* SUBS_U_D */
    7427,
    /* SUBS_U_H */
    7430,
    /* SUBS_U_W */
    7433,
    /* SUBU16_MM */
    7436,
    /* SUBU16_MMR6 */
    7439,
    /* SUBUH_QB */
    7442,
    /* SUBUH_QB_MMR2 */
    7445,
    /* SUBUH_R_QB */
    7448,
    /* SUBUH_R_QB_MMR2 */
    7451,
    /* SUBU_MMR6 */
    7454,
    /* SUBU_PH */
    7457,
    /* SUBU_PH_MMR2 */
    7460,
    /* SUBU_QB */
    7463,
    /* SUBU_QB_MM */
    7466,
    /* SUBU_S_PH */
    7469,
    /* SUBU_S_PH_MMR2 */
    7472,
    /* SUBU_S_QB */
    7475,
    /* SUBU_S_QB_MM */
    7478,
    /* SUBVI_B */
    7481,
    /* SUBVI_D */
    7484,
    /* SUBVI_H */
    7487,
    /* SUBVI_W */
    7490,
    /* SUBV_B */
    7493,
    /* SUBV_D */
    7496,
    /* SUBV_H */
    7499,
    /* SUBV_W */
    7502,
    /* SUB_MM */
    7505,
    /* SUB_MMR6 */
    7508,
    /* SUBu */
    7511,
    /* SUBu_MM */
    7514,
    /* SUXC1 */
    7517,
    /* SUXC164 */
    7520,
    /* SUXC1_MM */
    7523,
    /* SW */
    7526,
    /* SW16_MM */
    7529,
    /* SW16_MMR6 */
    7532,
    /* SW64 */
    7535,
    /* SWC1 */
    7538,
    /* SWC1_MM */
    7541,
    /* SWC2 */
    7544,
    /* SWC2_MMR6 */
    7547,
    /* SWC2_R6 */
    7550,
    /* SWC3 */
    7553,
    /* SWDSP */
    7556,
    /* SWDSP_MM */
    7559,
    /* SWE */
    7562,
    /* SWE_MM */
    7565,
    /* SWL */
    7568,
    /* SWL64 */
    7571,
    /* SWLE */
    7574,
    /* SWLE_MM */
    7577,
    /* SWL_MM */
    7580,
    /* SWM16_MM */
    7583,
    /* SWM16_MMR6 */
    7586,
    /* SWM32_MM */
    7589,
    /* SWP_MM */
    7592,
    /* SWR */
    7596,
    /* SWR64 */
    7599,
    /* SWRE */
    7602,
    /* SWRE_MM */
    7605,
    /* SWR_MM */
    7608,
    /* SWSP_MM */
    7611,
    /* SWSP_MMR6 */
    7614,
    /* SWXC1 */
    7617,
    /* SWXC1_MM */
    7620,
    /* SW_MM */
    7623,
    /* SW_MMR6 */
    7626,
    /* SYNC */
    7629,
    /* SYNCI */
    7630,
    /* SYNCI_MM */
    7632,
    /* SYNCI_MMR6 */
    7634,
    /* SYNC_MM */
    7636,
    /* SYNC_MMR6 */
    7637,
    /* SYSCALL */
    7638,
    /* SYSCALL_MM */
    7639,
    /* Save16 */
    7640,
    /* SaveX16 */
    7640,
    /* SbRxRyOffMemX16 */
    7640,
    /* SebRx16 */
    7643,
    /* SehRx16 */
    7645,
    /* ShRxRyOffMemX16 */
    7647,
    /* SllX16 */
    7650,
    /* SllvRxRy16 */
    7653,
    /* SltRxRy16 */
    7656,
    /* SltiRxImm16 */
    7658,
    /* SltiRxImmX16 */
    7660,
    /* SltiuRxImm16 */
    7662,
    /* SltiuRxImmX16 */
    7664,
    /* SltuRxRy16 */
    7666,
    /* SraX16 */
    7668,
    /* SravRxRy16 */
    7671,
    /* SrlX16 */
    7674,
    /* SrlvRxRy16 */
    7677,
    /* SubuRxRyRz16 */
    7680,
    /* SwRxRyOffMemX16 */
    7683,
    /* SwRxSpImmX16 */
    7686,
    /* TEQ */
    7689,
    /* TEQI */
    7692,
    /* TEQI_MM */
    7694,
    /* TEQ_MM */
    7696,
    /* TGE */
    7699,
    /* TGEI */
    7702,
    /* TGEIU */
    7704,
    /* TGEIU_MM */
    7706,
    /* TGEI_MM */
    7708,
    /* TGEU */
    7710,
    /* TGEU_MM */
    7713,
    /* TGE_MM */
    7716,
    /* TLBGINV */
    7719,
    /* TLBGINVF */
    7719,
    /* TLBGINVF_MM */
    7719,
    /* TLBGINV_MM */
    7719,
    /* TLBGP */
    7719,
    /* TLBGP_MM */
    7719,
    /* TLBGR */
    7719,
    /* TLBGR_MM */
    7719,
    /* TLBGWI */
    7719,
    /* TLBGWI_MM */
    7719,
    /* TLBGWR */
    7719,
    /* TLBGWR_MM */
    7719,
    /* TLBINV */
    7719,
    /* TLBINVF */
    7719,
    /* TLBINVF_MMR6 */
    7719,
    /* TLBINV_MMR6 */
    7719,
    /* TLBP */
    7719,
    /* TLBP_MM */
    7719,
    /* TLBR */
    7719,
    /* TLBR_MM */
    7719,
    /* TLBWI */
    7719,
    /* TLBWI_MM */
    7719,
    /* TLBWR */
    7719,
    /* TLBWR_MM */
    7719,
    /* TLT */
    7719,
    /* TLTI */
    7722,
    /* TLTIU_MM */
    7724,
    /* TLTI_MM */
    7726,
    /* TLTU */
    7728,
    /* TLTU_MM */
    7731,
    /* TLT_MM */
    7734,
    /* TNE */
    7737,
    /* TNEI */
    7740,
    /* TNEI_MM */
    7742,
    /* TNE_MM */
    7744,
    /* TRUNC_L_D64 */
    7747,
    /* TRUNC_L_D_MMR6 */
    7749,
    /* TRUNC_L_S */
    7751,
    /* TRUNC_L_S_MMR6 */
    7753,
    /* TRUNC_W_D32 */
    7755,
    /* TRUNC_W_D64 */
    7757,
    /* TRUNC_W_D_MMR6 */
    7759,
    /* TRUNC_W_MM */
    7761,
    /* TRUNC_W_S */
    7763,
    /* TRUNC_W_S_MM */
    7765,
    /* TRUNC_W_S_MMR6 */
    7767,
    /* TTLTIU */
    7769,
    /* UDIV */
    7771,
    /* UDIV_MM */
    7773,
    /* V3MULU */
    7775,
    /* VMM0 */
    7778,
    /* VMULU */
    7781,
    /* VSHF_B */
    7784,
    /* VSHF_D */
    7788,
    /* VSHF_H */
    7792,
    /* VSHF_W */
    7796,
    /* WAIT */
    7800,
    /* WAIT_MM */
    7800,
    /* WAIT_MMR6 */
    7801,
    /* WRDSP */
    7802,
    /* WRDSP_MM */
    7804,
    /* WRPGPR_MMR6 */
    7806,
    /* WSBH */
    7808,
    /* WSBH_MM */
    7810,
    /* WSBH_MMR6 */
    7812,
    /* XOR */
    7814,
    /* XOR16_MM */
    7817,
    /* XOR16_MMR6 */
    7820,
    /* XOR64 */
    7823,
    /* XORI_B */
    7826,
    /* XORI_MMR6 */
    7829,
    /* XOR_MM */
    7832,
    /* XOR_MMR6 */
    7835,
    /* XOR_V */
    7838,
    /* XORi */
    7841,
    /* XORi64 */
    7844,
    /* XORi_MM */
    7847,
    /* XorRxRxRy16 */
    7850,
    /* YIELD */
    7853,
  };

  using namespace OpTypes;
  static const int16_t OpcodeOperandTypes[] = {
    
    /* PHI */
    -1, 
    /* INLINEASM */
    /* INLINEASM_BR */
    /* CFI_INSTRUCTION */
    i32imm, 
    /* EH_LABEL */
    i32imm, 
    /* GC_LABEL */
    i32imm, 
    /* ANNOTATION_LABEL */
    i32imm, 
    /* KILL */
    /* EXTRACT_SUBREG */
    -1, -1, i32imm, 
    /* INSERT_SUBREG */
    -1, -1, -1, i32imm, 
    /* IMPLICIT_DEF */
    -1, 
    /* SUBREG_TO_REG */
    -1, -1, -1, i32imm, 
    /* COPY_TO_REGCLASS */
    -1, -1, i32imm, 
    /* DBG_VALUE */
    /* DBG_VALUE_LIST */
    /* DBG_INSTR_REF */
    /* DBG_PHI */
    /* DBG_LABEL */
    -1, 
    /* REG_SEQUENCE */
    -1, -1, 
    /* COPY */
    -1, -1, 
    /* BUNDLE */
    /* LIFETIME_START */
    i32imm, 
    /* LIFETIME_END */
    i32imm, 
    /* PSEUDO_PROBE */
    i64imm, i64imm, i8imm, i32imm, 
    /* ARITH_FENCE */
    -1, -1, 
    /* STACKMAP */
    i64imm, i32imm, 
    /* FENTRY_CALL */
    /* PATCHPOINT */
    -1, i64imm, i32imm, -1, i32imm, i32imm, 
    /* LOAD_STACK_GUARD */
    -1, 
    /* PREALLOCATED_SETUP */
    i32imm, 
    /* PREALLOCATED_ARG */
    -1, i32imm, i32imm, 
    /* STATEPOINT */
    /* LOCAL_ESCAPE */
    -1, i32imm, 
    /* FAULTING_OP */
    -1, 
    /* PATCHABLE_OP */
    /* PATCHABLE_FUNCTION_ENTER */
    /* PATCHABLE_RET */
    /* PATCHABLE_FUNCTION_EXIT */
    /* PATCHABLE_TAIL_CALL */
    /* PATCHABLE_EVENT_CALL */
    -1, -1, 
    /* PATCHABLE_TYPED_EVENT_CALL */
    -1, -1, -1, 
    /* ICALL_BRANCH_FUNNEL */
    /* MEMBARRIER */
    /* G_ASSERT_SEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ZEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ALIGN */
    type0, type0, untyped_imm_0, 
    /* G_ADD */
    type0, type0, type0, 
    /* G_SUB */
    type0, type0, type0, 
    /* G_MUL */
    type0, type0, type0, 
    /* G_SDIV */
    type0, type0, type0, 
    /* G_UDIV */
    type0, type0, type0, 
    /* G_SREM */
    type0, type0, type0, 
    /* G_UREM */
    type0, type0, type0, 
    /* G_SDIVREM */
    type0, type0, type0, type0, 
    /* G_UDIVREM */
    type0, type0, type0, type0, 
    /* G_AND */
    type0, type0, type0, 
    /* G_OR */
    type0, type0, type0, 
    /* G_XOR */
    type0, type0, type0, 
    /* G_IMPLICIT_DEF */
    type0, 
    /* G_PHI */
    type0, 
    /* G_FRAME_INDEX */
    type0, -1, 
    /* G_GLOBAL_VALUE */
    type0, -1, 
    /* G_CONSTANT_POOL */
    type0, -1, 
    /* G_EXTRACT */
    type0, type1, untyped_imm_0, 
    /* G_UNMERGE_VALUES */
    type0, type1, 
    /* G_INSERT */
    type0, type0, type1, untyped_imm_0, 
    /* G_MERGE_VALUES */
    type0, type1, 
    /* G_BUILD_VECTOR */
    type0, type1, 
    /* G_BUILD_VECTOR_TRUNC */
    type0, type1, 
    /* G_CONCAT_VECTORS */
    type0, type1, 
    /* G_PTRTOINT */
    type0, type1, 
    /* G_INTTOPTR */
    type0, type1, 
    /* G_BITCAST */
    type0, type1, 
    /* G_FREEZE */
    type0, type0, 
    /* G_INTRINSIC_FPTRUNC_ROUND */
    type0, type1, i32imm, 
    /* G_INTRINSIC_TRUNC */
    type0, type0, 
    /* G_INTRINSIC_ROUND */
    type0, type0, 
    /* G_INTRINSIC_LRINT */
    type0, type1, 
    /* G_INTRINSIC_ROUNDEVEN */
    type0, type0, 
    /* G_READCYCLECOUNTER */
    type0, 
    /* G_LOAD */
    type0, ptype1, 
    /* G_SEXTLOAD */
    type0, ptype1, 
    /* G_ZEXTLOAD */
    type0, ptype1, 
    /* G_INDEXED_LOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_SEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_ZEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_STORE */
    type0, ptype1, 
    /* G_INDEXED_STORE */
    ptype0, type1, ptype0, ptype2, -1, 
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    type0, type1, type2, type0, type0, 
    /* G_ATOMIC_CMPXCHG */
    type0, ptype1, type0, type0, 
    /* G_ATOMICRMW_XCHG */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_ADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_SUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_AND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_NAND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_OR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_XOR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FSUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UINC_WRAP */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UDEC_WRAP */
    type0, ptype1, type0, 
    /* G_FENCE */
    i32imm, i32imm, 
    /* G_BRCOND */
    type0, -1, 
    /* G_BRINDIRECT */
    type0, 
    /* G_INVOKE_REGION_START */
    /* G_INTRINSIC */
    -1, 
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    -1, 
    /* G_ANYEXT */
    type0, type1, 
    /* G_TRUNC */
    type0, type1, 
    /* G_CONSTANT */
    type0, -1, 
    /* G_FCONSTANT */
    type0, -1, 
    /* G_VASTART */
    type0, 
    /* G_VAARG */
    type0, type1, -1, 
    /* G_SEXT */
    type0, type1, 
    /* G_SEXT_INREG */
    type0, type0, untyped_imm_0, 
    /* G_ZEXT */
    type0, type1, 
    /* G_SHL */
    type0, type0, type1, 
    /* G_LSHR */
    type0, type0, type1, 
    /* G_ASHR */
    type0, type0, type1, 
    /* G_FSHL */
    type0, type0, type0, type1, 
    /* G_FSHR */
    type0, type0, type0, type1, 
    /* G_ROTR */
    type0, type0, type1, 
    /* G_ROTL */
    type0, type0, type1, 
    /* G_ICMP */
    type0, -1, type1, type1, 
    /* G_FCMP */
    type0, -1, type1, type1, 
    /* G_SELECT */
    type0, type1, type0, type0, 
    /* G_UADDO */
    type0, type1, type0, type0, 
    /* G_UADDE */
    type0, type1, type0, type0, type1, 
    /* G_USUBO */
    type0, type1, type0, type0, 
    /* G_USUBE */
    type0, type1, type0, type0, type1, 
    /* G_SADDO */
    type0, type1, type0, type0, 
    /* G_SADDE */
    type0, type1, type0, type0, type1, 
    /* G_SSUBO */
    type0, type1, type0, type0, 
    /* G_SSUBE */
    type0, type1, type0, type0, type1, 
    /* G_UMULO */
    type0, type1, type0, type0, 
    /* G_SMULO */
    type0, type1, type0, type0, 
    /* G_UMULH */
    type0, type0, type0, 
    /* G_SMULH */
    type0, type0, type0, 
    /* G_UADDSAT */
    type0, type0, type0, 
    /* G_SADDSAT */
    type0, type0, type0, 
    /* G_USUBSAT */
    type0, type0, type0, 
    /* G_SSUBSAT */
    type0, type0, type0, 
    /* G_USHLSAT */
    type0, type0, type1, 
    /* G_SSHLSAT */
    type0, type0, type1, 
    /* G_SMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_FADD */
    type0, type0, type0, 
    /* G_FSUB */
    type0, type0, type0, 
    /* G_FMUL */
    type0, type0, type0, 
    /* G_FMA */
    type0, type0, type0, type0, 
    /* G_FMAD */
    type0, type0, type0, type0, 
    /* G_FDIV */
    type0, type0, type0, 
    /* G_FREM */
    type0, type0, type0, 
    /* G_FPOW */
    type0, type0, type0, 
    /* G_FPOWI */
    type0, type0, type1, 
    /* G_FEXP */
    type0, type0, 
    /* G_FEXP2 */
    type0, type0, 
    /* G_FLOG */
    type0, type0, 
    /* G_FLOG2 */
    type0, type0, 
    /* G_FLOG10 */
    type0, type0, 
    /* G_FNEG */
    type0, type0, 
    /* G_FPEXT */
    type0, type1, 
    /* G_FPTRUNC */
    type0, type1, 
    /* G_FPTOSI */
    type0, type1, 
    /* G_FPTOUI */
    type0, type1, 
    /* G_SITOFP */
    type0, type1, 
    /* G_UITOFP */
    type0, type1, 
    /* G_FABS */
    type0, type0, 
    /* G_FCOPYSIGN */
    type0, type0, type1, 
    /* G_IS_FPCLASS */
    type0, type1, -1, 
    /* G_FCANONICALIZE */
    type0, type0, 
    /* G_FMINNUM */
    type0, type0, type0, 
    /* G_FMAXNUM */
    type0, type0, type0, 
    /* G_FMINNUM_IEEE */
    type0, type0, type0, 
    /* G_FMAXNUM_IEEE */
    type0, type0, type0, 
    /* G_FMINIMUM */
    type0, type0, type0, 
    /* G_FMAXIMUM */
    type0, type0, type0, 
    /* G_PTR_ADD */
    ptype0, ptype0, type1, 
    /* G_PTRMASK */
    ptype0, ptype0, type1, 
    /* G_SMIN */
    type0, type0, type0, 
    /* G_SMAX */
    type0, type0, type0, 
    /* G_UMIN */
    type0, type0, type0, 
    /* G_UMAX */
    type0, type0, type0, 
    /* G_ABS */
    type0, type0, 
    /* G_LROUND */
    type0, type1, 
    /* G_LLROUND */
    type0, type1, 
    /* G_BR */
    -1, 
    /* G_BRJT */
    ptype0, -1, type1, 
    /* G_INSERT_VECTOR_ELT */
    type0, type0, type1, type2, 
    /* G_EXTRACT_VECTOR_ELT */
    type0, type1, type2, 
    /* G_SHUFFLE_VECTOR */
    type0, type1, type1, -1, 
    /* G_CTTZ */
    type0, type1, 
    /* G_CTTZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTLZ */
    type0, type1, 
    /* G_CTLZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTPOP */
    type0, type1, 
    /* G_BSWAP */
    type0, type0, 
    /* G_BITREVERSE */
    type0, type0, 
    /* G_FCEIL */
    type0, type0, 
    /* G_FCOS */
    type0, type0, 
    /* G_FSIN */
    type0, type0, 
    /* G_FSQRT */
    type0, type0, 
    /* G_FFLOOR */
    type0, type0, 
    /* G_FRINT */
    type0, type0, 
    /* G_FNEARBYINT */
    type0, type0, 
    /* G_ADDRSPACE_CAST */
    type0, type1, 
    /* G_BLOCK_ADDR */
    type0, -1, 
    /* G_JUMP_TABLE */
    type0, -1, 
    /* G_DYN_STACKALLOC */
    ptype0, type1, i32imm, 
    /* G_STRICT_FADD */
    type0, type0, type0, 
    /* G_STRICT_FSUB */
    type0, type0, type0, 
    /* G_STRICT_FMUL */
    type0, type0, type0, 
    /* G_STRICT_FDIV */
    type0, type0, type0, 
    /* G_STRICT_FREM */
    type0, type0, type0, 
    /* G_STRICT_FMA */
    type0, type0, type0, type0, 
    /* G_STRICT_FSQRT */
    type0, type0, 
    /* G_READ_REGISTER */
    type0, -1, 
    /* G_WRITE_REGISTER */
    -1, type0, 
    /* G_MEMCPY */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMCPY_INLINE */
    ptype0, ptype1, type2, 
    /* G_MEMMOVE */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMSET */
    ptype0, type1, type2, untyped_imm_0, 
    /* G_BZERO */
    ptype0, type1, untyped_imm_0, 
    /* G_VECREDUCE_SEQ_FADD */
    type0, type1, type2, 
    /* G_VECREDUCE_SEQ_FMUL */
    type0, type1, type2, 
    /* G_VECREDUCE_FADD */
    type0, type1, 
    /* G_VECREDUCE_FMUL */
    type0, type1, 
    /* G_VECREDUCE_FMAX */
    type0, type1, 
    /* G_VECREDUCE_FMIN */
    type0, type1, 
    /* G_VECREDUCE_ADD */
    type0, type1, 
    /* G_VECREDUCE_MUL */
    type0, type1, 
    /* G_VECREDUCE_AND */
    type0, type1, 
    /* G_VECREDUCE_OR */
    type0, type1, 
    /* G_VECREDUCE_XOR */
    type0, type1, 
    /* G_VECREDUCE_SMAX */
    type0, type1, 
    /* G_VECREDUCE_SMIN */
    type0, type1, 
    /* G_VECREDUCE_UMAX */
    type0, type1, 
    /* G_VECREDUCE_UMIN */
    type0, type1, 
    /* G_SBFX */
    type0, type0, type1, type1, 
    /* G_UBFX */
    type0, type0, type1, type1, 
    /* ABSMacro */
    GPR32Opnd, GPR32Opnd, 
    /* ADJCALLSTACKDOWN */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP */
    i32imm, i32imm, 
    /* AND_V_D_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* AND_V_H_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* AND_V_W_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ATOMIC_CMP_SWAP_I16 */
    GPR32, -1, GPR32, GPR32, 
    /* ATOMIC_CMP_SWAP_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_CMP_SWAP_I32 */
    GPR32, -1, GPR32, GPR32, 
    /* ATOMIC_CMP_SWAP_I32_POSTRA */
    GPR32, -1, GPR32, GPR32, 
    /* ATOMIC_CMP_SWAP_I64 */
    GPR64, -1, GPR64, GPR64, 
    /* ATOMIC_CMP_SWAP_I64_POSTRA */
    GPR64, -1, GPR64, GPR64, 
    /* ATOMIC_CMP_SWAP_I8 */
    GPR32, -1, GPR32, GPR32, 
    /* ATOMIC_CMP_SWAP_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_ADD_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_ADD_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_ADD_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_ADD_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_ADD_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_ADD_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_ADD_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_ADD_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_AND_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_AND_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_AND_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_AND_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_AND_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_AND_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_AND_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_AND_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_MAX_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MAX_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_MAX_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MAX_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MAX_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_MAX_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_MAX_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MAX_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_MIN_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MIN_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_MIN_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MIN_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MIN_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_MIN_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_MIN_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_MIN_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_NAND_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_NAND_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_NAND_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_NAND_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_NAND_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_NAND_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_NAND_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_NAND_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_OR_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_OR_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_OR_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_OR_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_OR_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_OR_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_OR_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_OR_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_SUB_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_SUB_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_SUB_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_SUB_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_SUB_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_SUB_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_SUB_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_SUB_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_UMAX_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMAX_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_UMAX_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMAX_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMAX_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_UMAX_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_UMAX_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMAX_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_UMIN_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMIN_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_UMIN_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMIN_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMIN_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_UMIN_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_UMIN_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_UMIN_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_XOR_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_XOR_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_LOAD_XOR_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_XOR_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_XOR_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_XOR_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_LOAD_XOR_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_LOAD_XOR_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_SWAP_I16 */
    GPR32, -1, GPR32, 
    /* ATOMIC_SWAP_I16_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* ATOMIC_SWAP_I32 */
    GPR32, -1, GPR32, 
    /* ATOMIC_SWAP_I32_POSTRA */
    GPR32, -1, GPR32, 
    /* ATOMIC_SWAP_I64 */
    GPR64, -1, GPR64, 
    /* ATOMIC_SWAP_I64_POSTRA */
    GPR64, -1, GPR64, 
    /* ATOMIC_SWAP_I8 */
    GPR32, -1, GPR32, 
    /* ATOMIC_SWAP_I8_POSTRA */
    GPR32, -1, GPR32, GPR32, GPR32, GPR32, 
    /* B */
    brtarget, 
    /* BAL_BR */
    brtarget, 
    /* BAL_BR_MM */
    brtarget_mm, 
    /* BEQLImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGE */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGEImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGEL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGELImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGEU */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGEUImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGEUL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGEULImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGT */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGTImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGTL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGTLImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGTU */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGTUImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BGTUL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGTULImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLE */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLEImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLEL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLELImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLEU */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLEUImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLEUL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLEULImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLT */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLTL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTLImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLTU */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTUImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BLTUL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTULImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BNELImmMacro */
    GPR32Opnd, imm64, brtarget, 
    /* BPOSGE32_PSEUDO */
    GPR32Opnd, 
    /* BSEL_D_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BSEL_FD_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BSEL_FW_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BSEL_H_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BSEL_W_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* B_MM */
    brtarget, 
    /* B_MMR6_Pseudo */
    brtarget_mm, 
    /* B_MM_Pseudo */
    brtarget_mm, 
    /* BeqImm */
    GPR32Opnd, imm64, brtarget, 
    /* BneImm */
    GPR32Opnd, imm64, brtarget, 
    /* BteqzT8CmpX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BteqzT8CmpiX16 */
    CPU16Regs, simm16, brtarget, 
    /* BteqzT8SltX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BteqzT8SltiX16 */
    CPU16Regs, simm16, brtarget, 
    /* BteqzT8SltiuX16 */
    CPU16Regs, simm16, brtarget, 
    /* BteqzT8SltuX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BtnezT8CmpX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BtnezT8CmpiX16 */
    CPU16Regs, simm16, brtarget, 
    /* BtnezT8SltX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BtnezT8SltiX16 */
    CPU16Regs, simm16, brtarget, 
    /* BtnezT8SltiuX16 */
    CPU16Regs, simm16, brtarget, 
    /* BtnezT8SltuX16 */
    CPU16Regs, CPU16Regs, brtarget, 
    /* BuildPairF64 */
    AFGR64Opnd, GPR32Opnd, GPR32Opnd, 
    /* BuildPairF64_64 */
    FGR64Opnd, GPR32Opnd, GPR32Opnd, 
    /* CFTC1 */
    GPR32Opnd, FGRCCOpnd, 
    /* CONSTPOOL_ENTRY */
    cpinst_operand, cpinst_operand, i32imm, 
    /* COPY_FD_PSEUDO */
    FGR64, MSA128D, uimm1_ptr, 
    /* COPY_FW_PSEUDO */
    FGR32, MSA128W, uimm2_ptr, 
    /* CTTC1 */
    FGRCCOpnd, GPR32Opnd, 
    /* Constant32 */
    simm32, 
    /* DMULImmMacro */
    GPR64Opnd, GPR64Opnd, simm32_relaxed, 
    /* DMULMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMULOMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMULOUMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DROL */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DROLImm */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* DROR */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DRORImm */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* DSDivIMacro */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* DSDivMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DSRemIMacro */
    GPR64Opnd, GPR64Opnd, simm32_relaxed, 
    /* DSRemMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DUDivIMacro */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* DUDivMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DURemIMacro */
    GPR64Opnd, GPR64Opnd, simm32_relaxed, 
    /* DURemMacro */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* ERet */
    /* ExtractElementF64 */
    GPR32Opnd, AFGR64Opnd, i32imm, 
    /* ExtractElementF64_64 */
    GPR32Opnd, FGR64Opnd, i32imm, 
    /* FABS_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FABS_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FEXP2_D_1_PSEUDO */
    MSA128D, MSA128D, 
    /* FEXP2_W_1_PSEUDO */
    MSA128W, MSA128W, 
    /* FILL_FD_PSEUDO */
    MSA128D, FGR64, 
    /* FILL_FW_PSEUDO */
    MSA128W, FGR32, 
    /* GotPrologue16 */
    CPU16Regs, CPU16Regs, simm16, simm16, 
    /* INSERT_B_VIDX64_PSEUDO */
    MSA128BOpnd, MSA128BOpnd, GPR64Opnd, GPR32Opnd, 
    /* INSERT_B_VIDX_PSEUDO */
    MSA128BOpnd, MSA128BOpnd, GPR32Opnd, GPR32Opnd, 
    /* INSERT_D_VIDX64_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, GPR64Opnd, GPR64Opnd, 
    /* INSERT_D_VIDX_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, GPR32Opnd, GPR64Opnd, 
    /* INSERT_FD_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, uimm1, FGR64Opnd, 
    /* INSERT_FD_VIDX64_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, GPR64Opnd, FGR64Opnd, 
    /* INSERT_FD_VIDX_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, GPR32Opnd, FGR64Opnd, 
    /* INSERT_FW_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, uimm2, FGR32Opnd, 
    /* INSERT_FW_VIDX64_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, GPR64Opnd, FGR32Opnd, 
    /* INSERT_FW_VIDX_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, GPR32Opnd, FGR32Opnd, 
    /* INSERT_H_VIDX64_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, GPR64Opnd, GPR32Opnd, 
    /* INSERT_H_VIDX_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, GPR32Opnd, GPR32Opnd, 
    /* INSERT_W_VIDX64_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, GPR64Opnd, GPR32Opnd, 
    /* INSERT_W_VIDX_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, GPR32Opnd, GPR32Opnd, 
    /* JALR64Pseudo */
    GPR64Opnd, 
    /* JALRHB64Pseudo */
    GPR64Opnd, 
    /* JALRHBPseudo */
    GPR32Opnd, 
    /* JALRPseudo */
    GPR32Opnd, 
    /* JAL_MMR6 */
    calltarget, 
    /* JalOneReg */
    GPR32Opnd, 
    /* JalTwoReg */
    GPR32Opnd, GPR32Opnd, 
    /* LDMacro */
    GPR32Opnd, -1, simm16, 
    /* LDR_D */
    MSA128DOpnd, -1, GPR32, 
    /* LDR_W */
    MSA128WOpnd, -1, GPR32, 
    /* LD_F16 */
    MSA128F16, -1, simm10, 
    /* LOAD_ACC128 */
    ACC128, -1, simm16, 
    /* LOAD_ACC64 */
    ACC64, -1, simm16, 
    /* LOAD_ACC64DSP */
    ACC64DSPOpnd, -1, simm16, 
    /* LOAD_CCOND_DSP */
    DSPCC, -1, simm16, 
    /* LONG_BRANCH_ADDiu */
    GPR32Opnd, GPR32Opnd, brtarget, brtarget, 
    /* LONG_BRANCH_ADDiu2Op */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* LONG_BRANCH_DADDiu */
    GPR64Opnd, GPR64Opnd, brtarget, brtarget, 
    /* LONG_BRANCH_DADDiu2Op */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* LONG_BRANCH_LUi */
    GPR32Opnd, brtarget, brtarget, 
    /* LONG_BRANCH_LUi2Op */
    GPR32Opnd, brtarget, 
    /* LONG_BRANCH_LUi2Op_64 */
    GPR64Opnd, brtarget, 
    /* LWM_MM */
    reglist, -1, simm12, 
    /* LoadAddrImm32 */
    GPR32Opnd, i32imm, 
    /* LoadAddrImm64 */
    GPR64Opnd, imm64, 
    /* LoadAddrReg32 */
    GPR32Opnd, -1, simm16, 
    /* LoadAddrReg64 */
    GPR64Opnd, -1, simm16, 
    /* LoadImm32 */
    GPR32Opnd, uimm32_coerced, 
    /* LoadImm64 */
    GPR64Opnd, imm64, 
    /* LoadImmDoubleFGR */
    StrictlyFGR64Opnd, imm64, 
    /* LoadImmDoubleFGR_32 */
    StrictlyAFGR64Opnd, imm64, 
    /* LoadImmDoubleGPR */
    GPR32Opnd, imm64, 
    /* LoadImmSingleFGR */
    StrictlyFGR32Opnd, imm64, 
    /* LoadImmSingleGPR */
    GPR32Opnd, imm64, 
    /* LwConstant32 */
    CPU16Regs, simm32, simm32, 
    /* MFTACX */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFTC0 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFTC1 */
    GPR32Opnd, FGR32Opnd, 
    /* MFTDSP */
    GPR32Opnd, 
    /* MFTGPR */
    GPR32Opnd, GPR32Opnd, uimm3, 
    /* MFTHC1 */
    GPR32Opnd, FGR32Opnd, 
    /* MFTHI */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFTLO */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MIPSeh_return32 */
    GPR32, GPR32, 
    /* MIPSeh_return64 */
    GPR64, GPR64, 
    /* MSA_FP_EXTEND_D_PSEUDO */
    FGR64Opnd, MSA128F16, 
    /* MSA_FP_EXTEND_W_PSEUDO */
    FGR32Opnd, MSA128F16, 
    /* MSA_FP_ROUND_D_PSEUDO */
    MSA128F16, FGR64Opnd, 
    /* MSA_FP_ROUND_W_PSEUDO */
    MSA128F16, FGR32Opnd, 
    /* MTTACX */
    ACC64DSPOpnd, GPR32Opnd, 
    /* MTTC0 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTTC1 */
    FGR32Opnd, GPR32Opnd, 
    /* MTTDSP */
    GPR32Opnd, 
    /* MTTGPR */
    GPR32Opnd, GPR32Opnd, 
    /* MTTHC1 */
    FGR32Opnd, GPR32Opnd, 
    /* MTTHI */
    ACC64DSPOpnd, GPR32Opnd, 
    /* MTTLO */
    ACC64DSPOpnd, GPR32Opnd, 
    /* MULImmMacro */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* MULOMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULOUMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MultRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* MultRxRyRz16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* MultuRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* MultuRxRyRz16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* NOP */
    /* NORImm */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* NORImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* NOR_V_D_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* NOR_V_H_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* NOR_V_W_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* OR_V_D_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* OR_V_H_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* OR_V_W_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* PseudoCMPU_EQ_QB */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCMPU_LE_QB */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCMPU_LT_QB */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCMP_EQ_PH */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCMP_LE_PH */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCMP_LT_PH */
    DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoCVT_D32_W */
    AFGR64Opnd, GPR32Opnd, 
    /* PseudoCVT_D64_L */
    FGR64Opnd, GPR64Opnd, 
    /* PseudoCVT_D64_W */
    FGR64Opnd, GPR32Opnd, 
    /* PseudoCVT_S_L */
    FGR64Opnd, GPR64Opnd, 
    /* PseudoCVT_S_W */
    FGR32Opnd, GPR32Opnd, 
    /* PseudoDMULT */
    ACC128, GPR64Opnd, GPR64Opnd, 
    /* PseudoDMULTu */
    ACC128, GPR64Opnd, GPR64Opnd, 
    /* PseudoDSDIV */
    ACC128, GPR64Opnd, GPR64Opnd, 
    /* PseudoDUDIV */
    ACC128, GPR64Opnd, GPR64Opnd, 
    /* PseudoD_SELECT_I */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* PseudoD_SELECT_I64 */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, GPR64Opnd, GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* PseudoIndirectBranch */
    GPR32Opnd, 
    /* PseudoIndirectBranch64 */
    GPR64Opnd, 
    /* PseudoIndirectBranch64R6 */
    GPR64Opnd, 
    /* PseudoIndirectBranchR6 */
    GPR32Opnd, 
    /* PseudoIndirectBranch_MM */
    GPR32Opnd, 
    /* PseudoIndirectBranch_MMR6 */
    GPR32Opnd, 
    /* PseudoIndirectHazardBranch */
    GPR32Opnd, 
    /* PseudoIndirectHazardBranch64 */
    GPR64Opnd, 
    /* PseudoIndrectHazardBranch64R6 */
    GPR64Opnd, 
    /* PseudoIndrectHazardBranchR6 */
    GPR32Opnd, 
    /* PseudoMADD */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMADDU */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMADDU_MM */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMADD_MM */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMFHI */
    GPR32, ACC64, 
    /* PseudoMFHI64 */
    GPR64, ACC128, 
    /* PseudoMFHI_MM */
    GPR32, ACC64, 
    /* PseudoMFLO */
    GPR32, ACC64, 
    /* PseudoMFLO64 */
    GPR64, ACC128, 
    /* PseudoMFLO_MM */
    GPR32, ACC64, 
    /* PseudoMSUB */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMSUBU */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMSUBU_MM */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMSUB_MM */
    ACC64, GPR32Opnd, GPR32Opnd, ACC64, 
    /* PseudoMTLOHI */
    ACC64, GPR32, GPR32, 
    /* PseudoMTLOHI64 */
    ACC128, GPR64, GPR64, 
    /* PseudoMTLOHI_DSP */
    ACC64DSP, GPR32, GPR32, 
    /* PseudoMTLOHI_MM */
    ACC64, GPR32, GPR32, 
    /* PseudoMULT */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* PseudoMULT_MM */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* PseudoMULTu */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* PseudoMULTu_MM */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* PseudoPICK_PH */
    DSPROpnd, DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoPICK_QB */
    DSPROpnd, DSPCC, DSPROpnd, DSPROpnd, 
    /* PseudoReturn */
    GPR32Opnd, 
    /* PseudoReturn64 */
    GPR64Opnd, 
    /* PseudoSDIV */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* PseudoSELECTFP_F_D32 */
    AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* PseudoSELECTFP_F_D64 */
    FGR64Opnd, FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* PseudoSELECTFP_F_I */
    GPR32Opnd, FCCRegsOpnd, GPR32Opnd, GPR32Opnd, 
    /* PseudoSELECTFP_F_I64 */
    GPR64Opnd, FCCRegsOpnd, GPR64Opnd, GPR64Opnd, 
    /* PseudoSELECTFP_F_S */
    FGR32Opnd, FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* PseudoSELECTFP_T_D32 */
    AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* PseudoSELECTFP_T_D64 */
    FGR64Opnd, FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* PseudoSELECTFP_T_I */
    GPR32Opnd, FCCRegsOpnd, GPR32Opnd, GPR32Opnd, 
    /* PseudoSELECTFP_T_I64 */
    GPR64Opnd, FCCRegsOpnd, GPR64Opnd, GPR64Opnd, 
    /* PseudoSELECTFP_T_S */
    FGR32Opnd, FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* PseudoSELECT_D32 */
    AFGR64Opnd, GPR32Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* PseudoSELECT_D64 */
    FGR64Opnd, GPR32Opnd, FGR64Opnd, FGR64Opnd, 
    /* PseudoSELECT_I */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* PseudoSELECT_I64 */
    GPR64Opnd, GPR32Opnd, GPR64Opnd, GPR64Opnd, 
    /* PseudoSELECT_S */
    FGR32Opnd, GPR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* PseudoTRUNC_W_D */
    FGR32Opnd, FGR64Opnd, GPR32Opnd, 
    /* PseudoTRUNC_W_D32 */
    FGR32Opnd, AFGR64Opnd, GPR32Opnd, 
    /* PseudoTRUNC_W_S */
    FGR32Opnd, FGR32Opnd, GPR32Opnd, 
    /* PseudoUDIV */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* ROL */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ROLImm */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* ROR */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* RORImm */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* RetRA */
    /* RetRA16 */
    /* SDC1_M1 */
    AFGR64Opnd, -1, simm16, 
    /* SDIV_MM_Pseudo */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* SDMacro */
    GPR32Opnd, -1, simm16, 
    /* SDivIMacro */
    GPR32Opnd, GPR32Opnd, simm32, 
    /* SDivMacro */
    GPR32NonZeroOpnd, GPR32Opnd, GPR32Opnd, 
    /* SEQIMacro */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* SEQMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SGE */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SGEImm */
    GPR32Opnd, GPR32Opnd, simm32, 
    /* SGEImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SGEU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SGEUImm */
    GPR32Opnd, GPR32Opnd, uimm32_coerced, 
    /* SGEUImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SGTImm */
    GPR32Opnd, GPR32Opnd, simm32, 
    /* SGTImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SGTUImm */
    GPR32Opnd, GPR32Opnd, uimm32_coerced, 
    /* SGTUImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SLE */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLEImm */
    GPR32Opnd, GPR32Opnd, simm32, 
    /* SLEImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SLEU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLEUImm */
    GPR32Opnd, GPR32Opnd, uimm32_coerced, 
    /* SLEUImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SLTImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SLTUImm64 */
    GPR64Opnd, GPR64Opnd, imm64, 
    /* SNEIMacro */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* SNEMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SNZ_B_PSEUDO */
    GPR32, MSA128B, 
    /* SNZ_D_PSEUDO */
    GPR32, MSA128D, 
    /* SNZ_H_PSEUDO */
    GPR32, MSA128H, 
    /* SNZ_V_PSEUDO */
    GPR32, MSA128B, 
    /* SNZ_W_PSEUDO */
    GPR32, MSA128W, 
    /* SRemIMacro */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* SRemMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* STORE_ACC128 */
    ACC128, -1, simm16, 
    /* STORE_ACC64 */
    ACC64, -1, simm16, 
    /* STORE_ACC64DSP */
    ACC64DSPOpnd, -1, simm16, 
    /* STORE_CCOND_DSP */
    DSPCC, -1, simm16, 
    /* STR_D */
    MSA128DOpnd, -1, GPR32, 
    /* STR_W */
    MSA128WOpnd, -1, GPR32, 
    /* ST_F16 */
    MSA128F16, -1, simm10, 
    /* SWM_MM */
    reglist, -1, simm12, 
    /* SZ_B_PSEUDO */
    GPR32, MSA128B, 
    /* SZ_D_PSEUDO */
    GPR32, MSA128D, 
    /* SZ_H_PSEUDO */
    GPR32, MSA128H, 
    /* SZ_V_PSEUDO */
    GPR32, MSA128B, 
    /* SZ_W_PSEUDO */
    GPR32, MSA128W, 
    /* SaaAddr */
    GPR64Opnd, -1, simm16, 
    /* SaadAddr */
    GPR64Opnd, -1, simm16, 
    /* SelBeqZ */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelBneZ */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBteqZCmp */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBteqZCmpi */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBteqZSlt */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBteqZSlti */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBteqZSltiu */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBteqZSltu */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBtneZCmp */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBtneZCmpi */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBtneZSlt */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SelTBtneZSlti */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBtneZSltiu */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, simm16, 
    /* SelTBtneZSltu */
    CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SltCCRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SltiCCRxImmX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* SltiuCCRxImmX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* SltuCCRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SltuRxRyRz16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* TAILCALL */
    calltarget, 
    /* TAILCALL64R6REG */
    GPR64Opnd, 
    /* TAILCALLHB64R6REG */
    GPR64Opnd, 
    /* TAILCALLHBR6REG */
    GPR32Opnd, 
    /* TAILCALLR6REG */
    GPR32Opnd, 
    /* TAILCALLREG */
    GPR32Opnd, 
    /* TAILCALLREG64 */
    GPR64Opnd, 
    /* TAILCALLREGHB */
    GPR32Opnd, 
    /* TAILCALLREGHB64 */
    GPR64Opnd, 
    /* TAILCALLREG_MM */
    GPR32Opnd, 
    /* TAILCALLREG_MMR6 */
    GPR32Opnd, 
    /* TAILCALL_MM */
    calltarget, 
    /* TAILCALL_MMR6 */
    calltarget, 
    /* TRAP */
    /* TRAP_MM */
    /* UDIV_MM_Pseudo */
    ACC64, GPR32Opnd, GPR32Opnd, 
    /* UDivIMacro */
    GPR32Opnd, GPR32Opnd, simm32, 
    /* UDivMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* URemIMacro */
    GPR32Opnd, GPR32Opnd, simm32_relaxed, 
    /* URemMacro */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* Ulh */
    GPR32Opnd, -1, simm16, 
    /* Ulhu */
    GPR32Opnd, -1, simm16, 
    /* Ulw */
    GPR32Opnd, -1, simm16, 
    /* Ush */
    GPR32Opnd, -1, simm16, 
    /* Usw */
    GPR32Opnd, -1, simm16, 
    /* XOR_V_D_PSEUDO */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* XOR_V_H_PSEUDO */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* XOR_V_W_PSEUDO */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ABSQ_S_PH */
    DSPROpnd, DSPROpnd, 
    /* ABSQ_S_PH_MM */
    DSPROpnd, DSPROpnd, 
    /* ABSQ_S_QB */
    DSPROpnd, DSPROpnd, 
    /* ABSQ_S_QB_MMR2 */
    DSPROpnd, DSPROpnd, 
    /* ABSQ_S_W */
    GPR32Opnd, GPR32Opnd, 
    /* ABSQ_S_W_MM */
    GPR32Opnd, GPR32Opnd, 
    /* ADD */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDIUPC */
    GPR32Opnd, simm19_lsl2, 
    /* ADDIUPC_MM */
    GPRMM16Opnd, simm23_lsl2, 
    /* ADDIUPC_MMR6 */
    GPR32Opnd, simm19_lsl2, 
    /* ADDIUR1SP_MM */
    GPRMM16Opnd, uimm6_lsl2, 
    /* ADDIUR2_MM */
    GPRMM16Opnd, GPRMM16Opnd, simm3_lsa2, 
    /* ADDIUS5_MM */
    GPR32Opnd, GPR32Opnd, simm4, 
    /* ADDIUSP_MM */
    simm9_addiusp, 
    /* ADDIU_MMR6 */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* ADDQH_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQH_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQH_R_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQH_R_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQH_R_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDQH_R_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDQH_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDQH_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDQ_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQ_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQ_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQ_S_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDQ_S_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDQ_S_W_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDR_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* ADDSC */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDSC_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDS_A_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ADDS_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ADDS_A_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ADDS_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ADDS_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ADDS_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ADDS_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ADDS_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ADDS_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ADDS_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ADDS_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ADDS_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ADDU16_MM */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* ADDU16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* ADDUH_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDUH_QB_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDUH_R_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDUH_R_QB_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDU_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_QB_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_S_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_S_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDU_S_QB_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* ADDVI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* ADDVI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* ADDVI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* ADDVI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* ADDV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ADDV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ADDV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ADDV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ADDWC */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDWC_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADD_A_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ADD_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ADD_A_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ADD_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ADD_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADD_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDi */
    GPR32Opnd, GPR32Opnd, simm16_relaxed, 
    /* ADDi_MM */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* ADDiu */
    GPR32Opnd, GPR32Opnd, simm16_relaxed, 
    /* ADDiu_MM */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* ADDu */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ADDu_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ALIGN */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, uimm2, 
    /* ALIGN_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, uimm2, 
    /* ALUIPC */
    GPR32Opnd, simm16, 
    /* ALUIPC_MMR6 */
    GPR32Opnd, simm16, 
    /* AND */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* AND16_MM */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* AND16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* AND64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* ANDI16_MM */
    GPRMM16Opnd, GPRMM16Opnd, uimm4_andi, 
    /* ANDI16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, uimm4_andi, 
    /* ANDI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* ANDI_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* AND_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* AND_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* AND_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ANDi */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* ANDi64 */
    GPR64Opnd, GPR64Opnd, uimm16_64, 
    /* ANDi_MM */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* APPEND */
    GPR32Opnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* APPEND_MMR2 */
    GPR32Opnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* ASUB_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ASUB_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ASUB_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ASUB_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ASUB_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ASUB_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ASUB_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ASUB_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* AUI */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* AUIPC */
    GPR32Opnd, simm16, 
    /* AUIPC_MMR6 */
    GPR32Opnd, simm16, 
    /* AUI_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* AVER_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* AVER_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* AVER_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* AVER_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* AVER_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* AVER_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* AVER_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* AVER_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* AVE_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* AVE_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* AVE_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* AVE_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* AVE_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* AVE_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* AVE_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* AVE_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* AddiuRxImmX16 */
    CPU16Regs, simm16, 
    /* AddiuRxPcImmX16 */
    CPU16Regs, simm16, 
    /* AddiuRxRxImm16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* AddiuRxRxImmX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* AddiuRxRyOffMemX16 */
    CPU16Regs, CPU16RegsPlusSP, simm16, 
    /* AddiuSpImm16 */
    simm16, 
    /* AddiuSpImmX16 */
    simm16, 
    /* AdduRxRyRz16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* AndRxRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* B16_MM */
    brtarget10_mm, 
    /* BADDu */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* BAL */
    brtarget, 
    /* BALC */
    brtarget26, 
    /* BALC_MMR6 */
    brtarget26_mm, 
    /* BALIGN */
    GPR32Opnd, GPR32Opnd, uimm2, GPR32Opnd, 
    /* BALIGN_MMR2 */
    GPR32Opnd, GPR32Opnd, uimm2, GPR32Opnd, 
    /* BBIT0 */
    GPR64Opnd, uimm5_64_report_uimm6, brtarget, 
    /* BBIT032 */
    GPR64Opnd, uimm5_64, brtarget, 
    /* BBIT1 */
    GPR64Opnd, uimm5_64_report_uimm6, brtarget, 
    /* BBIT132 */
    GPR64Opnd, uimm5_64, brtarget, 
    /* BC */
    brtarget26, 
    /* BC16_MMR6 */
    brtarget10_mm, 
    /* BC1EQZ */
    FGR64Opnd, brtarget, 
    /* BC1EQZC_MMR6 */
    FGR64Opnd, brtarget_mm, 
    /* BC1F */
    FCCRegsOpnd, brtarget, 
    /* BC1FL */
    FCCRegsOpnd, brtarget, 
    /* BC1F_MM */
    FCCRegsOpnd, brtarget_mm, 
    /* BC1NEZ */
    FGR64Opnd, brtarget, 
    /* BC1NEZC_MMR6 */
    FGR64Opnd, brtarget_mm, 
    /* BC1T */
    FCCRegsOpnd, brtarget, 
    /* BC1TL */
    FCCRegsOpnd, brtarget, 
    /* BC1T_MM */
    FCCRegsOpnd, brtarget_mm, 
    /* BC2EQZ */
    COP2Opnd, brtarget, 
    /* BC2EQZC_MMR6 */
    COP2Opnd, brtarget_mm, 
    /* BC2NEZ */
    COP2Opnd, brtarget, 
    /* BC2NEZC_MMR6 */
    COP2Opnd, brtarget_mm, 
    /* BCLRI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* BCLRI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* BCLRI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* BCLRI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* BCLR_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BCLR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BCLR_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BCLR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BC_MMR6 */
    brtarget26_mm, 
    /* BEQ */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BEQ64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BEQC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BEQC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BEQC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BEQL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BEQZ16_MM */
    GPRMM16Opnd, brtarget7_mm, 
    /* BEQZALC */
    GPR32Opnd, brtarget, 
    /* BEQZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BEQZC */
    GPR32Opnd, brtarget21, 
    /* BEQZC16_MMR6 */
    GPRMM16Opnd, brtarget7_mm, 
    /* BEQZC64 */
    GPR64Opnd, brtarget21, 
    /* BEQZC_MM */
    GPR32Opnd, brtarget_mm, 
    /* BEQZC_MMR6 */
    GPR32Opnd, brtarget21_mm, 
    /* BEQ_MM */
    GPR32Opnd, GPR32Opnd, brtarget_mm, 
    /* BGEC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGEC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BGEC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BGEUC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BGEUC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BGEUC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BGEZ */
    GPR32Opnd, brtarget, 
    /* BGEZ64 */
    GPR64Opnd, brtarget, 
    /* BGEZAL */
    GPR32Opnd, brtarget, 
    /* BGEZALC */
    GPR32Opnd, brtarget, 
    /* BGEZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BGEZALL */
    GPR32Opnd, brtarget, 
    /* BGEZALS_MM */
    GPR32Opnd, brtarget_mm, 
    /* BGEZAL_MM */
    GPR32Opnd, brtarget_mm, 
    /* BGEZC */
    GPR32Opnd, brtarget, 
    /* BGEZC64 */
    GPR64Opnd, brtarget, 
    /* BGEZC_MMR6 */
    GPR32Opnd, brtarget_lsl2_mm, 
    /* BGEZL */
    GPR32Opnd, brtarget, 
    /* BGEZ_MM */
    GPR32Opnd, brtarget_mm, 
    /* BGTZ */
    GPR32Opnd, brtarget, 
    /* BGTZ64 */
    GPR64Opnd, brtarget, 
    /* BGTZALC */
    GPR32Opnd, brtarget, 
    /* BGTZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BGTZC */
    GPR32Opnd, brtarget, 
    /* BGTZC64 */
    GPR64Opnd, brtarget, 
    /* BGTZC_MMR6 */
    GPR32Opnd, brtarget_lsl2_mm, 
    /* BGTZL */
    GPR32Opnd, brtarget, 
    /* BGTZ_MM */
    GPR32Opnd, brtarget_mm, 
    /* BINSLI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* BINSLI_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* BINSLI_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* BINSLI_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* BINSL_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BINSL_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BINSL_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BINSL_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BINSRI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* BINSRI_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* BINSRI_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* BINSRI_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* BINSR_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BINSR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BINSR_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BINSR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BITREV */
    GPR32Opnd, GPR32Opnd, 
    /* BITREV_MM */
    GPR32Opnd, GPR32Opnd, 
    /* BITSWAP */
    GPR32Opnd, GPR32Opnd, 
    /* BITSWAP_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* BLEZ */
    GPR32Opnd, brtarget, 
    /* BLEZ64 */
    GPR64Opnd, brtarget, 
    /* BLEZALC */
    GPR32Opnd, brtarget, 
    /* BLEZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BLEZC */
    GPR32Opnd, brtarget, 
    /* BLEZC64 */
    GPR64Opnd, brtarget, 
    /* BLEZC_MMR6 */
    GPR32Opnd, brtarget_lsl2_mm, 
    /* BLEZL */
    GPR32Opnd, brtarget, 
    /* BLEZ_MM */
    GPR32Opnd, brtarget_mm, 
    /* BLTC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BLTC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BLTUC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BLTUC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BLTUC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BLTZ */
    GPR32Opnd, brtarget, 
    /* BLTZ64 */
    GPR64Opnd, brtarget, 
    /* BLTZAL */
    GPR32Opnd, brtarget, 
    /* BLTZALC */
    GPR32Opnd, brtarget, 
    /* BLTZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BLTZALL */
    GPR32Opnd, brtarget, 
    /* BLTZALS_MM */
    GPR32Opnd, brtarget_mm, 
    /* BLTZAL_MM */
    GPR32Opnd, brtarget_mm, 
    /* BLTZC */
    GPR32Opnd, brtarget, 
    /* BLTZC64 */
    GPR64Opnd, brtarget, 
    /* BLTZC_MMR6 */
    GPR32Opnd, brtarget_lsl2_mm, 
    /* BLTZL */
    GPR32Opnd, brtarget, 
    /* BLTZ_MM */
    GPR32Opnd, brtarget_mm, 
    /* BMNZI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* BMNZ_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BMZI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* BMZ_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BNE */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BNE64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BNEC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BNEC64 */
    GPR64Opnd, GPR64Opnd, brtarget, 
    /* BNEC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtarget_lsl2_mm, 
    /* BNEGI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* BNEGI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* BNEGI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* BNEGI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* BNEG_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BNEG_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BNEG_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BNEG_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BNEL */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BNEZ16_MM */
    GPRMM16Opnd, brtarget7_mm, 
    /* BNEZALC */
    GPR32Opnd, brtarget, 
    /* BNEZALC_MMR6 */
    GPR32Opnd, brtarget_mm, 
    /* BNEZC */
    GPR32Opnd, brtarget21, 
    /* BNEZC16_MMR6 */
    GPRMM16Opnd, brtarget7_mm, 
    /* BNEZC64 */
    GPR64Opnd, brtarget21, 
    /* BNEZC_MM */
    GPR32Opnd, brtarget_mm, 
    /* BNEZC_MMR6 */
    GPR32Opnd, brtarget21_mm, 
    /* BNE_MM */
    GPR32Opnd, GPR32Opnd, brtarget_mm, 
    /* BNVC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BNVC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtargetr6, 
    /* BNZ_B */
    MSA128BOpnd, brtarget, 
    /* BNZ_D */
    MSA128DOpnd, brtarget, 
    /* BNZ_H */
    MSA128HOpnd, brtarget, 
    /* BNZ_V */
    MSA128BOpnd, brtarget, 
    /* BNZ_W */
    MSA128WOpnd, brtarget, 
    /* BOVC */
    GPR32Opnd, GPR32Opnd, brtarget, 
    /* BOVC_MMR6 */
    GPR32Opnd, GPR32Opnd, brtargetr6, 
    /* BPOSGE32 */
    brtarget, 
    /* BPOSGE32C_MMR3 */
    brtarget1SImm16, 
    /* BPOSGE32_MM */
    brtarget_mm, 
    /* BREAK */
    uimm10, uimm10, 
    /* BREAK16_MM */
    uimm4, 
    /* BREAK16_MMR6 */
    uimm4, 
    /* BREAK_MM */
    uimm10, uimm10, 
    /* BREAK_MMR6 */
    uimm10, uimm10, 
    /* BSELI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* BSEL_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BSETI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* BSETI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* BSETI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* BSETI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* BSET_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* BSET_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* BSET_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* BSET_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* BZ_B */
    MSA128BOpnd, brtarget, 
    /* BZ_D */
    MSA128DOpnd, brtarget, 
    /* BZ_H */
    MSA128HOpnd, brtarget, 
    /* BZ_V */
    MSA128BOpnd, brtarget, 
    /* BZ_W */
    MSA128WOpnd, brtarget, 
    /* BeqzRxImm16 */
    CPU16Regs, brtarget, 
    /* BeqzRxImmX16 */
    CPU16Regs, brtarget, 
    /* Bimm16 */
    brtarget, 
    /* BimmX16 */
    brtarget, 
    /* BnezRxImm16 */
    CPU16Regs, brtarget, 
    /* BnezRxImmX16 */
    CPU16Regs, brtarget, 
    /* Break16 */
    /* Bteqz16 */
    simm16, 
    /* BteqzX16 */
    simm16, 
    /* Btnez16 */
    simm16, 
    /* BtnezX16 */
    simm16, 
    /* CACHE */
    -1, simm16, uimm5, 
    /* CACHEE */
    -1, simm9, uimm5, 
    /* CACHEE_MM */
    -1, simm9, uimm5, 
    /* CACHE_MM */
    -1, simm12, uimm5, 
    /* CACHE_MMR6 */
    -1, simm12, uimm5, 
    /* CACHE_R6 */
    -1, simm9, uimm5, 
    /* CEIL_L_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* CEIL_L_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* CEIL_L_S */
    FGR64Opnd, FGR32Opnd, 
    /* CEIL_L_S_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* CEIL_W_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* CEIL_W_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* CEIL_W_D_MMR6 */
    FGR32Opnd, AFGR64Opnd, 
    /* CEIL_W_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* CEIL_W_S */
    FGR32Opnd, FGR32Opnd, 
    /* CEIL_W_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* CEIL_W_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* CEQI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_simm5, 
    /* CEQI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_simm5, 
    /* CEQI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_simm5, 
    /* CEQI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_simm5, 
    /* CEQ_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* CEQ_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* CEQ_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* CEQ_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* CFC1 */
    GPR32Opnd, CCROpnd, 
    /* CFC1_MM */
    GPR32Opnd, CCROpnd, 
    /* CFC2_MM */
    GPR32Opnd, COP2Opnd, 
    /* CFCMSA */
    GPR32Opnd, MSA128CROpnd, 
    /* CINS */
    GPR64Opnd, GPR64Opnd, uimm5, uimm5, 
    /* CINS32 */
    GPR64Opnd, GPR64Opnd, uimm5, uimm5, 
    /* CINS64_32 */
    GPR64Opnd, GPR32Opnd, uimm5, uimm5, 
    /* CINS_i32 */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5, 
    /* CLASS_D */
    FGR64Opnd, FGR64Opnd, 
    /* CLASS_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* CLASS_S */
    FGR32Opnd, FGR32Opnd, 
    /* CLASS_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* CLEI_S_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_simm5, 
    /* CLEI_S_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_simm5, 
    /* CLEI_S_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_simm5, 
    /* CLEI_S_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_simm5, 
    /* CLEI_U_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* CLEI_U_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* CLEI_U_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* CLEI_U_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* CLE_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* CLE_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* CLE_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* CLE_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* CLE_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* CLE_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* CLE_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* CLE_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* CLO */
    GPR32Opnd, GPR32Opnd, 
    /* CLO_MM */
    GPR32Opnd, GPR32Opnd, 
    /* CLO_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* CLO_R6 */
    GPR32Opnd, GPR32Opnd, 
    /* CLTI_S_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_simm5, 
    /* CLTI_S_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_simm5, 
    /* CLTI_S_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_simm5, 
    /* CLTI_S_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_simm5, 
    /* CLTI_U_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* CLTI_U_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* CLTI_U_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* CLTI_U_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* CLT_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* CLT_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* CLT_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* CLT_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* CLT_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* CLT_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* CLT_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* CLT_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* CLZ */
    GPR32Opnd, GPR32Opnd, 
    /* CLZ_MM */
    GPR32Opnd, GPR32Opnd, 
    /* CLZ_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* CLZ_R6 */
    GPR32Opnd, GPR32Opnd, 
    /* CMPGDU_EQ_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGDU_EQ_QB_MMR2 */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGDU_LE_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGDU_LE_QB_MMR2 */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGDU_LT_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGDU_LT_QB_MMR2 */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_EQ_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_EQ_QB_MM */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_LE_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_LE_QB_MM */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_LT_QB */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPGU_LT_QB_MM */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* CMPU_EQ_QB */
    DSPROpnd, DSPROpnd, 
    /* CMPU_EQ_QB_MM */
    DSPROpnd, DSPROpnd, 
    /* CMPU_LE_QB */
    DSPROpnd, DSPROpnd, 
    /* CMPU_LE_QB_MM */
    DSPROpnd, DSPROpnd, 
    /* CMPU_LT_QB */
    DSPROpnd, DSPROpnd, 
    /* CMPU_LT_QB_MM */
    DSPROpnd, DSPROpnd, 
    /* CMP_AF_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_AF_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_EQ_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_EQ_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_EQ_PH */
    DSPROpnd, DSPROpnd, 
    /* CMP_EQ_PH_MM */
    DSPROpnd, DSPROpnd, 
    /* CMP_EQ_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_EQ_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_F_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_F_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_LE_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_LE_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_LE_PH */
    DSPROpnd, DSPROpnd, 
    /* CMP_LE_PH_MM */
    DSPROpnd, DSPROpnd, 
    /* CMP_LE_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_LE_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_LT_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_LT_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_LT_PH */
    DSPROpnd, DSPROpnd, 
    /* CMP_LT_PH_MM */
    DSPROpnd, DSPROpnd, 
    /* CMP_LT_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_LT_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SAF_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SAF_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SAF_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SAF_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SEQ_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SEQ_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SEQ_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SEQ_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SLE_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SLE_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SLE_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SLE_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SLT_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SLT_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SLT_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SLT_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SUEQ_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SUEQ_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SUEQ_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SUEQ_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SULE_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SULE_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SULE_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SULE_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SULT_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SULT_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SULT_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SULT_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SUN_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SUN_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_SUN_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_SUN_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_UEQ_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_UEQ_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_UEQ_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_UEQ_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_ULE_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_ULE_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_ULE_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_ULE_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_ULT_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_ULT_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_ULT_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_ULT_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_UN_D */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_UN_D_MMR6 */
    FGRCCOpnd, FGR64Opnd, FGR64Opnd, 
    /* CMP_UN_S */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* CMP_UN_S_MMR6 */
    FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* COPY_S_B */
    GPR32Opnd, MSA128BOpnd, uimm4_ptr, 
    /* COPY_S_D */
    GPR64Opnd, MSA128DOpnd, uimm1_ptr, 
    /* COPY_S_H */
    GPR32Opnd, MSA128HOpnd, uimm3_ptr, 
    /* COPY_S_W */
    GPR32Opnd, MSA128WOpnd, uimm2_ptr, 
    /* COPY_U_B */
    GPR32Opnd, MSA128BOpnd, uimm4_ptr, 
    /* COPY_U_H */
    GPR32Opnd, MSA128HOpnd, uimm3_ptr, 
    /* COPY_U_W */
    GPR32Opnd, MSA128WOpnd, uimm2_ptr, 
    /* CRC32B */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32CB */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32CD */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32CH */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32CW */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32D */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32H */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CRC32W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* CTC1 */
    CCROpnd, GPR32Opnd, 
    /* CTC1_MM */
    CCROpnd, GPR32Opnd, 
    /* CTC2_MM */
    COP2Opnd, GPR32Opnd, 
    /* CTCMSA */
    MSA128CROpnd, GPR32Opnd, 
    /* CVT_D32_S */
    AFGR64Opnd, FGR32Opnd, 
    /* CVT_D32_S_MM */
    AFGR64Opnd, FGR32Opnd, 
    /* CVT_D32_W */
    AFGR64Opnd, FGR32Opnd, 
    /* CVT_D32_W_MM */
    AFGR64Opnd, FGR32Opnd, 
    /* CVT_D64_L */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_D64_S */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_D64_S_MM */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_D64_W */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_D64_W_MM */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_D_L_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_L_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_L_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_L_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_L_S */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_L_S_MM */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_L_S_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_PS_PW64 */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_PS_S64 */
    FGR64Opnd, FGR32Opnd, FGR32Opnd, 
    /* CVT_PW_PS64 */
    FGR64Opnd, FGR64Opnd, 
    /* CVT_S_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* CVT_S_D32_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* CVT_S_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_S_D64_MM */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_S_L */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_S_L_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* CVT_S_PL64 */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_S_PU64 */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_S_W */
    FGR32Opnd, FGR32Opnd, 
    /* CVT_S_W_MM */
    FGR32Opnd, FGR32Opnd, 
    /* CVT_S_W_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* CVT_W_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* CVT_W_D32_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* CVT_W_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_W_D64_MM */
    FGR32Opnd, FGR64Opnd, 
    /* CVT_W_S */
    FGR32Opnd, FGR32Opnd, 
    /* CVT_W_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* CVT_W_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* C_EQ_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_EQ_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_EQ_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_EQ_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_EQ_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_EQ_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_F_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_F_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_F_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_F_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_F_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_F_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_LE_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_LE_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_LE_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_LE_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_LE_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_LE_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_LT_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_LT_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_LT_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_LT_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_LT_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_LT_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGE_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGE_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGE_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGE_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGE_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGE_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGLE_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGLE_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGLE_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGLE_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGLE_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGLE_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGL_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGL_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGL_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGL_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGL_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGL_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGT_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGT_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_NGT_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGT_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_NGT_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_NGT_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_OLE_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_OLE_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_OLE_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_OLE_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_OLE_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_OLE_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_OLT_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_OLT_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_OLT_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_OLT_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_OLT_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_OLT_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_SEQ_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_SEQ_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_SEQ_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_SEQ_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_SEQ_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_SEQ_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_SF_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_SF_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_SF_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_SF_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_SF_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_SF_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_UEQ_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_UEQ_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_UEQ_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_UEQ_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_UEQ_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_UEQ_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_ULE_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_ULE_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_ULE_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_ULE_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_ULE_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_ULE_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_ULT_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_ULT_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_ULT_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_ULT_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_ULT_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_ULT_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_UN_D32 */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_UN_D32_MM */
    FCCRegsOpnd, AFGR64Opnd, AFGR64Opnd, 
    /* C_UN_D64 */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_UN_D64_MM */
    FCCRegsOpnd, FGR64Opnd, FGR64Opnd, 
    /* C_UN_S */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* C_UN_S_MM */
    FCCRegsOpnd, FGR32Opnd, FGR32Opnd, 
    /* CmpRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* CmpiRxImm16 */
    CPU16Regs, simm16, 
    /* CmpiRxImmX16 */
    CPU16Regs, simm16, 
    /* DADD */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DADDi */
    GPR64Opnd, GPR64Opnd, simm16_64, 
    /* DADDiu */
    GPR64Opnd, GPR64Opnd, simm16_64, 
    /* DADDu */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DAHI */
    GPR64Opnd, GPR64Opnd, uimm16_altrelaxed, 
    /* DALIGN */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, uimm3, 
    /* DATI */
    GPR64Opnd, GPR64Opnd, uimm16_altrelaxed, 
    /* DAUI */
    GPR64Opnd, GPR64Opnd, uimm16, 
    /* DBITSWAP */
    GPR64Opnd, GPR64Opnd, 
    /* DCLO */
    GPR64Opnd, GPR64Opnd, 
    /* DCLO_R6 */
    GPR64Opnd, GPR64Opnd, 
    /* DCLZ */
    GPR64Opnd, GPR64Opnd, 
    /* DCLZ_R6 */
    GPR64Opnd, GPR64Opnd, 
    /* DDIV */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DDIVU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DERET */
    /* DERET_MM */
    /* DERET_MMR6 */
    /* DEXT */
    GPR64Opnd, GPR64Opnd, uimm5_report_uimm6, uimm5_plus1_report_uimm6, 
    /* DEXT64_32 */
    GPR64Opnd, GPR32Opnd, uimm5_report_uimm6, uimm5_plus1, 
    /* DEXTM */
    GPR64Opnd, GPR64Opnd, uimm5, uimm5_plus33, 
    /* DEXTU */
    GPR64Opnd, GPR64Opnd, uimm5_plus32, uimm5_plus1, 
    /* DI */
    GPR32Opnd, 
    /* DINS */
    GPR64Opnd, GPR64Opnd, uimm6, uimm5_inssize_plus1, GPR64Opnd, 
    /* DINSM */
    GPR64Opnd, GPR64Opnd, uimm5, uimm_range_2_64, GPR64Opnd, 
    /* DINSU */
    GPR64Opnd, GPR64Opnd, uimm5_plus32, uimm5_inssize_plus1, GPR64Opnd, 
    /* DIV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DIVU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DIVU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DIV_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* DIV_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DIV_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* DIV_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DIV_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DIV_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DIV_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* DIV_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DIV_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DI_MM */
    GPR32Opnd, 
    /* DI_MMR6 */
    GPR32Opnd, 
    /* DLSA */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, uimm2_plus1, 
    /* DLSA_R6 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, uimm2_plus1, 
    /* DMFC0 */
    GPR64Opnd, COP0Opnd, uimm3, 
    /* DMFC1 */
    GPR64Opnd, FGR64Opnd, 
    /* DMFC2 */
    GPR64Opnd, COP2Opnd, uimm3, 
    /* DMFC2_OCTEON */
    GPR64Opnd, uimm16, 
    /* DMFGC0 */
    GPR64Opnd, COP0Opnd, uimm3, 
    /* DMOD */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMODU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMT */
    GPR32Opnd, 
    /* DMTC0 */
    COP0Opnd, GPR64Opnd, uimm3, 
    /* DMTC1 */
    FGR64Opnd, GPR64Opnd, 
    /* DMTC2 */
    COP2Opnd, GPR64Opnd, uimm3, 
    /* DMTC2_OCTEON */
    GPR64Opnd, uimm16, 
    /* DMTGC0 */
    COP0Opnd, GPR64Opnd, uimm3, 
    /* DMUH */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMUHU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMUL */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMULT */
    GPR64Opnd, GPR64Opnd, 
    /* DMULTu */
    GPR64Opnd, GPR64Opnd, 
    /* DMULU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DMUL_R6 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DOTP_S_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DOTP_S_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DOTP_S_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DOTP_U_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DOTP_U_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DOTP_U_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DPADD_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DPADD_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DPADD_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DPADD_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DPADD_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DPADD_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DPAQX_SA_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQX_SA_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQX_S_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQX_S_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQ_SA_L_W */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQ_SA_L_W_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQ_S_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAQ_S_W_PH_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAU_H_QBL */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAU_H_QBL_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAU_H_QBR */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAU_H_QBR_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAX_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPAX_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPA_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPA_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPOP */
    GPR64Opnd, GPR64Opnd, 
    /* DPSQX_SA_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQX_SA_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQX_S_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQX_S_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQ_SA_L_W */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQ_SA_L_W_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQ_S_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSQ_S_W_PH_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSUB_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DPSUB_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DPSUB_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DPSUB_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* DPSUB_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* DPSUB_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* DPSU_H_QBL */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSU_H_QBL_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSU_H_QBR */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSU_H_QBR_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSX_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPSX_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPS_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DPS_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* DROTR */
    GPR64Opnd, GPR64Opnd, uimm6, 
    /* DROTR32 */
    GPR64Opnd, GPR64Opnd, uimm5, 
    /* DROTRV */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, 
    /* DSBH */
    GPR64Opnd, GPR64Opnd, 
    /* DSDIV */
    GPR64Opnd, GPR64Opnd, 
    /* DSHD */
    GPR64Opnd, GPR64Opnd, 
    /* DSLL */
    GPR64Opnd, GPR64Opnd, uimm6, 
    /* DSLL32 */
    GPR64Opnd, GPR64Opnd, uimm5, 
    /* DSLL64_32 */
    GPR64, GPR32, 
    /* DSLLV */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, 
    /* DSRA */
    GPR64Opnd, GPR64Opnd, uimm6, 
    /* DSRA32 */
    GPR64Opnd, GPR64Opnd, uimm5, 
    /* DSRAV */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, 
    /* DSRL */
    GPR64Opnd, GPR64Opnd, uimm6, 
    /* DSRL32 */
    GPR64Opnd, GPR64Opnd, uimm5, 
    /* DSRLV */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, 
    /* DSUB */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DSUBu */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* DUDIV */
    GPR64Opnd, GPR64Opnd, 
    /* DVP */
    GPR32Opnd, 
    /* DVPE */
    GPR32Opnd, 
    /* DVP_MMR6 */
    GPR32Opnd, 
    /* DivRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* DivuRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* EHB */
    /* EHB_MM */
    /* EHB_MMR6 */
    /* EI */
    GPR32Opnd, 
    /* EI_MM */
    GPR32Opnd, 
    /* EI_MMR6 */
    GPR32Opnd, 
    /* EMT */
    GPR32Opnd, 
    /* ERET */
    /* ERETNC */
    /* ERETNC_MMR6 */
    /* ERET_MM */
    /* ERET_MMR6 */
    /* EVP */
    GPR32Opnd, 
    /* EVPE */
    GPR32Opnd, 
    /* EVP_MMR6 */
    GPR32Opnd, 
    /* EXT */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_plus1, 
    /* EXTP */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTPDP */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTPDPV */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTPDPV_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTPDP_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTPV */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTPV_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTP_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTRV_RS_W */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_RS_W_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_R_W */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_R_W_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_S_H */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_S_H_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_W */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTRV_W_MM */
    GPR32Opnd, ACC64DSPOpnd, GPR32Opnd, 
    /* EXTR_RS_W */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_RS_W_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_R_W */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_R_W_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_S_H */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_S_H_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_W */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTR_W_MM */
    GPR32Opnd, ACC64DSPOpnd, uimm5, 
    /* EXTS */
    GPR64Opnd, GPR64Opnd, uimm5, uimm5, 
    /* EXTS32 */
    GPR64Opnd, GPR64Opnd, uimm5, uimm5, 
    /* EXT_MM */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_plus1, 
    /* EXT_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_plus1, 
    /* FABS_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* FABS_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* FABS_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* FABS_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* FABS_S */
    FGR32Opnd, FGR32Opnd, 
    /* FABS_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* FADD_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FADD_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FADD_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FADD_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FADD_D64_MM */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FADD_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FADD_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FADD_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FADD_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FADD_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCAF_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCAF_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCEQ_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCEQ_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCLASS_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FCLASS_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FCLE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCLE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCLT_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCLT_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCMP_D32 */
    AFGR64, AFGR64, condcode, 
    /* FCMP_D32_MM */
    AFGR64, AFGR64, condcode, 
    /* FCMP_D64 */
    FGR64, FGR64, condcode, 
    /* FCMP_S32 */
    FGR32, FGR32, condcode, 
    /* FCMP_S32_MM */
    FGR32, FGR32, condcode, 
    /* FCNE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCNE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCOR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCOR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCUEQ_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCUEQ_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCULE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCULE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCULT_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCULT_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCUNE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCUNE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FCUN_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FCUN_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FDIV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FDIV_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FDIV_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FDIV_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FDIV_D64_MM */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FDIV_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FDIV_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FDIV_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FDIV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FEXDO_H */
    MSA128HOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FEXDO_W */
    MSA128WOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FEXP2_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FEXP2_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FEXUPL_D */
    MSA128DOpnd, MSA128WOpnd, 
    /* FEXUPL_W */
    MSA128WOpnd, MSA128HOpnd, 
    /* FEXUPR_D */
    MSA128DOpnd, MSA128WOpnd, 
    /* FEXUPR_W */
    MSA128WOpnd, MSA128HOpnd, 
    /* FFINT_S_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FFINT_S_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FFINT_U_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FFINT_U_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FFQL_D */
    MSA128DOpnd, MSA128WOpnd, 
    /* FFQL_W */
    MSA128WOpnd, MSA128HOpnd, 
    /* FFQR_D */
    MSA128DOpnd, MSA128WOpnd, 
    /* FFQR_W */
    MSA128WOpnd, MSA128HOpnd, 
    /* FILL_B */
    MSA128BOpnd, GPR32Opnd, 
    /* FILL_D */
    MSA128DOpnd, GPR64Opnd, 
    /* FILL_H */
    MSA128HOpnd, GPR32Opnd, 
    /* FILL_W */
    MSA128WOpnd, GPR32Opnd, 
    /* FLOG2_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FLOG2_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FLOOR_L_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* FLOOR_L_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* FLOOR_L_S */
    FGR64Opnd, FGR32Opnd, 
    /* FLOOR_L_S_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* FLOOR_W_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* FLOOR_W_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* FLOOR_W_D_MMR6 */
    FGR32Opnd, AFGR64Opnd, 
    /* FLOOR_W_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* FLOOR_W_S */
    FGR32Opnd, FGR32Opnd, 
    /* FLOOR_W_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* FLOOR_W_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* FMADD_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMADD_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMAX_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMAX_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMAX_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMAX_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMIN_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMIN_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMIN_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMIN_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMOV_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* FMOV_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* FMOV_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* FMOV_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* FMOV_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* FMOV_S */
    FGR32Opnd, FGR32Opnd, 
    /* FMOV_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* FMOV_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* FMSUB_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMSUB_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FMUL_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FMUL_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FMUL_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FMUL_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FMUL_D64_MM */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FMUL_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FMUL_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FMUL_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FMUL_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FMUL_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FNEG_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* FNEG_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* FNEG_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* FNEG_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* FNEG_S */
    FGR32Opnd, FGR32Opnd, 
    /* FNEG_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* FNEG_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* FORK */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* FRCP_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FRCP_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FRINT_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FRINT_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FRSQRT_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FRSQRT_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FSAF_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSAF_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSEQ_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSEQ_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSLE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSLE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSLT_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSLT_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSNE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSNE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSOR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSOR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSQRT_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FSQRT_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* FSQRT_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* FSQRT_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* FSQRT_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* FSQRT_S */
    FGR32Opnd, FGR32Opnd, 
    /* FSQRT_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* FSQRT_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FSUB_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSUB_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FSUB_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* FSUB_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FSUB_D64_MM */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FSUB_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* FSUB_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FSUB_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FSUB_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* FSUB_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSUEQ_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSUEQ_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSULE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSULE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSULT_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSULT_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSUNE_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSUNE_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FSUN_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FSUN_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FTINT_S_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FTINT_S_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FTINT_U_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FTINT_U_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FTQ_H */
    MSA128HOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* FTQ_W */
    MSA128WOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* FTRUNC_S_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FTRUNC_S_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* FTRUNC_U_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* FTRUNC_U_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* GINVI */
    GPR32Opnd, 
    /* GINVI_MMR6 */
    GPR32Opnd, 
    /* GINVT */
    GPR32Opnd, uimm2, 
    /* GINVT_MMR6 */
    GPR32Opnd, uimm2, 
    /* HADD_S_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* HADD_S_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* HADD_S_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* HADD_U_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* HADD_U_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* HADD_U_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* HSUB_S_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* HSUB_S_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* HSUB_S_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* HSUB_U_D */
    MSA128DOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* HSUB_U_H */
    MSA128HOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* HSUB_U_W */
    MSA128WOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* HYPCALL */
    uimm10, 
    /* HYPCALL_MM */
    uimm10, 
    /* ILVEV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ILVEV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ILVEV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ILVEV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ILVL_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ILVL_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ILVL_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ILVL_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ILVOD_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ILVOD_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ILVOD_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ILVOD_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* ILVR_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ILVR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* ILVR_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* ILVR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* INS */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_inssize_plus1, GPR32Opnd, 
    /* INSERT_B */
    MSA128BOpnd, MSA128BOpnd, GPR32Opnd, uimm4, 
    /* INSERT_D */
    MSA128DOpnd, MSA128DOpnd, GPR64Opnd, uimm1, 
    /* INSERT_H */
    MSA128HOpnd, MSA128HOpnd, GPR32Opnd, uimm3, 
    /* INSERT_W */
    MSA128WOpnd, MSA128WOpnd, GPR32Opnd, uimm2, 
    /* INSV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* INSVE_B */
    MSA128BOpnd, MSA128BOpnd, uimm4, MSA128BOpnd, uimmz, 
    /* INSVE_D */
    MSA128DOpnd, MSA128DOpnd, uimm1, MSA128DOpnd, uimmz, 
    /* INSVE_H */
    MSA128HOpnd, MSA128HOpnd, uimm3, MSA128HOpnd, uimmz, 
    /* INSVE_W */
    MSA128WOpnd, MSA128WOpnd, uimm2, MSA128WOpnd, uimmz, 
    /* INSV_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* INS_MM */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_inssize_plus1, GPR32Opnd, 
    /* INS_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm5, uimm5_inssize_plus1, GPR32Opnd, 
    /* J */
    jmptarget, 
    /* JAL */
    calltarget, 
    /* JALR */
    GPR32Opnd, GPR32Opnd, 
    /* JALR16_MM */
    GPR32Opnd, 
    /* JALR64 */
    GPR64Opnd, GPR64Opnd, 
    /* JALRC16_MMR6 */
    GPR32Opnd, 
    /* JALRC_HB_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* JALRC_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* JALRS16_MM */
    GPR32Opnd, 
    /* JALRS_MM */
    GPR32Opnd, GPR32Opnd, 
    /* JALR_HB */
    GPR32Opnd, GPR32Opnd, 
    /* JALR_HB64 */
    GPR64Opnd, GPR64Opnd, 
    /* JALR_MM */
    GPR32Opnd, GPR32Opnd, 
    /* JALS_MM */
    calltarget_mm, 
    /* JALX */
    calltarget, 
    /* JALX_MM */
    calltarget, 
    /* JAL_MM */
    calltarget_mm, 
    /* JIALC */
    GPR32Opnd, calloffset16, 
    /* JIALC64 */
    GPR64Opnd, calloffset16, 
    /* JIALC_MMR6 */
    GPR32Opnd, calloffset16, 
    /* JIC */
    GPR32Opnd, jmpoffset16, 
    /* JIC64 */
    GPR64Opnd, jmpoffset16, 
    /* JIC_MMR6 */
    GPR32Opnd, jmpoffset16, 
    /* JR */
    GPR32Opnd, 
    /* JR16_MM */
    GPR32Opnd, 
    /* JR64 */
    GPR64Opnd, 
    /* JRADDIUSP */
    uimm5_lsl2, 
    /* JRC16_MM */
    GPR32Opnd, 
    /* JRC16_MMR6 */
    GPR32Opnd, 
    /* JRCADDIUSP_MMR6 */
    uimm5_lsl2, 
    /* JR_HB */
    GPR32Opnd, 
    /* JR_HB64 */
    GPR64Opnd, 
    /* JR_HB64_R6 */
    GPR64Opnd, 
    /* JR_HB_R6 */
    GPR32Opnd, 
    /* JR_MM */
    GPR32Opnd, 
    /* J_MM */
    jmptarget_mm, 
    /* Jal16 */
    uimm26, 
    /* JalB16 */
    uimm26, 
    /* JrRa16 */
    /* JrcRa16 */
    /* JrcRx16 */
    CPU16Regs, 
    /* JumpLinkReg16 */
    CPU16Regs, 
    /* LB */
    GPR32Opnd, -1, simm16, 
    /* LB64 */
    GPR64Opnd, -1, simm16, 
    /* LBE */
    GPR32Opnd, -1, simm9, 
    /* LBE_MM */
    GPR32Opnd, -1, simm16, 
    /* LBU16_MM */
    GPRMM16Opnd, -1, simm4, 
    /* LBUX */
    GPR32Opnd, -1, -1, 
    /* LBUX_MM */
    GPR32Opnd, -1, -1, 
    /* LBU_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* LB_MM */
    GPR32Opnd, -1, simm16, 
    /* LB_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* LBu */
    GPR32Opnd, -1, simm16, 
    /* LBu64 */
    GPR64Opnd, -1, simm16, 
    /* LBuE */
    GPR32Opnd, -1, simm9, 
    /* LBuE_MM */
    GPR32Opnd, -1, simm16, 
    /* LBu_MM */
    GPR32Opnd, -1, simm16, 
    /* LD */
    GPR64Opnd, -1, simm16, 
    /* LDC1 */
    AFGR64Opnd, -1, simm16, 
    /* LDC164 */
    FGR64Opnd, -1, simm16, 
    /* LDC1_D64_MMR6 */
    FGR64Opnd, -1, simm16, 
    /* LDC1_MM_D32 */
    AFGR64Opnd, -1, simm16, 
    /* LDC1_MM_D64 */
    FGR64Opnd, -1, simm16, 
    /* LDC2 */
    COP2Opnd, -1, simm16, 
    /* LDC2_MMR6 */
    COP2Opnd, GPR32, simm11, 
    /* LDC2_R6 */
    COP2Opnd, -1, simm11, 
    /* LDC3 */
    COP3Opnd, -1, simm16, 
    /* LDI_B */
    MSA128BOpnd, vsplat_simm10, 
    /* LDI_D */
    MSA128DOpnd, vsplat_simm10, 
    /* LDI_H */
    MSA128HOpnd, vsplat_simm10, 
    /* LDI_W */
    MSA128WOpnd, vsplat_simm10, 
    /* LDL */
    GPR64Opnd, -1, simm16, GPR64Opnd, 
    /* LDPC */
    GPR64Opnd, simm18_lsl3, 
    /* LDR */
    GPR64Opnd, -1, simm16, GPR64Opnd, 
    /* LDXC1 */
    AFGR64Opnd, -1, -1, 
    /* LDXC164 */
    FGR64Opnd, -1, -1, 
    /* LD_B */
    MSA128BOpnd, -1, simm10, 
    /* LD_D */
    MSA128DOpnd, -1, simm10_lsl3, 
    /* LD_H */
    MSA128HOpnd, -1, simm10_lsl1, 
    /* LD_W */
    MSA128WOpnd, -1, simm10_lsl2, 
    /* LEA_ADDiu */
    GPR32Opnd, -1, simm16, 
    /* LEA_ADDiu64 */
    GPR64Opnd, -1, simm16, 
    /* LEA_ADDiu_MM */
    GPR32Opnd, -1, simm16, 
    /* LH */
    GPR32Opnd, -1, simm16, 
    /* LH64 */
    GPR64Opnd, -1, simm16, 
    /* LHE */
    GPR32Opnd, -1, simm9, 
    /* LHE_MM */
    GPR32Opnd, -1, simm9, 
    /* LHU16_MM */
    GPRMM16Opnd, -1, simm4, 
    /* LHX */
    GPR32Opnd, -1, -1, 
    /* LHX_MM */
    GPR32Opnd, -1, -1, 
    /* LH_MM */
    GPR32Opnd, -1, simm16, 
    /* LHu */
    GPR32Opnd, -1, simm16, 
    /* LHu64 */
    GPR64Opnd, -1, simm16, 
    /* LHuE */
    GPR32Opnd, -1, simm9, 
    /* LHuE_MM */
    GPR32Opnd, -1, simm9, 
    /* LHu_MM */
    GPR32Opnd, -1, simm16, 
    /* LI16_MM */
    GPRMM16Opnd, li16_imm, 
    /* LI16_MMR6 */
    GPRMM16Opnd, li16_imm, 
    /* LL */
    GPR32Opnd, -1, simm16, 
    /* LL64 */
    GPR32Opnd, -1, simm16, 
    /* LL64_R6 */
    GPR32Opnd, -1, simm9, 
    /* LLD */
    GPR64Opnd, -1, simm16, 
    /* LLD_R6 */
    GPR64Opnd, -1, simm9, 
    /* LLE */
    GPR32Opnd, -1, simm9, 
    /* LLE_MM */
    GPR32Opnd, -1, simm9, 
    /* LL_MM */
    GPR32Opnd, -1, simm12, 
    /* LL_MMR6 */
    GPR32Opnd, -1, simm9, 
    /* LL_R6 */
    GPR32Opnd, -1, simm9, 
    /* LSA */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, uimm2_plus1, 
    /* LSA_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, uimm2_plus1, 
    /* LSA_R6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, uimm2_plus1, 
    /* LUI_MMR6 */
    GPR32Opnd, uimm16, 
    /* LUXC1 */
    AFGR64Opnd, -1, -1, 
    /* LUXC164 */
    FGR64Opnd, -1, -1, 
    /* LUXC1_MM */
    FGR64Opnd, -1, -1, 
    /* LUi */
    GPR32Opnd, uimm16_relaxed, 
    /* LUi64 */
    GPR64Opnd, uimm16_64_relaxed, 
    /* LUi_MM */
    GPR32Opnd, uimm16_relaxed, 
    /* LW */
    GPR32Opnd, -1, simm16, 
    /* LW16_MM */
    GPRMM16Opnd, -1, simm4, 
    /* LW64 */
    GPR64Opnd, -1, simm16, 
    /* LWC1 */
    FGR32Opnd, -1, simm16, 
    /* LWC1_MM */
    FGR32Opnd, -1, simm16, 
    /* LWC2 */
    COP2Opnd, -1, simm16, 
    /* LWC2_MMR6 */
    COP2Opnd, GPR32, simm11, 
    /* LWC2_R6 */
    COP2Opnd, -1, simm11, 
    /* LWC3 */
    COP3Opnd, -1, simm16, 
    /* LWDSP */
    DSPROpnd, -1, simm16, 
    /* LWDSP_MM */
    DSPROpnd, -1, simm16, 
    /* LWE */
    GPR32Opnd, -1, simm9, 
    /* LWE_MM */
    GPR32Opnd, -1, simm9, 
    /* LWGP_MM */
    GPRMM16Opnd, -1, simm7_lsl2, 
    /* LWL */
    GPR32Opnd, -1, simm16, GPR32Opnd, 
    /* LWL64 */
    GPR64Opnd, -1, simm16, GPR64Opnd, 
    /* LWLE */
    GPR32Opnd, -1, simm9, GPR32Opnd, 
    /* LWLE_MM */
    GPR32Opnd, -1, simm9, GPR32Opnd, 
    /* LWL_MM */
    GPR32Opnd, -1, simm12, GPR32Opnd, 
    /* LWM16_MM */
    reglist16, -1, uimm8, 
    /* LWM16_MMR6 */
    reglist16, -1, uimm8, 
    /* LWM32_MM */
    reglist, -1, simm12, 
    /* LWPC */
    GPR32Opnd, simm19_lsl2, 
    /* LWPC_MMR6 */
    GPR32Opnd, simm19_lsl2, 
    /* LWP_MM */
    GPR32Opnd, GPR32Opnd, -1, simm12, 
    /* LWR */
    GPR32Opnd, -1, simm16, GPR32Opnd, 
    /* LWR64 */
    GPR64Opnd, -1, simm16, GPR64Opnd, 
    /* LWRE */
    GPR32Opnd, -1, simm9, GPR32Opnd, 
    /* LWRE_MM */
    GPR32Opnd, -1, simm9, GPR32Opnd, 
    /* LWR_MM */
    GPR32Opnd, -1, simm12, GPR32Opnd, 
    /* LWSP_MM */
    GPR32Opnd, -1, simm5, 
    /* LWUPC */
    GPR32Opnd, simm19_lsl2, 
    /* LWU_MM */
    GPR32Opnd, -1, simm12, 
    /* LWX */
    GPR32Opnd, -1, -1, 
    /* LWXC1 */
    FGR32Opnd, -1, -1, 
    /* LWXC1_MM */
    FGR32Opnd, -1, -1, 
    /* LWXS_MM */
    GPR32Opnd, -1, -1, 
    /* LWX_MM */
    GPR32Opnd, -1, -1, 
    /* LW_MM */
    GPR32Opnd, -1, simm16, 
    /* LW_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* LWu */
    GPR64Opnd, -1, simm16, 
    /* LbRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* LbuRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* LhRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* LhuRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* LiRxImm16 */
    CPU16Regs, simm16, 
    /* LiRxImmAlignX16 */
    CPU16Regs, simm16, 
    /* LiRxImmX16 */
    CPU16Regs, simm16, 
    /* LwRxPcTcp16 */
    CPU16Regs, pcrel16, i32imm, 
    /* LwRxPcTcpX16 */
    CPU16Regs, pcrel16, i32imm, 
    /* LwRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* LwRxSpImmX16 */
    CPU16Regs, CPU16RegsPlusSP, simm16, 
    /* MADD */
    GPR32Opnd, GPR32Opnd, 
    /* MADDF_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MADDF_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MADDF_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MADDF_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MADDR_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MADDR_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MADDU */
    GPR32Opnd, GPR32Opnd, 
    /* MADDU_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MADDU_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MADDU_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MADDV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MADDV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MADDV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MADDV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MADD_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* MADD_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* MADD_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MADD_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MADD_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MADD_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MADD_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MADD_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MADD_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MADD_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MAQ_SA_W_PHL */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_SA_W_PHL_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_SA_W_PHR */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_SA_W_PHR_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_S_W_PHL */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_S_W_PHL_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_S_W_PHR */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAQ_S_W_PHR_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MAXA_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MAXA_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MAXA_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MAXA_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MAXI_S_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_simm5, 
    /* MAXI_S_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_simm5, 
    /* MAXI_S_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_simm5, 
    /* MAXI_S_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_simm5, 
    /* MAXI_U_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* MAXI_U_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* MAXI_U_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* MAXI_U_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* MAX_A_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MAX_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MAX_A_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MAX_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MAX_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MAX_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MAX_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MAX_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MAX_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MAX_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MAX_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MAX_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MAX_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MAX_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MAX_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MAX_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MFC0 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFC0_MMR6 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFC1 */
    GPR32Opnd, FGR32Opnd, 
    /* MFC1_D64 */
    GPR32Opnd, FGR64Opnd, 
    /* MFC1_MM */
    GPR32Opnd, FGR32Opnd, 
    /* MFC1_MMR6 */
    GPR32Opnd, FGR32Opnd, 
    /* MFC2 */
    GPR32Opnd, COP2Opnd, uimm3, 
    /* MFC2_MMR6 */
    GPR32Opnd, COP2Opnd, 
    /* MFGC0 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFGC0_MM */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFHC0_MMR6 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFHC1_D32 */
    GPR32Opnd, AFGR64Opnd, 
    /* MFHC1_D32_MM */
    GPR32Opnd, AFGR64Opnd, 
    /* MFHC1_D64 */
    GPR32Opnd, FGR64Opnd, 
    /* MFHC1_D64_MM */
    GPR32Opnd, FGR64Opnd, 
    /* MFHC2_MMR6 */
    GPR32Opnd, COP2Opnd, 
    /* MFHGC0 */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFHGC0_MM */
    GPR32Opnd, COP0Opnd, uimm3, 
    /* MFHI */
    GPR32Opnd, 
    /* MFHI16_MM */
    GPR32Opnd, 
    /* MFHI64 */
    GPR64Opnd, 
    /* MFHI_DSP */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFHI_DSP_MM */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFHI_MM */
    GPR32Opnd, 
    /* MFLO */
    GPR32Opnd, 
    /* MFLO16_MM */
    GPR32Opnd, 
    /* MFLO64 */
    GPR64Opnd, 
    /* MFLO_DSP */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFLO_DSP_MM */
    GPR32Opnd, ACC64DSPOpnd, 
    /* MFLO_MM */
    GPR32Opnd, 
    /* MFTR */
    GPR32Opnd, GPR32Opnd, uimm1, uimm3, uimm1, 
    /* MINA_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MINA_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MINA_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MINA_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MINI_S_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_simm5, 
    /* MINI_S_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_simm5, 
    /* MINI_S_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_simm5, 
    /* MINI_S_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_simm5, 
    /* MINI_U_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* MINI_U_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* MINI_U_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* MINI_U_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* MIN_A_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MIN_A_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MIN_A_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MIN_A_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MIN_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MIN_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MIN_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MIN_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MIN_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MIN_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MIN_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MIN_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MIN_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MIN_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MIN_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MIN_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MOD */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MODSUB */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MODSUB_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MODU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MODU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOD_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOD_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MOD_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MOD_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MOD_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MOD_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MOD_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MOD_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MOD_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MOVE16_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MOVE16_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* MOVEP_MM */
    GPRMM16OpndMovePPairFirst, GPRMM16OpndMovePPairSecond, GPRMM16OpndMoveP, GPRMM16OpndMoveP, 
    /* MOVEP_MMR6 */
    GPRMM16OpndMovePPairFirst, GPRMM16OpndMovePPairSecond, GPRMM16OpndMoveP, GPRMM16OpndMoveP, 
    /* MOVE_V */
    MSA128BOpnd, MSA128BOpnd, 
    /* MOVF_D32 */
    AFGR64Opnd, AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, 
    /* MOVF_D32_MM */
    AFGR64Opnd, AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, 
    /* MOVF_D64 */
    FGR64Opnd, FGR64Opnd, FCCRegsOpnd, FGR64Opnd, 
    /* MOVF_I */
    GPR32Opnd, GPR32Opnd, FCCRegsOpnd, GPR32Opnd, 
    /* MOVF_I64 */
    GPR64Opnd, GPR64Opnd, FCCRegsOpnd, GPR64Opnd, 
    /* MOVF_I_MM */
    GPR32Opnd, GPR32Opnd, FCCRegsOpnd, GPR32Opnd, 
    /* MOVF_S */
    FGR32Opnd, FGR32Opnd, FCCRegsOpnd, FGR32Opnd, 
    /* MOVF_S_MM */
    FGR32Opnd, FGR32Opnd, FCCRegsOpnd, FGR32Opnd, 
    /* MOVN_I64_D64 */
    FGR64Opnd, FGR64Opnd, GPR64Opnd, FGR64Opnd, 
    /* MOVN_I64_I */
    GPR32Opnd, GPR32Opnd, GPR64Opnd, GPR32Opnd, 
    /* MOVN_I64_I64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* MOVN_I64_S */
    FGR32Opnd, FGR32Opnd, GPR64Opnd, FGR32Opnd, 
    /* MOVN_I_D32 */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, AFGR64Opnd, 
    /* MOVN_I_D32_MM */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, AFGR64Opnd, 
    /* MOVN_I_D64 */
    FGR64Opnd, FGR64Opnd, GPR32Opnd, FGR64Opnd, 
    /* MOVN_I_I */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOVN_I_I64 */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, GPR64Opnd, 
    /* MOVN_I_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOVN_I_S */
    FGR32Opnd, FGR32Opnd, GPR32Opnd, FGR32Opnd, 
    /* MOVN_I_S_MM */
    FGR32Opnd, FGR32Opnd, GPR32Opnd, FGR32Opnd, 
    /* MOVT_D32 */
    AFGR64Opnd, AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, 
    /* MOVT_D32_MM */
    AFGR64Opnd, AFGR64Opnd, FCCRegsOpnd, AFGR64Opnd, 
    /* MOVT_D64 */
    FGR64Opnd, FGR64Opnd, FCCRegsOpnd, FGR64Opnd, 
    /* MOVT_I */
    GPR32Opnd, GPR32Opnd, FCCRegsOpnd, GPR32Opnd, 
    /* MOVT_I64 */
    GPR64Opnd, GPR64Opnd, FCCRegsOpnd, GPR64Opnd, 
    /* MOVT_I_MM */
    GPR32Opnd, GPR32Opnd, FCCRegsOpnd, GPR32Opnd, 
    /* MOVT_S */
    FGR32Opnd, FGR32Opnd, FCCRegsOpnd, FGR32Opnd, 
    /* MOVT_S_MM */
    FGR32Opnd, FGR32Opnd, FCCRegsOpnd, FGR32Opnd, 
    /* MOVZ_I64_D64 */
    FGR64Opnd, FGR64Opnd, GPR64Opnd, FGR64Opnd, 
    /* MOVZ_I64_I */
    GPR32Opnd, GPR32Opnd, GPR64Opnd, GPR32Opnd, 
    /* MOVZ_I64_I64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* MOVZ_I64_S */
    FGR32Opnd, FGR32Opnd, GPR64Opnd, FGR32Opnd, 
    /* MOVZ_I_D32 */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, AFGR64Opnd, 
    /* MOVZ_I_D32_MM */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, AFGR64Opnd, 
    /* MOVZ_I_D64 */
    FGR64Opnd, FGR64Opnd, GPR32Opnd, FGR64Opnd, 
    /* MOVZ_I_I */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOVZ_I_I64 */
    GPR64Opnd, GPR64Opnd, GPR32Opnd, GPR64Opnd, 
    /* MOVZ_I_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MOVZ_I_S */
    FGR32Opnd, FGR32Opnd, GPR32Opnd, FGR32Opnd, 
    /* MOVZ_I_S_MM */
    FGR32Opnd, FGR32Opnd, GPR32Opnd, FGR32Opnd, 
    /* MSUB */
    GPR32Opnd, GPR32Opnd, 
    /* MSUBF_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MSUBF_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MSUBF_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MSUBF_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MSUBR_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MSUBR_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MSUBU */
    GPR32Opnd, GPR32Opnd, 
    /* MSUBU_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MSUBU_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MSUBU_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MSUBV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MSUBV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MSUBV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MSUBV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MSUB_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* MSUB_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* MSUB_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MSUB_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MSUB_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MSUB_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MSUB_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MSUB_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MSUB_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MSUB_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* MTC0 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTC0_MMR6 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTC1 */
    FGR32Opnd, GPR32Opnd, 
    /* MTC1_D64 */
    FGR64Opnd, GPR32Opnd, 
    /* MTC1_D64_MM */
    FGR64Opnd, GPR32Opnd, 
    /* MTC1_MM */
    FGR32Opnd, GPR32Opnd, 
    /* MTC1_MMR6 */
    FGR32Opnd, GPR32Opnd, 
    /* MTC2 */
    COP2Opnd, GPR32Opnd, uimm3, 
    /* MTC2_MMR6 */
    COP2Opnd, GPR32Opnd, 
    /* MTGC0 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTGC0_MM */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTHC0_MMR6 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTHC1_D32 */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, 
    /* MTHC1_D32_MM */
    AFGR64Opnd, AFGR64Opnd, GPR32Opnd, 
    /* MTHC1_D64 */
    FGR64Opnd, FGR64Opnd, GPR32Opnd, 
    /* MTHC1_D64_MM */
    FGR64Opnd, FGR64Opnd, GPR32Opnd, 
    /* MTHC2_MMR6 */
    COP2Opnd, GPR32Opnd, 
    /* MTHGC0 */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTHGC0_MM */
    COP0Opnd, GPR32Opnd, uimm3, 
    /* MTHI */
    GPR32Opnd, 
    /* MTHI64 */
    GPR64Opnd, 
    /* MTHI_DSP */
    HI32DSPOpnd, GPR32Opnd, 
    /* MTHI_DSP_MM */
    HI32DSPOpnd, GPR32Opnd, 
    /* MTHI_MM */
    GPR32Opnd, 
    /* MTHLIP */
    ACC64DSPOpnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MTHLIP_MM */
    ACC64DSPOpnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MTLO */
    GPR32Opnd, 
    /* MTLO64 */
    GPR64Opnd, 
    /* MTLO_DSP */
    LO32DSPOpnd, GPR32Opnd, 
    /* MTLO_DSP_MM */
    LO32DSPOpnd, GPR32Opnd, 
    /* MTLO_MM */
    GPR32Opnd, 
    /* MTM0 */
    GPR64Opnd, 
    /* MTM1 */
    GPR64Opnd, 
    /* MTM2 */
    GPR64Opnd, 
    /* MTP0 */
    GPR64Opnd, 
    /* MTP1 */
    GPR64Opnd, 
    /* MTP2 */
    GPR64Opnd, 
    /* MTTR */
    GPR32Opnd, GPR32Opnd, uimm1, uimm3, uimm1, 
    /* MUH */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUHU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUHU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUH_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUL */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULEQ_S_W_PHL */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* MULEQ_S_W_PHL_MM */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* MULEQ_S_W_PHR */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* MULEQ_S_W_PHR_MM */
    GPR32Opnd, DSPROpnd, DSPROpnd, 
    /* MULEU_S_PH_QBL */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULEU_S_PH_QBL_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULEU_S_PH_QBR */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULEU_S_PH_QBR_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULQ_RS_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULQ_RS_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULQ_RS_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULQ_RS_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULQ_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULQ_S_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MULQ_S_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULQ_S_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULR_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* MULR_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MULR_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MULSAQ_S_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MULSAQ_S_W_PH_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MULSA_W_PH */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MULSA_W_PH_MMR2 */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, ACC64DSPOpnd, 
    /* MULT */
    GPR32Opnd, GPR32Opnd, 
    /* MULTU_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, 
    /* MULTU_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, 
    /* MULT_DSP */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, 
    /* MULT_DSP_MM */
    ACC64DSPOpnd, GPR32Opnd, GPR32Opnd, 
    /* MULT_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MULTu */
    GPR32Opnd, GPR32Opnd, 
    /* MULTu_MM */
    GPR32Opnd, GPR32Opnd, 
    /* MULU */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MULV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* MULV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* MULV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MULV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MUL_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUL_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUL_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MUL_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MUL_Q_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* MUL_Q_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* MUL_R6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* MUL_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* MUL_S_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* Mfhi16 */
    CPU16Regs, 
    /* Mflo16 */
    CPU16Regs, 
    /* Move32R16 */
    GPR32, CPU16Regs, 
    /* MoveR3216 */
    CPU16Regs, GPR32, 
    /* NLOC_B */
    MSA128BOpnd, MSA128BOpnd, 
    /* NLOC_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* NLOC_H */
    MSA128HOpnd, MSA128HOpnd, 
    /* NLOC_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* NLZC_B */
    MSA128BOpnd, MSA128BOpnd, 
    /* NLZC_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* NLZC_H */
    MSA128HOpnd, MSA128HOpnd, 
    /* NLZC_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* NMADD_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* NMADD_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* NMADD_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* NMADD_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* NMADD_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* NMSUB_D32 */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* NMSUB_D32_MM */
    AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, AFGR64Opnd, 
    /* NMSUB_D64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* NMSUB_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* NMSUB_S_MM */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* NOR */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* NOR64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* NORI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* NOR_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* NOR_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* NOR_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* NOT16_MM */
    GPRMM16Opnd, GPRMM16Opnd, 
    /* NOT16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, 
    /* NegRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* NotRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* OR */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* OR16_MM */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* OR16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* OR64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* ORI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* ORI_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* OR_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* OR_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* OR_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* ORi */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* ORi64 */
    GPR64Opnd, GPR64Opnd, uimm16_64, 
    /* ORi_MM */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* OrRxRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* PACKRL_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PACKRL_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PAUSE */
    /* PAUSE_MM */
    /* PAUSE_MMR6 */
    /* PCKEV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* PCKEV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* PCKEV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* PCKEV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* PCKOD_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* PCKOD_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* PCKOD_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* PCKOD_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* PCNT_B */
    MSA128BOpnd, MSA128BOpnd, 
    /* PCNT_D */
    MSA128DOpnd, MSA128DOpnd, 
    /* PCNT_H */
    MSA128HOpnd, MSA128HOpnd, 
    /* PCNT_W */
    MSA128WOpnd, MSA128WOpnd, 
    /* PICK_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PICK_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PICK_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PICK_QB_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PLL_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* PLU_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* POP */
    GPR32Opnd, GPR32Opnd, 
    /* PRECEQU_PH_QBL */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBLA */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBLA_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBL_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBR */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBRA */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBRA_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEQU_PH_QBR_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEQ_W_PHL */
    GPR32Opnd, DSPROpnd, 
    /* PRECEQ_W_PHL_MM */
    GPR32Opnd, DSPROpnd, 
    /* PRECEQ_W_PHR */
    GPR32Opnd, DSPROpnd, 
    /* PRECEQ_W_PHR_MM */
    GPR32Opnd, DSPROpnd, 
    /* PRECEU_PH_QBL */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBLA */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBLA_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBL_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBR */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBRA */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBRA_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECEU_PH_QBR_MM */
    DSPROpnd, DSPROpnd, 
    /* PRECRQU_S_QB_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECRQU_S_QB_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECRQ_PH_W */
    DSPROpnd, GPR32Opnd, GPR32Opnd, 
    /* PRECRQ_PH_W_MM */
    DSPROpnd, GPR32Opnd, GPR32Opnd, 
    /* PRECRQ_QB_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECRQ_QB_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECRQ_RS_PH_W */
    DSPROpnd, GPR32Opnd, GPR32Opnd, 
    /* PRECRQ_RS_PH_W_MM */
    DSPROpnd, GPR32Opnd, GPR32Opnd, 
    /* PRECR_QB_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECR_QB_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* PRECR_SRA_PH_W */
    DSPROpnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PRECR_SRA_PH_W_MMR2 */
    DSPROpnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PRECR_SRA_R_PH_W */
    DSPROpnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PRECR_SRA_R_PH_W_MMR2 */
    DSPROpnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PREF */
    -1, simm16, uimm5, 
    /* PREFE */
    -1, simm9, uimm5, 
    /* PREFE_MM */
    -1, simm9, uimm5, 
    /* PREFX_MM */
    -1, -1, uimm5, 
    /* PREF_MM */
    -1, simm12, uimm5, 
    /* PREF_MMR6 */
    -1, simm12, uimm5, 
    /* PREF_R6 */
    -1, simm9, uimm5, 
    /* PREPEND */
    GPR32Opnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PREPEND_MMR2 */
    GPR32Opnd, GPR32Opnd, uimm5, GPR32Opnd, 
    /* PUL_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* PUU_PS64 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* RADDU_W_QB */
    GPR32Opnd, DSPROpnd, 
    /* RADDU_W_QB_MM */
    GPR32Opnd, DSPROpnd, 
    /* RDDSP */
    GPR32Opnd, uimm10, 
    /* RDDSP_MM */
    GPR32Opnd, uimm7, 
    /* RDHWR */
    GPR32Opnd, HWRegsOpnd, uimm8, 
    /* RDHWR64 */
    GPR64Opnd, HWRegsOpnd, uimm8, 
    /* RDHWR_MM */
    GPR32Opnd, HWRegsOpnd, uimm8, 
    /* RDHWR_MMR6 */
    GPR32Opnd, HWRegsOpnd, uimm3, 
    /* RDPGPR_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* RECIP_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* RECIP_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* RECIP_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* RECIP_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* RECIP_S */
    FGR32Opnd, FGR32Opnd, 
    /* RECIP_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* REPLV_PH */
    DSPROpnd, GPR32Opnd, 
    /* REPLV_PH_MM */
    DSPROpnd, GPR32Opnd, 
    /* REPLV_QB */
    DSPROpnd, GPR32Opnd, 
    /* REPLV_QB_MM */
    DSPROpnd, GPR32Opnd, 
    /* REPL_PH */
    DSPROpnd, simm10, 
    /* REPL_PH_MM */
    DSPROpnd, simm10, 
    /* REPL_QB */
    DSPROpnd, uimm8, 
    /* REPL_QB_MM */
    DSPROpnd, uimm8, 
    /* RINT_D */
    FGR64Opnd, FGR64Opnd, 
    /* RINT_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* RINT_S */
    FGR32Opnd, FGR32Opnd, 
    /* RINT_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* ROTR */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* ROTRV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ROTRV_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* ROTR_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* ROUND_L_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* ROUND_L_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* ROUND_L_S */
    FGR64Opnd, FGR32Opnd, 
    /* ROUND_L_S_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* ROUND_W_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* ROUND_W_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* ROUND_W_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* ROUND_W_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* ROUND_W_S */
    FGR32Opnd, FGR32Opnd, 
    /* ROUND_W_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* ROUND_W_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* RSQRT_D32 */
    AFGR64Opnd, AFGR64Opnd, 
    /* RSQRT_D32_MM */
    AFGR64Opnd, AFGR64Opnd, 
    /* RSQRT_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* RSQRT_D64_MM */
    FGR64Opnd, FGR64Opnd, 
    /* RSQRT_S */
    FGR32Opnd, FGR32Opnd, 
    /* RSQRT_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* Restore16 */
    /* RestoreX16 */
    /* SAA */
    GPR64Opnd, GPR64Opnd, 
    /* SAAD */
    GPR64Opnd, GPR64Opnd, 
    /* SAT_S_B */
    MSA128BOpnd, MSA128BOpnd, uimm3, 
    /* SAT_S_D */
    MSA128DOpnd, MSA128DOpnd, uimm6, 
    /* SAT_S_H */
    MSA128HOpnd, MSA128HOpnd, uimm4, 
    /* SAT_S_W */
    MSA128WOpnd, MSA128WOpnd, uimm5, 
    /* SAT_U_B */
    MSA128BOpnd, MSA128BOpnd, uimm3, 
    /* SAT_U_D */
    MSA128DOpnd, MSA128DOpnd, uimm6, 
    /* SAT_U_H */
    MSA128HOpnd, MSA128HOpnd, uimm4, 
    /* SAT_U_W */
    MSA128WOpnd, MSA128WOpnd, uimm5, 
    /* SB */
    GPR32Opnd, -1, simm16, 
    /* SB16_MM */
    GPRMM16OpndZero, -1, simm4, 
    /* SB16_MMR6 */
    GPRMM16OpndZero, -1, simm4, 
    /* SB64 */
    GPR64Opnd, -1, simm16, 
    /* SBE */
    GPR32Opnd, -1, simm9, 
    /* SBE_MM */
    GPR32Opnd, -1, simm9, 
    /* SB_MM */
    GPR32Opnd, -1, simm16, 
    /* SB_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* SC */
    GPR32Opnd, GPR32Opnd, -1, simm16, 
    /* SC64 */
    GPR32Opnd, GPR32Opnd, -1, simm16, 
    /* SC64_R6 */
    GPR32Opnd, GPR32Opnd, -1, simm9, 
    /* SCD */
    GPR64Opnd, GPR64Opnd, -1, simm16, 
    /* SCD_R6 */
    GPR64Opnd, GPR64Opnd, -1, simm9, 
    /* SCE */
    GPR32Opnd, GPR32Opnd, -1, simm9, 
    /* SCE_MM */
    GPR32Opnd, GPR32Opnd, -1, simm9, 
    /* SC_MM */
    GPR32Opnd, GPR32Opnd, -1, simm12, 
    /* SC_MMR6 */
    GPR32Opnd, GPR32Opnd, -1, simm9, 
    /* SC_R6 */
    GPR32Opnd, GPR32Opnd, -1, simm9, 
    /* SD */
    GPR64Opnd, -1, simm16, 
    /* SDBBP */
    uimm20, 
    /* SDBBP16_MM */
    uimm4, 
    /* SDBBP16_MMR6 */
    uimm4, 
    /* SDBBP_MM */
    uimm10, 
    /* SDBBP_MMR6 */
    uimm20, 
    /* SDBBP_R6 */
    uimm20, 
    /* SDC1 */
    AFGR64Opnd, -1, simm16, 
    /* SDC164 */
    FGR64Opnd, -1, simm16, 
    /* SDC1_D64_MMR6 */
    FGR64Opnd, -1, simm16, 
    /* SDC1_MM_D32 */
    AFGR64Opnd, -1, simm16, 
    /* SDC1_MM_D64 */
    FGR64Opnd, -1, simm16, 
    /* SDC2 */
    COP2Opnd, -1, simm16, 
    /* SDC2_MMR6 */
    COP2Opnd, GPR32, simm11, 
    /* SDC2_R6 */
    COP2Opnd, -1, simm11, 
    /* SDC3 */
    COP3Opnd, -1, simm16, 
    /* SDIV */
    GPR32Opnd, GPR32Opnd, 
    /* SDIV_MM */
    GPR32Opnd, GPR32Opnd, 
    /* SDL */
    GPR64Opnd, -1, simm16, 
    /* SDR */
    GPR64Opnd, -1, simm16, 
    /* SDXC1 */
    AFGR64Opnd, -1, -1, 
    /* SDXC164 */
    FGR64Opnd, -1, -1, 
    /* SEB */
    GPR32Opnd, GPR32Opnd, 
    /* SEB64 */
    GPR64Opnd, GPR64Opnd, 
    /* SEB_MM */
    GPR32Opnd, GPR32Opnd, 
    /* SEH */
    GPR32Opnd, GPR32Opnd, 
    /* SEH64 */
    GPR64Opnd, GPR64Opnd, 
    /* SEH_MM */
    GPR32Opnd, GPR32Opnd, 
    /* SELEQZ */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SELEQZ64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* SELEQZ_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SELEQZ_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SELEQZ_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SELEQZ_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* SELEQZ_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* SELNEZ */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SELNEZ64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* SELNEZ_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SELNEZ_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SELNEZ_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SELNEZ_S */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* SELNEZ_S_MMR6 */
    FGR32Opnd, FGR32Opnd, FGR32Opnd, 
    /* SEL_D */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SEL_D_MMR6 */
    FGR64Opnd, FGR64Opnd, FGR64Opnd, FGR64Opnd, 
    /* SEL_S */
    FGR32Opnd, FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* SEL_S_MMR6 */
    FGR32Opnd, FGRCCOpnd, FGR32Opnd, FGR32Opnd, 
    /* SEQ */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* SEQi */
    GPR64Opnd, GPR64Opnd, simm10_64, 
    /* SH */
    GPR32Opnd, -1, simm16, 
    /* SH16_MM */
    GPRMM16OpndZero, -1, simm4, 
    /* SH16_MMR6 */
    GPRMM16OpndZero, -1, simm4, 
    /* SH64 */
    GPR64Opnd, -1, simm16, 
    /* SHE */
    GPR32Opnd, -1, simm9, 
    /* SHE_MM */
    GPR32Opnd, -1, simm9, 
    /* SHF_B */
    MSA128BOpnd, MSA128BOpnd, uimm8, 
    /* SHF_H */
    MSA128HOpnd, MSA128HOpnd, uimm8, 
    /* SHF_W */
    MSA128WOpnd, MSA128WOpnd, uimm8, 
    /* SHILO */
    ACC64DSPOpnd, simm6, ACC64DSPOpnd, 
    /* SHILOV */
    ACC64DSPOpnd, GPR32Opnd, ACC64DSPOpnd, 
    /* SHILOV_MM */
    ACC64DSPOpnd, GPR32Opnd, ACC64DSPOpnd, 
    /* SHILO_MM */
    ACC64DSPOpnd, simm6, ACC64DSPOpnd, 
    /* SHLLV_PH */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_PH_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_QB */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_QB_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_S_PH */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_S_PH_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHLLV_S_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SHLLV_S_W_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SHLL_PH */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHLL_PH_MM */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHLL_QB */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHLL_QB_MM */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHLL_S_PH */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHLL_S_PH_MM */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHLL_S_W */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SHLL_S_W_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SHRAV_PH */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_PH_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_QB */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_QB_MMR2 */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_R_PH */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_R_PH_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_R_QB */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_R_QB_MMR2 */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRAV_R_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SHRAV_R_W_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SHRA_PH */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRA_PH_MM */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRA_QB */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHRA_QB_MMR2 */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHRA_R_PH */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRA_R_PH_MM */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRA_R_QB */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHRA_R_QB_MMR2 */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHRA_R_W */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SHRA_R_W_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SHRLV_PH */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRLV_PH_MMR2 */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRLV_QB */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRLV_QB_MM */
    DSPROpnd, DSPROpnd, GPR32Opnd, 
    /* SHRL_PH */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRL_PH_MMR2 */
    DSPROpnd, DSPROpnd, uimm4, 
    /* SHRL_QB */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SHRL_QB_MM */
    DSPROpnd, DSPROpnd, uimm3, 
    /* SH_MM */
    GPR32Opnd, -1, simm16, 
    /* SH_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* SIGRIE */
    uimm16, 
    /* SIGRIE_MMR6 */
    uimm16, 
    /* SLDI_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, uimm4, 
    /* SLDI_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, uimm1, 
    /* SLDI_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, uimm3, 
    /* SLDI_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, uimm2, 
    /* SLD_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, GPR32Opnd, 
    /* SLD_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, GPR32Opnd, 
    /* SLD_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, GPR32Opnd, 
    /* SLD_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, GPR32Opnd, 
    /* SLL */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SLL16_MM */
    GPRMM16Opnd, GPRMM16Opnd, uimm3_shift, 
    /* SLL16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, uimm3_shift, 
    /* SLL64_32 */
    GPR64, GPR32, 
    /* SLL64_64 */
    GPR64, GPR64, 
    /* SLLI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* SLLI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* SLLI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* SLLI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* SLLV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLLV_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLL_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SLL_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SLL_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SLL_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SLL_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SLL_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SLT */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLT64 */
    GPR32Opnd, GPR64Opnd, GPR64Opnd, 
    /* SLT_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLTi */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* SLTi64 */
    GPR32Opnd, GPR64Opnd, simm16_64, 
    /* SLTi_MM */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* SLTiu */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* SLTiu64 */
    GPR32Opnd, GPR64Opnd, simm16_64, 
    /* SLTiu_MM */
    GPR32Opnd, GPR32Opnd, simm16, 
    /* SLTu */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SLTu64 */
    GPR32Opnd, GPR64Opnd, GPR64Opnd, 
    /* SLTu_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SNE */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* SNEi */
    GPR64Opnd, GPR64Opnd, simm10_64, 
    /* SPLATI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm4, 
    /* SPLATI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm1, 
    /* SPLATI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm3, 
    /* SPLATI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm2, 
    /* SPLAT_B */
    MSA128BOpnd, MSA128BOpnd, GPR32Opnd, 
    /* SPLAT_D */
    MSA128DOpnd, MSA128DOpnd, GPR32Opnd, 
    /* SPLAT_H */
    MSA128HOpnd, MSA128HOpnd, GPR32Opnd, 
    /* SPLAT_W */
    MSA128WOpnd, MSA128WOpnd, GPR32Opnd, 
    /* SRA */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SRAI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* SRAI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* SRAI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* SRAI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* SRARI_B */
    MSA128BOpnd, MSA128BOpnd, uimm3, 
    /* SRARI_D */
    MSA128DOpnd, MSA128DOpnd, uimm6, 
    /* SRARI_H */
    MSA128HOpnd, MSA128HOpnd, uimm4, 
    /* SRARI_W */
    MSA128WOpnd, MSA128WOpnd, uimm5, 
    /* SRAR_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SRAR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SRAR_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SRAR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SRAV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SRAV_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SRA_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SRA_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SRA_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SRA_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SRA_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SRL */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SRL16_MM */
    GPRMM16Opnd, GPRMM16Opnd, uimm3_shift, 
    /* SRL16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, uimm3_shift, 
    /* SRLI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm3, 
    /* SRLI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm6, 
    /* SRLI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm4, 
    /* SRLI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* SRLRI_B */
    MSA128BOpnd, MSA128BOpnd, uimm3, 
    /* SRLRI_D */
    MSA128DOpnd, MSA128DOpnd, uimm6, 
    /* SRLRI_H */
    MSA128HOpnd, MSA128HOpnd, uimm4, 
    /* SRLRI_W */
    MSA128WOpnd, MSA128WOpnd, uimm5, 
    /* SRLR_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SRLR_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SRLR_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SRLR_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SRLV */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SRLV_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SRL_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SRL_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SRL_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SRL_MM */
    GPR32Opnd, GPR32Opnd, uimm5, 
    /* SRL_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SSNOP */
    /* SSNOP_MM */
    /* SSNOP_MMR6 */
    /* ST_B */
    MSA128BOpnd, -1, simm10, 
    /* ST_D */
    MSA128DOpnd, -1, simm10_lsl3, 
    /* ST_H */
    MSA128HOpnd, -1, simm10_lsl1, 
    /* ST_W */
    MSA128WOpnd, -1, simm10_lsl2, 
    /* SUB */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQH_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQH_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQH_R_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQH_R_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQH_R_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQH_R_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQH_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQH_W_MMR2 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQ_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQ_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQ_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQ_S_PH_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBQ_S_W */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBQ_S_W_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBSUS_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SUBSUS_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SUBSUS_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SUBSUS_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SUBSUU_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SUBSUU_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SUBSUU_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SUBSUU_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SUBS_S_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SUBS_S_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SUBS_S_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SUBS_S_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SUBS_U_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SUBS_U_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SUBS_U_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SUBS_U_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SUBU16_MM */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* SUBU16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* SUBUH_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBUH_QB_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBUH_R_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBUH_R_QB_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBU_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_QB_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_S_PH */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_S_PH_MMR2 */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_S_QB */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBU_S_QB_MM */
    DSPROpnd, DSPROpnd, DSPROpnd, 
    /* SUBVI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm5, 
    /* SUBVI_D */
    MSA128DOpnd, MSA128DOpnd, vsplat_uimm5, 
    /* SUBVI_H */
    MSA128HOpnd, MSA128HOpnd, vsplat_uimm5, 
    /* SUBVI_W */
    MSA128WOpnd, MSA128WOpnd, vsplat_uimm5, 
    /* SUBV_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* SUBV_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* SUBV_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* SUBV_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* SUB_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUB_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBu */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUBu_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* SUXC1 */
    AFGR64Opnd, -1, -1, 
    /* SUXC164 */
    FGR64Opnd, -1, -1, 
    /* SUXC1_MM */
    FGR64Opnd, -1, -1, 
    /* SW */
    GPR32Opnd, -1, simm16, 
    /* SW16_MM */
    GPRMM16OpndZero, -1, simm4, 
    /* SW16_MMR6 */
    GPRMM16OpndZero, -1, simm4, 
    /* SW64 */
    GPR64Opnd, -1, simm16, 
    /* SWC1 */
    FGR32Opnd, -1, simm16, 
    /* SWC1_MM */
    FGR32Opnd, -1, simm16, 
    /* SWC2 */
    COP2Opnd, -1, simm16, 
    /* SWC2_MMR6 */
    COP2Opnd, GPR32, simm11, 
    /* SWC2_R6 */
    COP2Opnd, -1, simm11, 
    /* SWC3 */
    COP3Opnd, -1, simm16, 
    /* SWDSP */
    DSPROpnd, -1, simm16, 
    /* SWDSP_MM */
    DSPROpnd, -1, simm16, 
    /* SWE */
    GPR32Opnd, -1, simm9, 
    /* SWE_MM */
    GPR32Opnd, -1, simm9, 
    /* SWL */
    GPR32Opnd, -1, simm16, 
    /* SWL64 */
    GPR64Opnd, -1, simm16, 
    /* SWLE */
    GPR32Opnd, -1, simm9, 
    /* SWLE_MM */
    GPR32Opnd, -1, simm9, 
    /* SWL_MM */
    GPR32Opnd, -1, simm12, 
    /* SWM16_MM */
    reglist16, -1, uimm8, 
    /* SWM16_MMR6 */
    reglist16, -1, uimm8, 
    /* SWM32_MM */
    reglist, -1, simm12, 
    /* SWP_MM */
    GPR32Opnd, GPR32Opnd, -1, simm12, 
    /* SWR */
    GPR32Opnd, -1, simm16, 
    /* SWR64 */
    GPR64Opnd, -1, simm16, 
    /* SWRE */
    GPR32Opnd, -1, simm9, 
    /* SWRE_MM */
    GPR32Opnd, -1, simm9, 
    /* SWR_MM */
    GPR32Opnd, -1, simm12, 
    /* SWSP_MM */
    GPR32Opnd, -1, simm5, 
    /* SWSP_MMR6 */
    GPR32Opnd, -1, simm5, 
    /* SWXC1 */
    FGR32Opnd, -1, -1, 
    /* SWXC1_MM */
    FGR32Opnd, -1, -1, 
    /* SW_MM */
    GPR32Opnd, -1, simm16, 
    /* SW_MMR6 */
    GPR32Opnd, -1, simm16, 
    /* SYNC */
    uimm5, 
    /* SYNCI */
    -1, simm16, 
    /* SYNCI_MM */
    -1, simm16, 
    /* SYNCI_MMR6 */
    -1, simm16, 
    /* SYNC_MM */
    uimm5, 
    /* SYNC_MMR6 */
    uimm5, 
    /* SYSCALL */
    uimm20, 
    /* SYSCALL_MM */
    uimm10, 
    /* Save16 */
    /* SaveX16 */
    /* SbRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* SebRx16 */
    CPU16Regs, CPU16Regs, 
    /* SehRx16 */
    CPU16Regs, CPU16Regs, 
    /* ShRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* SllX16 */
    CPU16Regs, CPU16Regs, uimm5, 
    /* SllvRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SltRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* SltiRxImm16 */
    CPU16Regs, simm16, 
    /* SltiRxImmX16 */
    CPU16Regs, simm16, 
    /* SltiuRxImm16 */
    CPU16Regs, simm16, 
    /* SltiuRxImmX16 */
    CPU16Regs, simm16, 
    /* SltuRxRy16 */
    CPU16Regs, CPU16Regs, 
    /* SraX16 */
    CPU16Regs, CPU16Regs, uimm5, 
    /* SravRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SrlX16 */
    CPU16Regs, CPU16Regs, uimm5, 
    /* SrlvRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SubuRxRyRz16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* SwRxRyOffMemX16 */
    CPU16Regs, CPU16Regs, simm16, 
    /* SwRxSpImmX16 */
    CPU16Regs, CPU16RegsPlusSP, simm16, 
    /* TEQ */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TEQI */
    GPR32Opnd, simm16, 
    /* TEQI_MM */
    GPR32Opnd, simm16, 
    /* TEQ_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TGE */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TGEI */
    GPR32Opnd, simm16, 
    /* TGEIU */
    GPR32Opnd, simm16, 
    /* TGEIU_MM */
    GPR32Opnd, simm16, 
    /* TGEI_MM */
    GPR32Opnd, simm16, 
    /* TGEU */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TGEU_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TGE_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TLBGINV */
    /* TLBGINVF */
    /* TLBGINVF_MM */
    /* TLBGINV_MM */
    /* TLBGP */
    /* TLBGP_MM */
    /* TLBGR */
    /* TLBGR_MM */
    /* TLBGWI */
    /* TLBGWI_MM */
    /* TLBGWR */
    /* TLBGWR_MM */
    /* TLBINV */
    /* TLBINVF */
    /* TLBINVF_MMR6 */
    /* TLBINV_MMR6 */
    /* TLBP */
    /* TLBP_MM */
    /* TLBR */
    /* TLBR_MM */
    /* TLBWI */
    /* TLBWI_MM */
    /* TLBWR */
    /* TLBWR_MM */
    /* TLT */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TLTI */
    GPR32Opnd, simm16, 
    /* TLTIU_MM */
    GPR32Opnd, simm16, 
    /* TLTI_MM */
    GPR32Opnd, simm16, 
    /* TLTU */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TLTU_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TLT_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TNE */
    GPR32Opnd, GPR32Opnd, uimm10, 
    /* TNEI */
    GPR32Opnd, simm16, 
    /* TNEI_MM */
    GPR32Opnd, simm16, 
    /* TNE_MM */
    GPR32Opnd, GPR32Opnd, uimm4, 
    /* TRUNC_L_D64 */
    FGR64Opnd, FGR64Opnd, 
    /* TRUNC_L_D_MMR6 */
    FGR64Opnd, FGR64Opnd, 
    /* TRUNC_L_S */
    FGR64Opnd, FGR32Opnd, 
    /* TRUNC_L_S_MMR6 */
    FGR64Opnd, FGR32Opnd, 
    /* TRUNC_W_D32 */
    FGR32Opnd, AFGR64Opnd, 
    /* TRUNC_W_D64 */
    FGR32Opnd, FGR64Opnd, 
    /* TRUNC_W_D_MMR6 */
    FGR32Opnd, FGR64Opnd, 
    /* TRUNC_W_MM */
    FGR32Opnd, AFGR64Opnd, 
    /* TRUNC_W_S */
    FGR32Opnd, FGR32Opnd, 
    /* TRUNC_W_S_MM */
    FGR32Opnd, FGR32Opnd, 
    /* TRUNC_W_S_MMR6 */
    FGR32Opnd, FGR32Opnd, 
    /* TTLTIU */
    GPR32Opnd, simm16, 
    /* UDIV */
    GPR32Opnd, GPR32Opnd, 
    /* UDIV_MM */
    GPR32Opnd, GPR32Opnd, 
    /* V3MULU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* VMM0 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* VMULU */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* VSHF_B */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* VSHF_D */
    MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, MSA128DOpnd, 
    /* VSHF_H */
    MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, MSA128HOpnd, 
    /* VSHF_W */
    MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, MSA128WOpnd, 
    /* WAIT */
    /* WAIT_MM */
    uimm10, 
    /* WAIT_MMR6 */
    uimm10, 
    /* WRDSP */
    GPR32Opnd, uimm10, 
    /* WRDSP_MM */
    GPR32Opnd, uimm7, 
    /* WRPGPR_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* WSBH */
    GPR32Opnd, GPR32Opnd, 
    /* WSBH_MM */
    GPR32Opnd, GPR32Opnd, 
    /* WSBH_MMR6 */
    GPR32Opnd, GPR32Opnd, 
    /* XOR */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* XOR16_MM */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* XOR16_MMR6 */
    GPRMM16Opnd, GPRMM16Opnd, GPRMM16Opnd, 
    /* XOR64 */
    GPR64Opnd, GPR64Opnd, GPR64Opnd, 
    /* XORI_B */
    MSA128BOpnd, MSA128BOpnd, vsplat_uimm8, 
    /* XORI_MMR6 */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* XOR_MM */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* XOR_MMR6 */
    GPR32Opnd, GPR32Opnd, GPR32Opnd, 
    /* XOR_V */
    MSA128BOpnd, MSA128BOpnd, MSA128BOpnd, 
    /* XORi */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* XORi64 */
    GPR64Opnd, GPR64Opnd, uimm16_64, 
    /* XORi_MM */
    GPR32Opnd, GPR32Opnd, uimm16, 
    /* XorRxRxRy16 */
    CPU16Regs, CPU16Regs, CPU16Regs, 
    /* YIELD */
    GPR32Opnd, GPR32Opnd, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRINFO_MEM_OPERAND_SIZE
#undef GET_INSTRINFO_MEM_OPERAND_SIZE
namespace llvm {
namespace Mips {
LLVM_READONLY
static int getMemOperandSize(int OpType) {
  switch (OpType) {
  default: return 0;
  }
}
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_MEM_OPERAND_SIZE

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
namespace llvm {
namespace Mips {
LLVM_READONLY static unsigned
getLogicalOperandSize(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return LogicalOpIdx;
}
LLVM_READONLY static inline unsigned
getLogicalOperandIdx(uint16_t Opcode, uint16_t LogicalOpIdx) {
  auto S = 0U;
  for (auto i = 0U; i < LogicalOpIdx; ++i)
    S += getLogicalOperandSize(Opcode, i);
  return S;
}
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
namespace llvm {
namespace Mips {
LLVM_READONLY static int
getLogicalOperandType(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return -1;
}
} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP

#ifdef GET_INSTRINFO_MC_HELPER_DECLS
#undef GET_INSTRINFO_MC_HELPER_DECLS

namespace llvm {
class MCInst;
class FeatureBitset;

namespace Mips_MC {

void verifyInstructionPredicates(unsigned Opcode, const FeatureBitset &Features);

} // end namespace Mips_MC
} // end namespace llvm

#endif // GET_INSTRINFO_MC_HELPER_DECLS

#ifdef GET_INSTRINFO_MC_HELPERS
#undef GET_INSTRINFO_MC_HELPERS

namespace llvm {
namespace Mips_MC {

} // end namespace Mips_MC
} // end namespace llvm

#endif // GET_GENISTRINFO_MC_HELPERS

#ifdef ENABLE_INSTR_PREDICATE_VERIFIER
#undef ENABLE_INSTR_PREDICATE_VERIFIER
#include <sstream>

namespace llvm {
namespace Mips_MC {

// Bits for subtarget features that participate in instruction matching.
enum SubtargetFeatureBits : uint8_t {
  Feature_HasMips2Bit = 11,
  Feature_HasMips3_32Bit = 18,
  Feature_HasMips3_32r2Bit = 19,
  Feature_HasMips3Bit = 12,
  Feature_NotMips3Bit = 47,
  Feature_HasMips4_32Bit = 20,
  Feature_NotMips4_32Bit = 49,
  Feature_HasMips4_32r2Bit = 21,
  Feature_HasMips5_32r2Bit = 22,
  Feature_HasMips32Bit = 13,
  Feature_HasMips32r2Bit = 14,
  Feature_HasMips32r5Bit = 15,
  Feature_HasMips32r6Bit = 16,
  Feature_NotMips32r6Bit = 48,
  Feature_IsGP64bitBit = 33,
  Feature_IsGP32bitBit = 32,
  Feature_IsPTR64bitBit = 37,
  Feature_IsPTR32bitBit = 36,
  Feature_HasMips64Bit = 23,
  Feature_NotMips64Bit = 50,
  Feature_HasMips64r2Bit = 24,
  Feature_HasMips64r5Bit = 25,
  Feature_HasMips64r6Bit = 26,
  Feature_NotMips64r6Bit = 51,
  Feature_InMips16ModeBit = 30,
  Feature_NotInMips16ModeBit = 46,
  Feature_HasCnMipsBit = 1,
  Feature_NotCnMipsBit = 42,
  Feature_HasCnMipsPBit = 2,
  Feature_NotCnMipsPBit = 43,
  Feature_IsSym32Bit = 39,
  Feature_IsSym64Bit = 40,
  Feature_HasStdEncBit = 27,
  Feature_InMicroMipsBit = 29,
  Feature_NotInMicroMipsBit = 45,
  Feature_HasEVABit = 6,
  Feature_HasMSABit = 8,
  Feature_HasMadd4Bit = 10,
  Feature_HasMTBit = 9,
  Feature_UseIndirectJumpsHazardBit = 52,
  Feature_NoIndirectJumpGuardsBit = 41,
  Feature_HasCRCBit = 0,
  Feature_HasVirtBit = 28,
  Feature_HasGINVBit = 7,
  Feature_IsFP64bitBit = 31,
  Feature_NotFP64bitBit = 44,
  Feature_IsSingleFloatBit = 38,
  Feature_IsNotSingleFloatBit = 34,
  Feature_IsNotSoftFloatBit = 35,
  Feature_HasMips3DBit = 17,
  Feature_HasDSPBit = 3,
  Feature_HasDSPR2Bit = 4,
  Feature_HasDSPR3Bit = 5,
};

#ifndef NDEBUG
static const char *SubtargetFeatureNames[] = {
  "Feature_HasCRC",
  "Feature_HasCnMips",
  "Feature_HasCnMipsP",
  "Feature_HasDSP",
  "Feature_HasDSPR2",
  "Feature_HasDSPR3",
  "Feature_HasEVA",
  "Feature_HasGINV",
  "Feature_HasMSA",
  "Feature_HasMT",
  "Feature_HasMadd4",
  "Feature_HasMips2",
  "Feature_HasMips3",
  "Feature_HasMips32",
  "Feature_HasMips32r2",
  "Feature_HasMips32r5",
  "Feature_HasMips32r6",
  "Feature_HasMips3D",
  "Feature_HasMips3_32",
  "Feature_HasMips3_32r2",
  "Feature_HasMips4_32",
  "Feature_HasMips4_32r2",
  "Feature_HasMips5_32r2",
  "Feature_HasMips64",
  "Feature_HasMips64r2",
  "Feature_HasMips64r5",
  "Feature_HasMips64r6",
  "Feature_HasStdEnc",
  "Feature_HasVirt",
  "Feature_InMicroMips",
  "Feature_InMips16Mode",
  "Feature_IsFP64bit",
  "Feature_IsGP32bit",
  "Feature_IsGP64bit",
  "Feature_IsNotSingleFloat",
  "Feature_IsNotSoftFloat",
  "Feature_IsPTR32bit",
  "Feature_IsPTR64bit",
  "Feature_IsSingleFloat",
  "Feature_IsSym32",
  "Feature_IsSym64",
  "Feature_NoIndirectJumpGuards",
  "Feature_NotCnMips",
  "Feature_NotCnMipsP",
  "Feature_NotFP64bit",
  "Feature_NotInMicroMips",
  "Feature_NotInMips16Mode",
  "Feature_NotMips3",
  "Feature_NotMips32r6",
  "Feature_NotMips4_32",
  "Feature_NotMips64",
  "Feature_NotMips64r6",
  "Feature_UseIndirectJumpsHazard",
  nullptr
};

#endif // NDEBUG

FeatureBitset computeAvailableFeatures(const FeatureBitset &FB) {
  FeatureBitset Features;
  if (FB[Mips::FeatureMips2])
    Features.set(Feature_HasMips2Bit);
  if (FB[Mips::FeatureMips3_32])
    Features.set(Feature_HasMips3_32Bit);
  if (FB[Mips::FeatureMips3_32r2])
    Features.set(Feature_HasMips3_32r2Bit);
  if (FB[Mips::FeatureMips3])
    Features.set(Feature_HasMips3Bit);
  if (!FB[Mips::FeatureMips3])
    Features.set(Feature_NotMips3Bit);
  if (FB[Mips::FeatureMips4_32])
    Features.set(Feature_HasMips4_32Bit);
  if (!FB[Mips::FeatureMips4_32])
    Features.set(Feature_NotMips4_32Bit);
  if (FB[Mips::FeatureMips4_32r2])
    Features.set(Feature_HasMips4_32r2Bit);
  if (FB[Mips::FeatureMips5_32r2])
    Features.set(Feature_HasMips5_32r2Bit);
  if (FB[Mips::FeatureMips32])
    Features.set(Feature_HasMips32Bit);
  if (FB[Mips::FeatureMips32r2])
    Features.set(Feature_HasMips32r2Bit);
  if (FB[Mips::FeatureMips32r5])
    Features.set(Feature_HasMips32r5Bit);
  if (FB[Mips::FeatureMips32r6])
    Features.set(Feature_HasMips32r6Bit);
  if (!FB[Mips::FeatureMips32r6])
    Features.set(Feature_NotMips32r6Bit);
  if (FB[Mips::FeatureGP64Bit])
    Features.set(Feature_IsGP64bitBit);
  if (!FB[Mips::FeatureGP64Bit])
    Features.set(Feature_IsGP32bitBit);
  if (FB[Mips::FeaturePTR64Bit])
    Features.set(Feature_IsPTR64bitBit);
  if (!FB[Mips::FeaturePTR64Bit])
    Features.set(Feature_IsPTR32bitBit);
  if (FB[Mips::FeatureMips64])
    Features.set(Feature_HasMips64Bit);
  if (!FB[Mips::FeatureMips64])
    Features.set(Feature_NotMips64Bit);
  if (FB[Mips::FeatureMips64r2])
    Features.set(Feature_HasMips64r2Bit);
  if (FB[Mips::FeatureMips64r5])
    Features.set(Feature_HasMips64r5Bit);
  if (FB[Mips::FeatureMips64r6])
    Features.set(Feature_HasMips64r6Bit);
  if (!FB[Mips::FeatureMips64r6])
    Features.set(Feature_NotMips64r6Bit);
  if (FB[Mips::FeatureMips16])
    Features.set(Feature_InMips16ModeBit);
  if (!FB[Mips::FeatureMips16])
    Features.set(Feature_NotInMips16ModeBit);
  if (FB[Mips::FeatureCnMips])
    Features.set(Feature_HasCnMipsBit);
  if (!FB[Mips::FeatureCnMips])
    Features.set(Feature_NotCnMipsBit);
  if (FB[Mips::FeatureCnMipsP])
    Features.set(Feature_HasCnMipsPBit);
  if (!FB[Mips::FeatureCnMipsP])
    Features.set(Feature_NotCnMipsPBit);
  if (FB[Mips::FeatureSym32])
    Features.set(Feature_IsSym32Bit);
  if (!FB[Mips::FeatureSym32])
    Features.set(Feature_IsSym64Bit);
  if (!FB[Mips::FeatureMips16])
    Features.set(Feature_HasStdEncBit);
  if (FB[Mips::FeatureMicroMips])
    Features.set(Feature_InMicroMipsBit);
  if (!FB[Mips::FeatureMicroMips])
    Features.set(Feature_NotInMicroMipsBit);
  if (FB[Mips::FeatureEVA])
    Features.set(Feature_HasEVABit);
  if (FB[Mips::FeatureMSA])
    Features.set(Feature_HasMSABit);
  if (!FB[Mips::FeatureNoMadd4])
    Features.set(Feature_HasMadd4Bit);
  if (FB[Mips::FeatureMT])
    Features.set(Feature_HasMTBit);
  if (FB[Mips::FeatureUseIndirectJumpsHazard])
    Features.set(Feature_UseIndirectJumpsHazardBit);
  if (!FB[Mips::FeatureUseIndirectJumpsHazard])
    Features.set(Feature_NoIndirectJumpGuardsBit);
  if (FB[Mips::FeatureCRC])
    Features.set(Feature_HasCRCBit);
  if (FB[Mips::FeatureVirt])
    Features.set(Feature_HasVirtBit);
  if (FB[Mips::FeatureGINV])
    Features.set(Feature_HasGINVBit);
  if (FB[Mips::FeatureFP64Bit])
    Features.set(Feature_IsFP64bitBit);
  if (!FB[Mips::FeatureFP64Bit])
    Features.set(Feature_NotFP64bitBit);
  if (FB[Mips::FeatureSingleFloat])
    Features.set(Feature_IsSingleFloatBit);
  if (!FB[Mips::FeatureSingleFloat])
    Features.set(Feature_IsNotSingleFloatBit);
  if (!FB[Mips::FeatureSoftFloat])
    Features.set(Feature_IsNotSoftFloatBit);
  if (FB[Mips::FeatureMips3D])
    Features.set(Feature_HasMips3DBit);
  if (FB[Mips::FeatureDSP])
    Features.set(Feature_HasDSPBit);
  if (FB[Mips::FeatureDSPR2])
    Features.set(Feature_HasDSPR2Bit);
  if (FB[Mips::FeatureDSPR3])
    Features.set(Feature_HasDSPR3Bit);
  return Features;
}

#ifndef NDEBUG
// Feature bitsets.
enum : uint8_t {
  CEFBS_None,
  CEFBS_HasCnMips,
  CEFBS_HasCnMipsP,
  CEFBS_HasDSP,
  CEFBS_HasDSPR2,
  CEFBS_HasMSA,
  CEFBS_HasMT,
  CEFBS_InMicroMips,
  CEFBS_InMips16Mode,
  CEFBS_IsGP32bit,
  CEFBS_IsGP64bit,
  CEFBS_IsNotSoftFloat,
  CEFBS_NotCnMips,
  CEFBS_NotInMips16Mode,
  CEFBS_HasDSP_NotInMicroMips,
  CEFBS_HasStdEnc_HasMSA,
  CEFBS_HasStdEnc_HasMips32,
  CEFBS_HasStdEnc_HasMips32r6,
  CEFBS_HasStdEnc_HasMips64,
  CEFBS_HasStdEnc_HasMips64r6,
  CEFBS_HasStdEnc_IsNotSoftFloat,
  CEFBS_HasStdEnc_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips3,
  CEFBS_HasStdEnc_NotMips4_32,
  CEFBS_InMicroMips_HasDSP,
  CEFBS_InMicroMips_HasDSPR2,
  CEFBS_InMicroMips_HasDSPR3,
  CEFBS_InMicroMips_HasEVA,
  CEFBS_InMicroMips_HasMips32r6,
  CEFBS_InMicroMips_IsNotSoftFloat,
  CEFBS_InMicroMips_NotMips32r6,
  CEFBS_IsFP64bit_IsNotSoftFloat,
  CEFBS_IsGP32bit_NotInMicroMips,
  CEFBS_NotFP64bit_IsNotSoftFloat,
  CEFBS_NotInMips16Mode_HasDSP,
  CEFBS_NotInMips16Mode_IsGP64bit,
  CEFBS_NotInMips16Mode_IsNotSoftFloat,
  CEFBS_NotInMips16Mode_IsPTR64bit,
  CEFBS_HasMips3_NotMips64r6_NotCnMips,
  CEFBS_HasMips64_HasCnMips_NotInMicroMips,
  CEFBS_HasStdEnc_HasMSA_HasMips64,
  CEFBS_HasStdEnc_HasMT_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips2_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips3_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r5_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips3_32_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips64r5_HasVirt,
  CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_NotMips4_32,
  CEFBS_HasStdEnc_IsGP64bit_HasMips3,
  CEFBS_HasStdEnc_IsGP64bit_HasMips32r2,
  CEFBS_HasStdEnc_IsGP64bit_HasMips32r6,
  CEFBS_HasStdEnc_IsGP64bit_HasMips64r6,
  CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat,
  CEFBS_HasStdEnc_NotFP64bit_NotMips4_32,
  CEFBS_HasStdEnc_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_NotInMips16Mode_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips32r6_NotMips64r6,
  CEFBS_InMicroMips_HasMips32r5_HasVirt,
  CEFBS_InMicroMips_HasMips32r6_HasGINV,
  CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat,
  CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat,
  CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat,
  CEFBS_InMicroMips_NotMips32r6_HasDSP,
  CEFBS_InMicroMips_NotMips32r6_HasEVA,
  CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat,
  CEFBS_InMicroMips_NotMips32r6_NotMips64r6,
  CEFBS_NotInMips16Mode_IsFP64bit_IsNotSoftFloat,
  CEFBS_NotInMips16Mode_IsGP64bit_NotInMicroMips,
  CEFBS_NotInMips16Mode_IsPTR64bit_NoIndirectJumpGuards,
  CEFBS_NotInMips16Mode_IsPTR64bit_NotInMicroMips,
  CEFBS_NotInMips16Mode_IsPTR64bit_UseIndirectJumpsHazard,
  CEFBS_NotInMips16Mode_NotFP64bit_IsNotSoftFloat,
  CEFBS_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips2_NotCnMips_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6,
  CEFBS_HasStdEnc_HasMips3_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6,
  CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6,
  CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6,
  CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r6_HasGINV_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips64_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips64r6_HasCRC_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsGP32bit_HasMips32r6_NotInMicroMips,
  CEFBS_HasStdEnc_IsPTR32bit_HasMips32r6_NotInMicroMips,
  CEFBS_HasStdEnc_IsPTR64bit_HasMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_InMicroMips_IsFP64bit_HasMips32r6_IsNotSoftFloat,
  CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat,
  CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat,
  CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat_HasMadd4,
  CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_HasMips3_32_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat,
  CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips3_32_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat,
  CEFBS_HasStdEnc_IsGP64bit_HasMips64_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotCnMips_NotInMicroMips,
  CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat_HasMadd4,
  CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_HasEVA_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat,
  CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_IsPTR32bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_IsPTR64bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips,
  CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4,
  CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMips3D,
  CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips,
  CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4,
  CEFBS_HasStdEnc_IsGP64bit_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips,
  CEFBS_HasStdEnc_IsPTR64bit_HasMips3_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards,
  CEFBS_HasStdEnc_IsPTR64bit_HasMips32r2_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard,
  CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips,
  CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4,
};

static constexpr FeatureBitset FeatureBitsets[] = {
  {}, // CEFBS_None
  {Feature_HasCnMipsBit, },
  {Feature_HasCnMipsPBit, },
  {Feature_HasDSPBit, },
  {Feature_HasDSPR2Bit, },
  {Feature_HasMSABit, },
  {Feature_HasMTBit, },
  {Feature_InMicroMipsBit, },
  {Feature_InMips16ModeBit, },
  {Feature_IsGP32bitBit, },
  {Feature_IsGP64bitBit, },
  {Feature_IsNotSoftFloatBit, },
  {Feature_NotCnMipsBit, },
  {Feature_NotInMips16ModeBit, },
  {Feature_HasDSPBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMSABit, },
  {Feature_HasStdEncBit, Feature_HasMips32Bit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, },
  {Feature_HasStdEncBit, Feature_HasMips64Bit, },
  {Feature_HasStdEncBit, Feature_HasMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_IsNotSoftFloatBit, },
  {Feature_HasStdEncBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips3Bit, },
  {Feature_HasStdEncBit, Feature_NotMips4_32Bit, },
  {Feature_InMicroMipsBit, Feature_HasDSPBit, },
  {Feature_InMicroMipsBit, Feature_HasDSPR2Bit, },
  {Feature_InMicroMipsBit, Feature_HasDSPR3Bit, },
  {Feature_InMicroMipsBit, Feature_HasEVABit, },
  {Feature_InMicroMipsBit, Feature_HasMips32r6Bit, },
  {Feature_InMicroMipsBit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, },
  {Feature_IsFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_IsGP32bitBit, Feature_NotInMicroMipsBit, },
  {Feature_NotFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_NotInMips16ModeBit, Feature_HasDSPBit, },
  {Feature_NotInMips16ModeBit, Feature_IsGP64bitBit, },
  {Feature_NotInMips16ModeBit, Feature_IsNotSoftFloatBit, },
  {Feature_NotInMips16ModeBit, Feature_IsPTR64bitBit, },
  {Feature_HasMips3Bit, Feature_NotMips64r6Bit, Feature_NotCnMipsBit, },
  {Feature_HasMips64Bit, Feature_HasCnMipsBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMSABit, Feature_HasMips64Bit, },
  {Feature_HasStdEncBit, Feature_HasMTBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r2Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r5Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3_32Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r2Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r5Bit, Feature_HasVirtBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_NotMips4_32Bit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips3Bit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips32r2Bit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips32r6Bit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_NotMips4_32Bit, },
  {Feature_HasStdEncBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_InMicroMipsBit, Feature_HasMips32r5Bit, Feature_HasVirtBit, },
  {Feature_InMicroMipsBit, Feature_HasMips32r6Bit, Feature_HasGINVBit, },
  {Feature_InMicroMipsBit, Feature_HasMips32r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_IsFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, Feature_HasDSPBit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, Feature_HasEVABit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_NotInMips16ModeBit, Feature_IsFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_NotInMips16ModeBit, Feature_IsGP64bitBit, Feature_NotInMicroMipsBit, },
  {Feature_NotInMips16ModeBit, Feature_IsPTR64bitBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_NotInMips16ModeBit, Feature_IsPTR64bitBit, Feature_NotInMicroMipsBit, },
  {Feature_NotInMips16ModeBit, Feature_IsPTR64bitBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_NotInMips16ModeBit, Feature_NotFP64bitBit, Feature_IsNotSoftFloatBit, },
  {Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_NotCnMipsBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_HasMips3Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_HasMips32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_HasMips32r2Bit, Feature_HasEVABit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, },
  {Feature_HasStdEncBit, Feature_HasMips32r5Bit, Feature_HasVirtBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_HasCRCBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_HasGINVBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3_32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips64Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r6Bit, Feature_HasCRCBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsGP32bitBit, Feature_HasMips32r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR32bitBit, Feature_HasMips32r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR64bitBit, Feature_HasMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_InMicroMipsBit, Feature_IsFP64bitBit, Feature_HasMips32r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_IsFP64bitBit, Feature_NotMips32r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotFP64bitBit, Feature_NotMips32r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_InMicroMipsBit, Feature_NotMips32r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMadd4Bit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_HasMips3_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_HasMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips3_32Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips3_32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips4_32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips64Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips4_32r2Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotCnMipsBit, Feature_NotInMicroMipsBit, },
  {Feature_InMicroMipsBit, Feature_NotFP64bitBit, Feature_NotMips32r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMadd4Bit, },
  {Feature_HasStdEncBit, Feature_HasMips2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_HasEVABit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR32bitBit, Feature_HasMips2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR64bitBit, Feature_HasMips2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_HasMips3Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_HasMips32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMadd4Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, Feature_HasMadd4Bit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMips3DBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips5_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips5_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMadd4Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, Feature_HasMadd4Bit, },
  {Feature_HasStdEncBit, Feature_IsGP64bitBit, Feature_IsFP64bitBit, Feature_HasMips4_32Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR64bitBit, Feature_HasMips3Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_NoIndirectJumpGuardsBit, },
  {Feature_HasStdEncBit, Feature_IsPTR64bitBit, Feature_HasMips32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_NotInMips16ModeBit, Feature_NotInMicroMipsBit, Feature_UseIndirectJumpsHazardBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_HasMadd4Bit, Feature_NotInMicroMipsBit, },
  {Feature_HasStdEncBit, Feature_NotFP64bitBit, Feature_HasMips4_32r2Bit, Feature_NotMips32r6Bit, Feature_NotMips64r6Bit, Feature_IsNotSoftFloatBit, Feature_NotInMicroMipsBit, Feature_HasMadd4Bit, },
};
#endif // NDEBUG

void verifyInstructionPredicates(
    unsigned Opcode, const FeatureBitset &Features) {
#ifndef NDEBUG
  static uint8_t RequiredFeaturesRefs[] = {
    CEFBS_None, // PHI = 0
    CEFBS_None, // INLINEASM = 1
    CEFBS_None, // INLINEASM_BR = 2
    CEFBS_None, // CFI_INSTRUCTION = 3
    CEFBS_None, // EH_LABEL = 4
    CEFBS_None, // GC_LABEL = 5
    CEFBS_None, // ANNOTATION_LABEL = 6
    CEFBS_None, // KILL = 7
    CEFBS_None, // EXTRACT_SUBREG = 8
    CEFBS_None, // INSERT_SUBREG = 9
    CEFBS_None, // IMPLICIT_DEF = 10
    CEFBS_None, // SUBREG_TO_REG = 11
    CEFBS_None, // COPY_TO_REGCLASS = 12
    CEFBS_None, // DBG_VALUE = 13
    CEFBS_None, // DBG_VALUE_LIST = 14
    CEFBS_None, // DBG_INSTR_REF = 15
    CEFBS_None, // DBG_PHI = 16
    CEFBS_None, // DBG_LABEL = 17
    CEFBS_None, // REG_SEQUENCE = 18
    CEFBS_None, // COPY = 19
    CEFBS_None, // BUNDLE = 20
    CEFBS_None, // LIFETIME_START = 21
    CEFBS_None, // LIFETIME_END = 22
    CEFBS_None, // PSEUDO_PROBE = 23
    CEFBS_None, // ARITH_FENCE = 24
    CEFBS_None, // STACKMAP = 25
    CEFBS_None, // FENTRY_CALL = 26
    CEFBS_None, // PATCHPOINT = 27
    CEFBS_None, // LOAD_STACK_GUARD = 28
    CEFBS_None, // PREALLOCATED_SETUP = 29
    CEFBS_None, // PREALLOCATED_ARG = 30
    CEFBS_None, // STATEPOINT = 31
    CEFBS_None, // LOCAL_ESCAPE = 32
    CEFBS_None, // FAULTING_OP = 33
    CEFBS_None, // PATCHABLE_OP = 34
    CEFBS_None, // PATCHABLE_FUNCTION_ENTER = 35
    CEFBS_None, // PATCHABLE_RET = 36
    CEFBS_None, // PATCHABLE_FUNCTION_EXIT = 37
    CEFBS_None, // PATCHABLE_TAIL_CALL = 38
    CEFBS_None, // PATCHABLE_EVENT_CALL = 39
    CEFBS_None, // PATCHABLE_TYPED_EVENT_CALL = 40
    CEFBS_None, // ICALL_BRANCH_FUNNEL = 41
    CEFBS_None, // MEMBARRIER = 42
    CEFBS_None, // G_ASSERT_SEXT = 43
    CEFBS_None, // G_ASSERT_ZEXT = 44
    CEFBS_None, // G_ASSERT_ALIGN = 45
    CEFBS_None, // G_ADD = 46
    CEFBS_None, // G_SUB = 47
    CEFBS_None, // G_MUL = 48
    CEFBS_None, // G_SDIV = 49
    CEFBS_None, // G_UDIV = 50
    CEFBS_None, // G_SREM = 51
    CEFBS_None, // G_UREM = 52
    CEFBS_None, // G_SDIVREM = 53
    CEFBS_None, // G_UDIVREM = 54
    CEFBS_None, // G_AND = 55
    CEFBS_None, // G_OR = 56
    CEFBS_None, // G_XOR = 57
    CEFBS_None, // G_IMPLICIT_DEF = 58
    CEFBS_None, // G_PHI = 59
    CEFBS_None, // G_FRAME_INDEX = 60
    CEFBS_None, // G_GLOBAL_VALUE = 61
    CEFBS_None, // G_CONSTANT_POOL = 62
    CEFBS_None, // G_EXTRACT = 63
    CEFBS_None, // G_UNMERGE_VALUES = 64
    CEFBS_None, // G_INSERT = 65
    CEFBS_None, // G_MERGE_VALUES = 66
    CEFBS_None, // G_BUILD_VECTOR = 67
    CEFBS_None, // G_BUILD_VECTOR_TRUNC = 68
    CEFBS_None, // G_CONCAT_VECTORS = 69
    CEFBS_None, // G_PTRTOINT = 70
    CEFBS_None, // G_INTTOPTR = 71
    CEFBS_None, // G_BITCAST = 72
    CEFBS_None, // G_FREEZE = 73
    CEFBS_None, // G_INTRINSIC_FPTRUNC_ROUND = 74
    CEFBS_None, // G_INTRINSIC_TRUNC = 75
    CEFBS_None, // G_INTRINSIC_ROUND = 76
    CEFBS_None, // G_INTRINSIC_LRINT = 77
    CEFBS_None, // G_INTRINSIC_ROUNDEVEN = 78
    CEFBS_None, // G_READCYCLECOUNTER = 79
    CEFBS_None, // G_LOAD = 80
    CEFBS_None, // G_SEXTLOAD = 81
    CEFBS_None, // G_ZEXTLOAD = 82
    CEFBS_None, // G_INDEXED_LOAD = 83
    CEFBS_None, // G_INDEXED_SEXTLOAD = 84
    CEFBS_None, // G_INDEXED_ZEXTLOAD = 85
    CEFBS_None, // G_STORE = 86
    CEFBS_None, // G_INDEXED_STORE = 87
    CEFBS_None, // G_ATOMIC_CMPXCHG_WITH_SUCCESS = 88
    CEFBS_None, // G_ATOMIC_CMPXCHG = 89
    CEFBS_None, // G_ATOMICRMW_XCHG = 90
    CEFBS_None, // G_ATOMICRMW_ADD = 91
    CEFBS_None, // G_ATOMICRMW_SUB = 92
    CEFBS_None, // G_ATOMICRMW_AND = 93
    CEFBS_None, // G_ATOMICRMW_NAND = 94
    CEFBS_None, // G_ATOMICRMW_OR = 95
    CEFBS_None, // G_ATOMICRMW_XOR = 96
    CEFBS_None, // G_ATOMICRMW_MAX = 97
    CEFBS_None, // G_ATOMICRMW_MIN = 98
    CEFBS_None, // G_ATOMICRMW_UMAX = 99
    CEFBS_None, // G_ATOMICRMW_UMIN = 100
    CEFBS_None, // G_ATOMICRMW_FADD = 101
    CEFBS_None, // G_ATOMICRMW_FSUB = 102
    CEFBS_None, // G_ATOMICRMW_FMAX = 103
    CEFBS_None, // G_ATOMICRMW_FMIN = 104
    CEFBS_None, // G_ATOMICRMW_UINC_WRAP = 105
    CEFBS_None, // G_ATOMICRMW_UDEC_WRAP = 106
    CEFBS_None, // G_FENCE = 107
    CEFBS_None, // G_BRCOND = 108
    CEFBS_None, // G_BRINDIRECT = 109
    CEFBS_None, // G_INVOKE_REGION_START = 110
    CEFBS_None, // G_INTRINSIC = 111
    CEFBS_None, // G_INTRINSIC_W_SIDE_EFFECTS = 112
    CEFBS_None, // G_ANYEXT = 113
    CEFBS_None, // G_TRUNC = 114
    CEFBS_None, // G_CONSTANT = 115
    CEFBS_None, // G_FCONSTANT = 116
    CEFBS_None, // G_VASTART = 117
    CEFBS_None, // G_VAARG = 118
    CEFBS_None, // G_SEXT = 119
    CEFBS_None, // G_SEXT_INREG = 120
    CEFBS_None, // G_ZEXT = 121
    CEFBS_None, // G_SHL = 122
    CEFBS_None, // G_LSHR = 123
    CEFBS_None, // G_ASHR = 124
    CEFBS_None, // G_FSHL = 125
    CEFBS_None, // G_FSHR = 126
    CEFBS_None, // G_ROTR = 127
    CEFBS_None, // G_ROTL = 128
    CEFBS_None, // G_ICMP = 129
    CEFBS_None, // G_FCMP = 130
    CEFBS_None, // G_SELECT = 131
    CEFBS_None, // G_UADDO = 132
    CEFBS_None, // G_UADDE = 133
    CEFBS_None, // G_USUBO = 134
    CEFBS_None, // G_USUBE = 135
    CEFBS_None, // G_SADDO = 136
    CEFBS_None, // G_SADDE = 137
    CEFBS_None, // G_SSUBO = 138
    CEFBS_None, // G_SSUBE = 139
    CEFBS_None, // G_UMULO = 140
    CEFBS_None, // G_SMULO = 141
    CEFBS_None, // G_UMULH = 142
    CEFBS_None, // G_SMULH = 143
    CEFBS_None, // G_UADDSAT = 144
    CEFBS_None, // G_SADDSAT = 145
    CEFBS_None, // G_USUBSAT = 146
    CEFBS_None, // G_SSUBSAT = 147
    CEFBS_None, // G_USHLSAT = 148
    CEFBS_None, // G_SSHLSAT = 149
    CEFBS_None, // G_SMULFIX = 150
    CEFBS_None, // G_UMULFIX = 151
    CEFBS_None, // G_SMULFIXSAT = 152
    CEFBS_None, // G_UMULFIXSAT = 153
    CEFBS_None, // G_SDIVFIX = 154
    CEFBS_None, // G_UDIVFIX = 155
    CEFBS_None, // G_SDIVFIXSAT = 156
    CEFBS_None, // G_UDIVFIXSAT = 157
    CEFBS_None, // G_FADD = 158
    CEFBS_None, // G_FSUB = 159
    CEFBS_None, // G_FMUL = 160
    CEFBS_None, // G_FMA = 161
    CEFBS_None, // G_FMAD = 162
    CEFBS_None, // G_FDIV = 163
    CEFBS_None, // G_FREM = 164
    CEFBS_None, // G_FPOW = 165
    CEFBS_None, // G_FPOWI = 166
    CEFBS_None, // G_FEXP = 167
    CEFBS_None, // G_FEXP2 = 168
    CEFBS_None, // G_FLOG = 169
    CEFBS_None, // G_FLOG2 = 170
    CEFBS_None, // G_FLOG10 = 171
    CEFBS_None, // G_FNEG = 172
    CEFBS_None, // G_FPEXT = 173
    CEFBS_None, // G_FPTRUNC = 174
    CEFBS_None, // G_FPTOSI = 175
    CEFBS_None, // G_FPTOUI = 176
    CEFBS_None, // G_SITOFP = 177
    CEFBS_None, // G_UITOFP = 178
    CEFBS_None, // G_FABS = 179
    CEFBS_None, // G_FCOPYSIGN = 180
    CEFBS_None, // G_IS_FPCLASS = 181
    CEFBS_None, // G_FCANONICALIZE = 182
    CEFBS_None, // G_FMINNUM = 183
    CEFBS_None, // G_FMAXNUM = 184
    CEFBS_None, // G_FMINNUM_IEEE = 185
    CEFBS_None, // G_FMAXNUM_IEEE = 186
    CEFBS_None, // G_FMINIMUM = 187
    CEFBS_None, // G_FMAXIMUM = 188
    CEFBS_None, // G_PTR_ADD = 189
    CEFBS_None, // G_PTRMASK = 190
    CEFBS_None, // G_SMIN = 191
    CEFBS_None, // G_SMAX = 192
    CEFBS_None, // G_UMIN = 193
    CEFBS_None, // G_UMAX = 194
    CEFBS_None, // G_ABS = 195
    CEFBS_None, // G_LROUND = 196
    CEFBS_None, // G_LLROUND = 197
    CEFBS_None, // G_BR = 198
    CEFBS_None, // G_BRJT = 199
    CEFBS_None, // G_INSERT_VECTOR_ELT = 200
    CEFBS_None, // G_EXTRACT_VECTOR_ELT = 201
    CEFBS_None, // G_SHUFFLE_VECTOR = 202
    CEFBS_None, // G_CTTZ = 203
    CEFBS_None, // G_CTTZ_ZERO_UNDEF = 204
    CEFBS_None, // G_CTLZ = 205
    CEFBS_None, // G_CTLZ_ZERO_UNDEF = 206
    CEFBS_None, // G_CTPOP = 207
    CEFBS_None, // G_BSWAP = 208
    CEFBS_None, // G_BITREVERSE = 209
    CEFBS_None, // G_FCEIL = 210
    CEFBS_None, // G_FCOS = 211
    CEFBS_None, // G_FSIN = 212
    CEFBS_None, // G_FSQRT = 213
    CEFBS_None, // G_FFLOOR = 214
    CEFBS_None, // G_FRINT = 215
    CEFBS_None, // G_FNEARBYINT = 216
    CEFBS_None, // G_ADDRSPACE_CAST = 217
    CEFBS_None, // G_BLOCK_ADDR = 218
    CEFBS_None, // G_JUMP_TABLE = 219
    CEFBS_None, // G_DYN_STACKALLOC = 220
    CEFBS_None, // G_STRICT_FADD = 221
    CEFBS_None, // G_STRICT_FSUB = 222
    CEFBS_None, // G_STRICT_FMUL = 223
    CEFBS_None, // G_STRICT_FDIV = 224
    CEFBS_None, // G_STRICT_FREM = 225
    CEFBS_None, // G_STRICT_FMA = 226
    CEFBS_None, // G_STRICT_FSQRT = 227
    CEFBS_None, // G_READ_REGISTER = 228
    CEFBS_None, // G_WRITE_REGISTER = 229
    CEFBS_None, // G_MEMCPY = 230
    CEFBS_None, // G_MEMCPY_INLINE = 231
    CEFBS_None, // G_MEMMOVE = 232
    CEFBS_None, // G_MEMSET = 233
    CEFBS_None, // G_BZERO = 234
    CEFBS_None, // G_VECREDUCE_SEQ_FADD = 235
    CEFBS_None, // G_VECREDUCE_SEQ_FMUL = 236
    CEFBS_None, // G_VECREDUCE_FADD = 237
    CEFBS_None, // G_VECREDUCE_FMUL = 238
    CEFBS_None, // G_VECREDUCE_FMAX = 239
    CEFBS_None, // G_VECREDUCE_FMIN = 240
    CEFBS_None, // G_VECREDUCE_ADD = 241
    CEFBS_None, // G_VECREDUCE_MUL = 242
    CEFBS_None, // G_VECREDUCE_AND = 243
    CEFBS_None, // G_VECREDUCE_OR = 244
    CEFBS_None, // G_VECREDUCE_XOR = 245
    CEFBS_None, // G_VECREDUCE_SMAX = 246
    CEFBS_None, // G_VECREDUCE_SMIN = 247
    CEFBS_None, // G_VECREDUCE_UMAX = 248
    CEFBS_None, // G_VECREDUCE_UMIN = 249
    CEFBS_None, // G_SBFX = 250
    CEFBS_None, // G_UBFX = 251
    CEFBS_None, // ABSMacro = 252
    CEFBS_None, // ADJCALLSTACKDOWN = 253
    CEFBS_None, // ADJCALLSTACKUP = 254
    CEFBS_HasStdEnc_HasMSA, // AND_V_D_PSEUDO = 255
    CEFBS_HasStdEnc_HasMSA, // AND_V_H_PSEUDO = 256
    CEFBS_HasStdEnc_HasMSA, // AND_V_W_PSEUDO = 257
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I16 = 258
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I16_POSTRA = 259
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I32 = 260
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I32_POSTRA = 261
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I64 = 262
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I64_POSTRA = 263
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I8 = 264
    CEFBS_NotInMips16Mode, // ATOMIC_CMP_SWAP_I8_POSTRA = 265
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I16 = 266
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I16_POSTRA = 267
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I32 = 268
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I32_POSTRA = 269
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I64 = 270
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I64_POSTRA = 271
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I8 = 272
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_ADD_I8_POSTRA = 273
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I16 = 274
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I16_POSTRA = 275
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I32 = 276
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I32_POSTRA = 277
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I64 = 278
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I64_POSTRA = 279
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I8 = 280
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_AND_I8_POSTRA = 281
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I16 = 282
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I16_POSTRA = 283
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I32 = 284
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I32_POSTRA = 285
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I64 = 286
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I64_POSTRA = 287
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I8 = 288
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MAX_I8_POSTRA = 289
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I16 = 290
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I16_POSTRA = 291
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I32 = 292
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I32_POSTRA = 293
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I64 = 294
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I64_POSTRA = 295
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I8 = 296
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_MIN_I8_POSTRA = 297
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I16 = 298
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I16_POSTRA = 299
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I32 = 300
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I32_POSTRA = 301
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I64 = 302
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I64_POSTRA = 303
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I8 = 304
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_NAND_I8_POSTRA = 305
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I16 = 306
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I16_POSTRA = 307
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I32 = 308
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I32_POSTRA = 309
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I64 = 310
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I64_POSTRA = 311
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I8 = 312
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_OR_I8_POSTRA = 313
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I16 = 314
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I16_POSTRA = 315
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I32 = 316
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I32_POSTRA = 317
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I64 = 318
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I64_POSTRA = 319
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I8 = 320
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_SUB_I8_POSTRA = 321
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I16 = 322
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I16_POSTRA = 323
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I32 = 324
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I32_POSTRA = 325
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I64 = 326
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I64_POSTRA = 327
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I8 = 328
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMAX_I8_POSTRA = 329
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I16 = 330
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I16_POSTRA = 331
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I32 = 332
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I32_POSTRA = 333
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I64 = 334
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I64_POSTRA = 335
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I8 = 336
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_UMIN_I8_POSTRA = 337
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I16 = 338
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I16_POSTRA = 339
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I32 = 340
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I32_POSTRA = 341
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I64 = 342
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I64_POSTRA = 343
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I8 = 344
    CEFBS_NotInMips16Mode, // ATOMIC_LOAD_XOR_I8_POSTRA = 345
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I16 = 346
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I16_POSTRA = 347
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I32 = 348
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I32_POSTRA = 349
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I64 = 350
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I64_POSTRA = 351
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I8 = 352
    CEFBS_NotInMips16Mode, // ATOMIC_SWAP_I8_POSTRA = 353
    CEFBS_HasStdEnc_NotInMicroMips, // B = 354
    CEFBS_HasStdEnc_NotInMicroMips, // BAL_BR = 355
    CEFBS_InMicroMips_NotMips32r6, // BAL_BR_MM = 356
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BEQLImmMacro = 357
    CEFBS_None, // BGE = 358
    CEFBS_None, // BGEImmMacro = 359
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGEL = 360
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGELImmMacro = 361
    CEFBS_None, // BGEU = 362
    CEFBS_None, // BGEUImmMacro = 363
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGEUL = 364
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGEULImmMacro = 365
    CEFBS_None, // BGT = 366
    CEFBS_None, // BGTImmMacro = 367
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGTL = 368
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGTLImmMacro = 369
    CEFBS_None, // BGTU = 370
    CEFBS_None, // BGTUImmMacro = 371
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGTUL = 372
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BGTULImmMacro = 373
    CEFBS_None, // BLE = 374
    CEFBS_None, // BLEImmMacro = 375
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLEL = 376
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLELImmMacro = 377
    CEFBS_None, // BLEU = 378
    CEFBS_None, // BLEUImmMacro = 379
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLEUL = 380
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLEULImmMacro = 381
    CEFBS_None, // BLT = 382
    CEFBS_None, // BLTImmMacro = 383
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLTL = 384
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLTLImmMacro = 385
    CEFBS_None, // BLTU = 386
    CEFBS_None, // BLTUImmMacro = 387
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLTUL = 388
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BLTULImmMacro = 389
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6, // BNELImmMacro = 390
    CEFBS_None, // BPOSGE32_PSEUDO = 391
    CEFBS_HasStdEnc_HasMSA, // BSEL_D_PSEUDO = 392
    CEFBS_HasStdEnc_HasMSA, // BSEL_FD_PSEUDO = 393
    CEFBS_HasStdEnc_HasMSA, // BSEL_FW_PSEUDO = 394
    CEFBS_HasStdEnc_HasMSA, // BSEL_H_PSEUDO = 395
    CEFBS_HasStdEnc_HasMSA, // BSEL_W_PSEUDO = 396
    CEFBS_InMicroMips_NotMips32r6, // B_MM = 397
    CEFBS_None, // B_MMR6_Pseudo = 398
    CEFBS_InMicroMips, // B_MM_Pseudo = 399
    CEFBS_None, // BeqImm = 400
    CEFBS_None, // BneImm = 401
    CEFBS_InMips16Mode, // BteqzT8CmpX16 = 402
    CEFBS_InMips16Mode, // BteqzT8CmpiX16 = 403
    CEFBS_InMips16Mode, // BteqzT8SltX16 = 404
    CEFBS_InMips16Mode, // BteqzT8SltiX16 = 405
    CEFBS_InMips16Mode, // BteqzT8SltiuX16 = 406
    CEFBS_InMips16Mode, // BteqzT8SltuX16 = 407
    CEFBS_InMips16Mode, // BtnezT8CmpX16 = 408
    CEFBS_InMips16Mode, // BtnezT8CmpiX16 = 409
    CEFBS_InMips16Mode, // BtnezT8SltX16 = 410
    CEFBS_InMips16Mode, // BtnezT8SltiX16 = 411
    CEFBS_InMips16Mode, // BtnezT8SltiuX16 = 412
    CEFBS_InMips16Mode, // BtnezT8SltuX16 = 413
    CEFBS_NotInMips16Mode_NotFP64bit_IsNotSoftFloat, // BuildPairF64 = 414
    CEFBS_NotInMips16Mode_IsFP64bit_IsNotSoftFloat, // BuildPairF64_64 = 415
    CEFBS_HasMT, // CFTC1 = 416
    CEFBS_InMips16Mode, // CONSTPOOL_ENTRY = 417
    CEFBS_HasStdEnc_HasMSA, // COPY_FD_PSEUDO = 418
    CEFBS_HasStdEnc_HasMSA, // COPY_FW_PSEUDO = 419
    CEFBS_HasMT, // CTTC1 = 420
    CEFBS_InMips16Mode, // Constant32 = 421
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // DMULImmMacro = 422
    CEFBS_HasMips3_NotMips64r6_NotCnMips, // DMULMacro = 423
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // DMULOMacro = 424
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // DMULOUMacro = 425
    CEFBS_HasStdEnc_HasMips64, // DROL = 426
    CEFBS_HasStdEnc_HasMips64, // DROLImm = 427
    CEFBS_HasStdEnc_HasMips64, // DROR = 428
    CEFBS_HasStdEnc_HasMips64, // DRORImm = 429
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DSDivIMacro = 430
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DSDivMacro = 431
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DSRemIMacro = 432
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DSRemMacro = 433
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DUDivIMacro = 434
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DUDivMacro = 435
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DURemIMacro = 436
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DURemMacro = 437
    CEFBS_NotInMips16Mode, // ERet = 438
    CEFBS_NotInMips16Mode_NotFP64bit_IsNotSoftFloat, // ExtractElementF64 = 439
    CEFBS_NotInMips16Mode_IsFP64bit_IsNotSoftFloat, // ExtractElementF64_64 = 440
    CEFBS_HasStdEnc_HasMSA, // FABS_D = 441
    CEFBS_HasStdEnc_HasMSA, // FABS_W = 442
    CEFBS_HasStdEnc_HasMSA, // FEXP2_D_1_PSEUDO = 443
    CEFBS_HasStdEnc_HasMSA, // FEXP2_W_1_PSEUDO = 444
    CEFBS_HasStdEnc_HasMSA, // FILL_FD_PSEUDO = 445
    CEFBS_HasStdEnc_HasMSA, // FILL_FW_PSEUDO = 446
    CEFBS_InMips16Mode, // GotPrologue16 = 447
    CEFBS_HasStdEnc_HasMSA, // INSERT_B_VIDX64_PSEUDO = 448
    CEFBS_HasStdEnc_HasMSA, // INSERT_B_VIDX_PSEUDO = 449
    CEFBS_HasStdEnc_HasMSA, // INSERT_D_VIDX64_PSEUDO = 450
    CEFBS_HasStdEnc_HasMSA, // INSERT_D_VIDX_PSEUDO = 451
    CEFBS_HasStdEnc_HasMSA, // INSERT_FD_PSEUDO = 452
    CEFBS_HasStdEnc_HasMSA, // INSERT_FD_VIDX64_PSEUDO = 453
    CEFBS_HasStdEnc_HasMSA, // INSERT_FD_VIDX_PSEUDO = 454
    CEFBS_HasStdEnc_HasMSA, // INSERT_FW_PSEUDO = 455
    CEFBS_HasStdEnc_HasMSA, // INSERT_FW_VIDX64_PSEUDO = 456
    CEFBS_HasStdEnc_HasMSA, // INSERT_FW_VIDX_PSEUDO = 457
    CEFBS_HasStdEnc_HasMSA, // INSERT_H_VIDX64_PSEUDO = 458
    CEFBS_HasStdEnc_HasMSA, // INSERT_H_VIDX_PSEUDO = 459
    CEFBS_HasStdEnc_HasMSA, // INSERT_W_VIDX64_PSEUDO = 460
    CEFBS_HasStdEnc_HasMSA, // INSERT_W_VIDX_PSEUDO = 461
    CEFBS_NotInMips16Mode_IsPTR64bit_NoIndirectJumpGuards, // JALR64Pseudo = 462
    CEFBS_NotInMips16Mode_IsPTR64bit_UseIndirectJumpsHazard, // JALRHB64Pseudo = 463
    CEFBS_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // JALRHBPseudo = 464
    CEFBS_HasStdEnc_NotInMicroMips_NoIndirectJumpGuards, // JALRPseudo = 465
    CEFBS_InMicroMips_HasMips32r6, // JAL_MMR6 = 466
    CEFBS_None, // JalOneReg = 467
    CEFBS_None, // JalTwoReg = 468
    CEFBS_HasStdEnc_NotMips3, // LDMacro = 469
    CEFBS_NotInMips16Mode, // LDR_D = 470
    CEFBS_NotInMips16Mode, // LDR_W = 471
    CEFBS_HasMSA, // LD_F16 = 472
    CEFBS_NotInMips16Mode, // LOAD_ACC128 = 473
    CEFBS_NotInMips16Mode, // LOAD_ACC64 = 474
    CEFBS_NotInMips16Mode, // LOAD_ACC64DSP = 475
    CEFBS_NotInMips16Mode, // LOAD_CCOND_DSP = 476
    CEFBS_NotInMips16Mode, // LONG_BRANCH_ADDiu = 477
    CEFBS_NotInMips16Mode, // LONG_BRANCH_ADDiu2Op = 478
    CEFBS_NotInMips16Mode_IsGP64bit, // LONG_BRANCH_DADDiu = 479
    CEFBS_NotInMips16Mode_IsGP64bit, // LONG_BRANCH_DADDiu2Op = 480
    CEFBS_NotInMips16Mode, // LONG_BRANCH_LUi = 481
    CEFBS_NotInMips16Mode, // LONG_BRANCH_LUi2Op = 482
    CEFBS_NotInMips16Mode_IsGP64bit, // LONG_BRANCH_LUi2Op_64 = 483
    CEFBS_InMicroMips, // LWM_MM = 484
    CEFBS_None, // LoadAddrImm32 = 485
    CEFBS_None, // LoadAddrImm64 = 486
    CEFBS_None, // LoadAddrReg32 = 487
    CEFBS_None, // LoadAddrReg64 = 488
    CEFBS_None, // LoadImm32 = 489
    CEFBS_None, // LoadImm64 = 490
    CEFBS_IsFP64bit_IsNotSoftFloat, // LoadImmDoubleFGR = 491
    CEFBS_NotFP64bit_IsNotSoftFloat, // LoadImmDoubleFGR_32 = 492
    CEFBS_None, // LoadImmDoubleGPR = 493
    CEFBS_IsNotSoftFloat, // LoadImmSingleFGR = 494
    CEFBS_None, // LoadImmSingleGPR = 495
    CEFBS_InMips16Mode, // LwConstant32 = 496
    CEFBS_HasMT, // MFTACX = 497
    CEFBS_HasMT, // MFTC0 = 498
    CEFBS_HasMT, // MFTC1 = 499
    CEFBS_HasMT, // MFTDSP = 500
    CEFBS_HasMT, // MFTGPR = 501
    CEFBS_HasMT, // MFTHC1 = 502
    CEFBS_HasMT, // MFTHI = 503
    CEFBS_HasMT, // MFTLO = 504
    CEFBS_None, // MIPSeh_return32 = 505
    CEFBS_None, // MIPSeh_return64 = 506
    CEFBS_HasMSA, // MSA_FP_EXTEND_D_PSEUDO = 507
    CEFBS_HasMSA, // MSA_FP_EXTEND_W_PSEUDO = 508
    CEFBS_HasMSA, // MSA_FP_ROUND_D_PSEUDO = 509
    CEFBS_HasMSA, // MSA_FP_ROUND_W_PSEUDO = 510
    CEFBS_HasMT, // MTTACX = 511
    CEFBS_HasMT, // MTTC0 = 512
    CEFBS_HasMT, // MTTC1 = 513
    CEFBS_HasMT, // MTTDSP = 514
    CEFBS_HasMT, // MTTGPR = 515
    CEFBS_HasMT, // MTTHC1 = 516
    CEFBS_HasMT, // MTTHI = 517
    CEFBS_HasMT, // MTTLO = 518
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // MULImmMacro = 519
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // MULOMacro = 520
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // MULOUMacro = 521
    CEFBS_InMips16Mode, // MultRxRy16 = 522
    CEFBS_InMips16Mode, // MultRxRyRz16 = 523
    CEFBS_InMips16Mode, // MultuRxRy16 = 524
    CEFBS_InMips16Mode, // MultuRxRyRz16 = 525
    CEFBS_HasStdEnc_NotInMicroMips, // NOP = 526
    CEFBS_IsGP32bit, // NORImm = 527
    CEFBS_IsGP64bit, // NORImm64 = 528
    CEFBS_HasStdEnc_HasMSA, // NOR_V_D_PSEUDO = 529
    CEFBS_HasStdEnc_HasMSA, // NOR_V_H_PSEUDO = 530
    CEFBS_HasStdEnc_HasMSA, // NOR_V_W_PSEUDO = 531
    CEFBS_HasStdEnc_HasMSA, // OR_V_D_PSEUDO = 532
    CEFBS_HasStdEnc_HasMSA, // OR_V_H_PSEUDO = 533
    CEFBS_HasStdEnc_HasMSA, // OR_V_W_PSEUDO = 534
    CEFBS_HasDSP, // PseudoCMPU_EQ_QB = 535
    CEFBS_HasDSP, // PseudoCMPU_LE_QB = 536
    CEFBS_HasDSP, // PseudoCMPU_LT_QB = 537
    CEFBS_HasDSP, // PseudoCMP_EQ_PH = 538
    CEFBS_HasDSP, // PseudoCMP_LE_PH = 539
    CEFBS_HasDSP, // PseudoCMP_LT_PH = 540
    CEFBS_NotInMips16Mode_IsNotSoftFloat, // PseudoCVT_D32_W = 541
    CEFBS_NotInMips16Mode_IsNotSoftFloat, // PseudoCVT_D64_L = 542
    CEFBS_NotInMips16Mode_IsNotSoftFloat, // PseudoCVT_D64_W = 543
    CEFBS_NotInMips16Mode_IsNotSoftFloat, // PseudoCVT_S_L = 544
    CEFBS_NotInMips16Mode_IsNotSoftFloat, // PseudoCVT_S_W = 545
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoDMULT = 546
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoDMULTu = 547
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoDSDIV = 548
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoDUDIV = 549
    CEFBS_HasStdEnc_NotMips4_32, // PseudoD_SELECT_I = 550
    CEFBS_HasStdEnc_NotMips4_32, // PseudoD_SELECT_I64 = 551
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // PseudoIndirectBranch = 552
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // PseudoIndirectBranch64 = 553
    CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // PseudoIndirectBranch64R6 = 554
    CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // PseudoIndirectBranchR6 = 555
    CEFBS_InMicroMips_NotMips32r6, // PseudoIndirectBranch_MM = 556
    CEFBS_InMicroMips_HasMips32r6, // PseudoIndirectBranch_MMR6 = 557
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // PseudoIndirectHazardBranch = 558
    CEFBS_HasStdEnc_IsPTR64bit_HasMips32r2_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // PseudoIndirectHazardBranch64 = 559
    CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // PseudoIndrectHazardBranch64R6 = 560
    CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // PseudoIndrectHazardBranchR6 = 561
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6, // PseudoMADD = 562
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6, // PseudoMADDU = 563
    CEFBS_InMicroMips_NotMips32r6, // PseudoMADDU_MM = 564
    CEFBS_InMicroMips_NotMips32r6, // PseudoMADD_MM = 565
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // PseudoMFHI = 566
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoMFHI64 = 567
    CEFBS_InMicroMips_NotMips32r6, // PseudoMFHI_MM = 568
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // PseudoMFLO = 569
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoMFLO64 = 570
    CEFBS_InMicroMips_NotMips32r6, // PseudoMFLO_MM = 571
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6, // PseudoMSUB = 572
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6, // PseudoMSUBU = 573
    CEFBS_InMicroMips_NotMips32r6, // PseudoMSUBU_MM = 574
    CEFBS_InMicroMips_NotMips32r6, // PseudoMSUB_MM = 575
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // PseudoMTLOHI = 576
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // PseudoMTLOHI64 = 577
    CEFBS_NotInMips16Mode_HasDSP, // PseudoMTLOHI_DSP = 578
    CEFBS_InMicroMips_NotMips32r6, // PseudoMTLOHI_MM = 579
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // PseudoMULT = 580
    CEFBS_InMicroMips_NotMips32r6, // PseudoMULT_MM = 581
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // PseudoMULTu = 582
    CEFBS_InMicroMips_NotMips32r6, // PseudoMULTu_MM = 583
    CEFBS_HasDSP, // PseudoPICK_PH = 584
    CEFBS_HasDSP, // PseudoPICK_QB = 585
    CEFBS_None, // PseudoReturn = 586
    CEFBS_IsGP64bit, // PseudoReturn64 = 587
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // PseudoSDIV = 588
    CEFBS_HasStdEnc_NotFP64bit_NotMips4_32, // PseudoSELECTFP_F_D32 = 589
    CEFBS_HasStdEnc_IsFP64bit_NotMips4_32, // PseudoSELECTFP_F_D64 = 590
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_F_I = 591
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_F_I64 = 592
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_F_S = 593
    CEFBS_HasStdEnc_NotFP64bit_NotMips4_32, // PseudoSELECTFP_T_D32 = 594
    CEFBS_HasStdEnc_IsFP64bit_NotMips4_32, // PseudoSELECTFP_T_D64 = 595
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_T_I = 596
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_T_I64 = 597
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECTFP_T_S = 598
    CEFBS_HasStdEnc_NotFP64bit_NotMips4_32, // PseudoSELECT_D32 = 599
    CEFBS_HasStdEnc_IsFP64bit_NotMips4_32, // PseudoSELECT_D64 = 600
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECT_I = 601
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECT_I64 = 602
    CEFBS_HasStdEnc_NotMips4_32, // PseudoSELECT_S = 603
    CEFBS_IsFP64bit_IsNotSoftFloat, // PseudoTRUNC_W_D = 604
    CEFBS_NotFP64bit_IsNotSoftFloat, // PseudoTRUNC_W_D32 = 605
    CEFBS_None, // PseudoTRUNC_W_S = 606
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // PseudoUDIV = 607
    CEFBS_None, // ROL = 608
    CEFBS_None, // ROLImm = 609
    CEFBS_None, // ROR = 610
    CEFBS_None, // RORImm = 611
    CEFBS_NotInMips16Mode, // RetRA = 612
    CEFBS_InMips16Mode, // RetRA16 = 613
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat, // SDC1_M1 = 614
    CEFBS_InMicroMips_NotMips32r6_NotMips64r6, // SDIV_MM_Pseudo = 615
    CEFBS_HasStdEnc_NotMips3, // SDMacro = 616
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // SDivIMacro = 617
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // SDivMacro = 618
    CEFBS_NotCnMips, // SEQIMacro = 619
    CEFBS_NotCnMips, // SEQMacro = 620
    CEFBS_HasStdEnc_NotInMicroMips, // SGE = 621
    CEFBS_IsGP32bit_NotInMicroMips, // SGEImm = 622
    CEFBS_IsGP64bit, // SGEImm64 = 623
    CEFBS_HasStdEnc_NotInMicroMips, // SGEU = 624
    CEFBS_IsGP32bit_NotInMicroMips, // SGEUImm = 625
    CEFBS_IsGP64bit, // SGEUImm64 = 626
    CEFBS_IsGP32bit_NotInMicroMips, // SGTImm = 627
    CEFBS_IsGP64bit, // SGTImm64 = 628
    CEFBS_IsGP32bit_NotInMicroMips, // SGTUImm = 629
    CEFBS_IsGP64bit, // SGTUImm64 = 630
    CEFBS_HasStdEnc_NotInMicroMips, // SLE = 631
    CEFBS_IsGP32bit_NotInMicroMips, // SLEImm = 632
    CEFBS_IsGP64bit, // SLEImm64 = 633
    CEFBS_HasStdEnc_NotInMicroMips, // SLEU = 634
    CEFBS_IsGP32bit_NotInMicroMips, // SLEUImm = 635
    CEFBS_IsGP64bit, // SLEUImm64 = 636
    CEFBS_IsGP64bit, // SLTImm64 = 637
    CEFBS_IsGP64bit, // SLTUImm64 = 638
    CEFBS_NotCnMips, // SNEIMacro = 639
    CEFBS_NotCnMips, // SNEMacro = 640
    CEFBS_None, // SNZ_B_PSEUDO = 641
    CEFBS_None, // SNZ_D_PSEUDO = 642
    CEFBS_None, // SNZ_H_PSEUDO = 643
    CEFBS_None, // SNZ_V_PSEUDO = 644
    CEFBS_None, // SNZ_W_PSEUDO = 645
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // SRemIMacro = 646
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // SRemMacro = 647
    CEFBS_NotInMips16Mode, // STORE_ACC128 = 648
    CEFBS_NotInMips16Mode, // STORE_ACC64 = 649
    CEFBS_NotInMips16Mode, // STORE_ACC64DSP = 650
    CEFBS_NotInMips16Mode, // STORE_CCOND_DSP = 651
    CEFBS_NotInMips16Mode, // STR_D = 652
    CEFBS_NotInMips16Mode, // STR_W = 653
    CEFBS_HasMSA, // ST_F16 = 654
    CEFBS_InMicroMips, // SWM_MM = 655
    CEFBS_None, // SZ_B_PSEUDO = 656
    CEFBS_None, // SZ_D_PSEUDO = 657
    CEFBS_None, // SZ_H_PSEUDO = 658
    CEFBS_None, // SZ_V_PSEUDO = 659
    CEFBS_None, // SZ_W_PSEUDO = 660
    CEFBS_HasCnMipsP, // SaaAddr = 661
    CEFBS_HasCnMipsP, // SaadAddr = 662
    CEFBS_InMips16Mode, // SelBeqZ = 663
    CEFBS_InMips16Mode, // SelBneZ = 664
    CEFBS_InMips16Mode, // SelTBteqZCmp = 665
    CEFBS_InMips16Mode, // SelTBteqZCmpi = 666
    CEFBS_InMips16Mode, // SelTBteqZSlt = 667
    CEFBS_InMips16Mode, // SelTBteqZSlti = 668
    CEFBS_InMips16Mode, // SelTBteqZSltiu = 669
    CEFBS_InMips16Mode, // SelTBteqZSltu = 670
    CEFBS_InMips16Mode, // SelTBtneZCmp = 671
    CEFBS_InMips16Mode, // SelTBtneZCmpi = 672
    CEFBS_InMips16Mode, // SelTBtneZSlt = 673
    CEFBS_InMips16Mode, // SelTBtneZSlti = 674
    CEFBS_InMips16Mode, // SelTBtneZSltiu = 675
    CEFBS_InMips16Mode, // SelTBtneZSltu = 676
    CEFBS_InMips16Mode, // SltCCRxRy16 = 677
    CEFBS_InMips16Mode, // SltiCCRxImmX16 = 678
    CEFBS_InMips16Mode, // SltiuCCRxImmX16 = 679
    CEFBS_InMips16Mode, // SltuCCRxRy16 = 680
    CEFBS_InMips16Mode, // SltuRxRyRz16 = 681
    CEFBS_HasStdEnc_NotInMips16Mode_NotInMicroMips, // TAILCALL = 682
    CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // TAILCALL64R6REG = 683
    CEFBS_HasStdEnc_HasMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // TAILCALLHB64R6REG = 684
    CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // TAILCALLHBR6REG = 685
    CEFBS_HasStdEnc_HasMips32r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // TAILCALLR6REG = 686
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // TAILCALLREG = 687
    CEFBS_HasStdEnc_IsPTR64bit_HasMips3_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_NoIndirectJumpGuards, // TAILCALLREG64 = 688
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // TAILCALLREGHB = 689
    CEFBS_HasStdEnc_IsPTR64bit_HasMips32r2_NotMips32r6_NotMips64r6_NotInMips16Mode_NotInMicroMips_UseIndirectJumpsHazard, // TAILCALLREGHB64 = 690
    CEFBS_InMicroMips_NotMips32r6, // TAILCALLREG_MM = 691
    CEFBS_InMicroMips_HasMips32r6, // TAILCALLREG_MMR6 = 692
    CEFBS_InMicroMips_NotMips32r6, // TAILCALL_MM = 693
    CEFBS_InMicroMips_HasMips32r6, // TAILCALL_MMR6 = 694
    CEFBS_HasStdEnc_NotInMicroMips, // TRAP = 695
    CEFBS_InMicroMips, // TRAP_MM = 696
    CEFBS_InMicroMips_NotMips32r6_NotMips64r6, // UDIV_MM_Pseudo = 697
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // UDivIMacro = 698
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // UDivMacro = 699
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // URemIMacro = 700
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6, // URemMacro = 701
    CEFBS_None, // Ulh = 702
    CEFBS_None, // Ulhu = 703
    CEFBS_None, // Ulw = 704
    CEFBS_None, // Ush = 705
    CEFBS_None, // Usw = 706
    CEFBS_HasStdEnc_HasMSA, // XOR_V_D_PSEUDO = 707
    CEFBS_HasStdEnc_HasMSA, // XOR_V_H_PSEUDO = 708
    CEFBS_HasStdEnc_HasMSA, // XOR_V_W_PSEUDO = 709
    CEFBS_HasDSP, // ABSQ_S_PH = 710
    CEFBS_InMicroMips_HasDSP, // ABSQ_S_PH_MM = 711
    CEFBS_HasDSPR2, // ABSQ_S_QB = 712
    CEFBS_InMicroMips_HasDSPR2, // ABSQ_S_QB_MMR2 = 713
    CEFBS_HasDSP, // ABSQ_S_W = 714
    CEFBS_InMicroMips_HasDSP, // ABSQ_S_W_MM = 715
    CEFBS_HasStdEnc_NotInMicroMips, // ADD = 716
    CEFBS_HasStdEnc_HasMips32r6, // ADDIUPC = 717
    CEFBS_InMicroMips_NotMips32r6, // ADDIUPC_MM = 718
    CEFBS_InMicroMips_HasMips32r6, // ADDIUPC_MMR6 = 719
    CEFBS_InMicroMips, // ADDIUR1SP_MM = 720
    CEFBS_InMicroMips, // ADDIUR2_MM = 721
    CEFBS_InMicroMips, // ADDIUS5_MM = 722
    CEFBS_InMicroMips, // ADDIUSP_MM = 723
    CEFBS_InMicroMips_HasMips32r6, // ADDIU_MMR6 = 724
    CEFBS_HasDSPR2, // ADDQH_PH = 725
    CEFBS_InMicroMips_HasDSPR2, // ADDQH_PH_MMR2 = 726
    CEFBS_HasDSPR2, // ADDQH_R_PH = 727
    CEFBS_InMicroMips_HasDSPR2, // ADDQH_R_PH_MMR2 = 728
    CEFBS_HasDSPR2, // ADDQH_R_W = 729
    CEFBS_InMicroMips_HasDSPR2, // ADDQH_R_W_MMR2 = 730
    CEFBS_HasDSPR2, // ADDQH_W = 731
    CEFBS_InMicroMips_HasDSPR2, // ADDQH_W_MMR2 = 732
    CEFBS_HasDSP, // ADDQ_PH = 733
    CEFBS_InMicroMips_HasDSP, // ADDQ_PH_MM = 734
    CEFBS_HasDSP, // ADDQ_S_PH = 735
    CEFBS_InMicroMips_HasDSP, // ADDQ_S_PH_MM = 736
    CEFBS_HasDSP, // ADDQ_S_W = 737
    CEFBS_InMicroMips_HasDSP, // ADDQ_S_W_MM = 738
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMips3D, // ADDR_PS64 = 739
    CEFBS_HasDSP, // ADDSC = 740
    CEFBS_InMicroMips_HasDSP, // ADDSC_MM = 741
    CEFBS_HasStdEnc_HasMSA, // ADDS_A_B = 742
    CEFBS_HasStdEnc_HasMSA, // ADDS_A_D = 743
    CEFBS_HasStdEnc_HasMSA, // ADDS_A_H = 744
    CEFBS_HasStdEnc_HasMSA, // ADDS_A_W = 745
    CEFBS_HasStdEnc_HasMSA, // ADDS_S_B = 746
    CEFBS_HasStdEnc_HasMSA, // ADDS_S_D = 747
    CEFBS_HasStdEnc_HasMSA, // ADDS_S_H = 748
    CEFBS_HasStdEnc_HasMSA, // ADDS_S_W = 749
    CEFBS_HasStdEnc_HasMSA, // ADDS_U_B = 750
    CEFBS_HasStdEnc_HasMSA, // ADDS_U_D = 751
    CEFBS_HasStdEnc_HasMSA, // ADDS_U_H = 752
    CEFBS_HasStdEnc_HasMSA, // ADDS_U_W = 753
    CEFBS_InMicroMips_NotMips32r6, // ADDU16_MM = 754
    CEFBS_InMicroMips_HasMips32r6, // ADDU16_MMR6 = 755
    CEFBS_HasDSPR2, // ADDUH_QB = 756
    CEFBS_InMicroMips_HasDSPR2, // ADDUH_QB_MMR2 = 757
    CEFBS_HasDSPR2, // ADDUH_R_QB = 758
    CEFBS_InMicroMips_HasDSPR2, // ADDUH_R_QB_MMR2 = 759
    CEFBS_InMicroMips_HasMips32r6, // ADDU_MMR6 = 760
    CEFBS_HasDSPR2, // ADDU_PH = 761
    CEFBS_InMicroMips_HasDSPR2, // ADDU_PH_MMR2 = 762
    CEFBS_HasDSP, // ADDU_QB = 763
    CEFBS_InMicroMips_HasDSP, // ADDU_QB_MM = 764
    CEFBS_HasDSPR2, // ADDU_S_PH = 765
    CEFBS_InMicroMips_HasDSPR2, // ADDU_S_PH_MMR2 = 766
    CEFBS_HasDSP, // ADDU_S_QB = 767
    CEFBS_InMicroMips_HasDSP, // ADDU_S_QB_MM = 768
    CEFBS_HasStdEnc_HasMSA, // ADDVI_B = 769
    CEFBS_HasStdEnc_HasMSA, // ADDVI_D = 770
    CEFBS_HasStdEnc_HasMSA, // ADDVI_H = 771
    CEFBS_HasStdEnc_HasMSA, // ADDVI_W = 772
    CEFBS_HasStdEnc_HasMSA, // ADDV_B = 773
    CEFBS_HasStdEnc_HasMSA, // ADDV_D = 774
    CEFBS_HasStdEnc_HasMSA, // ADDV_H = 775
    CEFBS_HasStdEnc_HasMSA, // ADDV_W = 776
    CEFBS_HasDSP, // ADDWC = 777
    CEFBS_InMicroMips_HasDSP, // ADDWC_MM = 778
    CEFBS_HasStdEnc_HasMSA, // ADD_A_B = 779
    CEFBS_HasStdEnc_HasMSA, // ADD_A_D = 780
    CEFBS_HasStdEnc_HasMSA, // ADD_A_H = 781
    CEFBS_HasStdEnc_HasMSA, // ADD_A_W = 782
    CEFBS_InMicroMips_NotMips32r6, // ADD_MM = 783
    CEFBS_InMicroMips_HasMips32r6, // ADD_MMR6 = 784
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // ADDi = 785
    CEFBS_InMicroMips_NotMips32r6, // ADDi_MM = 786
    CEFBS_HasStdEnc_NotInMicroMips, // ADDiu = 787
    CEFBS_InMicroMips_NotMips32r6, // ADDiu_MM = 788
    CEFBS_HasStdEnc_NotInMicroMips, // ADDu = 789
    CEFBS_InMicroMips_NotMips32r6, // ADDu_MM = 790
    CEFBS_HasStdEnc_HasMips32r6, // ALIGN = 791
    CEFBS_InMicroMips_HasMips32r6, // ALIGN_MMR6 = 792
    CEFBS_HasStdEnc_HasMips32r6, // ALUIPC = 793
    CEFBS_InMicroMips_HasMips32r6, // ALUIPC_MMR6 = 794
    CEFBS_HasStdEnc_NotInMicroMips, // AND = 795
    CEFBS_InMicroMips_NotMips32r6, // AND16_MM = 796
    CEFBS_InMicroMips_HasMips32r6, // AND16_MMR6 = 797
    CEFBS_NotInMips16Mode_IsGP64bit, // AND64 = 798
    CEFBS_InMicroMips_NotMips32r6, // ANDI16_MM = 799
    CEFBS_InMicroMips_HasMips32r6, // ANDI16_MMR6 = 800
    CEFBS_HasStdEnc_HasMSA, // ANDI_B = 801
    CEFBS_InMicroMips_HasMips32r6, // ANDI_MMR6 = 802
    CEFBS_InMicroMips_NotMips32r6, // AND_MM = 803
    CEFBS_InMicroMips_HasMips32r6, // AND_MMR6 = 804
    CEFBS_HasStdEnc_HasMSA, // AND_V = 805
    CEFBS_HasStdEnc_NotInMicroMips, // ANDi = 806
    CEFBS_NotInMips16Mode_IsGP64bit, // ANDi64 = 807
    CEFBS_InMicroMips_NotMips32r6, // ANDi_MM = 808
    CEFBS_HasDSPR2, // APPEND = 809
    CEFBS_InMicroMips_HasDSPR2, // APPEND_MMR2 = 810
    CEFBS_HasStdEnc_HasMSA, // ASUB_S_B = 811
    CEFBS_HasStdEnc_HasMSA, // ASUB_S_D = 812
    CEFBS_HasStdEnc_HasMSA, // ASUB_S_H = 813
    CEFBS_HasStdEnc_HasMSA, // ASUB_S_W = 814
    CEFBS_HasStdEnc_HasMSA, // ASUB_U_B = 815
    CEFBS_HasStdEnc_HasMSA, // ASUB_U_D = 816
    CEFBS_HasStdEnc_HasMSA, // ASUB_U_H = 817
    CEFBS_HasStdEnc_HasMSA, // ASUB_U_W = 818
    CEFBS_HasStdEnc_HasMips32r6, // AUI = 819
    CEFBS_HasStdEnc_HasMips32r6, // AUIPC = 820
    CEFBS_InMicroMips_HasMips32r6, // AUIPC_MMR6 = 821
    CEFBS_InMicroMips_HasMips32r6, // AUI_MMR6 = 822
    CEFBS_HasStdEnc_HasMSA, // AVER_S_B = 823
    CEFBS_HasStdEnc_HasMSA, // AVER_S_D = 824
    CEFBS_HasStdEnc_HasMSA, // AVER_S_H = 825
    CEFBS_HasStdEnc_HasMSA, // AVER_S_W = 826
    CEFBS_HasStdEnc_HasMSA, // AVER_U_B = 827
    CEFBS_HasStdEnc_HasMSA, // AVER_U_D = 828
    CEFBS_HasStdEnc_HasMSA, // AVER_U_H = 829
    CEFBS_HasStdEnc_HasMSA, // AVER_U_W = 830
    CEFBS_HasStdEnc_HasMSA, // AVE_S_B = 831
    CEFBS_HasStdEnc_HasMSA, // AVE_S_D = 832
    CEFBS_HasStdEnc_HasMSA, // AVE_S_H = 833
    CEFBS_HasStdEnc_HasMSA, // AVE_S_W = 834
    CEFBS_HasStdEnc_HasMSA, // AVE_U_B = 835
    CEFBS_HasStdEnc_HasMSA, // AVE_U_D = 836
    CEFBS_HasStdEnc_HasMSA, // AVE_U_H = 837
    CEFBS_HasStdEnc_HasMSA, // AVE_U_W = 838
    CEFBS_InMips16Mode, // AddiuRxImmX16 = 839
    CEFBS_InMips16Mode, // AddiuRxPcImmX16 = 840
    CEFBS_InMips16Mode, // AddiuRxRxImm16 = 841
    CEFBS_InMips16Mode, // AddiuRxRxImmX16 = 842
    CEFBS_InMips16Mode, // AddiuRxRyOffMemX16 = 843
    CEFBS_InMips16Mode, // AddiuSpImm16 = 844
    CEFBS_InMips16Mode, // AddiuSpImmX16 = 845
    CEFBS_InMips16Mode, // AdduRxRyRz16 = 846
    CEFBS_InMips16Mode, // AndRxRxRy16 = 847
    CEFBS_InMicroMips, // B16_MM = 848
    CEFBS_HasCnMips, // BADDu = 849
    CEFBS_HasStdEnc_HasMips32r6, // BAL = 850
    CEFBS_HasStdEnc_HasMips32r6, // BALC = 851
    CEFBS_InMicroMips_HasMips32r6, // BALC_MMR6 = 852
    CEFBS_HasDSPR2, // BALIGN = 853
    CEFBS_InMicroMips_HasDSPR2, // BALIGN_MMR2 = 854
    CEFBS_HasCnMips, // BBIT0 = 855
    CEFBS_HasCnMips, // BBIT032 = 856
    CEFBS_HasCnMips, // BBIT1 = 857
    CEFBS_HasCnMips, // BBIT132 = 858
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BC = 859
    CEFBS_InMicroMips_HasMips32r6, // BC16_MMR6 = 860
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // BC1EQZ = 861
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // BC1EQZC_MMR6 = 862
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // BC1F = 863
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // BC1FL = 864
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // BC1F_MM = 865
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // BC1NEZ = 866
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // BC1NEZC_MMR6 = 867
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // BC1T = 868
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // BC1TL = 869
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // BC1T_MM = 870
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BC2EQZ = 871
    CEFBS_InMicroMips_HasMips32r6, // BC2EQZC_MMR6 = 872
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BC2NEZ = 873
    CEFBS_InMicroMips_HasMips32r6, // BC2NEZC_MMR6 = 874
    CEFBS_HasStdEnc_HasMSA, // BCLRI_B = 875
    CEFBS_HasStdEnc_HasMSA, // BCLRI_D = 876
    CEFBS_HasStdEnc_HasMSA, // BCLRI_H = 877
    CEFBS_HasStdEnc_HasMSA, // BCLRI_W = 878
    CEFBS_HasStdEnc_HasMSA, // BCLR_B = 879
    CEFBS_HasStdEnc_HasMSA, // BCLR_D = 880
    CEFBS_HasStdEnc_HasMSA, // BCLR_H = 881
    CEFBS_HasStdEnc_HasMSA, // BCLR_W = 882
    CEFBS_InMicroMips_HasMips32r6, // BC_MMR6 = 883
    CEFBS_HasStdEnc_NotInMicroMips, // BEQ = 884
    CEFBS_NotInMips16Mode_IsGP64bit, // BEQ64 = 885
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BEQC = 886
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BEQC64 = 887
    CEFBS_InMicroMips_HasMips32r6, // BEQC_MMR6 = 888
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BEQL = 889
    CEFBS_InMicroMips_NotMips32r6, // BEQZ16_MM = 890
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BEQZALC = 891
    CEFBS_InMicroMips_HasMips32r6, // BEQZALC_MMR6 = 892
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BEQZC = 893
    CEFBS_InMicroMips_HasMips32r6, // BEQZC16_MMR6 = 894
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BEQZC64 = 895
    CEFBS_InMicroMips_NotMips32r6, // BEQZC_MM = 896
    CEFBS_InMicroMips_HasMips32r6, // BEQZC_MMR6 = 897
    CEFBS_InMicroMips_NotMips32r6, // BEQ_MM = 898
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGEC = 899
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BGEC64 = 900
    CEFBS_InMicroMips_HasMips32r6, // BGEC_MMR6 = 901
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGEUC = 902
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BGEUC64 = 903
    CEFBS_InMicroMips_HasMips32r6, // BGEUC_MMR6 = 904
    CEFBS_HasStdEnc_NotInMicroMips, // BGEZ = 905
    CEFBS_NotInMips16Mode_IsGP64bit, // BGEZ64 = 906
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // BGEZAL = 907
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGEZALC = 908
    CEFBS_InMicroMips_HasMips32r6, // BGEZALC_MMR6 = 909
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BGEZALL = 910
    CEFBS_InMicroMips_NotMips32r6, // BGEZALS_MM = 911
    CEFBS_InMicroMips_NotMips32r6, // BGEZAL_MM = 912
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGEZC = 913
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BGEZC64 = 914
    CEFBS_InMicroMips_HasMips32r6, // BGEZC_MMR6 = 915
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BGEZL = 916
    CEFBS_InMicroMips_NotMips32r6, // BGEZ_MM = 917
    CEFBS_HasStdEnc_NotInMicroMips, // BGTZ = 918
    CEFBS_NotInMips16Mode_IsGP64bit, // BGTZ64 = 919
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGTZALC = 920
    CEFBS_InMicroMips_HasMips32r6, // BGTZALC_MMR6 = 921
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BGTZC = 922
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BGTZC64 = 923
    CEFBS_InMicroMips_HasMips32r6, // BGTZC_MMR6 = 924
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BGTZL = 925
    CEFBS_InMicroMips_NotMips32r6, // BGTZ_MM = 926
    CEFBS_HasStdEnc_HasMSA, // BINSLI_B = 927
    CEFBS_HasStdEnc_HasMSA, // BINSLI_D = 928
    CEFBS_HasStdEnc_HasMSA, // BINSLI_H = 929
    CEFBS_HasStdEnc_HasMSA, // BINSLI_W = 930
    CEFBS_HasStdEnc_HasMSA, // BINSL_B = 931
    CEFBS_HasStdEnc_HasMSA, // BINSL_D = 932
    CEFBS_HasStdEnc_HasMSA, // BINSL_H = 933
    CEFBS_HasStdEnc_HasMSA, // BINSL_W = 934
    CEFBS_HasStdEnc_HasMSA, // BINSRI_B = 935
    CEFBS_HasStdEnc_HasMSA, // BINSRI_D = 936
    CEFBS_HasStdEnc_HasMSA, // BINSRI_H = 937
    CEFBS_HasStdEnc_HasMSA, // BINSRI_W = 938
    CEFBS_HasStdEnc_HasMSA, // BINSR_B = 939
    CEFBS_HasStdEnc_HasMSA, // BINSR_D = 940
    CEFBS_HasStdEnc_HasMSA, // BINSR_H = 941
    CEFBS_HasStdEnc_HasMSA, // BINSR_W = 942
    CEFBS_HasDSP, // BITREV = 943
    CEFBS_InMicroMips_HasDSP, // BITREV_MM = 944
    CEFBS_HasStdEnc_HasMips32r6, // BITSWAP = 945
    CEFBS_InMicroMips_HasMips32r6, // BITSWAP_MMR6 = 946
    CEFBS_HasStdEnc_NotInMicroMips, // BLEZ = 947
    CEFBS_NotInMips16Mode_IsGP64bit, // BLEZ64 = 948
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLEZALC = 949
    CEFBS_InMicroMips_HasMips32r6, // BLEZALC_MMR6 = 950
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLEZC = 951
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BLEZC64 = 952
    CEFBS_InMicroMips_HasMips32r6, // BLEZC_MMR6 = 953
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BLEZL = 954
    CEFBS_InMicroMips_NotMips32r6, // BLEZ_MM = 955
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLTC = 956
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BLTC64 = 957
    CEFBS_InMicroMips_HasMips32r6, // BLTC_MMR6 = 958
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLTUC = 959
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BLTUC64 = 960
    CEFBS_InMicroMips_HasMips32r6, // BLTUC_MMR6 = 961
    CEFBS_HasStdEnc_NotInMicroMips, // BLTZ = 962
    CEFBS_NotInMips16Mode_IsGP64bit, // BLTZ64 = 963
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // BLTZAL = 964
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLTZALC = 965
    CEFBS_InMicroMips_HasMips32r6, // BLTZALC_MMR6 = 966
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BLTZALL = 967
    CEFBS_InMicroMips_NotMips32r6, // BLTZALS_MM = 968
    CEFBS_InMicroMips_NotMips32r6, // BLTZAL_MM = 969
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BLTZC = 970
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BLTZC64 = 971
    CEFBS_InMicroMips_HasMips32r6, // BLTZC_MMR6 = 972
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BLTZL = 973
    CEFBS_InMicroMips_NotMips32r6, // BLTZ_MM = 974
    CEFBS_HasStdEnc_HasMSA, // BMNZI_B = 975
    CEFBS_HasStdEnc_HasMSA, // BMNZ_V = 976
    CEFBS_HasStdEnc_HasMSA, // BMZI_B = 977
    CEFBS_HasStdEnc_HasMSA, // BMZ_V = 978
    CEFBS_HasStdEnc_NotInMicroMips, // BNE = 979
    CEFBS_NotInMips16Mode_IsGP64bit, // BNE64 = 980
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BNEC = 981
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BNEC64 = 982
    CEFBS_InMicroMips_HasMips32r6, // BNEC_MMR6 = 983
    CEFBS_HasStdEnc_HasMSA, // BNEGI_B = 984
    CEFBS_HasStdEnc_HasMSA, // BNEGI_D = 985
    CEFBS_HasStdEnc_HasMSA, // BNEGI_H = 986
    CEFBS_HasStdEnc_HasMSA, // BNEGI_W = 987
    CEFBS_HasStdEnc_HasMSA, // BNEG_B = 988
    CEFBS_HasStdEnc_HasMSA, // BNEG_D = 989
    CEFBS_HasStdEnc_HasMSA, // BNEG_H = 990
    CEFBS_HasStdEnc_HasMSA, // BNEG_W = 991
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // BNEL = 992
    CEFBS_InMicroMips_NotMips32r6, // BNEZ16_MM = 993
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BNEZALC = 994
    CEFBS_InMicroMips_HasMips32r6, // BNEZALC_MMR6 = 995
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BNEZC = 996
    CEFBS_InMicroMips_HasMips32r6, // BNEZC16_MMR6 = 997
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // BNEZC64 = 998
    CEFBS_InMicroMips_NotMips32r6, // BNEZC_MM = 999
    CEFBS_InMicroMips_HasMips32r6, // BNEZC_MMR6 = 1000
    CEFBS_InMicroMips_NotMips32r6, // BNE_MM = 1001
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BNVC = 1002
    CEFBS_InMicroMips_HasMips32r6, // BNVC_MMR6 = 1003
    CEFBS_HasStdEnc_HasMSA, // BNZ_B = 1004
    CEFBS_HasStdEnc_HasMSA, // BNZ_D = 1005
    CEFBS_HasStdEnc_HasMSA, // BNZ_H = 1006
    CEFBS_HasStdEnc_HasMSA, // BNZ_V = 1007
    CEFBS_HasStdEnc_HasMSA, // BNZ_W = 1008
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // BOVC = 1009
    CEFBS_InMicroMips_HasMips32r6, // BOVC_MMR6 = 1010
    CEFBS_HasDSP_NotInMicroMips, // BPOSGE32 = 1011
    CEFBS_InMicroMips_HasDSPR3, // BPOSGE32C_MMR3 = 1012
    CEFBS_InMicroMips_NotMips32r6_HasDSP, // BPOSGE32_MM = 1013
    CEFBS_HasStdEnc_NotInMicroMips, // BREAK = 1014
    CEFBS_InMicroMips_NotMips32r6, // BREAK16_MM = 1015
    CEFBS_InMicroMips_HasMips32r6, // BREAK16_MMR6 = 1016
    CEFBS_InMicroMips, // BREAK_MM = 1017
    CEFBS_InMicroMips_HasMips32r6, // BREAK_MMR6 = 1018
    CEFBS_HasStdEnc_HasMSA, // BSELI_B = 1019
    CEFBS_HasStdEnc_HasMSA, // BSEL_V = 1020
    CEFBS_HasStdEnc_HasMSA, // BSETI_B = 1021
    CEFBS_HasStdEnc_HasMSA, // BSETI_D = 1022
    CEFBS_HasStdEnc_HasMSA, // BSETI_H = 1023
    CEFBS_HasStdEnc_HasMSA, // BSETI_W = 1024
    CEFBS_HasStdEnc_HasMSA, // BSET_B = 1025
    CEFBS_HasStdEnc_HasMSA, // BSET_D = 1026
    CEFBS_HasStdEnc_HasMSA, // BSET_H = 1027
    CEFBS_HasStdEnc_HasMSA, // BSET_W = 1028
    CEFBS_HasStdEnc_HasMSA, // BZ_B = 1029
    CEFBS_HasStdEnc_HasMSA, // BZ_D = 1030
    CEFBS_HasStdEnc_HasMSA, // BZ_H = 1031
    CEFBS_HasStdEnc_HasMSA, // BZ_V = 1032
    CEFBS_HasStdEnc_HasMSA, // BZ_W = 1033
    CEFBS_InMips16Mode, // BeqzRxImm16 = 1034
    CEFBS_InMips16Mode, // BeqzRxImmX16 = 1035
    CEFBS_InMips16Mode, // Bimm16 = 1036
    CEFBS_InMips16Mode, // BimmX16 = 1037
    CEFBS_InMips16Mode, // BnezRxImm16 = 1038
    CEFBS_InMips16Mode, // BnezRxImmX16 = 1039
    CEFBS_InMips16Mode, // Break16 = 1040
    CEFBS_InMips16Mode, // Bteqz16 = 1041
    CEFBS_InMips16Mode, // BteqzX16 = 1042
    CEFBS_InMips16Mode, // Btnez16 = 1043
    CEFBS_InMips16Mode, // BtnezX16 = 1044
    CEFBS_HasStdEnc_HasMips3_32_NotMips32r6_NotMips64r6_NotInMicroMips, // CACHE = 1045
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // CACHEE = 1046
    CEFBS_InMicroMips_HasEVA, // CACHEE_MM = 1047
    CEFBS_InMicroMips_NotMips32r6, // CACHE_MM = 1048
    CEFBS_InMicroMips_HasMips32r6, // CACHE_MMR6 = 1049
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // CACHE_R6 = 1050
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32_IsNotSoftFloat_NotInMicroMips, // CEIL_L_D64 = 1051
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CEIL_L_D_MMR6 = 1052
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // CEIL_L_S = 1053
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CEIL_L_S_MMR6 = 1054
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // CEIL_W_D32 = 1055
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // CEIL_W_D64 = 1056
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CEIL_W_D_MMR6 = 1057
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // CEIL_W_MM = 1058
    CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips, // CEIL_W_S = 1059
    CEFBS_InMicroMips_IsNotSoftFloat, // CEIL_W_S_MM = 1060
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CEIL_W_S_MMR6 = 1061
    CEFBS_HasStdEnc_HasMSA, // CEQI_B = 1062
    CEFBS_HasStdEnc_HasMSA, // CEQI_D = 1063
    CEFBS_HasStdEnc_HasMSA, // CEQI_H = 1064
    CEFBS_HasStdEnc_HasMSA, // CEQI_W = 1065
    CEFBS_HasStdEnc_HasMSA, // CEQ_B = 1066
    CEFBS_HasStdEnc_HasMSA, // CEQ_D = 1067
    CEFBS_HasStdEnc_HasMSA, // CEQ_H = 1068
    CEFBS_HasStdEnc_HasMSA, // CEQ_W = 1069
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // CFC1 = 1070
    CEFBS_InMicroMips_IsNotSoftFloat, // CFC1_MM = 1071
    CEFBS_InMicroMips, // CFC2_MM = 1072
    CEFBS_HasStdEnc_HasMSA, // CFCMSA = 1073
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // CINS = 1074
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // CINS32 = 1075
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // CINS64_32 = 1076
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // CINS_i32 = 1077
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CLASS_D = 1078
    CEFBS_InMicroMips_HasMips32r6, // CLASS_D_MMR6 = 1079
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CLASS_S = 1080
    CEFBS_InMicroMips_HasMips32r6, // CLASS_S_MMR6 = 1081
    CEFBS_HasStdEnc_HasMSA, // CLEI_S_B = 1082
    CEFBS_HasStdEnc_HasMSA, // CLEI_S_D = 1083
    CEFBS_HasStdEnc_HasMSA, // CLEI_S_H = 1084
    CEFBS_HasStdEnc_HasMSA, // CLEI_S_W = 1085
    CEFBS_HasStdEnc_HasMSA, // CLEI_U_B = 1086
    CEFBS_HasStdEnc_HasMSA, // CLEI_U_D = 1087
    CEFBS_HasStdEnc_HasMSA, // CLEI_U_H = 1088
    CEFBS_HasStdEnc_HasMSA, // CLEI_U_W = 1089
    CEFBS_HasStdEnc_HasMSA, // CLE_S_B = 1090
    CEFBS_HasStdEnc_HasMSA, // CLE_S_D = 1091
    CEFBS_HasStdEnc_HasMSA, // CLE_S_H = 1092
    CEFBS_HasStdEnc_HasMSA, // CLE_S_W = 1093
    CEFBS_HasStdEnc_HasMSA, // CLE_U_B = 1094
    CEFBS_HasStdEnc_HasMSA, // CLE_U_D = 1095
    CEFBS_HasStdEnc_HasMSA, // CLE_U_H = 1096
    CEFBS_HasStdEnc_HasMSA, // CLE_U_W = 1097
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // CLO = 1098
    CEFBS_InMicroMips, // CLO_MM = 1099
    CEFBS_InMicroMips_HasMips32r6, // CLO_MMR6 = 1100
    CEFBS_HasStdEnc_HasMips32r6, // CLO_R6 = 1101
    CEFBS_HasStdEnc_HasMSA, // CLTI_S_B = 1102
    CEFBS_HasStdEnc_HasMSA, // CLTI_S_D = 1103
    CEFBS_HasStdEnc_HasMSA, // CLTI_S_H = 1104
    CEFBS_HasStdEnc_HasMSA, // CLTI_S_W = 1105
    CEFBS_HasStdEnc_HasMSA, // CLTI_U_B = 1106
    CEFBS_HasStdEnc_HasMSA, // CLTI_U_D = 1107
    CEFBS_HasStdEnc_HasMSA, // CLTI_U_H = 1108
    CEFBS_HasStdEnc_HasMSA, // CLTI_U_W = 1109
    CEFBS_HasStdEnc_HasMSA, // CLT_S_B = 1110
    CEFBS_HasStdEnc_HasMSA, // CLT_S_D = 1111
    CEFBS_HasStdEnc_HasMSA, // CLT_S_H = 1112
    CEFBS_HasStdEnc_HasMSA, // CLT_S_W = 1113
    CEFBS_HasStdEnc_HasMSA, // CLT_U_B = 1114
    CEFBS_HasStdEnc_HasMSA, // CLT_U_D = 1115
    CEFBS_HasStdEnc_HasMSA, // CLT_U_H = 1116
    CEFBS_HasStdEnc_HasMSA, // CLT_U_W = 1117
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // CLZ = 1118
    CEFBS_InMicroMips, // CLZ_MM = 1119
    CEFBS_InMicroMips_HasMips32r6, // CLZ_MMR6 = 1120
    CEFBS_HasStdEnc_HasMips32r6, // CLZ_R6 = 1121
    CEFBS_HasDSPR2, // CMPGDU_EQ_QB = 1122
    CEFBS_InMicroMips_HasDSPR2, // CMPGDU_EQ_QB_MMR2 = 1123
    CEFBS_HasDSPR2, // CMPGDU_LE_QB = 1124
    CEFBS_InMicroMips_HasDSPR2, // CMPGDU_LE_QB_MMR2 = 1125
    CEFBS_HasDSPR2, // CMPGDU_LT_QB = 1126
    CEFBS_InMicroMips_HasDSPR2, // CMPGDU_LT_QB_MMR2 = 1127
    CEFBS_HasDSP, // CMPGU_EQ_QB = 1128
    CEFBS_InMicroMips_HasDSP, // CMPGU_EQ_QB_MM = 1129
    CEFBS_HasDSP, // CMPGU_LE_QB = 1130
    CEFBS_InMicroMips_HasDSP, // CMPGU_LE_QB_MM = 1131
    CEFBS_HasDSP, // CMPGU_LT_QB = 1132
    CEFBS_InMicroMips_HasDSP, // CMPGU_LT_QB_MM = 1133
    CEFBS_HasDSP, // CMPU_EQ_QB = 1134
    CEFBS_InMicroMips_HasDSP, // CMPU_EQ_QB_MM = 1135
    CEFBS_HasDSP, // CMPU_LE_QB = 1136
    CEFBS_InMicroMips_HasDSP, // CMPU_LE_QB_MM = 1137
    CEFBS_HasDSP, // CMPU_LT_QB = 1138
    CEFBS_InMicroMips_HasDSP, // CMPU_LT_QB_MM = 1139
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_AF_D_MMR6 = 1140
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_AF_S_MMR6 = 1141
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_EQ_D = 1142
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_EQ_D_MMR6 = 1143
    CEFBS_HasDSP, // CMP_EQ_PH = 1144
    CEFBS_InMicroMips_HasDSP, // CMP_EQ_PH_MM = 1145
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_EQ_S = 1146
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_EQ_S_MMR6 = 1147
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_F_D = 1148
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_F_S = 1149
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_LE_D = 1150
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_LE_D_MMR6 = 1151
    CEFBS_HasDSP, // CMP_LE_PH = 1152
    CEFBS_InMicroMips_HasDSP, // CMP_LE_PH_MM = 1153
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_LE_S = 1154
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_LE_S_MMR6 = 1155
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_LT_D = 1156
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_LT_D_MMR6 = 1157
    CEFBS_HasDSP, // CMP_LT_PH = 1158
    CEFBS_InMicroMips_HasDSP, // CMP_LT_PH_MM = 1159
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_LT_S = 1160
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_LT_S_MMR6 = 1161
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SAF_D = 1162
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SAF_D_MMR6 = 1163
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SAF_S = 1164
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SAF_S_MMR6 = 1165
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SEQ_D = 1166
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SEQ_D_MMR6 = 1167
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SEQ_S = 1168
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SEQ_S_MMR6 = 1169
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SLE_D = 1170
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SLE_D_MMR6 = 1171
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SLE_S = 1172
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SLE_S_MMR6 = 1173
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SLT_D = 1174
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SLT_D_MMR6 = 1175
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SLT_S = 1176
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SLT_S_MMR6 = 1177
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SUEQ_D = 1178
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SUEQ_D_MMR6 = 1179
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SUEQ_S = 1180
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SUEQ_S_MMR6 = 1181
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SULE_D = 1182
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SULE_D_MMR6 = 1183
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SULE_S = 1184
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SULE_S_MMR6 = 1185
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SULT_D = 1186
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SULT_D_MMR6 = 1187
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SULT_S = 1188
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SULT_S_MMR6 = 1189
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SUN_D = 1190
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SUN_D_MMR6 = 1191
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_SUN_S = 1192
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_SUN_S_MMR6 = 1193
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_UEQ_D = 1194
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_UEQ_D_MMR6 = 1195
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_UEQ_S = 1196
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_UEQ_S_MMR6 = 1197
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_ULE_D = 1198
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_ULE_D_MMR6 = 1199
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_ULE_S = 1200
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_ULE_S_MMR6 = 1201
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_ULT_D = 1202
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_ULT_D_MMR6 = 1203
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_ULT_S = 1204
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_ULT_S_MMR6 = 1205
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_UN_D = 1206
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_UN_D_MMR6 = 1207
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // CMP_UN_S = 1208
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CMP_UN_S_MMR6 = 1209
    CEFBS_HasStdEnc_HasMSA, // COPY_S_B = 1210
    CEFBS_HasStdEnc_HasMSA_HasMips64, // COPY_S_D = 1211
    CEFBS_HasStdEnc_HasMSA, // COPY_S_H = 1212
    CEFBS_HasStdEnc_HasMSA, // COPY_S_W = 1213
    CEFBS_HasStdEnc_HasMSA, // COPY_U_B = 1214
    CEFBS_HasStdEnc_HasMSA, // COPY_U_H = 1215
    CEFBS_HasStdEnc_HasMSA_HasMips64, // COPY_U_W = 1216
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32B = 1217
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32CB = 1218
    CEFBS_HasStdEnc_HasMips64r6_HasCRC_NotInMicroMips, // CRC32CD = 1219
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32CH = 1220
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32CW = 1221
    CEFBS_HasStdEnc_HasMips64r6_HasCRC_NotInMicroMips, // CRC32D = 1222
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32H = 1223
    CEFBS_HasStdEnc_HasMips32r6_HasCRC_NotInMicroMips, // CRC32W = 1224
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // CTC1 = 1225
    CEFBS_InMicroMips_IsNotSoftFloat, // CTC1_MM = 1226
    CEFBS_InMicroMips, // CTC2_MM = 1227
    CEFBS_HasStdEnc_HasMSA, // CTCMSA = 1228
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_D32_S = 1229
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // CVT_D32_S_MM = 1230
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_D32_W = 1231
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // CVT_D32_W_MM = 1232
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips, // CVT_D64_L = 1233
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_D64_S = 1234
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_D64_S_MM = 1235
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_D64_W = 1236
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_D64_W_MM = 1237
    CEFBS_InMicroMips_IsFP64bit_HasMips32r6_IsNotSoftFloat, // CVT_D_L_MMR6 = 1238
    CEFBS_HasStdEnc_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips, // CVT_L_D64 = 1239
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_L_D64_MM = 1240
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CVT_L_D_MMR6 = 1241
    CEFBS_HasStdEnc_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips, // CVT_L_S = 1242
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_L_S_MM = 1243
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CVT_L_S_MMR6 = 1244
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMips3D, // CVT_PS_PW64 = 1245
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // CVT_PS_S64 = 1246
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMips3D, // CVT_PW_PS64 = 1247
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_S_D32 = 1248
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // CVT_S_D32_MM = 1249
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_S_D64 = 1250
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_S_D64_MM = 1251
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32r2_IsNotSoftFloat_NotInMicroMips, // CVT_S_L = 1252
    CEFBS_InMicroMips_IsFP64bit_HasMips32r6_IsNotSoftFloat, // CVT_S_L_MMR6 = 1253
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // CVT_S_PL64 = 1254
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // CVT_S_PU64 = 1255
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // CVT_S_W = 1256
    CEFBS_InMicroMips_IsNotSoftFloat, // CVT_S_W_MM = 1257
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CVT_S_W_MMR6 = 1258
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_W_D32 = 1259
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // CVT_W_D32_MM = 1260
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // CVT_W_D64 = 1261
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // CVT_W_D64_MM = 1262
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // CVT_W_S = 1263
    CEFBS_InMicroMips_IsNotSoftFloat, // CVT_W_S_MM = 1264
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // CVT_W_S_MMR6 = 1265
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_EQ_D32 = 1266
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_EQ_D32_MM = 1267
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_EQ_D64 = 1268
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_EQ_D64_MM = 1269
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_EQ_S = 1270
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_EQ_S_MM = 1271
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_F_D32 = 1272
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_F_D32_MM = 1273
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_F_D64 = 1274
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_F_D64_MM = 1275
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_F_S = 1276
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_F_S_MM = 1277
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LE_D32 = 1278
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_LE_D32_MM = 1279
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LE_D64 = 1280
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_LE_D64_MM = 1281
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LE_S = 1282
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_LE_S_MM = 1283
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LT_D32 = 1284
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_LT_D32_MM = 1285
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LT_D64 = 1286
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_LT_D64_MM = 1287
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_LT_S = 1288
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_LT_S_MM = 1289
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGE_D32 = 1290
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGE_D32_MM = 1291
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGE_D64 = 1292
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGE_D64_MM = 1293
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGE_S = 1294
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_NGE_S_MM = 1295
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGLE_D32 = 1296
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGLE_D32_MM = 1297
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGLE_D64 = 1298
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGLE_D64_MM = 1299
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGLE_S = 1300
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_NGLE_S_MM = 1301
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGL_D32 = 1302
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGL_D32_MM = 1303
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGL_D64 = 1304
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGL_D64_MM = 1305
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGL_S = 1306
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_NGL_S_MM = 1307
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGT_D32 = 1308
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGT_D32_MM = 1309
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGT_D64 = 1310
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_NGT_D64_MM = 1311
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_NGT_S = 1312
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_NGT_S_MM = 1313
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLE_D32 = 1314
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_OLE_D32_MM = 1315
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLE_D64 = 1316
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_OLE_D64_MM = 1317
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLE_S = 1318
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_OLE_S_MM = 1319
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLT_D32 = 1320
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_OLT_D32_MM = 1321
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLT_D64 = 1322
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_OLT_D64_MM = 1323
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_OLT_S = 1324
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_OLT_S_MM = 1325
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SEQ_D32 = 1326
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_SEQ_D32_MM = 1327
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SEQ_D64 = 1328
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_SEQ_D64_MM = 1329
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SEQ_S = 1330
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_SEQ_S_MM = 1331
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SF_D32 = 1332
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_SF_D32_MM = 1333
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SF_D64 = 1334
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_SF_D64_MM = 1335
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_SF_S = 1336
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_SF_S_MM = 1337
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UEQ_D32 = 1338
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_UEQ_D32_MM = 1339
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UEQ_D64 = 1340
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_UEQ_D64_MM = 1341
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UEQ_S = 1342
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_UEQ_S_MM = 1343
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULE_D32 = 1344
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_ULE_D32_MM = 1345
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULE_D64 = 1346
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_ULE_D64_MM = 1347
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULE_S = 1348
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_ULE_S_MM = 1349
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULT_D32 = 1350
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_ULT_D32_MM = 1351
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULT_D64 = 1352
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_ULT_D64_MM = 1353
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_ULT_S = 1354
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_ULT_S_MM = 1355
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UN_D32 = 1356
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // C_UN_D32_MM = 1357
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UN_D64 = 1358
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // C_UN_D64_MM = 1359
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // C_UN_S = 1360
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // C_UN_S_MM = 1361
    CEFBS_InMips16Mode, // CmpRxRy16 = 1362
    CEFBS_InMips16Mode, // CmpiRxImm16 = 1363
    CEFBS_InMips16Mode, // CmpiRxImmX16 = 1364
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DADD = 1365
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // DADDi = 1366
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DADDiu = 1367
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DADDu = 1368
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DAHI = 1369
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DALIGN = 1370
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DATI = 1371
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DAUI = 1372
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DBITSWAP = 1373
    CEFBS_HasStdEnc_IsGP64bit_HasMips64_NotMips64r6_NotInMicroMips, // DCLO = 1374
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DCLO_R6 = 1375
    CEFBS_HasStdEnc_IsGP64bit_HasMips64_NotMips64r6_NotInMicroMips, // DCLZ = 1376
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DCLZ_R6 = 1377
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DDIV = 1378
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DDIVU = 1379
    CEFBS_HasStdEnc_HasMips32_NotInMicroMips, // DERET = 1380
    CEFBS_InMicroMips, // DERET_MM = 1381
    CEFBS_InMicroMips_HasMips32r6, // DERET_MMR6 = 1382
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DEXT = 1383
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DEXT64_32 = 1384
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DEXTM = 1385
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DEXTU = 1386
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // DI = 1387
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DINS = 1388
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DINSM = 1389
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DINSU = 1390
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // DIV = 1391
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // DIVU = 1392
    CEFBS_InMicroMips_HasMips32r6, // DIVU_MMR6 = 1393
    CEFBS_InMicroMips_HasMips32r6, // DIV_MMR6 = 1394
    CEFBS_HasStdEnc_HasMSA, // DIV_S_B = 1395
    CEFBS_HasStdEnc_HasMSA, // DIV_S_D = 1396
    CEFBS_HasStdEnc_HasMSA, // DIV_S_H = 1397
    CEFBS_HasStdEnc_HasMSA, // DIV_S_W = 1398
    CEFBS_HasStdEnc_HasMSA, // DIV_U_B = 1399
    CEFBS_HasStdEnc_HasMSA, // DIV_U_D = 1400
    CEFBS_HasStdEnc_HasMSA, // DIV_U_H = 1401
    CEFBS_HasStdEnc_HasMSA, // DIV_U_W = 1402
    CEFBS_InMicroMips, // DI_MM = 1403
    CEFBS_InMicroMips_HasMips32r6, // DI_MMR6 = 1404
    CEFBS_HasStdEnc_HasMSA_HasMips64, // DLSA = 1405
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DLSA_R6 = 1406
    CEFBS_HasStdEnc_IsGP64bit_HasMips3, // DMFC0 = 1407
    CEFBS_HasStdEnc_HasMips3_IsNotSoftFloat_NotInMicroMips, // DMFC1 = 1408
    CEFBS_HasStdEnc_IsGP64bit_HasMips3, // DMFC2 = 1409
    CEFBS_HasCnMips, // DMFC2_OCTEON = 1410
    CEFBS_HasStdEnc_HasMips64r5_HasVirt, // DMFGC0 = 1411
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMOD = 1412
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMODU = 1413
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // DMT = 1414
    CEFBS_HasStdEnc_IsGP64bit_HasMips3, // DMTC0 = 1415
    CEFBS_HasStdEnc_HasMips3_IsNotSoftFloat_NotInMicroMips, // DMTC1 = 1416
    CEFBS_HasStdEnc_IsGP64bit_HasMips3, // DMTC2 = 1417
    CEFBS_HasCnMips, // DMTC2_OCTEON = 1418
    CEFBS_HasStdEnc_HasMips64r5_HasVirt, // DMTGC0 = 1419
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMUH = 1420
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMUHU = 1421
    CEFBS_HasCnMips, // DMUL = 1422
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DMULT = 1423
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DMULTu = 1424
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMULU = 1425
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // DMUL_R6 = 1426
    CEFBS_HasStdEnc_HasMSA, // DOTP_S_D = 1427
    CEFBS_HasStdEnc_HasMSA, // DOTP_S_H = 1428
    CEFBS_HasStdEnc_HasMSA, // DOTP_S_W = 1429
    CEFBS_HasStdEnc_HasMSA, // DOTP_U_D = 1430
    CEFBS_HasStdEnc_HasMSA, // DOTP_U_H = 1431
    CEFBS_HasStdEnc_HasMSA, // DOTP_U_W = 1432
    CEFBS_HasStdEnc_HasMSA, // DPADD_S_D = 1433
    CEFBS_HasStdEnc_HasMSA, // DPADD_S_H = 1434
    CEFBS_HasStdEnc_HasMSA, // DPADD_S_W = 1435
    CEFBS_HasStdEnc_HasMSA, // DPADD_U_D = 1436
    CEFBS_HasStdEnc_HasMSA, // DPADD_U_H = 1437
    CEFBS_HasStdEnc_HasMSA, // DPADD_U_W = 1438
    CEFBS_HasDSPR2, // DPAQX_SA_W_PH = 1439
    CEFBS_InMicroMips_HasDSPR2, // DPAQX_SA_W_PH_MMR2 = 1440
    CEFBS_HasDSPR2, // DPAQX_S_W_PH = 1441
    CEFBS_InMicroMips_HasDSPR2, // DPAQX_S_W_PH_MMR2 = 1442
    CEFBS_HasDSP, // DPAQ_SA_L_W = 1443
    CEFBS_InMicroMips_HasDSP, // DPAQ_SA_L_W_MM = 1444
    CEFBS_HasDSP, // DPAQ_S_W_PH = 1445
    CEFBS_InMicroMips_HasDSP, // DPAQ_S_W_PH_MM = 1446
    CEFBS_HasDSP, // DPAU_H_QBL = 1447
    CEFBS_InMicroMips_HasDSP, // DPAU_H_QBL_MM = 1448
    CEFBS_HasDSP, // DPAU_H_QBR = 1449
    CEFBS_InMicroMips_HasDSP, // DPAU_H_QBR_MM = 1450
    CEFBS_HasDSPR2, // DPAX_W_PH = 1451
    CEFBS_InMicroMips_HasDSPR2, // DPAX_W_PH_MMR2 = 1452
    CEFBS_HasDSPR2, // DPA_W_PH = 1453
    CEFBS_InMicroMips_HasDSPR2, // DPA_W_PH_MMR2 = 1454
    CEFBS_HasCnMips, // DPOP = 1455
    CEFBS_HasDSPR2, // DPSQX_SA_W_PH = 1456
    CEFBS_InMicroMips_HasDSPR2, // DPSQX_SA_W_PH_MMR2 = 1457
    CEFBS_HasDSPR2, // DPSQX_S_W_PH = 1458
    CEFBS_InMicroMips_HasDSPR2, // DPSQX_S_W_PH_MMR2 = 1459
    CEFBS_HasDSP, // DPSQ_SA_L_W = 1460
    CEFBS_InMicroMips_HasDSP, // DPSQ_SA_L_W_MM = 1461
    CEFBS_HasDSP, // DPSQ_S_W_PH = 1462
    CEFBS_InMicroMips_HasDSP, // DPSQ_S_W_PH_MM = 1463
    CEFBS_HasStdEnc_HasMSA, // DPSUB_S_D = 1464
    CEFBS_HasStdEnc_HasMSA, // DPSUB_S_H = 1465
    CEFBS_HasStdEnc_HasMSA, // DPSUB_S_W = 1466
    CEFBS_HasStdEnc_HasMSA, // DPSUB_U_D = 1467
    CEFBS_HasStdEnc_HasMSA, // DPSUB_U_H = 1468
    CEFBS_HasStdEnc_HasMSA, // DPSUB_U_W = 1469
    CEFBS_HasDSP, // DPSU_H_QBL = 1470
    CEFBS_InMicroMips_HasDSP, // DPSU_H_QBL_MM = 1471
    CEFBS_HasDSP, // DPSU_H_QBR = 1472
    CEFBS_InMicroMips_HasDSP, // DPSU_H_QBR_MM = 1473
    CEFBS_HasDSPR2, // DPSX_W_PH = 1474
    CEFBS_InMicroMips_HasDSPR2, // DPSX_W_PH_MMR2 = 1475
    CEFBS_HasDSPR2, // DPS_W_PH = 1476
    CEFBS_InMicroMips_HasDSPR2, // DPS_W_PH_MMR2 = 1477
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DROTR = 1478
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DROTR32 = 1479
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DROTRV = 1480
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DSBH = 1481
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DSDIV = 1482
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // DSHD = 1483
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSLL = 1484
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSLL32 = 1485
    CEFBS_NotInMips16Mode_IsGP64bit, // DSLL64_32 = 1486
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSLLV = 1487
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRA = 1488
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRA32 = 1489
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRAV = 1490
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRL = 1491
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRL32 = 1492
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSRLV = 1493
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSUB = 1494
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // DSUBu = 1495
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // DUDIV = 1496
    CEFBS_HasStdEnc_HasMips32r6, // DVP = 1497
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // DVPE = 1498
    CEFBS_InMicroMips_HasMips32r6, // DVP_MMR6 = 1499
    CEFBS_InMips16Mode, // DivRxRy16 = 1500
    CEFBS_InMips16Mode, // DivuRxRy16 = 1501
    CEFBS_HasStdEnc_NotInMicroMips, // EHB = 1502
    CEFBS_InMicroMips, // EHB_MM = 1503
    CEFBS_InMicroMips_HasMips32r6, // EHB_MMR6 = 1504
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // EI = 1505
    CEFBS_InMicroMips, // EI_MM = 1506
    CEFBS_InMicroMips_HasMips32r6, // EI_MMR6 = 1507
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // EMT = 1508
    CEFBS_HasStdEnc_HasMips3_32_NotInMicroMips, // ERET = 1509
    CEFBS_HasStdEnc_HasMips32r5_NotInMicroMips, // ERETNC = 1510
    CEFBS_InMicroMips_HasMips32r6, // ERETNC_MMR6 = 1511
    CEFBS_InMicroMips, // ERET_MM = 1512
    CEFBS_InMicroMips_HasMips32r6, // ERET_MMR6 = 1513
    CEFBS_HasStdEnc_HasMips32r6, // EVP = 1514
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // EVPE = 1515
    CEFBS_InMicroMips_HasMips32r6, // EVP_MMR6 = 1516
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // EXT = 1517
    CEFBS_HasDSP, // EXTP = 1518
    CEFBS_HasDSP, // EXTPDP = 1519
    CEFBS_HasDSP, // EXTPDPV = 1520
    CEFBS_InMicroMips_HasDSP, // EXTPDPV_MM = 1521
    CEFBS_InMicroMips_HasDSP, // EXTPDP_MM = 1522
    CEFBS_HasDSP, // EXTPV = 1523
    CEFBS_InMicroMips_HasDSP, // EXTPV_MM = 1524
    CEFBS_InMicroMips_HasDSP, // EXTP_MM = 1525
    CEFBS_HasDSP, // EXTRV_RS_W = 1526
    CEFBS_InMicroMips_HasDSP, // EXTRV_RS_W_MM = 1527
    CEFBS_HasDSP, // EXTRV_R_W = 1528
    CEFBS_InMicroMips_HasDSP, // EXTRV_R_W_MM = 1529
    CEFBS_HasDSP, // EXTRV_S_H = 1530
    CEFBS_InMicroMips_HasDSP, // EXTRV_S_H_MM = 1531
    CEFBS_HasDSP, // EXTRV_W = 1532
    CEFBS_InMicroMips_HasDSP, // EXTRV_W_MM = 1533
    CEFBS_HasDSP, // EXTR_RS_W = 1534
    CEFBS_InMicroMips_HasDSP, // EXTR_RS_W_MM = 1535
    CEFBS_HasDSP, // EXTR_R_W = 1536
    CEFBS_InMicroMips_HasDSP, // EXTR_R_W_MM = 1537
    CEFBS_HasDSP, // EXTR_S_H = 1538
    CEFBS_InMicroMips_HasDSP, // EXTR_S_H_MM = 1539
    CEFBS_HasDSP, // EXTR_W = 1540
    CEFBS_InMicroMips_HasDSP, // EXTR_W_MM = 1541
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // EXTS = 1542
    CEFBS_HasMips64_HasCnMips_NotInMicroMips, // EXTS32 = 1543
    CEFBS_InMicroMips_NotMips32r6, // EXT_MM = 1544
    CEFBS_InMicroMips_HasMips32r6, // EXT_MMR6 = 1545
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FABS_D32 = 1546
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FABS_D32_MM = 1547
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FABS_D64 = 1548
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FABS_D64_MM = 1549
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FABS_S = 1550
    CEFBS_InMicroMips_IsNotSoftFloat, // FABS_S_MM = 1551
    CEFBS_HasStdEnc_HasMSA, // FADD_D = 1552
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FADD_D32 = 1553
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FADD_D32_MM = 1554
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FADD_D64 = 1555
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FADD_D64_MM = 1556
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // FADD_PS64 = 1557
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FADD_S = 1558
    CEFBS_InMicroMips_IsNotSoftFloat, // FADD_S_MM = 1559
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FADD_S_MMR6 = 1560
    CEFBS_HasStdEnc_HasMSA, // FADD_W = 1561
    CEFBS_HasStdEnc_HasMSA, // FCAF_D = 1562
    CEFBS_HasStdEnc_HasMSA, // FCAF_W = 1563
    CEFBS_HasStdEnc_HasMSA, // FCEQ_D = 1564
    CEFBS_HasStdEnc_HasMSA, // FCEQ_W = 1565
    CEFBS_HasStdEnc_HasMSA, // FCLASS_D = 1566
    CEFBS_HasStdEnc_HasMSA, // FCLASS_W = 1567
    CEFBS_HasStdEnc_HasMSA, // FCLE_D = 1568
    CEFBS_HasStdEnc_HasMSA, // FCLE_W = 1569
    CEFBS_HasStdEnc_HasMSA, // FCLT_D = 1570
    CEFBS_HasStdEnc_HasMSA, // FCLT_W = 1571
    CEFBS_HasStdEnc_NotFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // FCMP_D32 = 1572
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // FCMP_D32_MM = 1573
    CEFBS_HasStdEnc_IsFP64bit_NotMips32r6_NotMips64r6_IsNotSoftFloat, // FCMP_D64 = 1574
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // FCMP_S32 = 1575
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // FCMP_S32_MM = 1576
    CEFBS_HasStdEnc_HasMSA, // FCNE_D = 1577
    CEFBS_HasStdEnc_HasMSA, // FCNE_W = 1578
    CEFBS_HasStdEnc_HasMSA, // FCOR_D = 1579
    CEFBS_HasStdEnc_HasMSA, // FCOR_W = 1580
    CEFBS_HasStdEnc_HasMSA, // FCUEQ_D = 1581
    CEFBS_HasStdEnc_HasMSA, // FCUEQ_W = 1582
    CEFBS_HasStdEnc_HasMSA, // FCULE_D = 1583
    CEFBS_HasStdEnc_HasMSA, // FCULE_W = 1584
    CEFBS_HasStdEnc_HasMSA, // FCULT_D = 1585
    CEFBS_HasStdEnc_HasMSA, // FCULT_W = 1586
    CEFBS_HasStdEnc_HasMSA, // FCUNE_D = 1587
    CEFBS_HasStdEnc_HasMSA, // FCUNE_W = 1588
    CEFBS_HasStdEnc_HasMSA, // FCUN_D = 1589
    CEFBS_HasStdEnc_HasMSA, // FCUN_W = 1590
    CEFBS_HasStdEnc_HasMSA, // FDIV_D = 1591
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FDIV_D32 = 1592
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FDIV_D32_MM = 1593
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FDIV_D64 = 1594
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FDIV_D64_MM = 1595
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FDIV_S = 1596
    CEFBS_InMicroMips_IsNotSoftFloat, // FDIV_S_MM = 1597
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FDIV_S_MMR6 = 1598
    CEFBS_HasStdEnc_HasMSA, // FDIV_W = 1599
    CEFBS_HasStdEnc_HasMSA, // FEXDO_H = 1600
    CEFBS_HasStdEnc_HasMSA, // FEXDO_W = 1601
    CEFBS_HasStdEnc_HasMSA, // FEXP2_D = 1602
    CEFBS_HasStdEnc_HasMSA, // FEXP2_W = 1603
    CEFBS_HasStdEnc_HasMSA, // FEXUPL_D = 1604
    CEFBS_HasStdEnc_HasMSA, // FEXUPL_W = 1605
    CEFBS_HasStdEnc_HasMSA, // FEXUPR_D = 1606
    CEFBS_HasStdEnc_HasMSA, // FEXUPR_W = 1607
    CEFBS_HasStdEnc_HasMSA, // FFINT_S_D = 1608
    CEFBS_HasStdEnc_HasMSA, // FFINT_S_W = 1609
    CEFBS_HasStdEnc_HasMSA, // FFINT_U_D = 1610
    CEFBS_HasStdEnc_HasMSA, // FFINT_U_W = 1611
    CEFBS_HasStdEnc_HasMSA, // FFQL_D = 1612
    CEFBS_HasStdEnc_HasMSA, // FFQL_W = 1613
    CEFBS_HasStdEnc_HasMSA, // FFQR_D = 1614
    CEFBS_HasStdEnc_HasMSA, // FFQR_W = 1615
    CEFBS_HasStdEnc_HasMSA, // FILL_B = 1616
    CEFBS_HasStdEnc_HasMSA_HasMips64, // FILL_D = 1617
    CEFBS_HasStdEnc_HasMSA, // FILL_H = 1618
    CEFBS_HasStdEnc_HasMSA, // FILL_W = 1619
    CEFBS_HasStdEnc_HasMSA, // FLOG2_D = 1620
    CEFBS_HasStdEnc_HasMSA, // FLOG2_W = 1621
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32_IsNotSoftFloat_NotInMicroMips, // FLOOR_L_D64 = 1622
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FLOOR_L_D_MMR6 = 1623
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // FLOOR_L_S = 1624
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FLOOR_L_S_MMR6 = 1625
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // FLOOR_W_D32 = 1626
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // FLOOR_W_D64 = 1627
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FLOOR_W_D_MMR6 = 1628
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FLOOR_W_MM = 1629
    CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips, // FLOOR_W_S = 1630
    CEFBS_InMicroMips_IsNotSoftFloat, // FLOOR_W_S_MM = 1631
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FLOOR_W_S_MMR6 = 1632
    CEFBS_HasStdEnc_HasMSA, // FMADD_D = 1633
    CEFBS_HasStdEnc_HasMSA, // FMADD_W = 1634
    CEFBS_HasStdEnc_HasMSA, // FMAX_A_D = 1635
    CEFBS_HasStdEnc_HasMSA, // FMAX_A_W = 1636
    CEFBS_HasStdEnc_HasMSA, // FMAX_D = 1637
    CEFBS_HasStdEnc_HasMSA, // FMAX_W = 1638
    CEFBS_HasStdEnc_HasMSA, // FMIN_A_D = 1639
    CEFBS_HasStdEnc_HasMSA, // FMIN_A_W = 1640
    CEFBS_HasStdEnc_HasMSA, // FMIN_D = 1641
    CEFBS_HasStdEnc_HasMSA, // FMIN_W = 1642
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FMOV_D32 = 1643
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FMOV_D32_MM = 1644
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FMOV_D64 = 1645
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FMOV_D64_MM = 1646
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FMOV_D_MMR6 = 1647
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FMOV_S = 1648
    CEFBS_InMicroMips_IsNotSoftFloat, // FMOV_S_MM = 1649
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FMOV_S_MMR6 = 1650
    CEFBS_HasStdEnc_HasMSA, // FMSUB_D = 1651
    CEFBS_HasStdEnc_HasMSA, // FMSUB_W = 1652
    CEFBS_HasStdEnc_HasMSA, // FMUL_D = 1653
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FMUL_D32 = 1654
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FMUL_D32_MM = 1655
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FMUL_D64 = 1656
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FMUL_D64_MM = 1657
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // FMUL_PS64 = 1658
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FMUL_S = 1659
    CEFBS_InMicroMips_IsNotSoftFloat, // FMUL_S_MM = 1660
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FMUL_S_MMR6 = 1661
    CEFBS_HasStdEnc_HasMSA, // FMUL_W = 1662
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FNEG_D32 = 1663
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FNEG_D32_MM = 1664
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FNEG_D64 = 1665
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FNEG_D64_MM = 1666
    CEFBS_HasStdEnc_IsNotSoftFloat, // FNEG_S = 1667
    CEFBS_InMicroMips_IsNotSoftFloat, // FNEG_S_MM = 1668
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FNEG_S_MMR6 = 1669
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // FORK = 1670
    CEFBS_HasStdEnc_HasMSA, // FRCP_D = 1671
    CEFBS_HasStdEnc_HasMSA, // FRCP_W = 1672
    CEFBS_HasStdEnc_HasMSA, // FRINT_D = 1673
    CEFBS_HasStdEnc_HasMSA, // FRINT_W = 1674
    CEFBS_HasStdEnc_HasMSA, // FRSQRT_D = 1675
    CEFBS_HasStdEnc_HasMSA, // FRSQRT_W = 1676
    CEFBS_HasStdEnc_HasMSA, // FSAF_D = 1677
    CEFBS_HasStdEnc_HasMSA, // FSAF_W = 1678
    CEFBS_HasStdEnc_HasMSA, // FSEQ_D = 1679
    CEFBS_HasStdEnc_HasMSA, // FSEQ_W = 1680
    CEFBS_HasStdEnc_HasMSA, // FSLE_D = 1681
    CEFBS_HasStdEnc_HasMSA, // FSLE_W = 1682
    CEFBS_HasStdEnc_HasMSA, // FSLT_D = 1683
    CEFBS_HasStdEnc_HasMSA, // FSLT_W = 1684
    CEFBS_HasStdEnc_HasMSA, // FSNE_D = 1685
    CEFBS_HasStdEnc_HasMSA, // FSNE_W = 1686
    CEFBS_HasStdEnc_HasMSA, // FSOR_D = 1687
    CEFBS_HasStdEnc_HasMSA, // FSOR_W = 1688
    CEFBS_HasStdEnc_HasMSA, // FSQRT_D = 1689
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // FSQRT_D32 = 1690
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FSQRT_D32_MM = 1691
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // FSQRT_D64 = 1692
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FSQRT_D64_MM = 1693
    CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips, // FSQRT_S = 1694
    CEFBS_InMicroMips_IsNotSoftFloat, // FSQRT_S_MM = 1695
    CEFBS_HasStdEnc_HasMSA, // FSQRT_W = 1696
    CEFBS_HasStdEnc_HasMSA, // FSUB_D = 1697
    CEFBS_HasStdEnc_NotFP64bit_IsNotSoftFloat_NotInMicroMips, // FSUB_D32 = 1698
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // FSUB_D32_MM = 1699
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // FSUB_D64 = 1700
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // FSUB_D64_MM = 1701
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // FSUB_PS64 = 1702
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // FSUB_S = 1703
    CEFBS_InMicroMips_IsNotSoftFloat, // FSUB_S_MM = 1704
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // FSUB_S_MMR6 = 1705
    CEFBS_HasStdEnc_HasMSA, // FSUB_W = 1706
    CEFBS_HasStdEnc_HasMSA, // FSUEQ_D = 1707
    CEFBS_HasStdEnc_HasMSA, // FSUEQ_W = 1708
    CEFBS_HasStdEnc_HasMSA, // FSULE_D = 1709
    CEFBS_HasStdEnc_HasMSA, // FSULE_W = 1710
    CEFBS_HasStdEnc_HasMSA, // FSULT_D = 1711
    CEFBS_HasStdEnc_HasMSA, // FSULT_W = 1712
    CEFBS_HasStdEnc_HasMSA, // FSUNE_D = 1713
    CEFBS_HasStdEnc_HasMSA, // FSUNE_W = 1714
    CEFBS_HasStdEnc_HasMSA, // FSUN_D = 1715
    CEFBS_HasStdEnc_HasMSA, // FSUN_W = 1716
    CEFBS_HasStdEnc_HasMSA, // FTINT_S_D = 1717
    CEFBS_HasStdEnc_HasMSA, // FTINT_S_W = 1718
    CEFBS_HasStdEnc_HasMSA, // FTINT_U_D = 1719
    CEFBS_HasStdEnc_HasMSA, // FTINT_U_W = 1720
    CEFBS_HasStdEnc_HasMSA, // FTQ_H = 1721
    CEFBS_HasStdEnc_HasMSA, // FTQ_W = 1722
    CEFBS_HasStdEnc_HasMSA, // FTRUNC_S_D = 1723
    CEFBS_HasStdEnc_HasMSA, // FTRUNC_S_W = 1724
    CEFBS_HasStdEnc_HasMSA, // FTRUNC_U_D = 1725
    CEFBS_HasStdEnc_HasMSA, // FTRUNC_U_W = 1726
    CEFBS_HasStdEnc_HasMips32r6_HasGINV_NotInMicroMips, // GINVI = 1727
    CEFBS_InMicroMips_HasMips32r6_HasGINV, // GINVI_MMR6 = 1728
    CEFBS_HasStdEnc_HasMips32r6_HasGINV_NotInMicroMips, // GINVT = 1729
    CEFBS_InMicroMips_HasMips32r6_HasGINV, // GINVT_MMR6 = 1730
    CEFBS_HasStdEnc_HasMSA, // HADD_S_D = 1731
    CEFBS_HasStdEnc_HasMSA, // HADD_S_H = 1732
    CEFBS_HasStdEnc_HasMSA, // HADD_S_W = 1733
    CEFBS_HasStdEnc_HasMSA, // HADD_U_D = 1734
    CEFBS_HasStdEnc_HasMSA, // HADD_U_H = 1735
    CEFBS_HasStdEnc_HasMSA, // HADD_U_W = 1736
    CEFBS_HasStdEnc_HasMSA, // HSUB_S_D = 1737
    CEFBS_HasStdEnc_HasMSA, // HSUB_S_H = 1738
    CEFBS_HasStdEnc_HasMSA, // HSUB_S_W = 1739
    CEFBS_HasStdEnc_HasMSA, // HSUB_U_D = 1740
    CEFBS_HasStdEnc_HasMSA, // HSUB_U_H = 1741
    CEFBS_HasStdEnc_HasMSA, // HSUB_U_W = 1742
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // HYPCALL = 1743
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // HYPCALL_MM = 1744
    CEFBS_HasStdEnc_HasMSA, // ILVEV_B = 1745
    CEFBS_HasStdEnc_HasMSA, // ILVEV_D = 1746
    CEFBS_HasStdEnc_HasMSA, // ILVEV_H = 1747
    CEFBS_HasStdEnc_HasMSA, // ILVEV_W = 1748
    CEFBS_HasStdEnc_HasMSA, // ILVL_B = 1749
    CEFBS_HasStdEnc_HasMSA, // ILVL_D = 1750
    CEFBS_HasStdEnc_HasMSA, // ILVL_H = 1751
    CEFBS_HasStdEnc_HasMSA, // ILVL_W = 1752
    CEFBS_HasStdEnc_HasMSA, // ILVOD_B = 1753
    CEFBS_HasStdEnc_HasMSA, // ILVOD_D = 1754
    CEFBS_HasStdEnc_HasMSA, // ILVOD_H = 1755
    CEFBS_HasStdEnc_HasMSA, // ILVOD_W = 1756
    CEFBS_HasStdEnc_HasMSA, // ILVR_B = 1757
    CEFBS_HasStdEnc_HasMSA, // ILVR_D = 1758
    CEFBS_HasStdEnc_HasMSA, // ILVR_H = 1759
    CEFBS_HasStdEnc_HasMSA, // ILVR_W = 1760
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // INS = 1761
    CEFBS_HasStdEnc_HasMSA, // INSERT_B = 1762
    CEFBS_HasStdEnc_HasMSA_HasMips64, // INSERT_D = 1763
    CEFBS_HasStdEnc_HasMSA, // INSERT_H = 1764
    CEFBS_HasStdEnc_HasMSA, // INSERT_W = 1765
    CEFBS_HasDSP, // INSV = 1766
    CEFBS_HasStdEnc_HasMSA, // INSVE_B = 1767
    CEFBS_HasStdEnc_HasMSA, // INSVE_D = 1768
    CEFBS_HasStdEnc_HasMSA, // INSVE_H = 1769
    CEFBS_HasStdEnc_HasMSA, // INSVE_W = 1770
    CEFBS_InMicroMips_HasDSP, // INSV_MM = 1771
    CEFBS_InMicroMips_NotMips32r6, // INS_MM = 1772
    CEFBS_InMicroMips_HasMips32r6, // INS_MMR6 = 1773
    CEFBS_HasStdEnc_NotInMicroMips, // J = 1774
    CEFBS_HasStdEnc_NotInMicroMips, // JAL = 1775
    CEFBS_HasStdEnc_NotInMicroMips_NoIndirectJumpGuards, // JALR = 1776
    CEFBS_InMicroMips_NotMips32r6, // JALR16_MM = 1777
    CEFBS_NotInMips16Mode_IsPTR64bit, // JALR64 = 1778
    CEFBS_InMicroMips_HasMips32r6, // JALRC16_MMR6 = 1779
    CEFBS_InMicroMips_HasMips32r6, // JALRC_HB_MMR6 = 1780
    CEFBS_InMicroMips_HasMips32r6, // JALRC_MMR6 = 1781
    CEFBS_InMicroMips_NotMips32r6, // JALRS16_MM = 1782
    CEFBS_InMicroMips_NotMips32r6, // JALRS_MM = 1783
    CEFBS_HasStdEnc_HasMips32, // JALR_HB = 1784
    CEFBS_HasStdEnc_HasMips64r2_NotInMicroMips, // JALR_HB64 = 1785
    CEFBS_InMicroMips_NotMips32r6, // JALR_MM = 1786
    CEFBS_InMicroMips_NotMips32r6, // JALS_MM = 1787
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // JALX = 1788
    CEFBS_InMicroMips_NotMips32r6, // JALX_MM = 1789
    CEFBS_InMicroMips_NotMips32r6, // JAL_MM = 1790
    CEFBS_HasStdEnc_HasMips32r6, // JIALC = 1791
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // JIALC64 = 1792
    CEFBS_InMicroMips_HasMips32r6, // JIALC_MMR6 = 1793
    CEFBS_HasStdEnc_HasMips32r6, // JIC = 1794
    CEFBS_HasStdEnc_IsGP64bit_HasMips64r6, // JIC64 = 1795
    CEFBS_InMicroMips_HasMips32r6, // JIC_MMR6 = 1796
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // JR = 1797
    CEFBS_InMicroMips_NotMips32r6, // JR16_MM = 1798
    CEFBS_NotInMips16Mode_IsPTR64bit_NotInMicroMips, // JR64 = 1799
    CEFBS_InMicroMips_NotMips32r6, // JRADDIUSP = 1800
    CEFBS_InMicroMips_NotMips32r6, // JRC16_MM = 1801
    CEFBS_InMicroMips_HasMips32r6, // JRC16_MMR6 = 1802
    CEFBS_InMicroMips_HasMips32r6, // JRCADDIUSP_MMR6 = 1803
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6, // JR_HB = 1804
    CEFBS_HasStdEnc_HasMips64_NotMips64r6_NotInMicroMips, // JR_HB64 = 1805
    CEFBS_HasStdEnc_HasMips32r6, // JR_HB64_R6 = 1806
    CEFBS_HasStdEnc_HasMips32r6, // JR_HB_R6 = 1807
    CEFBS_InMicroMips_NotMips32r6, // JR_MM = 1808
    CEFBS_InMicroMips_NotMips32r6, // J_MM = 1809
    CEFBS_InMips16Mode, // Jal16 = 1810
    CEFBS_InMips16Mode, // JalB16 = 1811
    CEFBS_InMips16Mode, // JrRa16 = 1812
    CEFBS_InMips16Mode, // JrcRa16 = 1813
    CEFBS_InMips16Mode, // JrcRx16 = 1814
    CEFBS_InMips16Mode, // JumpLinkReg16 = 1815
    CEFBS_HasStdEnc_NotInMicroMips, // LB = 1816
    CEFBS_NotInMips16Mode_IsGP64bit, // LB64 = 1817
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LBE = 1818
    CEFBS_InMicroMips_HasEVA, // LBE_MM = 1819
    CEFBS_InMicroMips, // LBU16_MM = 1820
    CEFBS_HasDSP, // LBUX = 1821
    CEFBS_InMicroMips_HasDSP, // LBUX_MM = 1822
    CEFBS_InMicroMips_HasMips32r6, // LBU_MMR6 = 1823
    CEFBS_InMicroMips, // LB_MM = 1824
    CEFBS_InMicroMips_HasMips32r6, // LB_MMR6 = 1825
    CEFBS_HasStdEnc_NotInMicroMips, // LBu = 1826
    CEFBS_NotInMips16Mode_IsGP64bit, // LBu64 = 1827
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LBuE = 1828
    CEFBS_InMicroMips_HasEVA, // LBuE_MM = 1829
    CEFBS_InMicroMips, // LBu_MM = 1830
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // LD = 1831
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // LDC1 = 1832
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // LDC164 = 1833
    CEFBS_InMicroMips_IsFP64bit_HasMips32r6_IsNotSoftFloat, // LDC1_D64_MMR6 = 1834
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // LDC1_MM_D32 = 1835
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // LDC1_MM_D64 = 1836
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // LDC2 = 1837
    CEFBS_InMicroMips_HasMips32r6, // LDC2_MMR6 = 1838
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // LDC2_R6 = 1839
    CEFBS_HasStdEnc_HasMips2_NotCnMips_NotInMicroMips, // LDC3 = 1840
    CEFBS_HasStdEnc_HasMSA, // LDI_B = 1841
    CEFBS_HasStdEnc_HasMSA, // LDI_D = 1842
    CEFBS_HasStdEnc_HasMSA, // LDI_H = 1843
    CEFBS_HasStdEnc_HasMSA, // LDI_W = 1844
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // LDL = 1845
    CEFBS_HasStdEnc_HasMips64r6, // LDPC = 1846
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // LDR = 1847
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // LDXC1 = 1848
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat, // LDXC164 = 1849
    CEFBS_HasStdEnc_HasMSA, // LD_B = 1850
    CEFBS_HasStdEnc_HasMSA, // LD_D = 1851
    CEFBS_HasStdEnc_HasMSA, // LD_H = 1852
    CEFBS_HasStdEnc_HasMSA, // LD_W = 1853
    CEFBS_HasStdEnc_NotInMicroMips, // LEA_ADDiu = 1854
    CEFBS_NotInMips16Mode_IsGP64bit_NotInMicroMips, // LEA_ADDiu64 = 1855
    CEFBS_InMicroMips, // LEA_ADDiu_MM = 1856
    CEFBS_HasStdEnc_NotInMicroMips, // LH = 1857
    CEFBS_NotInMips16Mode_IsGP64bit, // LH64 = 1858
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LHE = 1859
    CEFBS_InMicroMips_HasEVA, // LHE_MM = 1860
    CEFBS_InMicroMips, // LHU16_MM = 1861
    CEFBS_HasDSP, // LHX = 1862
    CEFBS_InMicroMips_HasDSP, // LHX_MM = 1863
    CEFBS_InMicroMips, // LH_MM = 1864
    CEFBS_HasStdEnc_NotInMicroMips, // LHu = 1865
    CEFBS_NotInMips16Mode_IsGP64bit, // LHu64 = 1866
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LHuE = 1867
    CEFBS_InMicroMips_HasEVA, // LHuE_MM = 1868
    CEFBS_InMicroMips, // LHu_MM = 1869
    CEFBS_InMicroMips_NotMips32r6, // LI16_MM = 1870
    CEFBS_InMicroMips_HasMips32r6, // LI16_MMR6 = 1871
    CEFBS_HasStdEnc_IsPTR32bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // LL = 1872
    CEFBS_HasStdEnc_IsPTR64bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // LL64 = 1873
    CEFBS_HasStdEnc_IsPTR64bit_HasMips64r6_NotInMicroMips, // LL64_R6 = 1874
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6_NotInMicroMips, // LLD = 1875
    CEFBS_HasStdEnc_HasMips64r6_NotInMicroMips, // LLD_R6 = 1876
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LLE = 1877
    CEFBS_InMicroMips_HasEVA, // LLE_MM = 1878
    CEFBS_InMicroMips_NotMips32r6, // LL_MM = 1879
    CEFBS_InMicroMips_HasMips32r6, // LL_MMR6 = 1880
    CEFBS_HasStdEnc_IsPTR32bit_HasMips32r6_NotInMicroMips, // LL_R6 = 1881
    CEFBS_HasStdEnc_HasMSA, // LSA = 1882
    CEFBS_InMicroMips_HasMips32r6, // LSA_MMR6 = 1883
    CEFBS_HasStdEnc_HasMips32r6, // LSA_R6 = 1884
    CEFBS_InMicroMips_HasMips32r6, // LUI_MMR6 = 1885
    CEFBS_HasStdEnc_NotFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // LUXC1 = 1886
    CEFBS_HasStdEnc_IsFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // LUXC164 = 1887
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // LUXC1_MM = 1888
    CEFBS_HasStdEnc_NotInMicroMips, // LUi = 1889
    CEFBS_NotInMips16Mode_IsGP64bit, // LUi64 = 1890
    CEFBS_InMicroMips_NotMips32r6, // LUi_MM = 1891
    CEFBS_HasStdEnc_NotInMicroMips, // LW = 1892
    CEFBS_InMicroMips, // LW16_MM = 1893
    CEFBS_NotInMips16Mode_IsGP64bit, // LW64 = 1894
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // LWC1 = 1895
    CEFBS_InMicroMips_IsNotSoftFloat, // LWC1_MM = 1896
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // LWC2 = 1897
    CEFBS_InMicroMips_HasMips32r6, // LWC2_MMR6 = 1898
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // LWC2_R6 = 1899
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotCnMips_NotInMicroMips, // LWC3 = 1900
    CEFBS_NotInMips16Mode_HasDSP, // LWDSP = 1901
    CEFBS_InMicroMips_HasDSP, // LWDSP_MM = 1902
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // LWE = 1903
    CEFBS_InMicroMips_HasEVA, // LWE_MM = 1904
    CEFBS_InMicroMips, // LWGP_MM = 1905
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // LWL = 1906
    CEFBS_NotInMips16Mode_IsGP64bit, // LWL64 = 1907
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_HasEVA_NotInMicroMips, // LWLE = 1908
    CEFBS_InMicroMips_NotMips32r6_HasEVA, // LWLE_MM = 1909
    CEFBS_InMicroMips_NotMips32r6, // LWL_MM = 1910
    CEFBS_InMicroMips_NotMips32r6, // LWM16_MM = 1911
    CEFBS_InMicroMips_HasMips32r6, // LWM16_MMR6 = 1912
    CEFBS_InMicroMips, // LWM32_MM = 1913
    CEFBS_HasStdEnc_HasMips32r6, // LWPC = 1914
    CEFBS_InMicroMips_HasMips32r6, // LWPC_MMR6 = 1915
    CEFBS_InMicroMips, // LWP_MM = 1916
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // LWR = 1917
    CEFBS_NotInMips16Mode_IsGP64bit, // LWR64 = 1918
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_HasEVA_NotInMicroMips, // LWRE = 1919
    CEFBS_InMicroMips_NotMips32r6_HasEVA, // LWRE_MM = 1920
    CEFBS_InMicroMips_NotMips32r6, // LWR_MM = 1921
    CEFBS_InMicroMips, // LWSP_MM = 1922
    CEFBS_HasStdEnc_HasMips64r6, // LWUPC = 1923
    CEFBS_InMicroMips_NotMips32r6, // LWU_MM = 1924
    CEFBS_HasDSP, // LWX = 1925
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat, // LWXC1 = 1926
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // LWXC1_MM = 1927
    CEFBS_InMicroMips, // LWXS_MM = 1928
    CEFBS_InMicroMips_HasDSP, // LWX_MM = 1929
    CEFBS_InMicroMips, // LW_MM = 1930
    CEFBS_InMicroMips_HasMips32r6, // LW_MMR6 = 1931
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // LWu = 1932
    CEFBS_InMips16Mode, // LbRxRyOffMemX16 = 1933
    CEFBS_InMips16Mode, // LbuRxRyOffMemX16 = 1934
    CEFBS_InMips16Mode, // LhRxRyOffMemX16 = 1935
    CEFBS_InMips16Mode, // LhuRxRyOffMemX16 = 1936
    CEFBS_InMips16Mode, // LiRxImm16 = 1937
    CEFBS_InMips16Mode, // LiRxImmAlignX16 = 1938
    CEFBS_InMips16Mode, // LiRxImmX16 = 1939
    CEFBS_InMips16Mode, // LwRxPcTcp16 = 1940
    CEFBS_InMips16Mode, // LwRxPcTcpX16 = 1941
    CEFBS_InMips16Mode, // LwRxRyOffMemX16 = 1942
    CEFBS_InMips16Mode, // LwRxSpImmX16 = 1943
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // MADD = 1944
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MADDF_D = 1945
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MADDF_D_MMR6 = 1946
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MADDF_S = 1947
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MADDF_S_MMR6 = 1948
    CEFBS_HasStdEnc_HasMSA, // MADDR_Q_H = 1949
    CEFBS_HasStdEnc_HasMSA, // MADDR_Q_W = 1950
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // MADDU = 1951
    CEFBS_HasDSP, // MADDU_DSP = 1952
    CEFBS_InMicroMips_HasDSP, // MADDU_DSP_MM = 1953
    CEFBS_InMicroMips_NotMips32r6, // MADDU_MM = 1954
    CEFBS_HasStdEnc_HasMSA, // MADDV_B = 1955
    CEFBS_HasStdEnc_HasMSA, // MADDV_D = 1956
    CEFBS_HasStdEnc_HasMSA, // MADDV_H = 1957
    CEFBS_HasStdEnc_HasMSA, // MADDV_W = 1958
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MADD_D32 = 1959
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat_HasMadd4, // MADD_D32_MM = 1960
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MADD_D64 = 1961
    CEFBS_HasDSP, // MADD_DSP = 1962
    CEFBS_InMicroMips_HasDSP, // MADD_DSP_MM = 1963
    CEFBS_InMicroMips_NotMips32r6, // MADD_MM = 1964
    CEFBS_HasStdEnc_HasMSA, // MADD_Q_H = 1965
    CEFBS_HasStdEnc_HasMSA, // MADD_Q_W = 1966
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MADD_S = 1967
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat_HasMadd4, // MADD_S_MM = 1968
    CEFBS_HasDSP, // MAQ_SA_W_PHL = 1969
    CEFBS_InMicroMips_HasDSP, // MAQ_SA_W_PHL_MM = 1970
    CEFBS_HasDSP, // MAQ_SA_W_PHR = 1971
    CEFBS_InMicroMips_HasDSP, // MAQ_SA_W_PHR_MM = 1972
    CEFBS_HasDSP, // MAQ_S_W_PHL = 1973
    CEFBS_InMicroMips_HasDSP, // MAQ_S_W_PHL_MM = 1974
    CEFBS_HasDSP, // MAQ_S_W_PHR = 1975
    CEFBS_InMicroMips_HasDSP, // MAQ_S_W_PHR_MM = 1976
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MAXA_D = 1977
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MAXA_D_MMR6 = 1978
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MAXA_S = 1979
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MAXA_S_MMR6 = 1980
    CEFBS_HasStdEnc_HasMSA, // MAXI_S_B = 1981
    CEFBS_HasStdEnc_HasMSA, // MAXI_S_D = 1982
    CEFBS_HasStdEnc_HasMSA, // MAXI_S_H = 1983
    CEFBS_HasStdEnc_HasMSA, // MAXI_S_W = 1984
    CEFBS_HasStdEnc_HasMSA, // MAXI_U_B = 1985
    CEFBS_HasStdEnc_HasMSA, // MAXI_U_D = 1986
    CEFBS_HasStdEnc_HasMSA, // MAXI_U_H = 1987
    CEFBS_HasStdEnc_HasMSA, // MAXI_U_W = 1988
    CEFBS_HasStdEnc_HasMSA, // MAX_A_B = 1989
    CEFBS_HasStdEnc_HasMSA, // MAX_A_D = 1990
    CEFBS_HasStdEnc_HasMSA, // MAX_A_H = 1991
    CEFBS_HasStdEnc_HasMSA, // MAX_A_W = 1992
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MAX_D = 1993
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MAX_D_MMR6 = 1994
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MAX_S = 1995
    CEFBS_HasStdEnc_HasMSA, // MAX_S_B = 1996
    CEFBS_HasStdEnc_HasMSA, // MAX_S_D = 1997
    CEFBS_HasStdEnc_HasMSA, // MAX_S_H = 1998
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MAX_S_MMR6 = 1999
    CEFBS_HasStdEnc_HasMSA, // MAX_S_W = 2000
    CEFBS_HasStdEnc_HasMSA, // MAX_U_B = 2001
    CEFBS_HasStdEnc_HasMSA, // MAX_U_D = 2002
    CEFBS_HasStdEnc_HasMSA, // MAX_U_H = 2003
    CEFBS_HasStdEnc_HasMSA, // MAX_U_W = 2004
    CEFBS_HasStdEnc_NotInMicroMips, // MFC0 = 2005
    CEFBS_InMicroMips_HasMips32r6, // MFC0_MMR6 = 2006
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // MFC1 = 2007
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // MFC1_D64 = 2008
    CEFBS_InMicroMips_IsNotSoftFloat, // MFC1_MM = 2009
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MFC1_MMR6 = 2010
    CEFBS_HasStdEnc_NotInMicroMips, // MFC2 = 2011
    CEFBS_InMicroMips_HasMips32r6, // MFC2_MMR6 = 2012
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // MFGC0 = 2013
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // MFGC0_MM = 2014
    CEFBS_InMicroMips_HasMips32r6, // MFHC0_MMR6 = 2015
    CEFBS_HasStdEnc_NotFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips, // MFHC1_D32 = 2016
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // MFHC1_D32_MM = 2017
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips, // MFHC1_D64 = 2018
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // MFHC1_D64_MM = 2019
    CEFBS_InMicroMips_HasMips32r6, // MFHC2_MMR6 = 2020
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // MFHGC0 = 2021
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // MFHGC0_MM = 2022
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MFHI = 2023
    CEFBS_InMicroMips_NotMips32r6, // MFHI16_MM = 2024
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // MFHI64 = 2025
    CEFBS_HasDSP, // MFHI_DSP = 2026
    CEFBS_InMicroMips_HasDSP, // MFHI_DSP_MM = 2027
    CEFBS_InMicroMips_NotMips32r6, // MFHI_MM = 2028
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MFLO = 2029
    CEFBS_InMicroMips_NotMips32r6, // MFLO16_MM = 2030
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // MFLO64 = 2031
    CEFBS_HasDSP, // MFLO_DSP = 2032
    CEFBS_InMicroMips_HasDSP, // MFLO_DSP_MM = 2033
    CEFBS_InMicroMips_NotMips32r6, // MFLO_MM = 2034
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // MFTR = 2035
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MINA_D = 2036
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MINA_D_MMR6 = 2037
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MINA_S = 2038
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MINA_S_MMR6 = 2039
    CEFBS_HasStdEnc_HasMSA, // MINI_S_B = 2040
    CEFBS_HasStdEnc_HasMSA, // MINI_S_D = 2041
    CEFBS_HasStdEnc_HasMSA, // MINI_S_H = 2042
    CEFBS_HasStdEnc_HasMSA, // MINI_S_W = 2043
    CEFBS_HasStdEnc_HasMSA, // MINI_U_B = 2044
    CEFBS_HasStdEnc_HasMSA, // MINI_U_D = 2045
    CEFBS_HasStdEnc_HasMSA, // MINI_U_H = 2046
    CEFBS_HasStdEnc_HasMSA, // MINI_U_W = 2047
    CEFBS_HasStdEnc_HasMSA, // MIN_A_B = 2048
    CEFBS_HasStdEnc_HasMSA, // MIN_A_D = 2049
    CEFBS_HasStdEnc_HasMSA, // MIN_A_H = 2050
    CEFBS_HasStdEnc_HasMSA, // MIN_A_W = 2051
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MIN_D = 2052
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MIN_D_MMR6 = 2053
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MIN_S = 2054
    CEFBS_HasStdEnc_HasMSA, // MIN_S_B = 2055
    CEFBS_HasStdEnc_HasMSA, // MIN_S_D = 2056
    CEFBS_HasStdEnc_HasMSA, // MIN_S_H = 2057
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MIN_S_MMR6 = 2058
    CEFBS_HasStdEnc_HasMSA, // MIN_S_W = 2059
    CEFBS_HasStdEnc_HasMSA, // MIN_U_B = 2060
    CEFBS_HasStdEnc_HasMSA, // MIN_U_D = 2061
    CEFBS_HasStdEnc_HasMSA, // MIN_U_H = 2062
    CEFBS_HasStdEnc_HasMSA, // MIN_U_W = 2063
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MOD = 2064
    CEFBS_HasDSP, // MODSUB = 2065
    CEFBS_InMicroMips_HasDSP, // MODSUB_MM = 2066
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MODU = 2067
    CEFBS_InMicroMips_HasMips32r6, // MODU_MMR6 = 2068
    CEFBS_InMicroMips_HasMips32r6, // MOD_MMR6 = 2069
    CEFBS_HasStdEnc_HasMSA, // MOD_S_B = 2070
    CEFBS_HasStdEnc_HasMSA, // MOD_S_D = 2071
    CEFBS_HasStdEnc_HasMSA, // MOD_S_H = 2072
    CEFBS_HasStdEnc_HasMSA, // MOD_S_W = 2073
    CEFBS_HasStdEnc_HasMSA, // MOD_U_B = 2074
    CEFBS_HasStdEnc_HasMSA, // MOD_U_D = 2075
    CEFBS_HasStdEnc_HasMSA, // MOD_U_H = 2076
    CEFBS_HasStdEnc_HasMSA, // MOD_U_W = 2077
    CEFBS_InMicroMips_NotMips32r6, // MOVE16_MM = 2078
    CEFBS_InMicroMips_HasMips32r6, // MOVE16_MMR6 = 2079
    CEFBS_InMicroMips_NotMips32r6, // MOVEP_MM = 2080
    CEFBS_InMicroMips_HasMips32r6, // MOVEP_MMR6 = 2081
    CEFBS_HasStdEnc_HasMSA, // MOVE_V = 2082
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVF_D32 = 2083
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // MOVF_D32_MM = 2084
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVF_D64 = 2085
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVF_I = 2086
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVF_I64 = 2087
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVF_I_MM = 2088
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVF_S = 2089
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVF_S_MM = 2090
    CEFBS_HasStdEnc_IsGP64bit_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVN_I64_D64 = 2091
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVN_I64_I = 2092
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVN_I64_I64 = 2093
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVN_I64_S = 2094
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVN_I_D32 = 2095
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // MOVN_I_D32_MM = 2096
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVN_I_D64 = 2097
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVN_I_I = 2098
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVN_I_I64 = 2099
    CEFBS_InMicroMips_NotMips32r6, // MOVN_I_MM = 2100
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVN_I_S = 2101
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVN_I_S_MM = 2102
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVT_D32 = 2103
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // MOVT_D32_MM = 2104
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVT_D64 = 2105
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVT_I = 2106
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVT_I64 = 2107
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVT_I_MM = 2108
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVT_S = 2109
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVT_S_MM = 2110
    CEFBS_HasStdEnc_IsGP64bit_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVZ_I64_D64 = 2111
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVZ_I64_I = 2112
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVZ_I64_I64 = 2113
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVZ_I64_S = 2114
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVZ_I_D32 = 2115
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat, // MOVZ_I_D32_MM = 2116
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVZ_I_D64 = 2117
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVZ_I_I = 2118
    CEFBS_HasStdEnc_IsGP64bit_HasMips4_32_NotMips32r6_NotMips64r6_NotInMicroMips, // MOVZ_I_I64 = 2119
    CEFBS_InMicroMips_NotMips32r6, // MOVZ_I_MM = 2120
    CEFBS_HasStdEnc_HasMips4_32_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // MOVZ_I_S = 2121
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // MOVZ_I_S_MM = 2122
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // MSUB = 2123
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MSUBF_D = 2124
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MSUBF_D_MMR6 = 2125
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // MSUBF_S = 2126
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MSUBF_S_MMR6 = 2127
    CEFBS_HasStdEnc_HasMSA, // MSUBR_Q_H = 2128
    CEFBS_HasStdEnc_HasMSA, // MSUBR_Q_W = 2129
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // MSUBU = 2130
    CEFBS_HasDSP, // MSUBU_DSP = 2131
    CEFBS_InMicroMips_HasDSP, // MSUBU_DSP_MM = 2132
    CEFBS_InMicroMips_NotMips32r6, // MSUBU_MM = 2133
    CEFBS_HasStdEnc_HasMSA, // MSUBV_B = 2134
    CEFBS_HasStdEnc_HasMSA, // MSUBV_D = 2135
    CEFBS_HasStdEnc_HasMSA, // MSUBV_H = 2136
    CEFBS_HasStdEnc_HasMSA, // MSUBV_W = 2137
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MSUB_D32 = 2138
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat_HasMadd4, // MSUB_D32_MM = 2139
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MSUB_D64 = 2140
    CEFBS_HasDSP, // MSUB_DSP = 2141
    CEFBS_InMicroMips_HasDSP, // MSUB_DSP_MM = 2142
    CEFBS_InMicroMips_NotMips32r6, // MSUB_MM = 2143
    CEFBS_HasStdEnc_HasMSA, // MSUB_Q_H = 2144
    CEFBS_HasStdEnc_HasMSA, // MSUB_Q_W = 2145
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips_HasMadd4, // MSUB_S = 2146
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat_HasMadd4, // MSUB_S_MM = 2147
    CEFBS_HasStdEnc_NotInMicroMips, // MTC0 = 2148
    CEFBS_InMicroMips_HasMips32r6, // MTC0_MMR6 = 2149
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // MTC1 = 2150
    CEFBS_HasStdEnc_IsFP64bit_IsNotSoftFloat_NotInMicroMips, // MTC1_D64 = 2151
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // MTC1_D64_MM = 2152
    CEFBS_InMicroMips_IsNotSoftFloat, // MTC1_MM = 2153
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // MTC1_MMR6 = 2154
    CEFBS_HasStdEnc_NotInMicroMips, // MTC2 = 2155
    CEFBS_InMicroMips_HasMips32r6, // MTC2_MMR6 = 2156
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // MTGC0 = 2157
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // MTGC0_MM = 2158
    CEFBS_InMicroMips_HasMips32r6, // MTHC0_MMR6 = 2159
    CEFBS_HasStdEnc_NotFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips, // MTHC1_D32 = 2160
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // MTHC1_D32_MM = 2161
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_IsNotSoftFloat_NotInMicroMips, // MTHC1_D64 = 2162
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // MTHC1_D64_MM = 2163
    CEFBS_InMicroMips_HasMips32r6, // MTHC2_MMR6 = 2164
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // MTHGC0 = 2165
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // MTHGC0_MM = 2166
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MTHI = 2167
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // MTHI64 = 2168
    CEFBS_HasDSP, // MTHI_DSP = 2169
    CEFBS_InMicroMips_HasDSP, // MTHI_DSP_MM = 2170
    CEFBS_InMicroMips_NotMips32r6, // MTHI_MM = 2171
    CEFBS_HasDSP, // MTHLIP = 2172
    CEFBS_InMicroMips_HasDSP, // MTHLIP_MM = 2173
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MTLO = 2174
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // MTLO64 = 2175
    CEFBS_HasDSP, // MTLO_DSP = 2176
    CEFBS_InMicroMips_HasDSP, // MTLO_DSP_MM = 2177
    CEFBS_InMicroMips_NotMips32r6, // MTLO_MM = 2178
    CEFBS_HasCnMips, // MTM0 = 2179
    CEFBS_HasCnMips, // MTM1 = 2180
    CEFBS_HasCnMips, // MTM2 = 2181
    CEFBS_HasCnMips, // MTP0 = 2182
    CEFBS_HasCnMips, // MTP1 = 2183
    CEFBS_HasCnMips, // MTP2 = 2184
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // MTTR = 2185
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MUH = 2186
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MUHU = 2187
    CEFBS_InMicroMips_HasMips32r6, // MUHU_MMR6 = 2188
    CEFBS_InMicroMips_HasMips32r6, // MUH_MMR6 = 2189
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // MUL = 2190
    CEFBS_HasDSP, // MULEQ_S_W_PHL = 2191
    CEFBS_InMicroMips_HasDSP, // MULEQ_S_W_PHL_MM = 2192
    CEFBS_HasDSP, // MULEQ_S_W_PHR = 2193
    CEFBS_InMicroMips_HasDSP, // MULEQ_S_W_PHR_MM = 2194
    CEFBS_HasDSP, // MULEU_S_PH_QBL = 2195
    CEFBS_InMicroMips_HasDSP, // MULEU_S_PH_QBL_MM = 2196
    CEFBS_HasDSP, // MULEU_S_PH_QBR = 2197
    CEFBS_InMicroMips_HasDSP, // MULEU_S_PH_QBR_MM = 2198
    CEFBS_HasDSP, // MULQ_RS_PH = 2199
    CEFBS_InMicroMips_HasDSP, // MULQ_RS_PH_MM = 2200
    CEFBS_HasDSPR2, // MULQ_RS_W = 2201
    CEFBS_InMicroMips_HasDSPR2, // MULQ_RS_W_MMR2 = 2202
    CEFBS_HasDSPR2, // MULQ_S_PH = 2203
    CEFBS_InMicroMips_HasDSPR2, // MULQ_S_PH_MMR2 = 2204
    CEFBS_HasDSPR2, // MULQ_S_W = 2205
    CEFBS_InMicroMips_HasDSPR2, // MULQ_S_W_MMR2 = 2206
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMips3D, // MULR_PS64 = 2207
    CEFBS_HasStdEnc_HasMSA, // MULR_Q_H = 2208
    CEFBS_HasStdEnc_HasMSA, // MULR_Q_W = 2209
    CEFBS_HasDSP, // MULSAQ_S_W_PH = 2210
    CEFBS_InMicroMips_HasDSP, // MULSAQ_S_W_PH_MM = 2211
    CEFBS_HasDSPR2, // MULSA_W_PH = 2212
    CEFBS_InMicroMips_HasDSPR2, // MULSA_W_PH_MMR2 = 2213
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MULT = 2214
    CEFBS_HasDSP, // MULTU_DSP = 2215
    CEFBS_InMicroMips_HasDSP, // MULTU_DSP_MM = 2216
    CEFBS_HasDSP, // MULT_DSP = 2217
    CEFBS_InMicroMips_HasDSP, // MULT_DSP_MM = 2218
    CEFBS_InMicroMips_NotMips32r6, // MULT_MM = 2219
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // MULTu = 2220
    CEFBS_InMicroMips_NotMips32r6, // MULTu_MM = 2221
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MULU = 2222
    CEFBS_InMicroMips_HasMips32r6, // MULU_MMR6 = 2223
    CEFBS_HasStdEnc_HasMSA, // MULV_B = 2224
    CEFBS_HasStdEnc_HasMSA, // MULV_D = 2225
    CEFBS_HasStdEnc_HasMSA, // MULV_H = 2226
    CEFBS_HasStdEnc_HasMSA, // MULV_W = 2227
    CEFBS_InMicroMips_NotMips32r6, // MUL_MM = 2228
    CEFBS_InMicroMips_HasMips32r6, // MUL_MMR6 = 2229
    CEFBS_HasDSPR2, // MUL_PH = 2230
    CEFBS_InMicroMips_HasDSPR2, // MUL_PH_MMR2 = 2231
    CEFBS_HasStdEnc_HasMSA, // MUL_Q_H = 2232
    CEFBS_HasStdEnc_HasMSA, // MUL_Q_W = 2233
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // MUL_R6 = 2234
    CEFBS_HasDSPR2, // MUL_S_PH = 2235
    CEFBS_InMicroMips_HasDSPR2, // MUL_S_PH_MMR2 = 2236
    CEFBS_InMips16Mode, // Mfhi16 = 2237
    CEFBS_InMips16Mode, // Mflo16 = 2238
    CEFBS_InMips16Mode, // Move32R16 = 2239
    CEFBS_InMips16Mode, // MoveR3216 = 2240
    CEFBS_HasStdEnc_HasMSA, // NLOC_B = 2241
    CEFBS_HasStdEnc_HasMSA, // NLOC_D = 2242
    CEFBS_HasStdEnc_HasMSA, // NLOC_H = 2243
    CEFBS_HasStdEnc_HasMSA, // NLOC_W = 2244
    CEFBS_HasStdEnc_HasMSA, // NLZC_B = 2245
    CEFBS_HasStdEnc_HasMSA, // NLZC_D = 2246
    CEFBS_HasStdEnc_HasMSA, // NLZC_H = 2247
    CEFBS_HasStdEnc_HasMSA, // NLZC_W = 2248
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMADD_D32 = 2249
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat_HasMadd4, // NMADD_D32_MM = 2250
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMADD_D64 = 2251
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMADD_S = 2252
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat_HasMadd4, // NMADD_S_MM = 2253
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMSUB_D32 = 2254
    CEFBS_InMicroMips_NotFP64bit_NotMips32r6_IsNotSoftFloat_HasMadd4, // NMSUB_D32_MM = 2255
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMSUB_D64 = 2256
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_HasMadd4_NotInMicroMips, // NMSUB_S = 2257
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat_HasMadd4, // NMSUB_S_MM = 2258
    CEFBS_HasStdEnc_NotInMicroMips, // NOR = 2259
    CEFBS_NotInMips16Mode_IsGP64bit, // NOR64 = 2260
    CEFBS_HasStdEnc_HasMSA, // NORI_B = 2261
    CEFBS_InMicroMips_NotMips32r6, // NOR_MM = 2262
    CEFBS_InMicroMips_HasMips32r6, // NOR_MMR6 = 2263
    CEFBS_HasStdEnc_HasMSA, // NOR_V = 2264
    CEFBS_InMicroMips_NotMips32r6, // NOT16_MM = 2265
    CEFBS_InMicroMips_HasMips32r6, // NOT16_MMR6 = 2266
    CEFBS_InMips16Mode, // NegRxRy16 = 2267
    CEFBS_InMips16Mode, // NotRxRy16 = 2268
    CEFBS_HasStdEnc_NotInMicroMips, // OR = 2269
    CEFBS_InMicroMips_NotMips32r6, // OR16_MM = 2270
    CEFBS_InMicroMips_HasMips32r6, // OR16_MMR6 = 2271
    CEFBS_NotInMips16Mode_IsGP64bit, // OR64 = 2272
    CEFBS_HasStdEnc_HasMSA, // ORI_B = 2273
    CEFBS_InMicroMips_HasMips32r6, // ORI_MMR6 = 2274
    CEFBS_InMicroMips_NotMips32r6, // OR_MM = 2275
    CEFBS_InMicroMips_HasMips32r6, // OR_MMR6 = 2276
    CEFBS_HasStdEnc_HasMSA, // OR_V = 2277
    CEFBS_HasStdEnc_NotInMicroMips, // ORi = 2278
    CEFBS_NotInMips16Mode_IsGP64bit, // ORi64 = 2279
    CEFBS_InMicroMips_NotMips32r6, // ORi_MM = 2280
    CEFBS_InMips16Mode, // OrRxRxRy16 = 2281
    CEFBS_HasDSP, // PACKRL_PH = 2282
    CEFBS_InMicroMips_HasDSP, // PACKRL_PH_MM = 2283
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // PAUSE = 2284
    CEFBS_InMicroMips, // PAUSE_MM = 2285
    CEFBS_InMicroMips_HasMips32r6, // PAUSE_MMR6 = 2286
    CEFBS_HasStdEnc_HasMSA, // PCKEV_B = 2287
    CEFBS_HasStdEnc_HasMSA, // PCKEV_D = 2288
    CEFBS_HasStdEnc_HasMSA, // PCKEV_H = 2289
    CEFBS_HasStdEnc_HasMSA, // PCKEV_W = 2290
    CEFBS_HasStdEnc_HasMSA, // PCKOD_B = 2291
    CEFBS_HasStdEnc_HasMSA, // PCKOD_D = 2292
    CEFBS_HasStdEnc_HasMSA, // PCKOD_H = 2293
    CEFBS_HasStdEnc_HasMSA, // PCKOD_W = 2294
    CEFBS_HasStdEnc_HasMSA, // PCNT_B = 2295
    CEFBS_HasStdEnc_HasMSA, // PCNT_D = 2296
    CEFBS_HasStdEnc_HasMSA, // PCNT_H = 2297
    CEFBS_HasStdEnc_HasMSA, // PCNT_W = 2298
    CEFBS_HasDSP, // PICK_PH = 2299
    CEFBS_InMicroMips_HasDSP, // PICK_PH_MM = 2300
    CEFBS_HasDSP, // PICK_QB = 2301
    CEFBS_InMicroMips_HasDSP, // PICK_QB_MM = 2302
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // PLL_PS64 = 2303
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // PLU_PS64 = 2304
    CEFBS_HasCnMips, // POP = 2305
    CEFBS_HasDSP, // PRECEQU_PH_QBL = 2306
    CEFBS_HasDSP, // PRECEQU_PH_QBLA = 2307
    CEFBS_InMicroMips_HasDSP, // PRECEQU_PH_QBLA_MM = 2308
    CEFBS_InMicroMips_HasDSP, // PRECEQU_PH_QBL_MM = 2309
    CEFBS_HasDSP, // PRECEQU_PH_QBR = 2310
    CEFBS_HasDSP, // PRECEQU_PH_QBRA = 2311
    CEFBS_InMicroMips_HasDSP, // PRECEQU_PH_QBRA_MM = 2312
    CEFBS_InMicroMips_HasDSP, // PRECEQU_PH_QBR_MM = 2313
    CEFBS_HasDSP, // PRECEQ_W_PHL = 2314
    CEFBS_InMicroMips_HasDSP, // PRECEQ_W_PHL_MM = 2315
    CEFBS_HasDSP, // PRECEQ_W_PHR = 2316
    CEFBS_InMicroMips_HasDSP, // PRECEQ_W_PHR_MM = 2317
    CEFBS_HasDSP, // PRECEU_PH_QBL = 2318
    CEFBS_HasDSP, // PRECEU_PH_QBLA = 2319
    CEFBS_InMicroMips_HasDSP, // PRECEU_PH_QBLA_MM = 2320
    CEFBS_InMicroMips_HasDSP, // PRECEU_PH_QBL_MM = 2321
    CEFBS_HasDSP, // PRECEU_PH_QBR = 2322
    CEFBS_HasDSP, // PRECEU_PH_QBRA = 2323
    CEFBS_InMicroMips_HasDSP, // PRECEU_PH_QBRA_MM = 2324
    CEFBS_InMicroMips_HasDSP, // PRECEU_PH_QBR_MM = 2325
    CEFBS_HasDSP, // PRECRQU_S_QB_PH = 2326
    CEFBS_InMicroMips_HasDSP, // PRECRQU_S_QB_PH_MM = 2327
    CEFBS_HasDSP, // PRECRQ_PH_W = 2328
    CEFBS_InMicroMips_HasDSP, // PRECRQ_PH_W_MM = 2329
    CEFBS_HasDSP, // PRECRQ_QB_PH = 2330
    CEFBS_InMicroMips_HasDSP, // PRECRQ_QB_PH_MM = 2331
    CEFBS_HasDSP, // PRECRQ_RS_PH_W = 2332
    CEFBS_InMicroMips_HasDSP, // PRECRQ_RS_PH_W_MM = 2333
    CEFBS_HasDSPR2, // PRECR_QB_PH = 2334
    CEFBS_InMicroMips_HasDSPR2, // PRECR_QB_PH_MMR2 = 2335
    CEFBS_HasDSPR2, // PRECR_SRA_PH_W = 2336
    CEFBS_InMicroMips_HasDSPR2, // PRECR_SRA_PH_W_MMR2 = 2337
    CEFBS_HasDSPR2, // PRECR_SRA_R_PH_W = 2338
    CEFBS_InMicroMips_HasDSPR2, // PRECR_SRA_R_PH_W_MMR2 = 2339
    CEFBS_HasStdEnc_HasMips3_32_NotMips32r6_NotMips64r6_NotInMicroMips, // PREF = 2340
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // PREFE = 2341
    CEFBS_InMicroMips_HasEVA, // PREFE_MM = 2342
    CEFBS_InMicroMips_NotMips32r6, // PREFX_MM = 2343
    CEFBS_InMicroMips_NotMips32r6, // PREF_MM = 2344
    CEFBS_InMicroMips_HasMips32r6, // PREF_MMR6 = 2345
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // PREF_R6 = 2346
    CEFBS_HasDSPR2, // PREPEND = 2347
    CEFBS_InMicroMips_HasDSPR2, // PREPEND_MMR2 = 2348
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // PUL_PS64 = 2349
    CEFBS_HasStdEnc_IsFP64bit_HasMips32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // PUU_PS64 = 2350
    CEFBS_HasDSP, // RADDU_W_QB = 2351
    CEFBS_InMicroMips_HasDSP, // RADDU_W_QB_MM = 2352
    CEFBS_HasDSP, // RDDSP = 2353
    CEFBS_InMicroMips_HasDSP, // RDDSP_MM = 2354
    CEFBS_HasStdEnc_NotInMicroMips, // RDHWR = 2355
    CEFBS_NotInMips16Mode_IsGP64bit, // RDHWR64 = 2356
    CEFBS_InMicroMips_NotMips32r6, // RDHWR_MM = 2357
    CEFBS_InMicroMips_HasMips32r6, // RDHWR_MMR6 = 2358
    CEFBS_InMicroMips_HasMips32r6, // RDPGPR_MMR6 = 2359
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RECIP_D32 = 2360
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // RECIP_D32_MM = 2361
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RECIP_D64 = 2362
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // RECIP_D64_MM = 2363
    CEFBS_HasStdEnc_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RECIP_S = 2364
    CEFBS_InMicroMips_IsNotSoftFloat, // RECIP_S_MM = 2365
    CEFBS_HasDSP, // REPLV_PH = 2366
    CEFBS_InMicroMips_HasDSP, // REPLV_PH_MM = 2367
    CEFBS_HasDSP, // REPLV_QB = 2368
    CEFBS_InMicroMips_HasDSP, // REPLV_QB_MM = 2369
    CEFBS_HasDSP, // REPL_PH = 2370
    CEFBS_InMicroMips_HasDSP, // REPL_PH_MM = 2371
    CEFBS_HasDSP, // REPL_QB = 2372
    CEFBS_InMicroMips_HasDSP, // REPL_QB_MM = 2373
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // RINT_D = 2374
    CEFBS_InMicroMips_HasMips32r6, // RINT_D_MMR6 = 2375
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // RINT_S = 2376
    CEFBS_InMicroMips_HasMips32r6, // RINT_S_MMR6 = 2377
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // ROTR = 2378
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // ROTRV = 2379
    CEFBS_InMicroMips, // ROTRV_MM = 2380
    CEFBS_InMicroMips, // ROTR_MM = 2381
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32_IsNotSoftFloat_NotInMicroMips, // ROUND_L_D64 = 2382
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // ROUND_L_D_MMR6 = 2383
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // ROUND_L_S = 2384
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // ROUND_L_S_MMR6 = 2385
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // ROUND_W_D32 = 2386
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // ROUND_W_D64 = 2387
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // ROUND_W_D_MMR6 = 2388
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // ROUND_W_MM = 2389
    CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips, // ROUND_W_S = 2390
    CEFBS_InMicroMips_IsNotSoftFloat, // ROUND_W_S_MM = 2391
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // ROUND_W_S_MMR6 = 2392
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RSQRT_D32 = 2393
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // RSQRT_D32_MM = 2394
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RSQRT_D64 = 2395
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // RSQRT_D64_MM = 2396
    CEFBS_HasStdEnc_HasMips4_32r2_IsNotSoftFloat_NotInMicroMips, // RSQRT_S = 2397
    CEFBS_InMicroMips_IsNotSoftFloat, // RSQRT_S_MM = 2398
    CEFBS_InMips16Mode, // Restore16 = 2399
    CEFBS_InMips16Mode, // RestoreX16 = 2400
    CEFBS_HasCnMipsP, // SAA = 2401
    CEFBS_HasCnMipsP, // SAAD = 2402
    CEFBS_HasStdEnc_HasMSA, // SAT_S_B = 2403
    CEFBS_HasStdEnc_HasMSA, // SAT_S_D = 2404
    CEFBS_HasStdEnc_HasMSA, // SAT_S_H = 2405
    CEFBS_HasStdEnc_HasMSA, // SAT_S_W = 2406
    CEFBS_HasStdEnc_HasMSA, // SAT_U_B = 2407
    CEFBS_HasStdEnc_HasMSA, // SAT_U_D = 2408
    CEFBS_HasStdEnc_HasMSA, // SAT_U_H = 2409
    CEFBS_HasStdEnc_HasMSA, // SAT_U_W = 2410
    CEFBS_HasStdEnc_NotInMicroMips, // SB = 2411
    CEFBS_InMicroMips_NotMips32r6, // SB16_MM = 2412
    CEFBS_InMicroMips_HasMips32r6, // SB16_MMR6 = 2413
    CEFBS_NotInMips16Mode_IsGP64bit, // SB64 = 2414
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // SBE = 2415
    CEFBS_InMicroMips_HasEVA, // SBE_MM = 2416
    CEFBS_InMicroMips, // SB_MM = 2417
    CEFBS_InMicroMips_HasMips32r6, // SB_MMR6 = 2418
    CEFBS_HasStdEnc_IsPTR32bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // SC = 2419
    CEFBS_HasStdEnc_IsPTR64bit_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // SC64 = 2420
    CEFBS_HasStdEnc_IsPTR64bit_HasMips64r6_NotInMicroMips, // SC64_R6 = 2421
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // SCD = 2422
    CEFBS_HasStdEnc_HasMips32r6, // SCD_R6 = 2423
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // SCE = 2424
    CEFBS_InMicroMips_HasEVA, // SCE_MM = 2425
    CEFBS_InMicroMips_NotMips32r6, // SC_MM = 2426
    CEFBS_InMicroMips_HasMips32r6, // SC_MMR6 = 2427
    CEFBS_HasStdEnc_IsPTR32bit_HasMips32r6_NotInMicroMips, // SC_R6 = 2428
    CEFBS_HasStdEnc_HasMips3_NotInMicroMips, // SD = 2429
    CEFBS_HasStdEnc_HasMips32_NotMips32r6_NotMips64r6_NotInMicroMips, // SDBBP = 2430
    CEFBS_InMicroMips_NotMips32r6, // SDBBP16_MM = 2431
    CEFBS_InMicroMips_HasMips32r6, // SDBBP16_MMR6 = 2432
    CEFBS_InMicroMips, // SDBBP_MM = 2433
    CEFBS_InMicroMips_HasMips32r6, // SDBBP_MMR6 = 2434
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // SDBBP_R6 = 2435
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // SDC1 = 2436
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // SDC164 = 2437
    CEFBS_InMicroMips_IsFP64bit_HasMips32r6_IsNotSoftFloat, // SDC1_D64_MMR6 = 2438
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // SDC1_MM_D32 = 2439
    CEFBS_InMicroMips_IsFP64bit_IsNotSoftFloat, // SDC1_MM_D64 = 2440
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // SDC2 = 2441
    CEFBS_InMicroMips_HasMips32r6, // SDC2_MMR6 = 2442
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // SDC2_R6 = 2443
    CEFBS_HasStdEnc_HasMips2_NotCnMips_NotInMicroMips, // SDC3 = 2444
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // SDIV = 2445
    CEFBS_InMicroMips_NotMips32r6, // SDIV_MM = 2446
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // SDL = 2447
    CEFBS_HasStdEnc_HasMips3_NotMips32r6_NotMips64r6, // SDR = 2448
    CEFBS_HasStdEnc_NotFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // SDXC1 = 2449
    CEFBS_HasStdEnc_IsFP64bit_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat, // SDXC164 = 2450
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // SEB = 2451
    CEFBS_HasStdEnc_IsGP64bit_HasMips32r2, // SEB64 = 2452
    CEFBS_InMicroMips, // SEB_MM = 2453
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // SEH = 2454
    CEFBS_HasStdEnc_IsGP64bit_HasMips32r2, // SEH64 = 2455
    CEFBS_InMicroMips, // SEH_MM = 2456
    CEFBS_HasStdEnc_IsGP32bit_HasMips32r6_NotInMicroMips, // SELEQZ = 2457
    CEFBS_HasStdEnc_IsGP64bit_HasMips32r6, // SELEQZ64 = 2458
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SELEQZ_D = 2459
    CEFBS_InMicroMips_HasMips32r6, // SELEQZ_D_MMR6 = 2460
    CEFBS_InMicroMips_HasMips32r6, // SELEQZ_MMR6 = 2461
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SELEQZ_S = 2462
    CEFBS_InMicroMips_HasMips32r6, // SELEQZ_S_MMR6 = 2463
    CEFBS_HasStdEnc_IsGP32bit_HasMips32r6_NotInMicroMips, // SELNEZ = 2464
    CEFBS_HasStdEnc_IsGP64bit_HasMips32r6, // SELNEZ64 = 2465
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SELNEZ_D = 2466
    CEFBS_InMicroMips_HasMips32r6, // SELNEZ_D_MMR6 = 2467
    CEFBS_InMicroMips_HasMips32r6, // SELNEZ_MMR6 = 2468
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SELNEZ_S = 2469
    CEFBS_InMicroMips_HasMips32r6, // SELNEZ_S_MMR6 = 2470
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SEL_D = 2471
    CEFBS_InMicroMips_HasMips32r6, // SEL_D_MMR6 = 2472
    CEFBS_HasStdEnc_HasMips32r6_IsNotSoftFloat_NotInMicroMips, // SEL_S = 2473
    CEFBS_InMicroMips_HasMips32r6, // SEL_S_MMR6 = 2474
    CEFBS_HasCnMips, // SEQ = 2475
    CEFBS_HasCnMips, // SEQi = 2476
    CEFBS_HasStdEnc_NotInMicroMips, // SH = 2477
    CEFBS_InMicroMips_NotMips32r6, // SH16_MM = 2478
    CEFBS_InMicroMips_HasMips32r6, // SH16_MMR6 = 2479
    CEFBS_NotInMips16Mode_IsGP64bit, // SH64 = 2480
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // SHE = 2481
    CEFBS_InMicroMips_HasEVA, // SHE_MM = 2482
    CEFBS_HasStdEnc_HasMSA, // SHF_B = 2483
    CEFBS_HasStdEnc_HasMSA, // SHF_H = 2484
    CEFBS_HasStdEnc_HasMSA, // SHF_W = 2485
    CEFBS_HasDSP, // SHILO = 2486
    CEFBS_HasDSP, // SHILOV = 2487
    CEFBS_InMicroMips_HasDSP, // SHILOV_MM = 2488
    CEFBS_InMicroMips_HasDSP, // SHILO_MM = 2489
    CEFBS_HasDSP, // SHLLV_PH = 2490
    CEFBS_InMicroMips_HasDSP, // SHLLV_PH_MM = 2491
    CEFBS_HasDSP, // SHLLV_QB = 2492
    CEFBS_InMicroMips_HasDSP, // SHLLV_QB_MM = 2493
    CEFBS_HasDSP, // SHLLV_S_PH = 2494
    CEFBS_InMicroMips_HasDSP, // SHLLV_S_PH_MM = 2495
    CEFBS_HasDSP, // SHLLV_S_W = 2496
    CEFBS_InMicroMips_HasDSP, // SHLLV_S_W_MM = 2497
    CEFBS_HasDSP, // SHLL_PH = 2498
    CEFBS_InMicroMips_HasDSP, // SHLL_PH_MM = 2499
    CEFBS_HasDSP, // SHLL_QB = 2500
    CEFBS_InMicroMips_HasDSP, // SHLL_QB_MM = 2501
    CEFBS_HasDSP, // SHLL_S_PH = 2502
    CEFBS_InMicroMips_HasDSP, // SHLL_S_PH_MM = 2503
    CEFBS_HasDSP, // SHLL_S_W = 2504
    CEFBS_InMicroMips_HasDSP, // SHLL_S_W_MM = 2505
    CEFBS_HasDSP, // SHRAV_PH = 2506
    CEFBS_InMicroMips_HasDSP, // SHRAV_PH_MM = 2507
    CEFBS_HasDSPR2, // SHRAV_QB = 2508
    CEFBS_InMicroMips_HasDSPR2, // SHRAV_QB_MMR2 = 2509
    CEFBS_HasDSP, // SHRAV_R_PH = 2510
    CEFBS_InMicroMips_HasDSP, // SHRAV_R_PH_MM = 2511
    CEFBS_HasDSPR2, // SHRAV_R_QB = 2512
    CEFBS_InMicroMips_HasDSPR2, // SHRAV_R_QB_MMR2 = 2513
    CEFBS_HasDSP, // SHRAV_R_W = 2514
    CEFBS_InMicroMips_HasDSP, // SHRAV_R_W_MM = 2515
    CEFBS_HasDSP, // SHRA_PH = 2516
    CEFBS_InMicroMips_HasDSP, // SHRA_PH_MM = 2517
    CEFBS_HasDSPR2, // SHRA_QB = 2518
    CEFBS_InMicroMips_HasDSPR2, // SHRA_QB_MMR2 = 2519
    CEFBS_HasDSP, // SHRA_R_PH = 2520
    CEFBS_InMicroMips_HasDSP, // SHRA_R_PH_MM = 2521
    CEFBS_HasDSPR2, // SHRA_R_QB = 2522
    CEFBS_InMicroMips_HasDSPR2, // SHRA_R_QB_MMR2 = 2523
    CEFBS_HasDSP, // SHRA_R_W = 2524
    CEFBS_InMicroMips_HasDSP, // SHRA_R_W_MM = 2525
    CEFBS_HasDSPR2, // SHRLV_PH = 2526
    CEFBS_InMicroMips_HasDSPR2, // SHRLV_PH_MMR2 = 2527
    CEFBS_HasDSP, // SHRLV_QB = 2528
    CEFBS_InMicroMips_HasDSP, // SHRLV_QB_MM = 2529
    CEFBS_HasDSPR2, // SHRL_PH = 2530
    CEFBS_InMicroMips_HasDSPR2, // SHRL_PH_MMR2 = 2531
    CEFBS_HasDSP, // SHRL_QB = 2532
    CEFBS_InMicroMips_HasDSP, // SHRL_QB_MM = 2533
    CEFBS_InMicroMips, // SH_MM = 2534
    CEFBS_InMicroMips_HasMips32r6, // SH_MMR6 = 2535
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // SIGRIE = 2536
    CEFBS_InMicroMips_HasMips32r6, // SIGRIE_MMR6 = 2537
    CEFBS_HasStdEnc_HasMSA, // SLDI_B = 2538
    CEFBS_HasStdEnc_HasMSA, // SLDI_D = 2539
    CEFBS_HasStdEnc_HasMSA, // SLDI_H = 2540
    CEFBS_HasStdEnc_HasMSA, // SLDI_W = 2541
    CEFBS_HasStdEnc_HasMSA, // SLD_B = 2542
    CEFBS_HasStdEnc_HasMSA, // SLD_D = 2543
    CEFBS_HasStdEnc_HasMSA, // SLD_H = 2544
    CEFBS_HasStdEnc_HasMSA, // SLD_W = 2545
    CEFBS_HasStdEnc_NotInMicroMips, // SLL = 2546
    CEFBS_InMicroMips_NotMips32r6, // SLL16_MM = 2547
    CEFBS_InMicroMips_HasMips32r6, // SLL16_MMR6 = 2548
    CEFBS_NotInMips16Mode_IsGP64bit, // SLL64_32 = 2549
    CEFBS_NotInMips16Mode_IsGP64bit, // SLL64_64 = 2550
    CEFBS_HasStdEnc_HasMSA, // SLLI_B = 2551
    CEFBS_HasStdEnc_HasMSA, // SLLI_D = 2552
    CEFBS_HasStdEnc_HasMSA, // SLLI_H = 2553
    CEFBS_HasStdEnc_HasMSA, // SLLI_W = 2554
    CEFBS_HasStdEnc_NotInMicroMips, // SLLV = 2555
    CEFBS_InMicroMips, // SLLV_MM = 2556
    CEFBS_HasStdEnc_HasMSA, // SLL_B = 2557
    CEFBS_HasStdEnc_HasMSA, // SLL_D = 2558
    CEFBS_HasStdEnc_HasMSA, // SLL_H = 2559
    CEFBS_InMicroMips, // SLL_MM = 2560
    CEFBS_InMicroMips_HasMips32r6, // SLL_MMR6 = 2561
    CEFBS_HasStdEnc_HasMSA, // SLL_W = 2562
    CEFBS_HasStdEnc_NotInMicroMips, // SLT = 2563
    CEFBS_NotInMips16Mode_IsGP64bit, // SLT64 = 2564
    CEFBS_InMicroMips, // SLT_MM = 2565
    CEFBS_HasStdEnc_NotInMicroMips, // SLTi = 2566
    CEFBS_NotInMips16Mode_IsGP64bit, // SLTi64 = 2567
    CEFBS_InMicroMips, // SLTi_MM = 2568
    CEFBS_HasStdEnc_NotInMicroMips, // SLTiu = 2569
    CEFBS_NotInMips16Mode_IsGP64bit, // SLTiu64 = 2570
    CEFBS_InMicroMips, // SLTiu_MM = 2571
    CEFBS_HasStdEnc_NotInMicroMips, // SLTu = 2572
    CEFBS_NotInMips16Mode_IsGP64bit, // SLTu64 = 2573
    CEFBS_InMicroMips, // SLTu_MM = 2574
    CEFBS_HasCnMips, // SNE = 2575
    CEFBS_HasCnMips, // SNEi = 2576
    CEFBS_HasStdEnc_HasMSA, // SPLATI_B = 2577
    CEFBS_HasStdEnc_HasMSA, // SPLATI_D = 2578
    CEFBS_HasStdEnc_HasMSA, // SPLATI_H = 2579
    CEFBS_HasStdEnc_HasMSA, // SPLATI_W = 2580
    CEFBS_HasStdEnc_HasMSA, // SPLAT_B = 2581
    CEFBS_HasStdEnc_HasMSA, // SPLAT_D = 2582
    CEFBS_HasStdEnc_HasMSA, // SPLAT_H = 2583
    CEFBS_HasStdEnc_HasMSA, // SPLAT_W = 2584
    CEFBS_HasStdEnc_NotInMicroMips, // SRA = 2585
    CEFBS_HasStdEnc_HasMSA, // SRAI_B = 2586
    CEFBS_HasStdEnc_HasMSA, // SRAI_D = 2587
    CEFBS_HasStdEnc_HasMSA, // SRAI_H = 2588
    CEFBS_HasStdEnc_HasMSA, // SRAI_W = 2589
    CEFBS_HasStdEnc_HasMSA, // SRARI_B = 2590
    CEFBS_HasStdEnc_HasMSA, // SRARI_D = 2591
    CEFBS_HasStdEnc_HasMSA, // SRARI_H = 2592
    CEFBS_HasStdEnc_HasMSA, // SRARI_W = 2593
    CEFBS_HasStdEnc_HasMSA, // SRAR_B = 2594
    CEFBS_HasStdEnc_HasMSA, // SRAR_D = 2595
    CEFBS_HasStdEnc_HasMSA, // SRAR_H = 2596
    CEFBS_HasStdEnc_HasMSA, // SRAR_W = 2597
    CEFBS_HasStdEnc_NotInMicroMips, // SRAV = 2598
    CEFBS_InMicroMips, // SRAV_MM = 2599
    CEFBS_HasStdEnc_HasMSA, // SRA_B = 2600
    CEFBS_HasStdEnc_HasMSA, // SRA_D = 2601
    CEFBS_HasStdEnc_HasMSA, // SRA_H = 2602
    CEFBS_InMicroMips, // SRA_MM = 2603
    CEFBS_HasStdEnc_HasMSA, // SRA_W = 2604
    CEFBS_HasStdEnc_NotInMicroMips, // SRL = 2605
    CEFBS_InMicroMips_NotMips32r6, // SRL16_MM = 2606
    CEFBS_InMicroMips_HasMips32r6, // SRL16_MMR6 = 2607
    CEFBS_HasStdEnc_HasMSA, // SRLI_B = 2608
    CEFBS_HasStdEnc_HasMSA, // SRLI_D = 2609
    CEFBS_HasStdEnc_HasMSA, // SRLI_H = 2610
    CEFBS_HasStdEnc_HasMSA, // SRLI_W = 2611
    CEFBS_HasStdEnc_HasMSA, // SRLRI_B = 2612
    CEFBS_HasStdEnc_HasMSA, // SRLRI_D = 2613
    CEFBS_HasStdEnc_HasMSA, // SRLRI_H = 2614
    CEFBS_HasStdEnc_HasMSA, // SRLRI_W = 2615
    CEFBS_HasStdEnc_HasMSA, // SRLR_B = 2616
    CEFBS_HasStdEnc_HasMSA, // SRLR_D = 2617
    CEFBS_HasStdEnc_HasMSA, // SRLR_H = 2618
    CEFBS_HasStdEnc_HasMSA, // SRLR_W = 2619
    CEFBS_HasStdEnc_NotInMicroMips, // SRLV = 2620
    CEFBS_InMicroMips, // SRLV_MM = 2621
    CEFBS_HasStdEnc_HasMSA, // SRL_B = 2622
    CEFBS_HasStdEnc_HasMSA, // SRL_D = 2623
    CEFBS_HasStdEnc_HasMSA, // SRL_H = 2624
    CEFBS_InMicroMips, // SRL_MM = 2625
    CEFBS_HasStdEnc_HasMSA, // SRL_W = 2626
    CEFBS_HasStdEnc_NotInMicroMips, // SSNOP = 2627
    CEFBS_InMicroMips, // SSNOP_MM = 2628
    CEFBS_InMicroMips_HasMips32r6, // SSNOP_MMR6 = 2629
    CEFBS_HasStdEnc_HasMSA, // ST_B = 2630
    CEFBS_HasStdEnc_HasMSA, // ST_D = 2631
    CEFBS_HasStdEnc_HasMSA, // ST_H = 2632
    CEFBS_HasStdEnc_HasMSA, // ST_W = 2633
    CEFBS_HasStdEnc_NotInMicroMips, // SUB = 2634
    CEFBS_HasDSPR2, // SUBQH_PH = 2635
    CEFBS_InMicroMips_HasDSPR2, // SUBQH_PH_MMR2 = 2636
    CEFBS_HasDSPR2, // SUBQH_R_PH = 2637
    CEFBS_InMicroMips_HasDSPR2, // SUBQH_R_PH_MMR2 = 2638
    CEFBS_HasDSPR2, // SUBQH_R_W = 2639
    CEFBS_InMicroMips_HasDSPR2, // SUBQH_R_W_MMR2 = 2640
    CEFBS_HasDSPR2, // SUBQH_W = 2641
    CEFBS_InMicroMips_HasDSPR2, // SUBQH_W_MMR2 = 2642
    CEFBS_HasDSP, // SUBQ_PH = 2643
    CEFBS_InMicroMips_HasDSP, // SUBQ_PH_MM = 2644
    CEFBS_HasDSP, // SUBQ_S_PH = 2645
    CEFBS_InMicroMips_HasDSP, // SUBQ_S_PH_MM = 2646
    CEFBS_HasDSP, // SUBQ_S_W = 2647
    CEFBS_InMicroMips_HasDSP, // SUBQ_S_W_MM = 2648
    CEFBS_HasStdEnc_HasMSA, // SUBSUS_U_B = 2649
    CEFBS_HasStdEnc_HasMSA, // SUBSUS_U_D = 2650
    CEFBS_HasStdEnc_HasMSA, // SUBSUS_U_H = 2651
    CEFBS_HasStdEnc_HasMSA, // SUBSUS_U_W = 2652
    CEFBS_HasStdEnc_HasMSA, // SUBSUU_S_B = 2653
    CEFBS_HasStdEnc_HasMSA, // SUBSUU_S_D = 2654
    CEFBS_HasStdEnc_HasMSA, // SUBSUU_S_H = 2655
    CEFBS_HasStdEnc_HasMSA, // SUBSUU_S_W = 2656
    CEFBS_HasStdEnc_HasMSA, // SUBS_S_B = 2657
    CEFBS_HasStdEnc_HasMSA, // SUBS_S_D = 2658
    CEFBS_HasStdEnc_HasMSA, // SUBS_S_H = 2659
    CEFBS_HasStdEnc_HasMSA, // SUBS_S_W = 2660
    CEFBS_HasStdEnc_HasMSA, // SUBS_U_B = 2661
    CEFBS_HasStdEnc_HasMSA, // SUBS_U_D = 2662
    CEFBS_HasStdEnc_HasMSA, // SUBS_U_H = 2663
    CEFBS_HasStdEnc_HasMSA, // SUBS_U_W = 2664
    CEFBS_InMicroMips_NotMips32r6, // SUBU16_MM = 2665
    CEFBS_InMicroMips_HasMips32r6, // SUBU16_MMR6 = 2666
    CEFBS_HasDSPR2, // SUBUH_QB = 2667
    CEFBS_InMicroMips_HasDSPR2, // SUBUH_QB_MMR2 = 2668
    CEFBS_HasDSPR2, // SUBUH_R_QB = 2669
    CEFBS_InMicroMips_HasDSPR2, // SUBUH_R_QB_MMR2 = 2670
    CEFBS_InMicroMips_HasMips32r6, // SUBU_MMR6 = 2671
    CEFBS_HasDSPR2, // SUBU_PH = 2672
    CEFBS_InMicroMips_HasDSPR2, // SUBU_PH_MMR2 = 2673
    CEFBS_HasDSP, // SUBU_QB = 2674
    CEFBS_InMicroMips_HasDSP, // SUBU_QB_MM = 2675
    CEFBS_HasDSPR2, // SUBU_S_PH = 2676
    CEFBS_InMicroMips_HasDSPR2, // SUBU_S_PH_MMR2 = 2677
    CEFBS_HasDSP, // SUBU_S_QB = 2678
    CEFBS_InMicroMips_HasDSP, // SUBU_S_QB_MM = 2679
    CEFBS_HasStdEnc_HasMSA, // SUBVI_B = 2680
    CEFBS_HasStdEnc_HasMSA, // SUBVI_D = 2681
    CEFBS_HasStdEnc_HasMSA, // SUBVI_H = 2682
    CEFBS_HasStdEnc_HasMSA, // SUBVI_W = 2683
    CEFBS_HasStdEnc_HasMSA, // SUBV_B = 2684
    CEFBS_HasStdEnc_HasMSA, // SUBV_D = 2685
    CEFBS_HasStdEnc_HasMSA, // SUBV_H = 2686
    CEFBS_HasStdEnc_HasMSA, // SUBV_W = 2687
    CEFBS_InMicroMips_NotMips32r6, // SUB_MM = 2688
    CEFBS_InMicroMips_HasMips32r6, // SUB_MMR6 = 2689
    CEFBS_HasStdEnc_NotInMicroMips, // SUBu = 2690
    CEFBS_InMicroMips_NotMips32r6, // SUBu_MM = 2691
    CEFBS_HasStdEnc_NotFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // SUXC1 = 2692
    CEFBS_HasStdEnc_IsFP64bit_HasMips5_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat_NotInMicroMips, // SUXC164 = 2693
    CEFBS_InMicroMips_IsFP64bit_NotMips32r6_IsNotSoftFloat, // SUXC1_MM = 2694
    CEFBS_HasStdEnc_NotInMicroMips, // SW = 2695
    CEFBS_InMicroMips_NotMips32r6, // SW16_MM = 2696
    CEFBS_InMicroMips_HasMips32r6, // SW16_MMR6 = 2697
    CEFBS_NotInMips16Mode_IsGP64bit, // SW64 = 2698
    CEFBS_HasStdEnc_IsNotSoftFloat_NotInMicroMips, // SWC1 = 2699
    CEFBS_InMicroMips_IsNotSoftFloat, // SWC1_MM = 2700
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // SWC2 = 2701
    CEFBS_InMicroMips_HasMips32r6, // SWC2_MMR6 = 2702
    CEFBS_HasStdEnc_HasMips32r6_NotInMicroMips, // SWC2_R6 = 2703
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotCnMips_NotInMicroMips, // SWC3 = 2704
    CEFBS_NotInMips16Mode_HasDSP, // SWDSP = 2705
    CEFBS_InMicroMips_HasDSP, // SWDSP_MM = 2706
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // SWE = 2707
    CEFBS_InMicroMips_HasEVA, // SWE_MM = 2708
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // SWL = 2709
    CEFBS_NotInMips16Mode_IsGP64bit, // SWL64 = 2710
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_HasEVA_NotInMicroMips, // SWLE = 2711
    CEFBS_InMicroMips_NotMips32r6_HasEVA, // SWLE_MM = 2712
    CEFBS_InMicroMips_NotMips32r6, // SWL_MM = 2713
    CEFBS_InMicroMips_NotMips32r6, // SWM16_MM = 2714
    CEFBS_InMicroMips_HasMips32r6, // SWM16_MMR6 = 2715
    CEFBS_InMicroMips, // SWM32_MM = 2716
    CEFBS_InMicroMips, // SWP_MM = 2717
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // SWR = 2718
    CEFBS_NotInMips16Mode_IsGP64bit, // SWR64 = 2719
    CEFBS_HasStdEnc_HasMips32r2_NotMips32r6_NotMips64r6_HasEVA_NotInMicroMips, // SWRE = 2720
    CEFBS_InMicroMips_NotMips32r6_HasEVA, // SWRE_MM = 2721
    CEFBS_InMicroMips_NotMips32r6, // SWR_MM = 2722
    CEFBS_InMicroMips_NotMips32r6, // SWSP_MM = 2723
    CEFBS_InMicroMips_HasMips32r6, // SWSP_MMR6 = 2724
    CEFBS_HasStdEnc_HasMips4_32r2_NotMips32r6_NotMips64r6_IsNotSoftFloat, // SWXC1 = 2725
    CEFBS_InMicroMips_NotMips32r6_IsNotSoftFloat, // SWXC1_MM = 2726
    CEFBS_InMicroMips, // SW_MM = 2727
    CEFBS_InMicroMips_HasMips32r6, // SW_MMR6 = 2728
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // SYNC = 2729
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // SYNCI = 2730
    CEFBS_InMicroMips_NotMips32r6, // SYNCI_MM = 2731
    CEFBS_InMicroMips_HasMips32r6, // SYNCI_MMR6 = 2732
    CEFBS_InMicroMips, // SYNC_MM = 2733
    CEFBS_InMicroMips_HasMips32r6, // SYNC_MMR6 = 2734
    CEFBS_HasStdEnc_NotInMicroMips, // SYSCALL = 2735
    CEFBS_InMicroMips, // SYSCALL_MM = 2736
    CEFBS_InMips16Mode, // Save16 = 2737
    CEFBS_InMips16Mode, // SaveX16 = 2738
    CEFBS_InMips16Mode, // SbRxRyOffMemX16 = 2739
    CEFBS_InMips16Mode, // SebRx16 = 2740
    CEFBS_InMips16Mode, // SehRx16 = 2741
    CEFBS_InMips16Mode, // ShRxRyOffMemX16 = 2742
    CEFBS_InMips16Mode, // SllX16 = 2743
    CEFBS_InMips16Mode, // SllvRxRy16 = 2744
    CEFBS_InMips16Mode, // SltRxRy16 = 2745
    CEFBS_InMips16Mode, // SltiRxImm16 = 2746
    CEFBS_InMips16Mode, // SltiRxImmX16 = 2747
    CEFBS_InMips16Mode, // SltiuRxImm16 = 2748
    CEFBS_InMips16Mode, // SltiuRxImmX16 = 2749
    CEFBS_InMips16Mode, // SltuRxRy16 = 2750
    CEFBS_InMips16Mode, // SraX16 = 2751
    CEFBS_InMips16Mode, // SravRxRy16 = 2752
    CEFBS_InMips16Mode, // SrlX16 = 2753
    CEFBS_InMips16Mode, // SrlvRxRy16 = 2754
    CEFBS_InMips16Mode, // SubuRxRyRz16 = 2755
    CEFBS_InMips16Mode, // SwRxRyOffMemX16 = 2756
    CEFBS_InMips16Mode, // SwRxSpImmX16 = 2757
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TEQ = 2758
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TEQI = 2759
    CEFBS_InMicroMips_NotMips32r6, // TEQI_MM = 2760
    CEFBS_InMicroMips, // TEQ_MM = 2761
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TGE = 2762
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TGEI = 2763
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TGEIU = 2764
    CEFBS_InMicroMips_NotMips32r6, // TGEIU_MM = 2765
    CEFBS_InMicroMips_NotMips32r6, // TGEI_MM = 2766
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TGEU = 2767
    CEFBS_InMicroMips, // TGEU_MM = 2768
    CEFBS_InMicroMips, // TGE_MM = 2769
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGINV = 2770
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGINVF = 2771
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGINVF_MM = 2772
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGINV_MM = 2773
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGP = 2774
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGP_MM = 2775
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGR = 2776
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGR_MM = 2777
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGWI = 2778
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGWI_MM = 2779
    CEFBS_HasStdEnc_HasMips32r5_HasVirt_NotInMicroMips, // TLBGWR = 2780
    CEFBS_InMicroMips_HasMips32r5_HasVirt, // TLBGWR_MM = 2781
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // TLBINV = 2782
    CEFBS_HasStdEnc_HasMips32r2_HasEVA_NotInMicroMips, // TLBINVF = 2783
    CEFBS_InMicroMips_HasMips32r6, // TLBINVF_MMR6 = 2784
    CEFBS_InMicroMips_HasMips32r6, // TLBINV_MMR6 = 2785
    CEFBS_HasStdEnc_NotInMicroMips, // TLBP = 2786
    CEFBS_InMicroMips, // TLBP_MM = 2787
    CEFBS_HasStdEnc_NotInMicroMips, // TLBR = 2788
    CEFBS_InMicroMips, // TLBR_MM = 2789
    CEFBS_HasStdEnc_NotInMicroMips, // TLBWI = 2790
    CEFBS_InMicroMips, // TLBWI_MM = 2791
    CEFBS_HasStdEnc_NotInMicroMips, // TLBWR = 2792
    CEFBS_InMicroMips, // TLBWR_MM = 2793
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TLT = 2794
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TLTI = 2795
    CEFBS_InMicroMips_NotMips32r6, // TLTIU_MM = 2796
    CEFBS_InMicroMips_NotMips32r6, // TLTI_MM = 2797
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TLTU = 2798
    CEFBS_InMicroMips, // TLTU_MM = 2799
    CEFBS_InMicroMips, // TLT_MM = 2800
    CEFBS_HasStdEnc_HasMips2_NotInMicroMips, // TNE = 2801
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TNEI = 2802
    CEFBS_InMicroMips_NotMips32r6, // TNEI_MM = 2803
    CEFBS_InMicroMips, // TNE_MM = 2804
    CEFBS_HasStdEnc_IsFP64bit_HasMips3_32_IsNotSoftFloat_NotInMicroMips, // TRUNC_L_D64 = 2805
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // TRUNC_L_D_MMR6 = 2806
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // TRUNC_L_S = 2807
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // TRUNC_L_S_MMR6 = 2808
    CEFBS_HasStdEnc_NotFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // TRUNC_W_D32 = 2809
    CEFBS_HasStdEnc_IsFP64bit_HasMips2_IsNotSoftFloat_NotInMicroMips, // TRUNC_W_D64 = 2810
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // TRUNC_W_D_MMR6 = 2811
    CEFBS_InMicroMips_NotFP64bit_IsNotSoftFloat, // TRUNC_W_MM = 2812
    CEFBS_HasStdEnc_HasMips2_IsNotSoftFloat_NotInMicroMips, // TRUNC_W_S = 2813
    CEFBS_InMicroMips_IsNotSoftFloat, // TRUNC_W_S_MM = 2814
    CEFBS_InMicroMips_HasMips32r6_IsNotSoftFloat, // TRUNC_W_S_MMR6 = 2815
    CEFBS_HasStdEnc_HasMips2_NotMips32r6_NotMips64r6_NotInMicroMips, // TTLTIU = 2816
    CEFBS_HasStdEnc_NotMips32r6_NotMips64r6_NotInMicroMips, // UDIV = 2817
    CEFBS_InMicroMips_NotMips32r6, // UDIV_MM = 2818
    CEFBS_HasCnMips, // V3MULU = 2819
    CEFBS_HasCnMips, // VMM0 = 2820
    CEFBS_HasCnMips, // VMULU = 2821
    CEFBS_HasStdEnc_HasMSA, // VSHF_B = 2822
    CEFBS_HasStdEnc_HasMSA, // VSHF_D = 2823
    CEFBS_HasStdEnc_HasMSA, // VSHF_H = 2824
    CEFBS_HasStdEnc_HasMSA, // VSHF_W = 2825
    CEFBS_HasStdEnc_HasMips3_32_NotInMicroMips, // WAIT = 2826
    CEFBS_InMicroMips, // WAIT_MM = 2827
    CEFBS_InMicroMips_HasMips32r6, // WAIT_MMR6 = 2828
    CEFBS_HasDSP_NotInMicroMips, // WRDSP = 2829
    CEFBS_InMicroMips_HasDSP, // WRDSP_MM = 2830
    CEFBS_InMicroMips_HasMips32r6, // WRPGPR_MMR6 = 2831
    CEFBS_HasStdEnc_HasMips32r2_NotInMicroMips, // WSBH = 2832
    CEFBS_InMicroMips, // WSBH_MM = 2833
    CEFBS_InMicroMips_HasMips32r6, // WSBH_MMR6 = 2834
    CEFBS_HasStdEnc_NotInMicroMips, // XOR = 2835
    CEFBS_InMicroMips_NotMips32r6, // XOR16_MM = 2836
    CEFBS_InMicroMips_HasMips32r6, // XOR16_MMR6 = 2837
    CEFBS_NotInMips16Mode_IsGP64bit, // XOR64 = 2838
    CEFBS_HasStdEnc_HasMSA, // XORI_B = 2839
    CEFBS_InMicroMips_HasMips32r6, // XORI_MMR6 = 2840
    CEFBS_InMicroMips_NotMips32r6, // XOR_MM = 2841
    CEFBS_InMicroMips_HasMips32r6, // XOR_MMR6 = 2842
    CEFBS_HasStdEnc_HasMSA, // XOR_V = 2843
    CEFBS_HasStdEnc_NotInMicroMips, // XORi = 2844
    CEFBS_NotInMips16Mode_IsGP64bit, // XORi64 = 2845
    CEFBS_InMicroMips_NotMips32r6, // XORi_MM = 2846
    CEFBS_InMips16Mode, // XorRxRxRy16 = 2847
    CEFBS_HasStdEnc_HasMT_NotInMicroMips, // YIELD = 2848
  };

  assert(Opcode < 2849);
  FeatureBitset AvailableFeatures = computeAvailableFeatures(Features);
  const FeatureBitset &RequiredFeatures = FeatureBitsets[RequiredFeaturesRefs[Opcode]];
  FeatureBitset MissingFeatures =
      (AvailableFeatures & RequiredFeatures) ^
      RequiredFeatures;
  if (MissingFeatures.any()) {
    std::ostringstream Msg;
    Msg << "Attempting to emit " << &MipsInstrNameData[MipsInstrNameIndices[Opcode]]
        << " instruction but the ";
    for (unsigned i = 0, e = MissingFeatures.size(); i != e; ++i)
      if (MissingFeatures.test(i))
        Msg << SubtargetFeatureNames[i] << " ";
    Msg << "predicate(s) are not met";
    report_fatal_error(Msg.str().c_str());
  }
#endif // NDEBUG
}
} // end namespace Mips_MC
} // end namespace llvm
#endif // ENABLE_INSTR_PREDICATE_VERIFIER

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace Mips {

enum Arch {
	Arch_dsp,
	Arch_mmdsp,
	Arch_mipsr6,
	Arch_micromipsr6,
	Arch_se,
	Arch_micromips
};

// Dsp2MicroMips
LLVM_READONLY
int Dsp2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Dsp2MicroMipsTable[][3] = {
  { Mips::ABSQ_S_PH, Mips::ABSQ_S_PH, Mips::ABSQ_S_PH_MM },
  { Mips::ABSQ_S_QB, Mips::ABSQ_S_QB, Mips::ABSQ_S_QB_MMR2 },
  { Mips::ABSQ_S_W, Mips::ABSQ_S_W, Mips::ABSQ_S_W_MM },
  { Mips::ADDQH_PH, Mips::ADDQH_PH, Mips::ADDQH_PH_MMR2 },
  { Mips::ADDQH_R_PH, Mips::ADDQH_R_PH, Mips::ADDQH_R_PH_MMR2 },
  { Mips::ADDQH_R_W, Mips::ADDQH_R_W, Mips::ADDQH_R_W_MMR2 },
  { Mips::ADDQH_W, Mips::ADDQH_W, Mips::ADDQH_W_MMR2 },
  { Mips::ADDQ_PH, Mips::ADDQ_PH, Mips::ADDQ_PH_MM },
  { Mips::ADDQ_S_PH, Mips::ADDQ_S_PH, Mips::ADDQ_S_PH_MM },
  { Mips::ADDQ_S_W, Mips::ADDQ_S_W, Mips::ADDQ_S_W_MM },
  { Mips::ADDSC, Mips::ADDSC, Mips::ADDSC_MM },
  { Mips::ADDUH_QB, Mips::ADDUH_QB, Mips::ADDUH_QB_MMR2 },
  { Mips::ADDUH_R_QB, Mips::ADDUH_R_QB, Mips::ADDUH_R_QB_MMR2 },
  { Mips::ADDU_PH, Mips::ADDU_PH, Mips::ADDU_PH_MMR2 },
  { Mips::ADDU_QB, Mips::ADDU_QB, Mips::ADDU_QB_MM },
  { Mips::ADDU_S_PH, Mips::ADDU_S_PH, Mips::ADDU_S_PH_MMR2 },
  { Mips::ADDU_S_QB, Mips::ADDU_S_QB, Mips::ADDU_S_QB_MM },
  { Mips::ADDWC, Mips::ADDWC, Mips::ADDWC_MM },
  { Mips::APPEND, Mips::APPEND, Mips::APPEND_MMR2 },
  { Mips::BALIGN, Mips::BALIGN, Mips::BALIGN_MMR2 },
  { Mips::BITREV, Mips::BITREV, Mips::BITREV_MM },
  { Mips::BPOSGE32, Mips::BPOSGE32, Mips::BPOSGE32_MM },
  { Mips::CMPGDU_EQ_QB, Mips::CMPGDU_EQ_QB, Mips::CMPGDU_EQ_QB_MMR2 },
  { Mips::CMPGDU_LE_QB, Mips::CMPGDU_LE_QB, Mips::CMPGDU_LE_QB_MMR2 },
  { Mips::CMPGDU_LT_QB, Mips::CMPGDU_LT_QB, Mips::CMPGDU_LT_QB_MMR2 },
  { Mips::CMPGU_EQ_QB, Mips::CMPGU_EQ_QB, Mips::CMPGU_EQ_QB_MM },
  { Mips::CMPGU_LE_QB, Mips::CMPGU_LE_QB, Mips::CMPGU_LE_QB_MM },
  { Mips::CMPGU_LT_QB, Mips::CMPGU_LT_QB, Mips::CMPGU_LT_QB_MM },
  { Mips::CMPU_EQ_QB, Mips::CMPU_EQ_QB, Mips::CMPU_EQ_QB_MM },
  { Mips::CMPU_LE_QB, Mips::CMPU_LE_QB, Mips::CMPU_LE_QB_MM },
  { Mips::CMPU_LT_QB, Mips::CMPU_LT_QB, Mips::CMPU_LT_QB_MM },
  { Mips::CMP_EQ_PH, Mips::CMP_EQ_PH, Mips::CMP_EQ_PH_MM },
  { Mips::CMP_LE_PH, Mips::CMP_LE_PH, Mips::CMP_LE_PH_MM },
  { Mips::CMP_LT_PH, Mips::CMP_LT_PH, Mips::CMP_LT_PH_MM },
  { Mips::DPAQX_SA_W_PH, Mips::DPAQX_SA_W_PH, Mips::DPAQX_SA_W_PH_MMR2 },
  { Mips::DPAQX_S_W_PH, Mips::DPAQX_S_W_PH, Mips::DPAQX_S_W_PH_MMR2 },
  { Mips::DPAQ_SA_L_W, Mips::DPAQ_SA_L_W, Mips::DPAQ_SA_L_W_MM },
  { Mips::DPAQ_S_W_PH, Mips::DPAQ_S_W_PH, Mips::DPAQ_S_W_PH_MM },
  { Mips::DPAU_H_QBL, Mips::DPAU_H_QBL, Mips::DPAU_H_QBL_MM },
  { Mips::DPAU_H_QBR, Mips::DPAU_H_QBR, Mips::DPAU_H_QBR_MM },
  { Mips::DPAX_W_PH, Mips::DPAX_W_PH, Mips::DPAX_W_PH_MMR2 },
  { Mips::DPA_W_PH, Mips::DPA_W_PH, Mips::DPA_W_PH_MMR2 },
  { Mips::DPSQX_SA_W_PH, Mips::DPSQX_SA_W_PH, Mips::DPSQX_SA_W_PH_MMR2 },
  { Mips::DPSQX_S_W_PH, Mips::DPSQX_S_W_PH, Mips::DPSQX_S_W_PH_MMR2 },
  { Mips::DPSQ_SA_L_W, Mips::DPSQ_SA_L_W, Mips::DPSQ_SA_L_W_MM },
  { Mips::DPSQ_S_W_PH, Mips::DPSQ_S_W_PH, Mips::DPSQ_S_W_PH_MM },
  { Mips::DPSU_H_QBL, Mips::DPSU_H_QBL, Mips::DPSU_H_QBL_MM },
  { Mips::DPSU_H_QBR, Mips::DPSU_H_QBR, Mips::DPSU_H_QBR_MM },
  { Mips::DPSX_W_PH, Mips::DPSX_W_PH, Mips::DPSX_W_PH_MMR2 },
  { Mips::DPS_W_PH, Mips::DPS_W_PH, Mips::DPS_W_PH_MMR2 },
  { Mips::EXTP, Mips::EXTP, Mips::EXTP_MM },
  { Mips::EXTPDP, Mips::EXTPDP, Mips::EXTPDP_MM },
  { Mips::EXTPDPV, Mips::EXTPDPV, Mips::EXTPDPV_MM },
  { Mips::EXTPV, Mips::EXTPV, Mips::EXTPV_MM },
  { Mips::EXTRV_RS_W, Mips::EXTRV_RS_W, Mips::EXTRV_RS_W_MM },
  { Mips::EXTRV_R_W, Mips::EXTRV_R_W, Mips::EXTRV_R_W_MM },
  { Mips::EXTRV_S_H, Mips::EXTRV_S_H, Mips::EXTRV_S_H_MM },
  { Mips::EXTRV_W, Mips::EXTRV_W, Mips::EXTRV_W_MM },
  { Mips::EXTR_RS_W, Mips::EXTR_RS_W, Mips::EXTR_RS_W_MM },
  { Mips::EXTR_R_W, Mips::EXTR_R_W, Mips::EXTR_R_W_MM },
  { Mips::EXTR_S_H, Mips::EXTR_S_H, Mips::EXTR_S_H_MM },
  { Mips::EXTR_W, Mips::EXTR_W, Mips::EXTR_W_MM },
  { Mips::INSV, Mips::INSV, Mips::INSV_MM },
  { Mips::LBUX, Mips::LBUX, Mips::LBUX_MM },
  { Mips::LHX, Mips::LHX, Mips::LHX_MM },
  { Mips::LWDSP, Mips::LWDSP, Mips::LWDSP_MM },
  { Mips::LWX, Mips::LWX, Mips::LWX_MM },
  { Mips::MADDU_DSP, Mips::MADDU_DSP, Mips::MADDU_DSP_MM },
  { Mips::MADD_DSP, Mips::MADD_DSP, Mips::MADD_DSP_MM },
  { Mips::MAQ_SA_W_PHL, Mips::MAQ_SA_W_PHL, Mips::MAQ_SA_W_PHL_MM },
  { Mips::MAQ_SA_W_PHR, Mips::MAQ_SA_W_PHR, Mips::MAQ_SA_W_PHR_MM },
  { Mips::MAQ_S_W_PHL, Mips::MAQ_S_W_PHL, Mips::MAQ_S_W_PHL_MM },
  { Mips::MAQ_S_W_PHR, Mips::MAQ_S_W_PHR, Mips::MAQ_S_W_PHR_MM },
  { Mips::MFHI_DSP, Mips::MFHI_DSP, Mips::MFHI_DSP_MM },
  { Mips::MFLO_DSP, Mips::MFLO_DSP, Mips::MFLO_DSP_MM },
  { Mips::MODSUB, Mips::MODSUB, Mips::MODSUB_MM },
  { Mips::MSUBU_DSP, Mips::MSUBU_DSP, Mips::MSUBU_DSP_MM },
  { Mips::MSUB_DSP, Mips::MSUB_DSP, Mips::MSUB_DSP_MM },
  { Mips::MTHI_DSP, Mips::MTHI_DSP, Mips::MTHI_DSP_MM },
  { Mips::MTHLIP, Mips::MTHLIP, Mips::MTHLIP_MM },
  { Mips::MTLO_DSP, Mips::MTLO_DSP, Mips::MTLO_DSP_MM },
  { Mips::MULEQ_S_W_PHL, Mips::MULEQ_S_W_PHL, Mips::MULEQ_S_W_PHL_MM },
  { Mips::MULEQ_S_W_PHR, Mips::MULEQ_S_W_PHR, Mips::MULEQ_S_W_PHR_MM },
  { Mips::MULEU_S_PH_QBL, Mips::MULEU_S_PH_QBL, Mips::MULEU_S_PH_QBL_MM },
  { Mips::MULEU_S_PH_QBR, Mips::MULEU_S_PH_QBR, Mips::MULEU_S_PH_QBR_MM },
  { Mips::MULQ_RS_PH, Mips::MULQ_RS_PH, Mips::MULQ_RS_PH_MM },
  { Mips::MULQ_RS_W, Mips::MULQ_RS_W, Mips::MULQ_RS_W_MMR2 },
  { Mips::MULQ_S_PH, Mips::MULQ_S_PH, Mips::MULQ_S_PH_MMR2 },
  { Mips::MULQ_S_W, Mips::MULQ_S_W, Mips::MULQ_S_W_MMR2 },
  { Mips::MULSAQ_S_W_PH, Mips::MULSAQ_S_W_PH, Mips::MULSAQ_S_W_PH_MM },
  { Mips::MULSA_W_PH, Mips::MULSA_W_PH, Mips::MULSA_W_PH_MMR2 },
  { Mips::MULTU_DSP, Mips::MULTU_DSP, Mips::MULTU_DSP_MM },
  { Mips::MULT_DSP, Mips::MULT_DSP, Mips::MULT_DSP_MM },
  { Mips::MUL_PH, Mips::MUL_PH, Mips::MUL_PH_MMR2 },
  { Mips::MUL_S_PH, Mips::MUL_S_PH, Mips::MUL_S_PH_MMR2 },
  { Mips::PACKRL_PH, Mips::PACKRL_PH, Mips::PACKRL_PH_MM },
  { Mips::PICK_PH, Mips::PICK_PH, Mips::PICK_PH_MM },
  { Mips::PICK_QB, Mips::PICK_QB, Mips::PICK_QB_MM },
  { Mips::PRECEQU_PH_QBL, Mips::PRECEQU_PH_QBL, Mips::PRECEQU_PH_QBL_MM },
  { Mips::PRECEQU_PH_QBLA, Mips::PRECEQU_PH_QBLA, Mips::PRECEQU_PH_QBLA_MM },
  { Mips::PRECEQU_PH_QBR, Mips::PRECEQU_PH_QBR, Mips::PRECEQU_PH_QBR_MM },
  { Mips::PRECEQU_PH_QBRA, Mips::PRECEQU_PH_QBRA, Mips::PRECEQU_PH_QBRA_MM },
  { Mips::PRECEQ_W_PHL, Mips::PRECEQ_W_PHL, Mips::PRECEQ_W_PHL_MM },
  { Mips::PRECEQ_W_PHR, Mips::PRECEQ_W_PHR, Mips::PRECEQ_W_PHR_MM },
  { Mips::PRECEU_PH_QBL, Mips::PRECEU_PH_QBL, Mips::PRECEU_PH_QBL_MM },
  { Mips::PRECEU_PH_QBLA, Mips::PRECEU_PH_QBLA, Mips::PRECEU_PH_QBLA_MM },
  { Mips::PRECEU_PH_QBR, Mips::PRECEU_PH_QBR, Mips::PRECEU_PH_QBR_MM },
  { Mips::PRECEU_PH_QBRA, Mips::PRECEU_PH_QBRA, Mips::PRECEU_PH_QBRA_MM },
  { Mips::PRECRQU_S_QB_PH, Mips::PRECRQU_S_QB_PH, Mips::PRECRQU_S_QB_PH_MM },
  { Mips::PRECRQ_PH_W, Mips::PRECRQ_PH_W, Mips::PRECRQ_PH_W_MM },
  { Mips::PRECRQ_QB_PH, Mips::PRECRQ_QB_PH, Mips::PRECRQ_QB_PH_MM },
  { Mips::PRECRQ_RS_PH_W, Mips::PRECRQ_RS_PH_W, Mips::PRECRQ_RS_PH_W_MM },
  { Mips::PRECR_QB_PH, Mips::PRECR_QB_PH, Mips::PRECR_QB_PH_MMR2 },
  { Mips::PRECR_SRA_PH_W, Mips::PRECR_SRA_PH_W, Mips::PRECR_SRA_PH_W_MMR2 },
  { Mips::PRECR_SRA_R_PH_W, Mips::PRECR_SRA_R_PH_W, Mips::PRECR_SRA_R_PH_W_MMR2 },
  { Mips::PREPEND, Mips::PREPEND, Mips::PREPEND_MMR2 },
  { Mips::RADDU_W_QB, Mips::RADDU_W_QB, Mips::RADDU_W_QB_MM },
  { Mips::RDDSP, Mips::RDDSP, Mips::RDDSP_MM },
  { Mips::REPLV_PH, Mips::REPLV_PH, Mips::REPLV_PH_MM },
  { Mips::REPLV_QB, Mips::REPLV_QB, Mips::REPLV_QB_MM },
  { Mips::REPL_PH, Mips::REPL_PH, Mips::REPL_PH_MM },
  { Mips::REPL_QB, Mips::REPL_QB, Mips::REPL_QB_MM },
  { Mips::SHILO, Mips::SHILO, Mips::SHILO_MM },
  { Mips::SHILOV, Mips::SHILOV, Mips::SHILOV_MM },
  { Mips::SHLLV_PH, Mips::SHLLV_PH, Mips::SHLLV_PH_MM },
  { Mips::SHLLV_QB, Mips::SHLLV_QB, Mips::SHLLV_QB_MM },
  { Mips::SHLLV_S_PH, Mips::SHLLV_S_PH, Mips::SHLLV_S_PH_MM },
  { Mips::SHLLV_S_W, Mips::SHLLV_S_W, Mips::SHLLV_S_W_MM },
  { Mips::SHLL_PH, Mips::SHLL_PH, Mips::SHLL_PH_MM },
  { Mips::SHLL_QB, Mips::SHLL_QB, Mips::SHLL_QB_MM },
  { Mips::SHLL_S_PH, Mips::SHLL_S_PH, Mips::SHLL_S_PH_MM },
  { Mips::SHLL_S_W, Mips::SHLL_S_W, Mips::SHLL_S_W_MM },
  { Mips::SHRAV_PH, Mips::SHRAV_PH, Mips::SHRAV_PH_MM },
  { Mips::SHRAV_QB, Mips::SHRAV_QB, Mips::SHRAV_QB_MMR2 },
  { Mips::SHRAV_R_PH, Mips::SHRAV_R_PH, Mips::SHRAV_R_PH_MM },
  { Mips::SHRAV_R_QB, Mips::SHRAV_R_QB, Mips::SHRAV_R_QB_MMR2 },
  { Mips::SHRAV_R_W, Mips::SHRAV_R_W, Mips::SHRAV_R_W_MM },
  { Mips::SHRA_PH, Mips::SHRA_PH, Mips::SHRA_PH_MM },
  { Mips::SHRA_QB, Mips::SHRA_QB, Mips::SHRA_QB_MMR2 },
  { Mips::SHRA_R_PH, Mips::SHRA_R_PH, Mips::SHRA_R_PH_MM },
  { Mips::SHRA_R_QB, Mips::SHRA_R_QB, Mips::SHRA_R_QB_MMR2 },
  { Mips::SHRA_R_W, Mips::SHRA_R_W, Mips::SHRA_R_W_MM },
  { Mips::SHRLV_PH, Mips::SHRLV_PH, Mips::SHRLV_PH_MMR2 },
  { Mips::SHRLV_QB, Mips::SHRLV_QB, Mips::SHRLV_QB_MM },
  { Mips::SHRL_PH, Mips::SHRL_PH, Mips::SHRL_PH_MMR2 },
  { Mips::SHRL_QB, Mips::SHRL_QB, Mips::SHRL_QB_MM },
  { Mips::SUBQH_PH, Mips::SUBQH_PH, Mips::SUBQH_PH_MMR2 },
  { Mips::SUBQH_R_PH, Mips::SUBQH_R_PH, Mips::SUBQH_R_PH_MMR2 },
  { Mips::SUBQH_R_W, Mips::SUBQH_R_W, Mips::SUBQH_R_W_MMR2 },
  { Mips::SUBQH_W, Mips::SUBQH_W, Mips::SUBQH_W_MMR2 },
  { Mips::SUBQ_PH, Mips::SUBQ_PH, Mips::SUBQ_PH_MM },
  { Mips::SUBQ_S_PH, Mips::SUBQ_S_PH, Mips::SUBQ_S_PH_MM },
  { Mips::SUBQ_S_W, Mips::SUBQ_S_W, Mips::SUBQ_S_W_MM },
  { Mips::SUBUH_QB, Mips::SUBUH_QB, Mips::SUBUH_QB_MMR2 },
  { Mips::SUBUH_R_QB, Mips::SUBUH_R_QB, Mips::SUBUH_R_QB_MMR2 },
  { Mips::SUBU_PH, Mips::SUBU_PH, Mips::SUBU_PH_MMR2 },
  { Mips::SUBU_QB, Mips::SUBU_QB, Mips::SUBU_QB_MM },
  { Mips::SUBU_S_PH, Mips::SUBU_S_PH, Mips::SUBU_S_PH_MMR2 },
  { Mips::SUBU_S_QB, Mips::SUBU_S_QB, Mips::SUBU_S_QB_MM },
  { Mips::SWDSP, Mips::SWDSP, Mips::SWDSP_MM },
}; // End of Dsp2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 160;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == Dsp2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Dsp2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_dsp)
    return Dsp2MicroMipsTable[mid][1];
  if (inArch == Arch_mmdsp)
    return Dsp2MicroMipsTable[mid][2];
  return -1;}

// MipsR62MicroMipsR6
LLVM_READONLY
int MipsR62MicroMipsR6(uint16_t Opcode, enum Arch inArch) {
static const uint16_t MipsR62MicroMipsR6Table[][3] = {
  { Mips::ADDIUPC, Mips::ADDIUPC, Mips::ADDIUPC_MMR6 },
  { Mips::ALIGN, Mips::ALIGN, Mips::ALIGN_MMR6 },
  { Mips::ALUIPC, Mips::ALUIPC, Mips::ALUIPC_MMR6 },
  { Mips::AUI, Mips::AUI, Mips::AUI_MMR6 },
  { Mips::AUIPC, Mips::AUIPC, Mips::AUIPC_MMR6 },
  { Mips::BALC, Mips::BALC, Mips::BALC_MMR6 },
  { Mips::BC, Mips::BC, Mips::BC_MMR6 },
  { Mips::BEQC, Mips::BEQC, Mips::BEQC_MMR6 },
  { Mips::BEQZALC, Mips::BEQZALC, Mips::BEQZALC_MMR6 },
  { Mips::BEQZC, Mips::BEQZC, Mips::BEQZC_MMR6 },
  { Mips::BGEC, Mips::BGEC, Mips::BGEC_MMR6 },
  { Mips::BGEUC, Mips::BGEUC, Mips::BGEUC_MMR6 },
  { Mips::BGEZALC, Mips::BGEZALC, Mips::BGEZALC_MMR6 },
  { Mips::BGEZC, Mips::BGEZC, Mips::BGEZC_MMR6 },
  { Mips::BGTZALC, Mips::BGTZALC, Mips::BGTZALC_MMR6 },
  { Mips::BGTZC, Mips::BGTZC, Mips::BGTZC_MMR6 },
  { Mips::BITSWAP, Mips::BITSWAP, Mips::BITSWAP_MMR6 },
  { Mips::BLEZALC, Mips::BLEZALC, Mips::BLEZALC_MMR6 },
  { Mips::BLEZC, Mips::BLEZC, Mips::BLEZC_MMR6 },
  { Mips::BLTC, Mips::BLTC, Mips::BLTC_MMR6 },
  { Mips::BLTUC, Mips::BLTUC, Mips::BLTUC_MMR6 },
  { Mips::BLTZALC, Mips::BLTZALC, Mips::BLTZALC_MMR6 },
  { Mips::BLTZC, Mips::BLTZC, Mips::BLTZC_MMR6 },
  { Mips::BNEC, Mips::BNEC, Mips::BNEC_MMR6 },
  { Mips::BNEZALC, Mips::BNEZALC, Mips::BNEZALC_MMR6 },
  { Mips::BNEZC, Mips::BNEZC, Mips::BNEZC_MMR6 },
  { Mips::BNVC, Mips::BNVC, Mips::BNVC_MMR6 },
  { Mips::BOVC, Mips::BOVC, Mips::BOVC_MMR6 },
  { Mips::CACHE_R6, Mips::CACHE_R6, Mips::CACHE_MMR6 },
  { Mips::CLO_R6, Mips::CLO_R6, Mips::CLO_MMR6 },
  { Mips::CLZ_R6, Mips::CLZ_R6, Mips::CLZ_MMR6 },
  { Mips::CMP_EQ_D, Mips::CMP_EQ_D, Mips::CMP_EQ_D_MMR6 },
  { Mips::CMP_EQ_S, Mips::CMP_EQ_S, Mips::CMP_EQ_S_MMR6 },
  { Mips::CMP_F_D, Mips::CMP_F_D, Mips::CMP_AF_D_MMR6 },
  { Mips::CMP_F_S, Mips::CMP_F_S, Mips::CMP_AF_S_MMR6 },
  { Mips::CMP_LE_D, Mips::CMP_LE_D, Mips::CMP_LE_D_MMR6 },
  { Mips::CMP_LE_S, Mips::CMP_LE_S, Mips::CMP_LE_S_MMR6 },
  { Mips::CMP_LT_D, Mips::CMP_LT_D, Mips::CMP_LT_D_MMR6 },
  { Mips::CMP_LT_S, Mips::CMP_LT_S, Mips::CMP_LT_S_MMR6 },
  { Mips::CMP_SAF_D, Mips::CMP_SAF_D, Mips::CMP_SAF_D_MMR6 },
  { Mips::CMP_SAF_S, Mips::CMP_SAF_S, Mips::CMP_SAF_S_MMR6 },
  { Mips::CMP_SEQ_D, Mips::CMP_SEQ_D, Mips::CMP_SEQ_D_MMR6 },
  { Mips::CMP_SEQ_S, Mips::CMP_SEQ_S, Mips::CMP_SEQ_S_MMR6 },
  { Mips::CMP_SLE_D, Mips::CMP_SLE_D, Mips::CMP_SLE_D_MMR6 },
  { Mips::CMP_SLE_S, Mips::CMP_SLE_S, Mips::CMP_SLE_S_MMR6 },
  { Mips::CMP_SLT_D, Mips::CMP_SLT_D, Mips::CMP_SLT_D_MMR6 },
  { Mips::CMP_SLT_S, Mips::CMP_SLT_S, Mips::CMP_SLT_S_MMR6 },
  { Mips::CMP_SUEQ_D, Mips::CMP_SUEQ_D, Mips::CMP_SUEQ_D_MMR6 },
  { Mips::CMP_SUEQ_S, Mips::CMP_SUEQ_S, Mips::CMP_SUEQ_S_MMR6 },
  { Mips::CMP_SULE_D, Mips::CMP_SULE_D, Mips::CMP_SULE_D_MMR6 },
  { Mips::CMP_SULE_S, Mips::CMP_SULE_S, Mips::CMP_SULE_S_MMR6 },
  { Mips::CMP_SULT_D, Mips::CMP_SULT_D, Mips::CMP_SULT_D_MMR6 },
  { Mips::CMP_SULT_S, Mips::CMP_SULT_S, Mips::CMP_SULT_S_MMR6 },
  { Mips::CMP_SUN_D, Mips::CMP_SUN_D, Mips::CMP_SUN_D_MMR6 },
  { Mips::CMP_SUN_S, Mips::CMP_SUN_S, Mips::CMP_SUN_S_MMR6 },
  { Mips::CMP_UEQ_D, Mips::CMP_UEQ_D, Mips::CMP_UEQ_D_MMR6 },
  { Mips::CMP_UEQ_S, Mips::CMP_UEQ_S, Mips::CMP_UEQ_S_MMR6 },
  { Mips::CMP_ULE_D, Mips::CMP_ULE_D, Mips::CMP_ULE_D_MMR6 },
  { Mips::CMP_ULE_S, Mips::CMP_ULE_S, Mips::CMP_ULE_S_MMR6 },
  { Mips::CMP_ULT_D, Mips::CMP_ULT_D, Mips::CMP_ULT_D_MMR6 },
  { Mips::CMP_ULT_S, Mips::CMP_ULT_S, Mips::CMP_ULT_S_MMR6 },
  { Mips::CMP_UN_D, Mips::CMP_UN_D, Mips::CMP_UN_D_MMR6 },
  { Mips::CMP_UN_S, Mips::CMP_UN_S, Mips::CMP_UN_S_MMR6 },
  { Mips::CRC32B, Mips::CRC32B, (uint16_t)-1U },
  { Mips::CRC32CB, Mips::CRC32CB, (uint16_t)-1U },
  { Mips::CRC32CD, Mips::CRC32CD, (uint16_t)-1U },
  { Mips::CRC32CH, Mips::CRC32CH, (uint16_t)-1U },
  { Mips::CRC32CW, Mips::CRC32CW, (uint16_t)-1U },
  { Mips::CRC32D, Mips::CRC32D, (uint16_t)-1U },
  { Mips::CRC32H, Mips::CRC32H, (uint16_t)-1U },
  { Mips::CRC32W, Mips::CRC32W, (uint16_t)-1U },
  { Mips::DIV, Mips::DIV, Mips::DIV_MMR6 },
  { Mips::DIVU, Mips::DIVU, Mips::DIVU_MMR6 },
  { Mips::DVP, Mips::DVP, Mips::DVP_MMR6 },
  { Mips::EVP, Mips::EVP, Mips::EVP_MMR6 },
  { Mips::GINVI, Mips::GINVI, Mips::GINVI_MMR6 },
  { Mips::GINVT, Mips::GINVT, Mips::GINVT_MMR6 },
  { Mips::JIALC, Mips::JIALC, Mips::JIALC_MMR6 },
  { Mips::JIC, Mips::JIC, Mips::JIC_MMR6 },
  { Mips::LSA_R6, Mips::LSA_R6, Mips::LSA_MMR6 },
  { Mips::LWPC, Mips::LWPC, Mips::LWPC_MMR6 },
  { Mips::MOD, Mips::MOD, Mips::MOD_MMR6 },
  { Mips::MODU, Mips::MODU, Mips::MODU_MMR6 },
  { Mips::MUH, Mips::MUH, Mips::MUH_MMR6 },
  { Mips::MUHU, Mips::MUHU, Mips::MUHU_MMR6 },
  { Mips::MULU, Mips::MULU, Mips::MULU_MMR6 },
  { Mips::MUL_R6, Mips::MUL_R6, Mips::MUL_MMR6 },
  { Mips::PREF_R6, Mips::PREF_R6, Mips::PREF_MMR6 },
  { Mips::SELEQZ, Mips::SELEQZ, Mips::SELEQZ_MMR6 },
  { Mips::SELEQZ_D, Mips::SELEQZ_D, Mips::SELEQZ_D_MMR6 },
  { Mips::SELEQZ_S, Mips::SELEQZ_S, Mips::SELEQZ_S_MMR6 },
  { Mips::SELNEZ, Mips::SELNEZ, Mips::SELNEZ_MMR6 },
  { Mips::SELNEZ_D, Mips::SELNEZ_D, Mips::SELNEZ_D_MMR6 },
  { Mips::SELNEZ_S, Mips::SELNEZ_S, Mips::SELNEZ_S_MMR6 },
  { Mips::SEL_D, Mips::SEL_D, Mips::SEL_D_MMR6 },
  { Mips::SEL_S, Mips::SEL_S, Mips::SEL_S_MMR6 },
}; // End of MipsR62MicroMipsR6Table

  unsigned mid;
  unsigned start = 0;
  unsigned end = 96;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == MipsR62MicroMipsR6Table[mid][0]) {
      break;
    }
    if (Opcode < MipsR62MicroMipsR6Table[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_mipsr6)
    return MipsR62MicroMipsR6Table[mid][1];
  if (inArch == Arch_micromipsr6)
    return MipsR62MicroMipsR6Table[mid][2];
  return -1;}

// Std2MicroMips
LLVM_READONLY
int Std2MicroMips(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsTable[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MM },
  { Mips::ADDi, Mips::ADDi, Mips::ADDi_MM },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDiu_MM },
  { Mips::ADDu, Mips::ADDu, Mips::ADDu_MM },
  { Mips::AND, Mips::AND, Mips::AND_MM },
  { Mips::ANDi, Mips::ANDi, Mips::ANDi_MM },
  { Mips::BC1F, Mips::BC1F, Mips::BC1F_MM },
  { Mips::BC1FL, Mips::BC1FL, (uint16_t)-1U },
  { Mips::BC1T, Mips::BC1T, Mips::BC1T_MM },
  { Mips::BC1TL, Mips::BC1TL, (uint16_t)-1U },
  { Mips::BEQ, Mips::BEQ, Mips::BEQ_MM },
  { Mips::BEQL, Mips::BEQL, (uint16_t)-1U },
  { Mips::BGEZ, Mips::BGEZ, Mips::BGEZ_MM },
  { Mips::BGEZAL, Mips::BGEZAL, Mips::BGEZAL_MM },
  { Mips::BGEZALL, Mips::BGEZALL, (uint16_t)-1U },
  { Mips::BGEZL, Mips::BGEZL, (uint16_t)-1U },
  { Mips::BGTZ, Mips::BGTZ, Mips::BGTZ_MM },
  { Mips::BGTZL, Mips::BGTZL, (uint16_t)-1U },
  { Mips::BLEZ, Mips::BLEZ, Mips::BLEZ_MM },
  { Mips::BLEZL, Mips::BLEZL, (uint16_t)-1U },
  { Mips::BLTZ, Mips::BLTZ, Mips::BLTZ_MM },
  { Mips::BLTZAL, Mips::BLTZAL, Mips::BLTZAL_MM },
  { Mips::BLTZALL, Mips::BLTZALL, (uint16_t)-1U },
  { Mips::BLTZL, Mips::BLTZL, (uint16_t)-1U },
  { Mips::BNE, Mips::BNE, Mips::BNE_MM },
  { Mips::BNEL, Mips::BNEL, (uint16_t)-1U },
  { Mips::BREAK, Mips::BREAK, Mips::BREAK_MM },
  { Mips::CACHE, Mips::CACHE, Mips::CACHE_MM },
  { Mips::CACHEE, Mips::CACHEE, Mips::CACHEE_MM },
  { Mips::CEIL_W_D32, Mips::CEIL_W_D32, Mips::CEIL_W_MM },
  { Mips::CEIL_W_S, Mips::CEIL_W_S, Mips::CEIL_W_S_MM },
  { Mips::CFC1, Mips::CFC1, Mips::CFC1_MM },
  { Mips::CLO, Mips::CLO, Mips::CLO_MM },
  { Mips::CLZ, Mips::CLZ, Mips::CLZ_MM },
  { Mips::CTC1, Mips::CTC1, Mips::CTC1_MM },
  { Mips::CVT_D32_S, Mips::CVT_D32_S, Mips::CVT_D32_S_MM },
  { Mips::CVT_D32_W, Mips::CVT_D32_W, Mips::CVT_D32_W_MM },
  { Mips::CVT_L_D64, Mips::CVT_L_D64, Mips::CVT_L_D64_MM },
  { Mips::CVT_L_S, Mips::CVT_L_S, Mips::CVT_L_S_MM },
  { Mips::CVT_S_D32, Mips::CVT_S_D32, Mips::CVT_S_D32_MM },
  { Mips::CVT_S_W, Mips::CVT_S_W, Mips::CVT_S_W_MM },
  { Mips::CVT_W_D32, Mips::CVT_W_D32, Mips::CVT_W_D32_MM },
  { Mips::CVT_W_S, Mips::CVT_W_S, Mips::CVT_W_S_MM },
  { Mips::C_EQ_D32, Mips::C_EQ_D32, Mips::C_EQ_D32_MM },
  { Mips::C_EQ_D64, Mips::C_EQ_D64, Mips::C_EQ_D64_MM },
  { Mips::C_EQ_S, Mips::C_EQ_S, Mips::C_EQ_S_MM },
  { Mips::C_F_D32, Mips::C_F_D32, Mips::C_F_D32_MM },
  { Mips::C_F_D64, Mips::C_F_D64, Mips::C_F_D64_MM },
  { Mips::C_F_S, Mips::C_F_S, Mips::C_F_S_MM },
  { Mips::C_LE_D32, Mips::C_LE_D32, Mips::C_LE_D32_MM },
  { Mips::C_LE_D64, Mips::C_LE_D64, Mips::C_LE_D64_MM },
  { Mips::C_LE_S, Mips::C_LE_S, Mips::C_LE_S_MM },
  { Mips::C_LT_D32, Mips::C_LT_D32, Mips::C_LT_D32_MM },
  { Mips::C_LT_D64, Mips::C_LT_D64, Mips::C_LT_D64_MM },
  { Mips::C_LT_S, Mips::C_LT_S, Mips::C_LT_S_MM },
  { Mips::C_NGE_D32, Mips::C_NGE_D32, Mips::C_NGE_D32_MM },
  { Mips::C_NGE_D64, Mips::C_NGE_D64, Mips::C_NGE_D64_MM },
  { Mips::C_NGE_S, Mips::C_NGE_S, Mips::C_NGE_S_MM },
  { Mips::C_NGLE_D32, Mips::C_NGLE_D32, Mips::C_NGLE_D32_MM },
  { Mips::C_NGLE_D64, Mips::C_NGLE_D64, Mips::C_NGLE_D64_MM },
  { Mips::C_NGLE_S, Mips::C_NGLE_S, Mips::C_NGLE_S_MM },
  { Mips::C_NGL_D32, Mips::C_NGL_D32, Mips::C_NGL_D32_MM },
  { Mips::C_NGL_D64, Mips::C_NGL_D64, Mips::C_NGL_D64_MM },
  { Mips::C_NGL_S, Mips::C_NGL_S, Mips::C_NGL_S_MM },
  { Mips::C_NGT_D32, Mips::C_NGT_D32, Mips::C_NGT_D32_MM },
  { Mips::C_NGT_D64, Mips::C_NGT_D64, Mips::C_NGT_D64_MM },
  { Mips::C_NGT_S, Mips::C_NGT_S, Mips::C_NGT_S_MM },
  { Mips::C_OLE_D32, Mips::C_OLE_D32, Mips::C_OLE_D32_MM },
  { Mips::C_OLE_D64, Mips::C_OLE_D64, Mips::C_OLE_D64_MM },
  { Mips::C_OLE_S, Mips::C_OLE_S, Mips::C_OLE_S_MM },
  { Mips::C_OLT_D32, Mips::C_OLT_D32, Mips::C_OLT_D32_MM },
  { Mips::C_OLT_D64, Mips::C_OLT_D64, Mips::C_OLT_D64_MM },
  { Mips::C_OLT_S, Mips::C_OLT_S, Mips::C_OLT_S_MM },
  { Mips::C_SEQ_D32, Mips::C_SEQ_D32, Mips::C_SEQ_D32_MM },
  { Mips::C_SEQ_D64, Mips::C_SEQ_D64, Mips::C_SEQ_D64_MM },
  { Mips::C_SEQ_S, Mips::C_SEQ_S, Mips::C_SEQ_S_MM },
  { Mips::C_SF_D32, Mips::C_SF_D32, Mips::C_SF_D32_MM },
  { Mips::C_SF_D64, Mips::C_SF_D64, Mips::C_SF_D64_MM },
  { Mips::C_SF_S, Mips::C_SF_S, Mips::C_SF_S_MM },
  { Mips::C_UEQ_D32, Mips::C_UEQ_D32, Mips::C_UEQ_D32_MM },
  { Mips::C_UEQ_D64, Mips::C_UEQ_D64, Mips::C_UEQ_D64_MM },
  { Mips::C_UEQ_S, Mips::C_UEQ_S, Mips::C_UEQ_S_MM },
  { Mips::C_ULE_D32, Mips::C_ULE_D32, Mips::C_ULE_D32_MM },
  { Mips::C_ULE_D64, Mips::C_ULE_D64, Mips::C_ULE_D64_MM },
  { Mips::C_ULE_S, Mips::C_ULE_S, Mips::C_ULE_S_MM },
  { Mips::C_ULT_D32, Mips::C_ULT_D32, Mips::C_ULT_D32_MM },
  { Mips::C_ULT_D64, Mips::C_ULT_D64, Mips::C_ULT_D64_MM },
  { Mips::C_ULT_S, Mips::C_ULT_S, Mips::C_ULT_S_MM },
  { Mips::C_UN_D32, Mips::C_UN_D32, Mips::C_UN_D32_MM },
  { Mips::C_UN_D64, Mips::C_UN_D64, Mips::C_UN_D64_MM },
  { Mips::C_UN_S, Mips::C_UN_S, Mips::C_UN_S_MM },
  { Mips::DERET, Mips::DERET, Mips::DERET_MM },
  { Mips::DI, Mips::DI, Mips::DI_MM },
  { Mips::EHB, Mips::EHB, Mips::EHB_MM },
  { Mips::EI, Mips::EI, Mips::EI_MM },
  { Mips::ERET, Mips::ERET, Mips::ERET_MM },
  { Mips::ERETNC, Mips::ERETNC, (uint16_t)-1U },
  { Mips::EXT, Mips::EXT, Mips::EXT_MM },
  { Mips::FABS_D32, Mips::FABS_D32, Mips::FABS_D32_MM },
  { Mips::FABS_S, Mips::FABS_S, Mips::FABS_S_MM },
  { Mips::FADD_D32, Mips::FADD_D32, Mips::FADD_D32_MM },
  { Mips::FADD_S, Mips::FADD_S, Mips::FADD_S_MM },
  { Mips::FCMP_D32, Mips::FCMP_D32, Mips::FCMP_D32_MM },
  { Mips::FCMP_S32, Mips::FCMP_S32, Mips::FCMP_S32_MM },
  { Mips::FDIV_D32, Mips::FDIV_D32, Mips::FDIV_D32_MM },
  { Mips::FDIV_S, Mips::FDIV_S, Mips::FDIV_S_MM },
  { Mips::FLOOR_W_D32, Mips::FLOOR_W_D32, Mips::FLOOR_W_MM },
  { Mips::FLOOR_W_S, Mips::FLOOR_W_S, Mips::FLOOR_W_S_MM },
  { Mips::FMOV_D32, Mips::FMOV_D32, Mips::FMOV_D32_MM },
  { Mips::FMOV_S, Mips::FMOV_S, Mips::FMOV_S_MM },
  { Mips::FMUL_D32, Mips::FMUL_D32, Mips::FMUL_D32_MM },
  { Mips::FMUL_S, Mips::FMUL_S, Mips::FMUL_S_MM },
  { Mips::FNEG_D32, Mips::FNEG_D32, Mips::FNEG_D32_MM },
  { Mips::FNEG_S, Mips::FNEG_S, Mips::FNEG_S_MM },
  { Mips::FSQRT_D32, Mips::FSQRT_D32, Mips::FSQRT_D32_MM },
  { Mips::FSQRT_S, Mips::FSQRT_S, Mips::FSQRT_S_MM },
  { Mips::FSUB_D32, Mips::FSUB_D32, Mips::FSUB_D32_MM },
  { Mips::FSUB_S, Mips::FSUB_S, Mips::FSUB_S_MM },
  { Mips::HYPCALL, Mips::HYPCALL, Mips::HYPCALL_MM },
  { Mips::INS, Mips::INS, Mips::INS_MM },
  { Mips::J, Mips::J, Mips::J_MM },
  { Mips::JAL, Mips::JAL, Mips::JAL_MM },
  { Mips::JALX, Mips::JALX, Mips::JALX_MM },
  { Mips::JR, Mips::JR, Mips::JR_MM },
  { Mips::LB, Mips::LB, Mips::LB_MM },
  { Mips::LBE, Mips::LBE, Mips::LBE_MM },
  { Mips::LBu, Mips::LBu, Mips::LBu_MM },
  { Mips::LBuE, Mips::LBuE, Mips::LBuE_MM },
  { Mips::LDC1, Mips::LDC1, Mips::LDC1_MM_D32 },
  { Mips::LEA_ADDiu, Mips::LEA_ADDiu, Mips::LEA_ADDiu_MM },
  { Mips::LH, Mips::LH, Mips::LH_MM },
  { Mips::LHE, Mips::LHE, Mips::LHE_MM },
  { Mips::LHu, Mips::LHu, Mips::LHu_MM },
  { Mips::LHuE, Mips::LHuE, Mips::LHuE_MM },
  { Mips::LLE, Mips::LLE, Mips::LLE_MM },
  { Mips::LUXC1, Mips::LUXC1, Mips::LUXC1_MM },
  { Mips::LUi, Mips::LUi, Mips::LUi_MM },
  { Mips::LW, Mips::LW, Mips::LW_MM },
  { Mips::LWC1, Mips::LWC1, Mips::LWC1_MM },
  { Mips::LWE, Mips::LWE, Mips::LWE_MM },
  { Mips::LWL, Mips::LWL, Mips::LWL_MM },
  { Mips::LWLE, Mips::LWLE, Mips::LWLE_MM },
  { Mips::LWR, Mips::LWR, Mips::LWR_MM },
  { Mips::LWRE, Mips::LWRE, Mips::LWRE_MM },
  { Mips::LWXC1, Mips::LWXC1, Mips::LWXC1_MM },
  { Mips::LWu, Mips::LWu, Mips::LWU_MM },
  { Mips::MADD, Mips::MADD, Mips::MADD_MM },
  { Mips::MADDU, Mips::MADDU, Mips::MADDU_MM },
  { Mips::MADD_D32, Mips::MADD_D32, Mips::MADD_D32_MM },
  { Mips::MADD_S, Mips::MADD_S, Mips::MADD_S_MM },
  { Mips::MFC1, Mips::MFC1, Mips::MFC1_MM },
  { Mips::MFGC0, Mips::MFGC0, Mips::MFGC0_MM },
  { Mips::MFHC1_D32, Mips::MFHC1_D32, Mips::MFHC1_D32_MM },
  { Mips::MFHGC0, Mips::MFHGC0, Mips::MFHGC0_MM },
  { Mips::MFHI, Mips::MFHI, Mips::MFHI_MM },
  { Mips::MFLO, Mips::MFLO, Mips::MFLO_MM },
  { Mips::MOVF_D32, Mips::MOVF_D32, Mips::MOVF_D32_MM },
  { Mips::MOVF_I, Mips::MOVF_I, Mips::MOVF_I_MM },
  { Mips::MOVF_S, Mips::MOVF_S, Mips::MOVF_S_MM },
  { Mips::MOVN_I_D32, Mips::MOVN_I_D32, Mips::MOVN_I_D32_MM },
  { Mips::MOVN_I_I, Mips::MOVN_I_I, Mips::MOVN_I_MM },
  { Mips::MOVN_I_S, Mips::MOVN_I_S, Mips::MOVN_I_S_MM },
  { Mips::MOVT_D32, Mips::MOVT_D32, Mips::MOVT_D32_MM },
  { Mips::MOVT_I, Mips::MOVT_I, Mips::MOVT_I_MM },
  { Mips::MOVT_S, Mips::MOVT_S, Mips::MOVT_S_MM },
  { Mips::MOVZ_I_D32, Mips::MOVZ_I_D32, Mips::MOVZ_I_D32_MM },
  { Mips::MOVZ_I_I, Mips::MOVZ_I_I, Mips::MOVZ_I_MM },
  { Mips::MOVZ_I_S, Mips::MOVZ_I_S, Mips::MOVZ_I_S_MM },
  { Mips::MSUB, Mips::MSUB, Mips::MSUB_MM },
  { Mips::MSUBU, Mips::MSUBU, Mips::MSUBU_MM },
  { Mips::MSUB_D32, Mips::MSUB_D32, Mips::MSUB_D32_MM },
  { Mips::MSUB_S, Mips::MSUB_S, Mips::MSUB_S_MM },
  { Mips::MTC1, Mips::MTC1, Mips::MTC1_MM },
  { Mips::MTGC0, Mips::MTGC0, Mips::MTGC0_MM },
  { Mips::MTHC1_D32, Mips::MTHC1_D32, Mips::MTHC1_D32_MM },
  { Mips::MTHGC0, Mips::MTHGC0, Mips::MTHGC0_MM },
  { Mips::MTHI, Mips::MTHI, Mips::MTHI_MM },
  { Mips::MTLO, Mips::MTLO, Mips::MTLO_MM },
  { Mips::MUL, Mips::MUL, Mips::MUL_MM },
  { Mips::MULT, Mips::MULT, Mips::MULT_MM },
  { Mips::MULTu, Mips::MULTu, Mips::MULTu_MM },
  { Mips::NMADD_D32, Mips::NMADD_D32, Mips::NMADD_D32_MM },
  { Mips::NMADD_S, Mips::NMADD_S, Mips::NMADD_S_MM },
  { Mips::NMSUB_D32, Mips::NMSUB_D32, Mips::NMSUB_D32_MM },
  { Mips::NMSUB_S, Mips::NMSUB_S, Mips::NMSUB_S_MM },
  { Mips::NOR, Mips::NOR, Mips::NOR_MM },
  { Mips::OR, Mips::OR, Mips::OR_MM },
  { Mips::ORi, Mips::ORi, Mips::ORi_MM },
  { Mips::PAUSE, Mips::PAUSE, Mips::PAUSE_MM },
  { Mips::PREF, Mips::PREF, Mips::PREF_MM },
  { Mips::PREFE, Mips::PREFE, Mips::PREFE_MM },
  { Mips::RDHWR, Mips::RDHWR, Mips::RDHWR_MM },
  { Mips::RECIP_D32, Mips::RECIP_D32, Mips::RECIP_D32_MM },
  { Mips::RECIP_D64, Mips::RECIP_D64, Mips::RECIP_D64_MM },
  { Mips::RECIP_S, Mips::RECIP_S, Mips::RECIP_S_MM },
  { Mips::ROTR, Mips::ROTR, Mips::ROTR_MM },
  { Mips::ROTRV, Mips::ROTRV, Mips::ROTRV_MM },
  { Mips::ROUND_W_D32, Mips::ROUND_W_D32, Mips::ROUND_W_MM },
  { Mips::ROUND_W_S, Mips::ROUND_W_S, Mips::ROUND_W_S_MM },
  { Mips::RSQRT_D32, Mips::RSQRT_D32, Mips::RSQRT_D32_MM },
  { Mips::RSQRT_D64, Mips::RSQRT_D64, Mips::RSQRT_D64_MM },
  { Mips::RSQRT_S, Mips::RSQRT_S, Mips::RSQRT_S_MM },
  { Mips::SB, Mips::SB, Mips::SB_MM },
  { Mips::SBE, Mips::SBE, Mips::SBE_MM },
  { Mips::SCE, Mips::SCE, Mips::SCE_MM },
  { Mips::SDBBP, Mips::SDBBP, Mips::SDBBP_MM },
  { Mips::SDC1, Mips::SDC1, (uint16_t)-1U },
  { Mips::SDIV, Mips::SDIV, Mips::SDIV_MM },
  { Mips::SEB, Mips::SEB, Mips::SEB_MM },
  { Mips::SEH, Mips::SEH, Mips::SEH_MM },
  { Mips::SH, Mips::SH, Mips::SH_MM },
  { Mips::SHE, Mips::SHE, Mips::SHE_MM },
  { Mips::SLL, Mips::SLL, Mips::SLL_MM },
  { Mips::SLLV, Mips::SLLV, Mips::SLLV_MM },
  { Mips::SLT, Mips::SLT, Mips::SLT_MM },
  { Mips::SLTi, Mips::SLTi, Mips::SLTi_MM },
  { Mips::SLTiu, Mips::SLTiu, Mips::SLTiu_MM },
  { Mips::SLTu, Mips::SLTu, Mips::SLTu_MM },
  { Mips::SRA, Mips::SRA, Mips::SRA_MM },
  { Mips::SRAV, Mips::SRAV, Mips::SRAV_MM },
  { Mips::SRL, Mips::SRL, Mips::SRL_MM },
  { Mips::SRLV, Mips::SRLV, Mips::SRLV_MM },
  { Mips::SSNOP, Mips::SSNOP, Mips::SSNOP_MM },
  { Mips::SUB, Mips::SUB, Mips::SUB_MM },
  { Mips::SUBu, Mips::SUBu, Mips::SUBu_MM },
  { Mips::SUXC1, Mips::SUXC1, Mips::SUXC1_MM },
  { Mips::SW, Mips::SW, Mips::SW_MM },
  { Mips::SWC1, Mips::SWC1, Mips::SWC1_MM },
  { Mips::SWE, Mips::SWE, Mips::SWE_MM },
  { Mips::SWL, Mips::SWL, Mips::SWL_MM },
  { Mips::SWLE, Mips::SWLE, Mips::SWLE_MM },
  { Mips::SWR, Mips::SWR, Mips::SWR_MM },
  { Mips::SWRE, Mips::SWRE, Mips::SWRE_MM },
  { Mips::SWXC1, Mips::SWXC1, Mips::SWXC1_MM },
  { Mips::SYNC, Mips::SYNC, Mips::SYNC_MM },
  { Mips::SYNCI, Mips::SYNCI, Mips::SYNCI_MM },
  { Mips::SYSCALL, Mips::SYSCALL, Mips::SYSCALL_MM },
  { Mips::TEQ, Mips::TEQ, Mips::TEQ_MM },
  { Mips::TEQI, Mips::TEQI, Mips::TEQI_MM },
  { Mips::TGE, Mips::TGE, Mips::TGE_MM },
  { Mips::TGEI, Mips::TGEI, Mips::TGEI_MM },
  { Mips::TGEIU, Mips::TGEIU, Mips::TGEIU_MM },
  { Mips::TGEU, Mips::TGEU, Mips::TGEU_MM },
  { Mips::TLBGINV, Mips::TLBGINV, Mips::TLBGINV_MM },
  { Mips::TLBGINVF, Mips::TLBGINVF, Mips::TLBGINVF_MM },
  { Mips::TLBGP, Mips::TLBGP, Mips::TLBGP_MM },
  { Mips::TLBGR, Mips::TLBGR, Mips::TLBGR_MM },
  { Mips::TLBGWI, Mips::TLBGWI, Mips::TLBGWI_MM },
  { Mips::TLBGWR, Mips::TLBGWR, Mips::TLBGWR_MM },
  { Mips::TLBP, Mips::TLBP, Mips::TLBP_MM },
  { Mips::TLBR, Mips::TLBR, Mips::TLBR_MM },
  { Mips::TLBWI, Mips::TLBWI, Mips::TLBWI_MM },
  { Mips::TLBWR, Mips::TLBWR, Mips::TLBWR_MM },
  { Mips::TLT, Mips::TLT, Mips::TLT_MM },
  { Mips::TLTI, Mips::TLTI, Mips::TLTI_MM },
  { Mips::TLTU, Mips::TLTU, Mips::TLTU_MM },
  { Mips::TNE, Mips::TNE, Mips::TNE_MM },
  { Mips::TNEI, Mips::TNEI, Mips::TNEI_MM },
  { Mips::TRUNC_W_D32, Mips::TRUNC_W_D32, Mips::TRUNC_W_MM },
  { Mips::TRUNC_W_S, Mips::TRUNC_W_S, Mips::TRUNC_W_S_MM },
  { Mips::TTLTIU, Mips::TTLTIU, Mips::TLTIU_MM },
  { Mips::UDIV, Mips::UDIV, Mips::UDIV_MM },
  { Mips::WAIT, Mips::WAIT, Mips::WAIT_MM },
  { Mips::WSBH, Mips::WSBH, Mips::WSBH_MM },
  { Mips::XOR, Mips::XOR, Mips::XOR_MM },
  { Mips::XORi, Mips::XORi, Mips::XORi_MM },
}; // End of Std2MicroMipsTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 266;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == Std2MicroMipsTable[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsTable[mid][1];
  if (inArch == Arch_micromips)
    return Std2MicroMipsTable[mid][2];
  return -1;}

// Std2MicroMipsR6
LLVM_READONLY
int Std2MicroMipsR6(uint16_t Opcode, enum Arch inArch) {
static const uint16_t Std2MicroMipsR6Table[][3] = {
  { Mips::ADD, Mips::ADD, Mips::ADD_MMR6 },
  { Mips::ADDiu, Mips::ADDiu, Mips::ADDIU_MMR6 },
  { Mips::ADDu, Mips::ADDu, Mips::ADDU_MMR6 },
  { Mips::AND, Mips::AND, Mips::AND_MMR6 },
  { Mips::ANDi, Mips::ANDi, Mips::ANDI_MMR6 },
  { Mips::BREAK, Mips::BREAK, Mips::BREAK_MMR6 },
  { Mips::CEIL_W_D64, Mips::CEIL_W_D64, Mips::CEIL_W_D_MMR6 },
  { Mips::CEIL_W_S, Mips::CEIL_W_S, Mips::CEIL_W_S_MMR6 },
  { Mips::CVT_W_D64, Mips::CVT_W_D64, (uint16_t)-1U },
  { Mips::DI, Mips::DI, Mips::DI_MMR6 },
  { Mips::EI, Mips::EI, Mips::EI_MMR6 },
  { Mips::EXT, Mips::EXT, Mips::EXT_MMR6 },
  { Mips::FABS_D64, Mips::FABS_D64, (uint16_t)-1U },
  { Mips::FLOOR_W_D64, Mips::FLOOR_W_D64, Mips::FLOOR_W_D_MMR6 },
  { Mips::FLOOR_W_S, Mips::FLOOR_W_S, Mips::FLOOR_W_S_MMR6 },
  { Mips::FMOV_D64, Mips::FMOV_D64, Mips::FMOV_D_MMR6 },
  { Mips::FNEG_D64, Mips::FNEG_D64, (uint16_t)-1U },
  { Mips::FSQRT_D64, Mips::FSQRT_D64, (uint16_t)-1U },
  { Mips::FSQRT_S, Mips::FSQRT_S, (uint16_t)-1U },
  { Mips::INS, Mips::INS, Mips::INS_MMR6 },
  { Mips::LDC1, Mips::LDC1, (uint16_t)-1U },
  { Mips::LDC164, Mips::LDC164, Mips::LDC1_D64_MMR6 },
  { Mips::LDC2, Mips::LDC2, Mips::LDC2_MMR6 },
  { Mips::LW, Mips::LW, Mips::LW_MMR6 },
  { Mips::LWC2, Mips::LWC2, Mips::LWC2_MMR6 },
  { Mips::MFC1, Mips::MFC1, Mips::MFC1_MMR6 },
  { Mips::MTC1, Mips::MTC1, Mips::MTC1_MMR6 },
  { Mips::MTHC1_D32, Mips::MTHC1_D32, (uint16_t)-1U },
  { Mips::NOR, Mips::NOR, Mips::NOR_MMR6 },
  { Mips::OR, Mips::OR, Mips::OR_MMR6 },
  { Mips::ORi, Mips::ORi, Mips::ORI_MMR6 },
  { Mips::PAUSE, Mips::PAUSE, Mips::PAUSE_MMR6 },
  { Mips::ROUND_W_D64, Mips::ROUND_W_D64, Mips::ROUND_W_D_MMR6 },
  { Mips::ROUND_W_S, Mips::ROUND_W_S, Mips::ROUND_W_S_MMR6 },
  { Mips::SB, Mips::SB, Mips::SB_MMR6 },
  { Mips::SDC164, Mips::SDC164, Mips::SDC1_D64_MMR6 },
  { Mips::SDC2, Mips::SDC2, Mips::SDC2_MMR6 },
  { Mips::SEB, Mips::SEB, (uint16_t)-1U },
  { Mips::SEH, Mips::SEH, (uint16_t)-1U },
  { Mips::SSNOP, Mips::SSNOP, Mips::SSNOP_MMR6 },
  { Mips::SUB, Mips::SUB, Mips::SUB_MMR6 },
  { Mips::SUBu, Mips::SUBu, Mips::SUBU_MMR6 },
  { Mips::SW, Mips::SW, Mips::SW_MMR6 },
  { Mips::SWC2, Mips::SWC2, Mips::SWC2_MMR6 },
  { Mips::SYNC, Mips::SYNC, Mips::SYNC_MMR6 },
  { Mips::SYNCI, Mips::SYNCI, Mips::SYNCI_MMR6 },
  { Mips::TRUNC_W_D64, Mips::TRUNC_W_D64, Mips::TRUNC_W_D_MMR6 },
  { Mips::TRUNC_W_S, Mips::TRUNC_W_S, Mips::TRUNC_W_S_MMR6 },
  { Mips::WAIT, Mips::WAIT, Mips::WAIT_MMR6 },
  { Mips::XOR, Mips::XOR, Mips::XOR_MMR6 },
  { Mips::XORi, Mips::XORi, Mips::XORI_MMR6 },
}; // End of Std2MicroMipsR6Table

  unsigned mid;
  unsigned start = 0;
  unsigned end = 51;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == Std2MicroMipsR6Table[mid][0]) {
      break;
    }
    if (Opcode < Std2MicroMipsR6Table[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  if (inArch == Arch_se)
    return Std2MicroMipsR6Table[mid][1];
  if (inArch == Arch_micromipsr6)
    return Std2MicroMipsR6Table[mid][2];
  return -1;}

} // end namespace Mips
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

