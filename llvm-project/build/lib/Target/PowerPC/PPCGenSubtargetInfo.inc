/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Subtarget Enumeration Source Fragment                                      *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/


#ifdef GET_SUBTARGETINFO_ENUM
#undef GET_SUBTARGETINFO_ENUM

namespace llvm {
namespace PPC {
enum {
  AIXOS = 0,
  DeprecatedDST = 1,
  Directive32 = 2,
  Directive64 = 3,
  Directive440 = 4,
  Directive601 = 5,
  Directive602 = 6,
  Directive603 = 7,
  Directive604 = 8,
  Directive620 = 9,
  Directive750 = 10,
  Directive970 = 11,
  Directive7400 = 12,
  DirectiveA2 = 13,
  DirectiveE500 = 14,
  DirectiveE500mc = 15,
  DirectiveE5500 = 16,
  DirectivePwr3 = 17,
  DirectivePwr4 = 18,
  DirectivePwr5 = 19,
  DirectivePwr5x = 20,
  DirectivePwr6 = 21,
  DirectivePwr6x = 22,
  DirectivePwr7 = 23,
  DirectivePwr8 = 24,
  DirectivePwr9 = 25,
  DirectivePwr10 = 26,
  DirectivePwrFuture = 27,
  Feature64Bit = 28,
  Feature64BitRegs = 29,
  FeatureAddLogicalFusion = 30,
  FeatureAddiLoadFusion = 31,
  FeatureAddisLoadFusion = 32,
  FeatureAltivec = 33,
  FeatureArithAddFusion = 34,
  FeatureBPERMD = 35,
  FeatureBack2BackFusion = 36,
  FeatureBookE = 37,
  FeatureCMPB = 38,
  FeatureCRBits = 39,
  FeatureCompareFusion = 40,
  FeatureDirectMove = 41,
  FeatureE500 = 42,
  FeatureEFPU2 = 43,
  FeatureExtDiv = 44,
  FeatureFCPSGN = 45,
  FeatureFPCVT = 46,
  FeatureFPRND = 47,
  FeatureFPU = 48,
  FeatureFRE = 49,
  FeatureFRES = 50,
  FeatureFRSQRTE = 51,
  FeatureFRSQRTES = 52,
  FeatureFSqrt = 53,
  FeatureFastMFLR = 54,
  FeatureFloat128 = 55,
  FeatureFusion = 56,
  FeatureHTM = 57,
  FeatureHardFloat = 58,
  FeatureICBT = 59,
  FeatureISA2_06 = 60,
  FeatureISA2_07 = 61,
  FeatureISA3_0 = 62,
  FeatureISA3_1 = 63,
  FeatureISAFuture = 64,
  FeatureISEL = 65,
  FeatureInvariantFunctionDescriptors = 66,
  FeatureLDBRX = 67,
  FeatureLFIWAX = 68,
  FeatureLogicalAddFusion = 69,
  FeatureLogicalFusion = 70,
  FeatureLongCall = 71,
  FeatureMFOCRF = 72,
  FeatureMFTB = 73,
  FeatureMMA = 74,
  FeatureMSYNC = 75,
  FeatureModernAIXAs = 76,
  FeatureP8Altivec = 77,
  FeatureP8Crypto = 78,
  FeatureP8Vector = 79,
  FeatureP9Altivec = 80,
  FeatureP9Vector = 81,
  FeatureP10Vector = 82,
  FeaturePCRelativeMemops = 83,
  FeaturePOPCNTD = 84,
  FeaturePPC4xx = 85,
  FeaturePPC6xx = 86,
  FeaturePPCPostRASched = 87,
  FeaturePPCPreRASched = 88,
  FeaturePairedVectorMemops = 89,
  FeaturePartwordAtomic = 90,
  FeaturePredictableSelectIsExpensive = 91,
  FeaturePrefixInstrs = 92,
  FeaturePrivileged = 93,
  FeatureQuadwordAtomic = 94,
  FeatureROPProtect = 95,
  FeatureRecipPrec = 96,
  FeatureSPE = 97,
  FeatureSTFIWX = 98,
  FeatureSecurePlt = 99,
  FeatureSha3Fusion = 100,
  FeatureSlowPOPCNTD = 101,
  FeatureStoreFusion = 102,
  FeatureTwoConstNR = 103,
  FeatureUnalignedFloats = 104,
  FeatureVSX = 105,
  FeatureVectorsUseTwoUnits = 106,
  FeatureWideImmFusion = 107,
  FeatureZeroMoveFusion = 108,
  NumSubtargetFeatures = 109
};
} // end namespace PPC
} // end namespace llvm

#endif // GET_SUBTARGETINFO_ENUM


#ifdef GET_SUBTARGETINFO_MACRO
GET_SUBTARGETINFO_MACRO(IsDeprecatedDST, false, isDeprecatedDST)
GET_SUBTARGETINFO_MACRO(IsFeatureMFTB, false, isFeatureMFTB)
GET_SUBTARGETINFO_MACRO(Has64BitSupport, false, has64BitSupport)
GET_SUBTARGETINFO_MACRO(Use64BitRegs, false, use64BitRegs)
GET_SUBTARGETINFO_MACRO(IsAIX, false, isAIX)
GET_SUBTARGETINFO_MACRO(AllowsUnalignedFPAccess, false, allowsUnalignedFPAccess)
GET_SUBTARGETINFO_MACRO(HasAltivec, false, hasAltivec)
GET_SUBTARGETINFO_MACRO(IsBookE, false, isBookE)
GET_SUBTARGETINFO_MACRO(HasBPERMD, false, hasBPERMD)
GET_SUBTARGETINFO_MACRO(HasCMPB, false, hasCMPB)
GET_SUBTARGETINFO_MACRO(UseCRBits, false, useCRBits)
GET_SUBTARGETINFO_MACRO(HasP8Crypto, false, hasP8Crypto)
GET_SUBTARGETINFO_MACRO(HasDirectMove, false, hasDirectMove)
GET_SUBTARGETINFO_MACRO(IsE500, false, isE500)
GET_SUBTARGETINFO_MACRO(HasEFPU2, false, hasEFPU2)
GET_SUBTARGETINFO_MACRO(HasExtDiv, false, hasExtDiv)
GET_SUBTARGETINFO_MACRO(HasFastMFLR, false, hasFastMFLR)
GET_SUBTARGETINFO_MACRO(HasFCPSGN, false, hasFCPSGN)
GET_SUBTARGETINFO_MACRO(HasFloat128, false, hasFloat128)
GET_SUBTARGETINFO_MACRO(HasFPCVT, false, hasFPCVT)
GET_SUBTARGETINFO_MACRO(HasFPRND, false, hasFPRND)
GET_SUBTARGETINFO_MACRO(HasFPU, false, hasFPU)
GET_SUBTARGETINFO_MACRO(HasFRE, false, hasFRE)
GET_SUBTARGETINFO_MACRO(HasFRES, false, hasFRES)
GET_SUBTARGETINFO_MACRO(HasFRSQRTE, false, hasFRSQRTE)
GET_SUBTARGETINFO_MACRO(HasFRSQRTES, false, hasFRSQRTES)
GET_SUBTARGETINFO_MACRO(HasFSQRT, false, hasFSQRT)
GET_SUBTARGETINFO_MACRO(HasAddLogicalFusion, false, hasAddLogicalFusion)
GET_SUBTARGETINFO_MACRO(HasAddiLoadFusion, false, hasAddiLoadFusion)
GET_SUBTARGETINFO_MACRO(HasAddisLoadFusion, false, hasAddisLoadFusion)
GET_SUBTARGETINFO_MACRO(HasArithAddFusion, false, hasArithAddFusion)
GET_SUBTARGETINFO_MACRO(HasBack2BackFusion, false, hasBack2BackFusion)
GET_SUBTARGETINFO_MACRO(HasCompareFusion, false, hasCompareFusion)
GET_SUBTARGETINFO_MACRO(HasLogicalFusion, false, hasLogicalFusion)
GET_SUBTARGETINFO_MACRO(HasLogicalAddFusion, false, hasLogicalAddFusion)
GET_SUBTARGETINFO_MACRO(HasSha3Fusion, false, hasSha3Fusion)
GET_SUBTARGETINFO_MACRO(HasStoreFusion, false, hasStoreFusion)
GET_SUBTARGETINFO_MACRO(HasWideImmFusion, false, hasWideImmFusion)
GET_SUBTARGETINFO_MACRO(HasZeroMoveFusion, false, hasZeroMoveFusion)
GET_SUBTARGETINFO_MACRO(HasFusion, false, hasFusion)
GET_SUBTARGETINFO_MACRO(HasHardFloat, false, hasHardFloat)
GET_SUBTARGETINFO_MACRO(HasHTM, false, hasHTM)
GET_SUBTARGETINFO_MACRO(HasICBT, false, hasICBT)
GET_SUBTARGETINFO_MACRO(HasInvariantFunctionDescriptors, false, hasInvariantFunctionDescriptors)
GET_SUBTARGETINFO_MACRO(IsISAFuture, false, isISAFuture)
GET_SUBTARGETINFO_MACRO(IsISA2_06, false, isISA2_06)
GET_SUBTARGETINFO_MACRO(IsISA2_07, false, isISA2_07)
GET_SUBTARGETINFO_MACRO(IsISA3_0, false, isISA3_0)
GET_SUBTARGETINFO_MACRO(IsISA3_1, false, isISA3_1)
GET_SUBTARGETINFO_MACRO(HasISEL, false, hasISEL)
GET_SUBTARGETINFO_MACRO(HasLDBRX, false, hasLDBRX)
GET_SUBTARGETINFO_MACRO(HasLFIWAX, false, hasLFIWAX)
GET_SUBTARGETINFO_MACRO(UseLongCalls, false, useLongCalls)
GET_SUBTARGETINFO_MACRO(HasMFOCRF, false, hasMFOCRF)
GET_SUBTARGETINFO_MACRO(HasMMA, false, hasMMA)
GET_SUBTARGETINFO_MACRO(HasModernAIXAs, false, hasModernAIXAs)
GET_SUBTARGETINFO_MACRO(HasOnlyMSYNC, false, hasOnlyMSYNC)
GET_SUBTARGETINFO_MACRO(PairedVectorMemops, false, pairedVectorMemops)
GET_SUBTARGETINFO_MACRO(HasPartwordAtomics, false, hasPartwordAtomics)
GET_SUBTARGETINFO_MACRO(HasPCRelativeMemops, false, hasPCRelativeMemops)
GET_SUBTARGETINFO_MACRO(HasP10Vector, false, hasP10Vector)
GET_SUBTARGETINFO_MACRO(HasP8Altivec, false, hasP8Altivec)
GET_SUBTARGETINFO_MACRO(HasP8Vector, false, hasP8Vector)
GET_SUBTARGETINFO_MACRO(HasP9Altivec, false, hasP9Altivec)
GET_SUBTARGETINFO_MACRO(HasP9Vector, false, hasP9Vector)
GET_SUBTARGETINFO_MACRO(UsePPCPostRASchedStrategy, false, usePPCPostRASchedStrategy)
GET_SUBTARGETINFO_MACRO(UsePPCPreRASchedStrategy, false, usePPCPreRASchedStrategy)
GET_SUBTARGETINFO_MACRO(IsPPC4xx, false, isPPC4xx)
GET_SUBTARGETINFO_MACRO(IsPPC6xx, false, isPPC6xx)
GET_SUBTARGETINFO_MACRO(PredictableSelectIsExpensive, false, predictableSelectIsExpensive)
GET_SUBTARGETINFO_MACRO(HasPrefixInstrs, false, hasPrefixInstrs)
GET_SUBTARGETINFO_MACRO(HasPrivileged, false, hasPrivileged)
GET_SUBTARGETINFO_MACRO(HasQuadwordAtomics, false, hasQuadwordAtomics)
GET_SUBTARGETINFO_MACRO(HasRecipPrec, false, hasRecipPrec)
GET_SUBTARGETINFO_MACRO(HasROPProtect, false, hasROPProtect)
GET_SUBTARGETINFO_MACRO(IsSecurePlt, false, isSecurePlt)
GET_SUBTARGETINFO_MACRO(HasSPE, false, hasSPE)
GET_SUBTARGETINFO_MACRO(HasSTFIWX, false, hasSTFIWX)
GET_SUBTARGETINFO_MACRO(NeedsTwoConstNR, false, needsTwoConstNR)
GET_SUBTARGETINFO_MACRO(VectorsUseTwoUnits, false, vectorsUseTwoUnits)
GET_SUBTARGETINFO_MACRO(HasVSX, false, hasVSX)
#undef GET_SUBTARGETINFO_MACRO
#endif // GET_SUBTARGETINFO_MACRO


#ifdef GET_SUBTARGETINFO_MC_DESC
#undef GET_SUBTARGETINFO_MC_DESC

namespace llvm {
// Sorted (by key) array of values for CPU features.
extern const llvm::SubtargetFeatureKV PPCFeatureKV[] = {
  { "64bit", "Enable 64-bit instructions", PPC::Feature64Bit, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "64bitregs", "Enable 64-bit registers usage for ppc32 [beta]", PPC::Feature64BitRegs, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "aix", "AIX OS", PPC::AIXOS, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "allow-unaligned-fp-access", "CPU does not trap on unaligned FP access", PPC::FeatureUnalignedFloats, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "altivec", "Enable Altivec instructions", PPC::FeatureAltivec, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "booke", "Enable Book E instructions", PPC::FeatureBookE, { { { 0x800000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "bpermd", "Enable the bpermd instruction", PPC::FeatureBPERMD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "cmpb", "Enable the cmpb instruction", PPC::FeatureCMPB, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "crbits", "Use condition-register bits individually", PPC::FeatureCRBits, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "crypto", "Enable POWER8 Crypto instructions", PPC::FeatureP8Crypto, { { { 0x0ULL, 0x2000ULL, 0x0ULL, 0x0ULL, } } } },
  { "direct-move", "Enable Power8 direct move instructions", PPC::FeatureDirectMove, { { { 0x0ULL, 0x20000000000ULL, 0x0ULL, 0x0ULL, } } } },
  { "e500", "Enable E500/E500mc instructions", PPC::FeatureE500, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "efpu2", "Enable Embedded Floating-Point APU 2 instructions", PPC::FeatureEFPU2, { { { 0x0ULL, 0x200000000ULL, 0x0ULL, 0x0ULL, } } } },
  { "extdiv", "Enable extended divide instructions", PPC::FeatureExtDiv, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fast-MFLR", "MFLR is a fast instruction", PPC::FeatureFastMFLR, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fcpsgn", "Enable the fcpsgn instruction", PPC::FeatureFCPSGN, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "float128", "Enable the __float128 data type for IEEE-754R Binary128.", PPC::FeatureFloat128, { { { 0x0ULL, 0x20000000000ULL, 0x0ULL, 0x0ULL, } } } },
  { "fpcvt", "Enable fc[ft]* (unsigned and single-precision) and lfiwzx instructions", PPC::FeatureFPCVT, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fprnd", "Enable the fri[mnpz] instructions", PPC::FeatureFPRND, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fpu", "Enable classic FPU instructions", PPC::FeatureFPU, { { { 0x400000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fre", "Enable the fre instruction", PPC::FeatureFRE, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fres", "Enable the fres instruction", PPC::FeatureFRES, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "frsqrte", "Enable the frsqrte instruction", PPC::FeatureFRSQRTE, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "frsqrtes", "Enable the frsqrtes instruction", PPC::FeatureFRSQRTES, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fsqrt", "Enable the fsqrt instruction", PPC::FeatureFSqrt, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-add-logical", "Target supports Add with Logical Operations fusion", PPC::FeatureAddLogicalFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-addi-load", "Power8 Addi-Load fusion", PPC::FeatureAddiLoadFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-addis-load", "Power8 Addis-Load fusion", PPC::FeatureAddisLoadFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-arith-add", "Target supports Arithmetic Operations with Add fusion", PPC::FeatureArithAddFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-back2back", "Target supports general back to back fusion", PPC::FeatureBack2BackFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-cmp", "Target supports Comparison Operations fusion", PPC::FeatureCompareFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-logical", "Target supports Logical Operations fusion", PPC::FeatureLogicalFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-logical-add", "Target supports Logical with Add Operations fusion", PPC::FeatureLogicalAddFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-sha3", "Target supports SHA3 assist fusion", PPC::FeatureSha3Fusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-store", "Target supports store clustering", PPC::FeatureStoreFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-wideimm", "Target supports Wide-Immediate fusion", PPC::FeatureWideImmFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fuse-zeromove", "Target supports move to SPR with branch fusion", PPC::FeatureZeroMoveFusion, { { { 0x100000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "fusion", "Target supports instruction fusion", PPC::FeatureFusion, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "hard-float", "Enable floating-point instructions", PPC::FeatureHardFloat, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "htm", "Enable Hardware Transactional Memory instructions", PPC::FeatureHTM, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "icbt", "Enable icbt instruction", PPC::FeatureICBT, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "invariant-function-descriptors", "Assume function descriptors are invariant", PPC::FeatureInvariantFunctionDescriptors, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-future-instructions", "Enable instructions for Future ISA.", PPC::FeatureISAFuture, { { { 0x8000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v206-instructions", "Enable instructions in ISA 2.06.", PPC::FeatureISA2_06, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v207-instructions", "Enable instructions in ISA 2.07.", PPC::FeatureISA2_07, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v30-instructions", "Enable instructions in ISA 3.0.", PPC::FeatureISA3_0, { { { 0x2000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isa-v31-instructions", "Enable instructions in ISA 3.1.", PPC::FeatureISA3_1, { { { 0x4000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "isel", "Enable the isel instruction", PPC::FeatureISEL, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ldbrx", "Enable the ldbrx instruction", PPC::FeatureLDBRX, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "lfiwax", "Enable the lfiwax instruction", PPC::FeatureLFIWAX, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "longcall", "Always use indirect calls", PPC::FeatureLongCall, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "mfocrf", "Enable the MFOCRF instruction", PPC::FeatureMFOCRF, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "mma", "Enable MMA instructions", PPC::FeatureMMA, { { { 0x0ULL, 0x2018000ULL, 0x0ULL, 0x0ULL, } } } },
  { "modern-aix-as", "AIX system assembler is modern enough to support new mnes", PPC::FeatureModernAIXAs, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "msync", "Has only the msync instruction instead of sync", PPC::FeatureMSYNC, { { { 0x2000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "paired-vector-memops", "32Byte load and store instructions", PPC::FeaturePairedVectorMemops, { { { 0x4000000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "partword-atomics", "Enable l[bh]arx and st[bh]cx.", PPC::FeaturePartwordAtomic, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "pcrelative-memops", "Enable PC relative Memory Ops", PPC::FeaturePCRelativeMemops, { { { 0x4000000000000000ULL, 0x10000000ULL, 0x0ULL, 0x0ULL, } } } },
  { "popcntd", "Enable the popcnt[dw] instructions", PPC::FeaturePOPCNTD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power10-vector", "Enable POWER10 vector instructions", PPC::FeatureP10Vector, { { { 0x8000000000000000ULL, 0x20000ULL, 0x0ULL, 0x0ULL, } } } },
  { "power8-altivec", "Enable POWER8 Altivec instructions", PPC::FeatureP8Altivec, { { { 0x200000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "power8-vector", "Enable POWER8 vector instructions", PPC::FeatureP8Vector, { { { 0x0ULL, 0x20000002000ULL, 0x0ULL, 0x0ULL, } } } },
  { "power9-altivec", "Enable POWER9 Altivec instructions", PPC::FeatureP9Altivec, { { { 0x4000000000000000ULL, 0x2000ULL, 0x0ULL, 0x0ULL, } } } },
  { "power9-vector", "Enable POWER9 vector instructions", PPC::FeatureP9Vector, { { { 0x4000000000000000ULL, 0x18000ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc-postra-sched", "Use PowerPC post-RA scheduling strategy", PPC::FeaturePPCPostRASched, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc-prera-sched", "Use PowerPC pre-RA scheduling strategy", PPC::FeaturePPCPreRASched, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc4xx", "Enable PPC 4xx instructions", PPC::FeaturePPC4xx, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "ppc6xx", "Enable PPC 6xx instructions", PPC::FeaturePPC6xx, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "predictable-select-expensive", "Prefer likely predicted branches over selects", PPC::FeaturePredictableSelectIsExpensive, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "prefix-instrs", "Enable prefixed instructions", PPC::FeaturePrefixInstrs, { { { 0x4000000000000000ULL, 0x18000ULL, 0x0ULL, 0x0ULL, } } } },
  { "privileged", "Add privileged instructions", PPC::FeaturePrivileged, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "quadword-atomics", "Enable lqarx and stqcx.", PPC::FeatureQuadwordAtomic, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "recipprec", "Assume higher precision reciprocal estimates", PPC::FeatureRecipPrec, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "rop-protect", "Add ROP protect", PPC::FeatureROPProtect, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "secure-plt", "Enable secure plt mode", PPC::FeatureSecurePlt, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "slow-popcntd", "Has slow popcnt[dw] instructions", PPC::FeatureSlowPOPCNTD, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "spe", "Enable SPE instructions", PPC::FeatureSPE, { { { 0x400000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "stfiwx", "Enable the stfiwx instruction", PPC::FeatureSTFIWX, { { { 0x1000000000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "two-const-nr", "Requires two constant Newton-Raphson computation", PPC::FeatureTwoConstNR, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "vectors-use-two-units", "Vectors use two units", PPC::FeatureVectorsUseTwoUnits, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
  { "vsx", "Enable VSX instructions", PPC::FeatureVSX, { { { 0x200000000ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } } },
};

#ifdef DBGFIELD
#error "<target>GenSubtargetInfo.inc requires a DBGFIELD macro"
#endif
#if !defined(NDEBUG) || defined(LLVM_ENABLE_DUMP)
#define DBGFIELD(x) x,
#else
#define DBGFIELD(x)
#endif

// Functional units for "PPC440Itineraries"
namespace PPC440ItinerariesFU {
  const InstrStage::FuncUnits P440_DISS1 = 1ULL << 0;
  const InstrStage::FuncUnits P440_DISS2 = 1ULL << 1;
  const InstrStage::FuncUnits P440_FRACC = 1ULL << 2;
  const InstrStage::FuncUnits P440_IRACC = 1ULL << 3;
  const InstrStage::FuncUnits P440_IEXE1 = 1ULL << 4;
  const InstrStage::FuncUnits P440_IEXE2 = 1ULL << 5;
  const InstrStage::FuncUnits P440_IWB = 1ULL << 6;
  const InstrStage::FuncUnits P440_LRACC = 1ULL << 7;
  const InstrStage::FuncUnits P440_JEXE1 = 1ULL << 8;
  const InstrStage::FuncUnits P440_JEXE2 = 1ULL << 9;
  const InstrStage::FuncUnits P440_JWB = 1ULL << 10;
  const InstrStage::FuncUnits P440_AGEN = 1ULL << 11;
  const InstrStage::FuncUnits P440_CRD = 1ULL << 12;
  const InstrStage::FuncUnits P440_LWB = 1ULL << 13;
  const InstrStage::FuncUnits P440_FEXE1 = 1ULL << 14;
  const InstrStage::FuncUnits P440_FEXE2 = 1ULL << 15;
  const InstrStage::FuncUnits P440_FEXE3 = 1ULL << 16;
  const InstrStage::FuncUnits P440_FEXE4 = 1ULL << 17;
  const InstrStage::FuncUnits P440_FEXE5 = 1ULL << 18;
  const InstrStage::FuncUnits P440_FEXE6 = 1ULL << 19;
  const InstrStage::FuncUnits P440_FWB = 1ULL << 20;
  const InstrStage::FuncUnits P440_LWARX_Hold = 1ULL << 21;
} // end namespace PPC440ItinerariesFU

// Pipeline forwarding paths for itineraries "PPC440Itineraries"
namespace PPC440ItinerariesBypass {
  const unsigned NoBypass = 0;
  const unsigned P440_GPR_Bypass = 1 << 0;
  const unsigned P440_FPR_Bypass = 1 << 1;
} // end namespace PPC440ItinerariesBypass

// Functional units for "G3Itineraries"
namespace G3ItinerariesFU {
  const InstrStage::FuncUnits G3_IU1 = 1ULL << 0;
  const InstrStage::FuncUnits G3_IU2 = 1ULL << 1;
  const InstrStage::FuncUnits G3_FPU1 = 1ULL << 2;
  const InstrStage::FuncUnits G3_BPU = 1ULL << 3;
  const InstrStage::FuncUnits G3_SRU = 1ULL << 4;
  const InstrStage::FuncUnits G3_SLU = 1ULL << 5;
} // end namespace G3ItinerariesFU

// Functional units for "G4Itineraries"
namespace G4ItinerariesFU {
  const InstrStage::FuncUnits G4_IU1 = 1ULL << 0;
  const InstrStage::FuncUnits G4_IU2 = 1ULL << 1;
  const InstrStage::FuncUnits G4_SLU = 1ULL << 2;
  const InstrStage::FuncUnits G4_SRU = 1ULL << 3;
  const InstrStage::FuncUnits G4_BPU = 1ULL << 4;
  const InstrStage::FuncUnits G4_FPU1 = 1ULL << 5;
  const InstrStage::FuncUnits G4_VIU1 = 1ULL << 6;
  const InstrStage::FuncUnits G4_VIU2 = 1ULL << 7;
  const InstrStage::FuncUnits G4_VPU = 1ULL << 8;
  const InstrStage::FuncUnits G4_VFPU = 1ULL << 9;
} // end namespace G4ItinerariesFU

// Functional units for "G4PlusItineraries"
namespace G4PlusItinerariesFU {
  const InstrStage::FuncUnits G4P_IU1 = 1ULL << 0;
  const InstrStage::FuncUnits G4P_IU2 = 1ULL << 1;
  const InstrStage::FuncUnits G4P_IU3 = 1ULL << 2;
  const InstrStage::FuncUnits G4P_IU4 = 1ULL << 3;
  const InstrStage::FuncUnits G4P_BPU = 1ULL << 4;
  const InstrStage::FuncUnits G4P_SLU = 1ULL << 5;
  const InstrStage::FuncUnits G4P_FPU1 = 1ULL << 6;
  const InstrStage::FuncUnits G4P_VFPU = 1ULL << 7;
  const InstrStage::FuncUnits G4P_VIU1 = 1ULL << 8;
  const InstrStage::FuncUnits G4P_VIU2 = 1ULL << 9;
  const InstrStage::FuncUnits G4P_VPU = 1ULL << 10;
} // end namespace G4PlusItinerariesFU

// Functional units for "G5Itineraries"
namespace G5ItinerariesFU {
  const InstrStage::FuncUnits G5_IU1 = 1ULL << 0;
  const InstrStage::FuncUnits G5_IU2 = 1ULL << 1;
  const InstrStage::FuncUnits G5_SLU = 1ULL << 2;
  const InstrStage::FuncUnits G5_BPU = 1ULL << 3;
  const InstrStage::FuncUnits G5_FPU1 = 1ULL << 4;
  const InstrStage::FuncUnits G5_FPU2 = 1ULL << 5;
  const InstrStage::FuncUnits G5_VFPU = 1ULL << 6;
  const InstrStage::FuncUnits G5_VIU1 = 1ULL << 7;
  const InstrStage::FuncUnits G5_VIU2 = 1ULL << 8;
  const InstrStage::FuncUnits G5_VPU = 1ULL << 9;
} // end namespace G5ItinerariesFU

// Functional units for "PPCA2Itineraries"
namespace PPCA2ItinerariesFU {
  const InstrStage::FuncUnits A2_XU = 1ULL << 0;
  const InstrStage::FuncUnits A2_FU = 1ULL << 1;
} // end namespace PPCA2ItinerariesFU

// Functional units for "PPCE500Itineraries"
namespace PPCE500ItinerariesFU {
  const InstrStage::FuncUnits E500_DIS0 = 1ULL << 0;
  const InstrStage::FuncUnits E500_DIS1 = 1ULL << 1;
  const InstrStage::FuncUnits E500_SU0 = 1ULL << 2;
  const InstrStage::FuncUnits E500_SU1 = 1ULL << 3;
  const InstrStage::FuncUnits E500_BU = 1ULL << 4;
  const InstrStage::FuncUnits E500_MU = 1ULL << 5;
  const InstrStage::FuncUnits E500_LSU_0 = 1ULL << 6;
} // end namespace PPCE500ItinerariesFU

// Pipeline forwarding paths for itineraries "PPCE500Itineraries"
namespace PPCE500ItinerariesBypass {
  const unsigned NoBypass = 0;
  const unsigned E500_CR_Bypass = 1 << 0;
  const unsigned E500_GPR_Bypass = 1 << 1;
  const unsigned E500_DivBypass = 1 << 2;
} // end namespace PPCE500ItinerariesBypass

// Functional units for "PPCE500mcItineraries"
namespace PPCE500mcItinerariesFU {
  const InstrStage::FuncUnits E500mc_DIS0 = 1ULL << 0;
  const InstrStage::FuncUnits E500mc_DIS1 = 1ULL << 1;
  const InstrStage::FuncUnits E500mc_SFX0 = 1ULL << 2;
  const InstrStage::FuncUnits E500mc_SFX1 = 1ULL << 3;
  const InstrStage::FuncUnits E500mc_BU = 1ULL << 4;
  const InstrStage::FuncUnits E500mc_CFX_DivBypass = 1ULL << 5;
  const InstrStage::FuncUnits E500mc_CFX_0 = 1ULL << 6;
  const InstrStage::FuncUnits E500mc_LSU_0 = 1ULL << 7;
  const InstrStage::FuncUnits E500mc_FPU_0 = 1ULL << 8;
} // end namespace PPCE500mcItinerariesFU

// Pipeline forwarding paths for itineraries "PPCE500mcItineraries"
namespace PPCE500mcItinerariesBypass {
  const unsigned NoBypass = 0;
  const unsigned E500mc_CR_Bypass = 1 << 0;
  const unsigned E500mc_GPR_Bypass = 1 << 1;
  const unsigned E500mc_FPR_Bypass = 1 << 2;
} // end namespace PPCE500mcItinerariesBypass

// Functional units for "PPCE5500Itineraries"
namespace PPCE5500ItinerariesFU {
  const InstrStage::FuncUnits E5500_DIS0 = 1ULL << 0;
  const InstrStage::FuncUnits E5500_DIS1 = 1ULL << 1;
  const InstrStage::FuncUnits E5500_SFX0 = 1ULL << 2;
  const InstrStage::FuncUnits E5500_SFX1 = 1ULL << 3;
  const InstrStage::FuncUnits E5500_BU = 1ULL << 4;
  const InstrStage::FuncUnits E5500_CFX_DivBypass = 1ULL << 5;
  const InstrStage::FuncUnits E5500_CFX_0 = 1ULL << 6;
  const InstrStage::FuncUnits E5500_CFX_1 = 1ULL << 7;
  const InstrStage::FuncUnits E5500_LSU_0 = 1ULL << 8;
  const InstrStage::FuncUnits E5500_FPU_0 = 1ULL << 9;
} // end namespace PPCE5500ItinerariesFU

// Pipeline forwarding paths for itineraries "PPCE5500Itineraries"
namespace PPCE5500ItinerariesBypass {
  const unsigned NoBypass = 0;
  const unsigned E5500_CR_Bypass = 1 << 0;
  const unsigned E5500_GPR_Bypass = 1 << 1;
  const unsigned E5500_FPR_Bypass = 1 << 2;
} // end namespace PPCE5500ItinerariesBypass

// Functional units for "P8Itineraries"
namespace P8ItinerariesFU {
  const InstrStage::FuncUnits P8_DU1 = 1ULL << 0;
  const InstrStage::FuncUnits P8_DU2 = 1ULL << 1;
  const InstrStage::FuncUnits P8_DU3 = 1ULL << 2;
  const InstrStage::FuncUnits P8_DU4 = 1ULL << 3;
  const InstrStage::FuncUnits P8_DU5 = 1ULL << 4;
  const InstrStage::FuncUnits P8_DU6 = 1ULL << 5;
  const InstrStage::FuncUnits P8_DU7 = 1ULL << 6;
  const InstrStage::FuncUnits P8_DU8 = 1ULL << 7;
  const InstrStage::FuncUnits P8_LU1 = 1ULL << 8;
  const InstrStage::FuncUnits P8_LU2 = 1ULL << 9;
  const InstrStage::FuncUnits P8_LSU1 = 1ULL << 10;
  const InstrStage::FuncUnits P8_LSU2 = 1ULL << 11;
  const InstrStage::FuncUnits P8_FXU1 = 1ULL << 12;
  const InstrStage::FuncUnits P8_FXU2 = 1ULL << 13;
  const InstrStage::FuncUnits P8_FPU1 = 1ULL << 14;
  const InstrStage::FuncUnits P8_FPU2 = 1ULL << 15;
  const InstrStage::FuncUnits P8_CRU = 1ULL << 16;
  const InstrStage::FuncUnits P8_BRU = 1ULL << 17;
} // end namespace P8ItinerariesFU

// Functional units for "P7Itineraries"
namespace P7ItinerariesFU {
  const InstrStage::FuncUnits P7_DU1 = 1ULL << 0;
  const InstrStage::FuncUnits P7_DU2 = 1ULL << 1;
  const InstrStage::FuncUnits P7_DU3 = 1ULL << 2;
  const InstrStage::FuncUnits P7_DU4 = 1ULL << 3;
  const InstrStage::FuncUnits P7_DU5 = 1ULL << 4;
  const InstrStage::FuncUnits P7_DU6 = 1ULL << 5;
  const InstrStage::FuncUnits P7_LS1 = 1ULL << 6;
  const InstrStage::FuncUnits P7_LS2 = 1ULL << 7;
  const InstrStage::FuncUnits P7_FX1 = 1ULL << 8;
  const InstrStage::FuncUnits P7_FX2 = 1ULL << 9;
  const InstrStage::FuncUnits P7_VS1 = 1ULL << 10;
  const InstrStage::FuncUnits P7_VS2 = 1ULL << 11;
  const InstrStage::FuncUnits P7_CRU = 1ULL << 12;
  const InstrStage::FuncUnits P7_BRU = 1ULL << 13;
} // end namespace P7ItinerariesFU

extern const llvm::InstrStage PPCStages[] = {
  { 0, 0, 0, llvm::InstrStage::Required }, // No itinerary
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 3, PPC440ItinerariesFU::P440_AGEN, 1, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPC440ItinerariesFU::P440_CRD, 1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 1-5
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC | PPC440ItinerariesFU::P440_LRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE1 | PPC440ItinerariesFU::P440_JEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE2 | PPC440ItinerariesFU::P440_JEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IWB | PPC440ItinerariesFU::P440_JWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 6-10
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 11-15
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_AGEN, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_CRD, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 16-20
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_AGEN, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_CRD, -1, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPC440ItinerariesFU::P440_LWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 21-25
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 33, PPC440ItinerariesFU::P440_IWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 26-30
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE3, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE4, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE5, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE6, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 31-39
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE3, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE4, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE5, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE6, -1, (llvm::InstrStage::ReservationKinds)0 },   { 25, PPC440ItinerariesFU::P440_FWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 40-48
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE3, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE4, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE5, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE6, -1, (llvm::InstrStage::ReservationKinds)0 },   { 13, PPC440ItinerariesFU::P440_FWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 49-57
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FRACC, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LRACC, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_AGEN, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_JEXE1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_FEXE2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_CRD, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_JEXE2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 6, PPC440ItinerariesFU::P440_FEXE3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 6, PPC440ItinerariesFU::P440_LWB, 0, (llvm::InstrStage::ReservationKinds)0 },   { 6, PPC440ItinerariesFU::P440_JWB, 0, (llvm::InstrStage::ReservationKinds)0 },   { 6, PPC440ItinerariesFU::P440_IWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 58-73
  { 1, PPC440ItinerariesFU::P440_DISS1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPC440ItinerariesFU::P440_LWARX_Hold, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_AGEN, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_CRD, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_LWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 74-80
  { 1, PPC440ItinerariesFU::P440_DISS1 | PPC440ItinerariesFU::P440_DISS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IRACC, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE1, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPC440ItinerariesFU::P440_IEXE2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 3, PPC440ItinerariesFU::P440_IWB, -1, (llvm::InstrStage::ReservationKinds)0 }, // 81-85
  { 3, G3ItinerariesFU::G3_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 86
  { 1, G3ItinerariesFU::G3_IU1 | G3ItinerariesFU::G3_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 87
  { 1, G3ItinerariesFU::G3_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 88
  { 1, G3ItinerariesFU::G3_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 89
  { 2, G3ItinerariesFU::G3_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 90
  { 19, G3ItinerariesFU::G3_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 91
  { 1, G3ItinerariesFU::G3_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 92
  { 31, G3ItinerariesFU::G3_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 93
  { 17, G3ItinerariesFU::G3_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 94
  { 2, G3ItinerariesFU::G3_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 95
  { 2, G3ItinerariesFU::G3_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 96
  { 34, G3ItinerariesFU::G3_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 97
  { 3, G3ItinerariesFU::G3_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 98
  { 3, G3ItinerariesFU::G3_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 99
  { 5, G3ItinerariesFU::G3_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 100
  { 6, G3ItinerariesFU::G3_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 101
  { 3, G3ItinerariesFU::G3_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 102
  { 8, G3ItinerariesFU::G3_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 103
  { 2, G3ItinerariesFU::G3_IU1 | G3ItinerariesFU::G3_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 104
  { 8, G4ItinerariesFU::G4_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 105
  { 1, G4ItinerariesFU::G4_IU1 | G4ItinerariesFU::G4_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 106
  { 1, G4ItinerariesFU::G4_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 107
  { 4, G4ItinerariesFU::G4_VFPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 108
  { 1, G4ItinerariesFU::G4_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 109
  { 2, G4ItinerariesFU::G4_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 110
  { 19, G4ItinerariesFU::G4_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 111
  { 1, G4ItinerariesFU::G4_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 112
  { 31, G4ItinerariesFU::G4_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 113
  { 1, G4ItinerariesFU::G4_VIU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 114
  { 3, G4ItinerariesFU::G4_VIU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 115
  { 17, G4ItinerariesFU::G4_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 116
  { 2, G4ItinerariesFU::G4_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 117
  { 3, G4ItinerariesFU::G4_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 118
  { 34, G4ItinerariesFU::G4_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 119
  { 3, G4ItinerariesFU::G4_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 120
  { 3, G4ItinerariesFU::G4_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 121
  { 5, G4ItinerariesFU::G4_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 122
  { 6, G4ItinerariesFU::G4_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 123
  { 3, G4ItinerariesFU::G4_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 124
  { 5, G4ItinerariesFU::G4_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 125
  { 8, G4ItinerariesFU::G4_SRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 126
  { 2, G4ItinerariesFU::G4_IU1 | G4ItinerariesFU::G4_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 127
  { 1, G4ItinerariesFU::G4_VPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 128
  { 35, G4PlusItinerariesFU::G4P_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 129
  { 1, G4PlusItinerariesFU::G4P_IU1 | G4PlusItinerariesFU::G4P_IU2 | G4PlusItinerariesFU::G4P_IU3 | G4PlusItinerariesFU::G4P_IU4, -1, (llvm::InstrStage::ReservationKinds)0 }, // 130
  { 1, G4PlusItinerariesFU::G4P_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 131
  { 4, G4PlusItinerariesFU::G4P_VFPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 132
  { 2, G4PlusItinerariesFU::G4P_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 133
  { 3, G4PlusItinerariesFU::G4P_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 134
  { 23, G4PlusItinerariesFU::G4P_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 135
  { 5, G4PlusItinerariesFU::G4P_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 136
  { 35, G4PlusItinerariesFU::G4P_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 137
  { 1, G4PlusItinerariesFU::G4P_VIU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 138
  { 4, G4PlusItinerariesFU::G4P_VIU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 139
  { 21, G4PlusItinerariesFU::G4P_FPU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 140
  { 3, G4PlusItinerariesFU::G4P_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 141
  { 0, G4PlusItinerariesFU::G4P_IU1 | G4PlusItinerariesFU::G4P_IU2 | G4PlusItinerariesFU::G4P_IU3 | G4PlusItinerariesFU::G4P_IU4, -1, (llvm::InstrStage::ReservationKinds)0 }, // 142
  { 4, G4PlusItinerariesFU::G4P_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 143
  { 37, G4PlusItinerariesFU::G4P_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 144
  { 4, G4PlusItinerariesFU::G4P_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 145
  { 5, G4PlusItinerariesFU::G4P_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 146
  { 2, G4PlusItinerariesFU::G4P_IU1 | G4PlusItinerariesFU::G4P_IU2 | G4PlusItinerariesFU::G4P_IU3 | G4PlusItinerariesFU::G4P_IU4, -1, (llvm::InstrStage::ReservationKinds)0 }, // 147
  { 2, G4PlusItinerariesFU::G4P_VFPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 148
  { 2, G4PlusItinerariesFU::G4P_VPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 149
  { 35, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 150
  { 2, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 151
  { 1, G5ItinerariesFU::G5_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 152
  { 8, G5ItinerariesFU::G5_VFPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 153
  { 4, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 154
  { 3, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 155
  { 4, G5ItinerariesFU::G5_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 156
  { 3, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 157
  { 68, G5ItinerariesFU::G5_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 158
  { 36, G5ItinerariesFU::G5_IU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 159
  { 6, G5ItinerariesFU::G5_FPU1 | G5ItinerariesFU::G5_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 160
  { 33, G5ItinerariesFU::G5_FPU1 | G5ItinerariesFU::G5_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 161
  { 8, G5ItinerariesFU::G5_FPU1 | G5ItinerariesFU::G5_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 162
  { 2, G5ItinerariesFU::G5_VIU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 163
  { 5, G5ItinerariesFU::G5_VIU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 164
  { 40, G5ItinerariesFU::G5_FPU1 | G5ItinerariesFU::G5_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 165
  { 40, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 166
  { 11, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 167
  { 5, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 168
  { 64, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 169
  { 7, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 170
  { 2, G5ItinerariesFU::G5_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 171
  { 3, G5ItinerariesFU::G5_BPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 172
  { 2, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 173
  { 3, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 174
  { 6, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 175
  { 10, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 176
  { 8, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 177
  { 5, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 178
  { 1, G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 179
  { 4, G5ItinerariesFU::G5_SLU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 180
  { 1, G5ItinerariesFU::G5_IU1 | G5ItinerariesFU::G5_IU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 181
  { 2, G5ItinerariesFU::G5_VFPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 182
  { 3, G5ItinerariesFU::G5_VPU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 183
  { 1, PPCA2ItinerariesFU::A2_XU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 184
  { 1, PPCA2ItinerariesFU::A2_FU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 185
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 186-187
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_SU0 | PPCE500ItinerariesFU::E500_SU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 188-189
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_BU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 190-191
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_MU, 0, (llvm::InstrStage::ReservationKinds)0 },   { 14, PPCE500ItinerariesFU::E500_MU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 192-194
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 6, PPCE500ItinerariesFU::E500_MU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 195-196
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 32, PPCE500ItinerariesFU::E500_MU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 197-198
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE500ItinerariesFU::E500_MU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 199-200
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_SU0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 201-202
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 29, PPCE500ItinerariesFU::E500_MU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 203-204
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 3, PPCE500ItinerariesFU::E500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 205-206
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_SU0 | PPCE500ItinerariesFU::E500_SU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 207-209
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 5, PPCE500ItinerariesFU::E500_SU0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 210-211
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE500ItinerariesFU::E500_SU0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 212-213
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE500ItinerariesFU::E500_SU0 | PPCE500ItinerariesFU::E500_SU1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 214-215
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500ItinerariesFU::E500_LSU_0, 0, (llvm::InstrStage::ReservationKinds)0 }, // 216-217
  { 1, PPCE500ItinerariesFU::E500_DIS0 | PPCE500ItinerariesFU::E500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE500ItinerariesFU::E500_SU0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 218-219
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 220-221
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_SFX0 | PPCE500mcItinerariesFU::E500mc_SFX1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 222-223
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_BU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 224-225
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_CFX_0, 0, (llvm::InstrStage::ReservationKinds)0 },   { 14, PPCE500mcItinerariesFU::E500mc_CFX_DivBypass, -1, (llvm::InstrStage::ReservationKinds)0 }, // 226-228
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE500mcItinerariesFU::E500mc_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 229-230
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 68, PPCE500mcItinerariesFU::E500mc_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 231-232
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE500mcItinerariesFU::E500mc_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 233-234
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 38, PPCE500mcItinerariesFU::E500mc_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 235-236
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 3, PPCE500mcItinerariesFU::E500mc_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 237-238
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_SFX0 | PPCE500mcItinerariesFU::E500mc_SFX1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 239-241
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 5, PPCE500mcItinerariesFU::E500mc_SFX0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 242-243
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 8, PPCE500mcItinerariesFU::E500mc_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 244-245
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE500mcItinerariesFU::E500mc_SFX0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 246-247
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE500mcItinerariesFU::E500mc_SFX0 | PPCE500mcItinerariesFU::E500mc_SFX1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 248-249
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_SFX0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 250-251
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_CFX_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 252-253
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE500mcItinerariesFU::E500mc_LSU_0, 0, (llvm::InstrStage::ReservationKinds)0 }, // 254-255
  { 1, PPCE500mcItinerariesFU::E500mc_DIS0 | PPCE500mcItinerariesFU::E500mc_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE500mcItinerariesFU::E500mc_SFX0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 256-257
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 258-259
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_SFX0 | PPCE5500ItinerariesFU::E5500_SFX1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 260-261
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_BU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 262-263
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_0, 0, (llvm::InstrStage::ReservationKinds)0 },   { 26, PPCE5500ItinerariesFU::E5500_CFX_DivBypass, -1, (llvm::InstrStage::ReservationKinds)0 }, // 264-266
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_0, 0, (llvm::InstrStage::ReservationKinds)0 },   { 16, PPCE5500ItinerariesFU::E5500_CFX_DivBypass, -1, (llvm::InstrStage::ReservationKinds)0 }, // 267-269
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 270-271
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 31, PPCE5500ItinerariesFU::E5500_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 272-273
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 16, PPCE5500ItinerariesFU::E5500_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 274-275
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 3, PPCE5500ItinerariesFU::E5500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 276-277
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_SFX0 | PPCE5500ItinerariesFU::E5500_SFX1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 278-280
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE5500ItinerariesFU::E5500_LSU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 281-282
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_0, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE5500ItinerariesFU::E5500_CFX_1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 283-285
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 286-287
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 5, PPCE5500ItinerariesFU::E5500_CFX_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 288-289
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 4, PPCE5500ItinerariesFU::E5500_CFX_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 290-291
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 7, PPCE5500ItinerariesFU::E5500_FPU_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 292-293
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE5500ItinerariesFU::E5500_CFX_0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 294-295
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_0, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_CFX_1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 296-298
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE5500ItinerariesFU::E5500_SFX0 | PPCE5500ItinerariesFU::E5500_SFX1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 299-300
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, PPCE5500ItinerariesFU::E5500_LSU_0, 0, (llvm::InstrStage::ReservationKinds)0 }, // 301-302
  { 1, PPCE5500ItinerariesFU::E5500_DIS0 | PPCE5500ItinerariesFU::E5500_DIS1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 2, PPCE5500ItinerariesFU::E5500_SFX0, -1, (llvm::InstrStage::ReservationKinds)0 }, // 303-304
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2 | P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 305-306
  { 1, P8ItinerariesFU::P8_DU7 | P8ItinerariesFU::P8_DU8, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_BRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 307-308
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FPU1 | P8ItinerariesFU::P8_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 309-310
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 311-312
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_CRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 313-314
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 315-316
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 23, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 317-318
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 15, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 319-320
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FPU1 | P8ItinerariesFU::P8_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 321-322
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 323-325
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_BRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 326-328
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 329-333
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 334-337
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU5, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 338-344
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 345-346
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 347-350
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 351-354
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 355-359
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU5, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 360-368
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2 | P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 369-372
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_CRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 373-374
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 375-376
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU5, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 377-384
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2 | P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 385-388
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU5, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 389-397
  { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2 | P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2 | P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LU1 | P8ItinerariesFU::P8_LU2 | P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 398-400
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2 | P8ItinerariesFU::P8_DU3 | P8ItinerariesFU::P8_DU4 | P8ItinerariesFU::P8_DU5 | P8ItinerariesFU::P8_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FPU1 | P8ItinerariesFU::P8_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 401-403
  { 1, P8ItinerariesFU::P8_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_LSU1 | P8ItinerariesFU::P8_LSU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FXU1 | P8ItinerariesFU::P8_FXU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FPU1 | P8ItinerariesFU::P8_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 404-408
  { 1, P8ItinerariesFU::P8_DU1 | P8ItinerariesFU::P8_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P8ItinerariesFU::P8_FPU1 | P8ItinerariesFU::P8_FPU2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 409-410
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2 | P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 411-412
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 413-414
  { 1, P7ItinerariesFU::P7_DU5 | P7ItinerariesFU::P7_DU6, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_BRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 415-416
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS1 | P7ItinerariesFU::P7_VS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 417-418
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_CRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 419-420
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 421-422
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 68, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 423-425
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 36, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 426-428
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS1 | P7ItinerariesFU::P7_VS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 429-430
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 431-432
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 433-435
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_BRU, -1, (llvm::InstrStage::ReservationKinds)0 }, // 436-438
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 439-443
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 444-447
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 448-454
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 455-458
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 459-463
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 464-471
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_CRU, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 472-477
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1, -1, (llvm::InstrStage::ReservationKinds)0 }, // 478-479
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU3, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 480-486
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2 | P7ItinerariesFU::P7_DU3 | P7ItinerariesFU::P7_DU4, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS1 | P7ItinerariesFU::P7_VS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 487-489
  { 1, P7ItinerariesFU::P7_DU1, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_LS1 | P7ItinerariesFU::P7_LS2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_FX1 | P7ItinerariesFU::P7_FX2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS1 | P7ItinerariesFU::P7_VS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 490-494
  { 1, P7ItinerariesFU::P7_DU1 | P7ItinerariesFU::P7_DU2, 0, (llvm::InstrStage::ReservationKinds)0 },   { 1, P7ItinerariesFU::P7_VS2, -1, (llvm::InstrStage::ReservationKinds)0 }, // 495-496
  { 0, 0, 0, llvm::InstrStage::Required } // End stages
};
extern const unsigned PPCOperandCycles[] = {
  0, // No itinerary
  2,   0,   0, // 1-3
  2,   0,   0, // 4-6
  4,   0, // 7-8
  2,   0,   0, // 9-11
  2,   0,   0, // 12-14
  4,   0,   0, // 15-17
  1,   1, // 18-19
  5,   1,   1, // 20-22
  36,   0,   0, // 23-25
  6,   0,   0, // 26-28
  31,   0,   0, // 29-31
  6,   0,   0, // 32-34
  6,   0,   0, // 35-37
  1,   1,   1, // 38-40
  19,   0,   0, // 41-43
  6,   0,   0,   0, // 44-47
  4,   1,   1, // 48-50
  2,   0,   0,   0, // 51-54
  4,   1,   1, // 55-57
  5,   2,   1,   1, // 58-61
  5,   2,   1,   1, // 62-65
  5,   1,   1, // 66-68
  5,   2,   1,   1, // 69-72
  5,   2,   1,   1, // 73-76
  4,   1,   1, // 77-79
  4,   1,   1, // 80-82
  4,   1,   1, // 83-85
  4,   1,   1, // 86-88
  4,   0,   0, // 89-91
  4,   0,   0, // 92-94
  4,   0, // 95-96
  6,   0, // 97-98
  3,   0,   0, // 99-101
  3,   0, // 102-103
  2,   0, // 104-105
  6,   0, // 106-107
  6,   0, // 108-109
  3,   0,   0, // 110-112
  2,   0, // 113-114
  5,   0, // 115-116
  4,   0,   0, // 117-119
  4,   0,   0, // 120-122
  4,   0,   0, // 123-125
  4,   0, // 126-127
  2,   0,   0, // 128-130
  4,   1,   1, // 131-133
  2,   1,   1,   1, // 134-137
  2,   1,   1,   1, // 138-141
  4,   1,   1, // 142-144
  4,   1,   1, // 145-147
  1,   1,   1, // 148-150
  2,   1,   1,   1, // 151-154
  2,   0, // 155-156
  6,   0, // 157-158
  3,   0,   0, // 159-161
  3,   0,   0, // 162-164
  2,   0,   0, // 165-167
  2,   0, // 168-169
  6,   0,   0, // 170-172
  6,   0,   0, // 173-175
  2,   0,   0, // 176-178
  2,   0,   0, // 179-181
  2,   0,   0, // 182-184
  2,   0,   0, // 185-187
  4,   0,   0, // 188-190
  4,   0,   0, // 191-193
  4,   0, // 194-195
  6,   0, // 196-197
  5,   1,   1, // 198-200
  2,   0,   0, // 201-203
  4,   0,   0, // 204-206
  4,   0,   0, // 207-209
  2,   0,   0, // 210-212
  6,   0,   0, // 213-215
  2,   0,   0, // 216-218
  2,   0,   0,   0, // 219-222
  6,   0, // 223-224
  1,   1,   1, // 225-227
  5,   1,   1, // 228-230
  6,   0,   0, // 231-233
  4,   0,   0, // 234-236
  4,   0,   0, // 237-239
  4,   0,   0, // 240-242
  6,   0,   0, // 243-245
  6,   0,   0, // 246-248
  6,   0,   0,   0, // 249-252
  6,   0,   0, // 253-255
  4,   0,   0, // 256-258
  4,   0,   0, // 259-261
  6,   0,   0, // 262-264
  6,   0,   0, // 265-267
  6,   0,   0,   0, // 268-271
  5,   1,   1, // 272-274
  6,   0,   0, // 275-277
  5,   1,   1, // 278-280
  5,   1,   1, // 281-283
  5,   1,   1, // 284-286
  1,   1, // 287-288
  4,   1,   1, // 289-291
  5,   1,   1, // 292-294
  4,   1,   1, // 295-297
  4,   1,   1, // 298-300
  5,   1,   1, // 301-303
  5,   2,   1,   1, // 304-307
  5,   2,   1,   1, // 308-311
  6,   0, // 312-313
  4,   1,   1, // 314-316
  4,   1,   1, // 317-319
  4,   1,   1, // 320-322
  6,   0, // 323-324
  5,   1,   1, // 325-327
  5,   1,   1, // 328-330
  5,   1,   1, // 331-333
  5,   1,   1, // 334-336
  4,   1,   1, // 337-339
  4,   1,   1, // 340-342
  5,   1,   1, // 343-345
  1,   1,   1, // 346-348
  1,   1,   1, // 349-351
  4,   1,   1, // 352-354
  5,   1,   1, // 355-357
  4,   1,   1, // 358-360
  1,   1,   1, // 361-363
  1,   1,   1, // 364-366
  5,   1,   1, // 367-369
  6,   0, // 370-371
  2,   0,   0, // 372-374
  6,   0, // 375-376
  6,   0, // 377-378
  3,   0, // 379-380
  2,   0, // 381-382
  6,   0, // 383-384
  36,   0,   0, // 385-387
  36,   0,   0, // 388-390
  36,   0,   0, // 391-393
  36,   0,   0, // 394-396
  4,   0,   0, // 397-399
  2,   0,   0, // 400-402
  6,   0,   0, // 403-405
  4,   0,   0, // 406-408
  3,   0,   0, // 409-411
  3,   0,   0, // 412-414
  2,   0,   0, // 415-417
  2,   0,   0, // 418-420
  2,   0,   0, // 421-423
  3,   0,   0, // 424-426
  4,   0, // 427-428
  31,   0,   0, // 429-431
  31,   0,   0, // 432-434
  31,   0,   0, // 435-437
  19,   0,   0, // 438-440
  19,   0,   0, // 441-443
  19,   0,   0, // 444-446
  19,   0,   0, // 447-449
  31,   0,   0, // 450-452
  5,   2,   1,   1, // 453-456
  5,   2,   1,   1, // 457-460
  2,   1,   1,   1, // 461-464
  2,   1,   1,   1, // 465-468
  2,   1,   1,   1, // 469-472
  5,   2,   1,   1, // 473-476
  5,   2,   1,   1, // 477-480
  5,   2,   1,   1, // 481-484
  5,   2,   1,   1, // 485-488
  4,   0, // 489-490
  4,   0, // 491-492
  5,   1,   1, // 493-495
  1,   1,   1, // 496-498
  2,   0,   0, // 499-501
  5,   1,   1, // 502-504
  1,   1,   1, // 505-507
  4,   0, // 508-509
  4,   0, // 510-511
  5,   1,   1, // 512-514
  1,   1,   1, // 515-517
  5,   1,   1, // 518-520
  1,   1,   1, // 521-523
  2,   0, // 524-525
  5,   0, // 526-527
  6,   0, // 528-529
  6,   0, // 530-531
  2,   0,   0, // 532-534
  2,   0, // 535-536
  2,   0,   0, // 537-539
  1,   1, // 540-541
  6,   0,   0, // 542-544
  6,   0,   0, // 545-547
  6,   0,   0,   0, // 548-551
  6,   0,   0, // 552-554
  6,   0,   0,   0, // 555-558
  6,   0,   0, // 559-561
  4,   0, // 562-563
  4,   0, // 564-565
  4,   0, // 566-567
  4,   0, // 568-569
  2,   0,   0, // 570-572
  2,   0,   0, // 573-575
  36,   0,   0, // 576-578
  5,   1,   1, // 579-581
  2,   0, // 582-583
  2,   0,   0, // 584-586
  2,   0,   0, // 587-589
  6,   0,   0, // 590-592
  2,   0,   0, // 593-595
  6,   0,   0, // 596-598
  6,   0,   0, // 599-601
  2,   0,   0, // 602-604
  2,   0,   0, // 605-607
  4,   0,   0, // 608-610
  5,   1,   1, // 611-613
  6,   0, // 614-615
  2,   0,   0, // 616-618
  2,   0,   0, // 619-621
  2,   0,   0, // 622-624
  6,   0,   0, // 625-627
  2,   0,   0, // 628-630
  2,   0,   0, // 631-633
  2,   0,   0, // 634-636
  2,   0,   0, // 637-639
  2,   0,   0, // 640-642
  4,   0,   0, // 643-645
  2,   0,   0, // 646-648
  2,   0,   0, // 649-651
  5,   1,   1, // 652-654
  3,   0,   0, // 655-657
  6,   0, // 658-659
  2,   0,   0, // 660-662
  3,   0,   0, // 663-665
  2,   0,   0, // 666-668
  2,   0,   0, // 669-671
  2,   0,   0, // 672-674
  4,   0, // 675-676
  6,   0,   0, // 677-679
  4,   0, // 680-681
  2,   0,   0, // 682-684
  2,   0,   0, // 685-687
  3,   0,   0, // 688-690
  3,   0,   0, // 691-693
  5,   1,   1, // 694-696
  5,   1,   1, // 697-699
  1,   1, // 700-701
  5,   1,   1, // 702-704
  5,   1,   1, // 705-707
  5,   0, // 708-709
  2,   0,   0, // 710-712
  5,   1,   1, // 713-715
  5,   1,   1, // 716-718
  5,   1,   1, // 719-721
  2,   0, // 722-723
  6,   0, // 724-725
  2,   0,   0, // 726-728
  1,   1, // 729-730
  4,   1,   1, // 731-733
  1,   1, // 734-735
  5,   1,   1, // 736-738
  1,   1,   1, // 739-741
  4,   1,   1, // 742-744
  1,   1,   1, // 745-747
  5,   1,   1, // 748-750
  5,   1,   1, // 751-753
  5,   1,   1, // 754-756
  5,   1,   1, // 757-759
  4,   0, // 760-761
  1,   1, // 762-763
  5,   1,   1, // 764-766
  1,   1,   1, // 767-769
  4,   0, // 770-771
  4,   0, // 772-773
  5,   1,   1, // 774-776
  2,   0,   0, // 777-779
  6, // 780
  1,   0,   0, // 781-783
  2,   0,   0, // 784-786
  6,   0,   0, // 787-789
  2,   0,   0, // 790-792
  2,   0,   0, // 793-795
  1,   0,   0, // 796-798
  1,   0,   0, // 799-801
  6,   0,   0, // 802-804
  71,   0,   0, // 805-807
  39,   0,   0, // 808-810
  6,   0,   0, // 811-813
  72,   0,   0, // 814-816
  5,   0,   0, // 817-819
  6,   0,   0, // 820-822
  0,   0,   0, // 823-825
  2,   0,   0, // 826-828
  59,   0,   0, // 829-831
  6,   0,   0,   0, // 832-835
  69,   0,   0, // 836-838
  65,   0,   0, // 839-841
  16,   0,   0, // 842-844
  2,   0,   0,   0, // 845-848
  16, // 849
  82,   0,   0, // 850-852
  6,   8,   0,   0, // 853-856
  6,   8,   0,   0, // 857-860
  6,   0,   0, // 861-863
  6,   0,   0, // 864-866
  7,   0,   0, // 867-869
  7,   9,   0,   0, // 870-873
  7,   9,   0,   0, // 874-877
  6,   0,   0, // 878-880
  6,   8,   0,   0, // 881-884
  6,   8,   0,   0, // 885-888
  5,   0,   0, // 889-891
  1,   0,   0, // 892-894
  6,   0, // 895-896
  6,   0, // 897-898
  4,   0, // 899-900
  1,   0, // 901-902
  4,   0, // 903-904
  6,   0, // 905-906
  16,   0, // 907-908
  5,   0,   0, // 909-911
  5,   0,   0, // 912-914
  6,   0,   0, // 915-917
  16, // 918
  2,   0,   0, // 919-921
  2,   0,   0, // 922-924
  82,   0,   0, // 925-927
  2,   0,   0,   0, // 928-931
  2,   0,   0,   0, // 932-935
  0,   0,   0, // 936-938
  82,   0,   0, // 939-941
  0,   0,   0, // 942-944
  2,   0,   0,   0, // 945-948
  2,   0, // 949-950
  2,   0, // 951-952
  6,   0, // 953-954
  2,   0,   0, // 955-957
  2,   0, // 958-959
  2,   0, // 960-961
  5,   0,   0, // 962-964
  5,   0,   0, // 965-967
  2,   0,   0, // 968-970
  2,   0,   0, // 971-973
  2,   0,   0, // 974-976
  2,   0,   0, // 977-979
  2,   0,   0, // 980-982
  1,   0,   0, // 983-985
  5,   0,   0, // 986-988
  1,   0,   0, // 989-991
  6,   0,   0, // 992-994
  6,   0, // 995-996
  6,   0,   0, // 997-999
  2,   0,   0, // 1000-1002
  2,   0,   0, // 1003-1005
  2,   0,   0, // 1006-1008
  1,   0, // 1009-1010
  1,   0,   0, // 1011-1013
  1,   0,   0, // 1014-1016
  2,   0,   0, // 1017-1019
  6,   0,   0, // 1020-1022
  2,   0,   0, // 1023-1025
  2,   0,   0,   0, // 1026-1029
  6,   0, // 1030-1031
  0,   0,   0, // 1032-1034
  6,   0,   0, // 1035-1037
  5,   0,   0, // 1038-1040
  5,   0,   0, // 1041-1043
  5,   0,   0, // 1044-1046
  6,   0,   0, // 1047-1049
  6,   0,   0, // 1050-1052
  6,   0,   0, // 1053-1055
  6,   0,   0,   0, // 1056-1059
  6,   0,   0, // 1060-1062
  5,   0,   0, // 1063-1065
  5,   0,   0, // 1066-1068
  6,   0,   0, // 1069-1071
  6,   0,   0, // 1072-1074
  6,   0,   0,   0, // 1075-1078
  6,   0,   0, // 1079-1081
  5,   0,   0, // 1082-1084
  6,   0,   0, // 1085-1087
  6,   0,   0, // 1088-1090
  7,   0,   0, // 1091-1093
  1,   0,   0, // 1094-1096
  16,   0,   0, // 1097-1099
  6,   0,   0, // 1100-1102
  82,   0,   0, // 1103-1105
  16, // 1106
  6, // 1107
  7,   0,   0, // 1108-1110
  6,   8,   0,   0, // 1111-1114
  6,   8,   0,   0, // 1115-1118
  6,   0, // 1119-1120
  82,   0,   0, // 1121-1123
  82,   0,   0, // 1124-1126
  6,   0,   0, // 1127-1129
  6,   0, // 1130-1131
  7,   0,   0, // 1132-1134
  7,   0,   0, // 1135-1137
  7,   0,   0, // 1138-1140
  7,   0,   0, // 1141-1143
  6,   8,   0,   0, // 1144-1147
  6,   8,   0,   0, // 1148-1151
  7,   0,   0, // 1152-1154
  0,   0,   0, // 1155-1157
  0,   0,   0, // 1158-1160
  0,   0,   0, // 1161-1163
  6,   0,   0, // 1164-1166
  0,   0,   0, // 1167-1169
  0,   0,   0, // 1170-1172
  6,   0,   0, // 1173-1175
  6,   0, // 1176-1177
  2,   0,   0, // 1178-1180
  4,   0, // 1181-1182
  6,   0, // 1183-1184
  4,   0, // 1185-1186
  16,   0, // 1187-1188
  6,   0, // 1189-1190
  39,   0,   0, // 1191-1193
  39,   0,   0, // 1194-1196
  71,   0,   0, // 1197-1199
  71,   0,   0, // 1200-1202
  39,   0,   0, // 1203-1205
  71,   0,   0, // 1206-1208
  39,   0,   0, // 1209-1211
  71,   0,   0, // 1212-1214
  1,   0,   0, // 1215-1217
  2,   0,   0, // 1218-1220
  6,   0,   0, // 1221-1223
  5,   0,   0, // 1224-1226
  2,   0,   0, // 1227-1229
  2,   0,   0, // 1230-1232
  2,   0,   0, // 1233-1235
  2,   0,   0, // 1236-1238
  2,   0,   0, // 1239-1241
  6,   0, // 1242-1243
  2,   0,   0, // 1244-1246
  2,   0,   0, // 1247-1249
  72,   0,   0, // 1250-1252
  72,   0,   0, // 1253-1255
  69,   0,   0, // 1256-1258
  69,   0,   0, // 1259-1261
  69,   0,   0, // 1262-1264
  65,   0,   0, // 1265-1267
  69,   0,   0, // 1268-1270
  65,   0,   0, // 1271-1273
  65,   0,   0, // 1274-1276
  65,   0,   0, // 1277-1279
  72,   0,   0, // 1280-1282
  59,   0,   0, // 1283-1285
  59,   0,   0, // 1286-1288
  59,   0,   0, // 1289-1291
  59,   0,   0, // 1292-1294
  72,   0,   0, // 1295-1297
  7,   9,   0,   0, // 1298-1301
  7,   9,   0,   0, // 1302-1305
  2,   0,   0,   0, // 1306-1309
  2,   0,   0,   0, // 1310-1313
  2,   0,   0,   0, // 1314-1317
  6,   8,   0,   0, // 1318-1321
  6,   8,   0,   0, // 1322-1325
  6,   0,   0, // 1326-1328
  6,   0,   0, // 1329-1331
  7,   9,   0,   0, // 1332-1335
  7,   9,   0,   0, // 1336-1339
  6,   0,   0, // 1340-1342
  6,   0,   0, // 1343-1345
  6,   0,   0, // 1346-1348
  0,   0,   0, // 1349-1351
  1,   0,   0, // 1352-1354
  6,   0,   0, // 1355-1357
  0,   0,   0, // 1358-1360
  6,   0,   0, // 1361-1363
  16, // 1364
  6,   0,   0, // 1365-1367
  0,   0,   0, // 1368-1370
  7,   0,   0, // 1371-1373
  0,   0,   0, // 1374-1376
  6,   0, // 1377-1378
  6,   0, // 1379-1380
  1,   0,   0, // 1381-1383
  16,   0, // 1384-1385
  2,   0,   0, // 1386-1388
  6, // 1389
  1,   0,   0, // 1390-1392
  6,   0,   0, // 1393-1395
  6,   0,   0, // 1396-1398
  6,   0,   0,   0, // 1399-1402
  6,   0,   0, // 1403-1405
  6,   0,   0,   0, // 1406-1409
  6,   0,   0, // 1410-1412
  6,   0,   0, // 1413-1415
  6,   0,   0, // 1416-1418
  6,   0,   0, // 1419-1421
  6,   0,   0, // 1422-1424
  2,   0,   0, // 1425-1427
  2,   0,   0, // 1428-1430
  39,   0,   0, // 1431-1433
  6,   0,   0, // 1434-1436
  2,   0, // 1437-1438
  2,   0,   0, // 1439-1441
  2,   0,   0, // 1442-1444
  5,   0,   0, // 1445-1447
  2,   0,   0, // 1448-1450
  5,   0,   0, // 1451-1453
  5,   0,   0, // 1454-1456
  2,   0,   0, // 1457-1459
  2,   0,   0, // 1460-1462
  2,   0,   0, // 1463-1465
  2,   0,   0, // 1466-1468
  2,   0,   0, // 1469-1471
  2,   0,   0, // 1472-1474
  1,   0,   0, // 1475-1477
  6,   0,   0, // 1478-1480
  6,   0, // 1481-1482
  1,   0,   0, // 1483-1485
  1,   0,   0, // 1486-1488
  2,   0,   0, // 1489-1491
  6,   0,   0, // 1492-1494
  2,   0,   0, // 1495-1497
  2,   0,   0, // 1498-1500
  1,   0,   0, // 1501-1503
  2,   0,   0, // 1504-1506
  2,   0,   0, // 1507-1509
  1,   0,   0, // 1510-1512
  2,   0,   0, // 1513-1515
  2,   0,   0, // 1516-1518
  2,   0,   0, // 1519-1521
  6,   0,   0, // 1522-1524
  2,   0,   0, // 1525-1527
  6,   0, // 1528-1529
  2,   0,   0, // 1530-1532
  1,   0,   0, // 1533-1535
  2,   0,   0, // 1536-1538
  2,   0,   0, // 1539-1541
  6,   0,   0, // 1542-1544
  6,   0,   0, // 1545-1547
  6,   0,   0, // 1548-1550
  2,   0,   0, // 1551-1553
  2,   0,   0, // 1554-1556
  6,   0,   0, // 1557-1559
  7,   0,   0, // 1560-1562
  1,   0,   0, // 1563-1565
  6,   0,   0, // 1566-1568
  6,   0,   0, // 1569-1571
  2,   0,   0, // 1572-1574
  6,   0,   0, // 1575-1577
  7,   0,   0, // 1578-1580
  7,   0,   0, // 1581-1583
  4,   0, // 1584-1585
  2,   0,   0, // 1586-1588
  1,   0,   0, // 1589-1591
  16,   0,   0, // 1592-1594
  1,   0,   0, // 1595-1597
  7,   0,   0, // 1598-1600
  0,   0,   0, // 1601-1603
  0,   0,   0, // 1604-1606
  0,   0,   0, // 1607-1609
  6,   0,   0, // 1610-1612
  6,   0,   0, // 1613-1615
  7,   0,   0, // 1616-1618
  7,   0,   0, // 1619-1621
  6,   0,   0, // 1622-1624
  1,   0,   0, // 1625-1627
  6,   0,   0, // 1628-1630
  0,   0,   0, // 1631-1633
  6,   0,   0, // 1634-1636
  6,   0,   0, // 1637-1639
  7,   0,   0, // 1640-1642
  1,   0,   0, // 1643-1645
  4,   1,   1, // 1646-1648
  4,   1,   1, // 1649-1651
  4,   1, // 1652-1653
  4,   1,   1, // 1654-1656
  5,   1,   1, // 1657-1659
  4,   1,   1, // 1660-1662
  6,   1, // 1663-1664
  6,   1, // 1665-1666
  17,   1,   1, // 1667-1669
  9,   1,   1, // 1670-1672
  35,   1,   1, // 1673-1675
  7,   1,   1, // 1676-1678
  4,   1,   1, // 1679-1681
  7,   1,   1, // 1682-1684
  6,   1, // 1685-1686
  32,   1,   1, // 1687-1689
  6,   1, // 1690-1691
  4,   1,   1,   1, // 1692-1695
  6,   1,   1, // 1696-1698
  6,   1, // 1699-1700
  6,   1, // 1701-1702
  6,   1, // 1703-1704
  6,   1, // 1705-1706
  6,   1, // 1707-1708
  7,   1, // 1709-1710
  4,   1, // 1711-1712
  4,   1,   1, // 1713-1715
  8,   1, // 1716-1717
  4,   1, // 1718-1719
  7,   1, // 1720-1721
  8,   1, // 1722-1723
  7,   1, // 1724-1725
  7,   1, // 1726-1727
  7,   1, // 1728-1729
  4,   1, // 1730-1731
  5,   1, // 1732-1733
  4,   1, // 1734-1735
  5,   1, // 1736-1737
  7,   1,   1, // 1738-1740
  7,   1,   1, // 1741-1743
  7,   1,   1, // 1744-1746
  4,   1,   1, // 1747-1749
  6,   1, // 1750-1751
  6,   1, // 1752-1753
  6,   1, // 1754-1755
  5,   1, // 1756-1757
  4,   1,   1, // 1758-1760
  4,   1, // 1761-1762
  5,   1,   1, // 1763-1765
  5,   1, // 1766-1767
  4,   1,   1, // 1768-1770
  4,   1,   1, // 1771-1773
  5,   1,   1, // 1774-1776
  4,   1,   1, // 1777-1779
  4,   1,   1, // 1780-1782
  4,   1, // 1783-1784
  4,   1,   1, // 1785-1787
  4,   1, // 1788-1789
  4,   1, // 1790-1791
  6,   1, // 1792-1793
  4,   1,   1, // 1794-1796
  8,   1, // 1797-1798
  4,   1,   1, // 1799-1801
  4,   1,   1, // 1802-1804
  4,   1,   1, // 1805-1807
  4,   1,   1, // 1808-1810
  4,   1,   1,   1, // 1811-1814
  4,   1, // 1815-1816
  6,   1, // 1817-1818
  6,   1, // 1819-1820
  4,   1,   1, // 1821-1823
  4,   1,   1, // 1824-1826
  7,   1,   1, // 1827-1829
  7,   1,   1, // 1830-1832
  7,   1,   1, // 1833-1835
  7,   1,   1, // 1836-1838
  7,   1,   1, // 1839-1841
  6,   1, // 1842-1843
  4,   1,   1, // 1844-1846
  6,   1, // 1847-1848
  6,   1, // 1849-1850
  6,   1, // 1851-1852
  6,   1, // 1853-1854
  6,   1, // 1855-1856
  6,   1,   1, // 1857-1859
  7,   1, // 1860-1861
  6,   1, // 1862-1863
  6,   1, // 1864-1865
  4,   1, // 1866-1867
  6,   1, // 1868-1869
  6,   1, // 1870-1871
  4,   1, // 1872-1873
  6,   1, // 1874-1875
  6,   1, // 1876-1877
  6,   1, // 1878-1879
  6,   1, // 1880-1881
  7,   1, // 1882-1883
  6,   1, // 1884-1885
  6,   1, // 1886-1887
  4,   1, // 1888-1889
  4,   1,   1, // 1890-1892
  7,   1, // 1893-1894
  4,   1, // 1895-1896
  7,   1, // 1897-1898
  4,   1, // 1899-1900
  7,   1, // 1901-1902
  5,   1, // 1903-1904
  4,   1, // 1905-1906
  17,   1,   1, // 1907-1909
  17,   1,   1, // 1910-1912
  17,   1,   1, // 1913-1915
  17,   1,   1, // 1916-1918
  4,   1,   1, // 1919-1921
  4,   1,   1, // 1922-1924
  4,   1, // 1925-1926
  4,   1,   1, // 1927-1929
  4,   1,   1, // 1930-1932
  4,   1,   1, // 1933-1935
  8,   1, // 1936-1937
  35,   1,   1, // 1938-1940
  35,   1,   1, // 1941-1943
  35,   1,   1, // 1944-1946
  32,   1,   1, // 1947-1949
  32,   1,   1, // 1950-1952
  32,   1,   1, // 1953-1955
  32,   1,   1, // 1956-1958
  35,   1,   1, // 1959-1961
  6,   1, // 1962-1963
  6,   1, // 1964-1965
  6,   1, // 1966-1967
  6,   1, // 1968-1969
  4,   1, // 1970-1971
  4,   1, // 1972-1973
  6,   1, // 1974-1975
  6,   1, // 1976-1977
  4,   1,   1, // 1978-1980
  4,   1,   1, // 1981-1983
  7,   1,   1, // 1984-1986
  6,   1, // 1987-1988
  6,   1, // 1989-1990
  4,   1, // 1991-1992
  6,   1, // 1993-1994
  6,   1, // 1995-1996
  7,   1, // 1997-1998
  5,   1, // 1999-2000
  4,   1, // 2001-2002
  4,   1, // 2003-2004
  4,   1,   1, // 2005-2007
  5,   1, // 2008-2009
  4,   1,   1, // 2010-2012
  6,   1, // 2013-2014
  4,   1,   1, // 2015-2017
  4,   1, // 2018-2019
  4,   1, // 2020-2021
  4,   1, // 2022-2023
  4,   1, // 2024-2025
  4,   1,   1, // 2026-2028
  4,   1,   1, // 2029-2031
  4,   1,   1, // 2032-2034
  4,   1,   1, // 2035-2037
  4,   1,   1, // 2038-2040
  17,   1,   1, // 2041-2043
  4,   1,   1, // 2044-2046
  4,   1,   1, // 2047-2049
  4,   1,   1, // 2050-2052
  4,   1,   1, // 2053-2055
  4,   1,   1, // 2056-2058
  4,   1,   1, // 2059-2061
  4,   1,   1, // 2062-2064
  4,   1,   1, // 2065-2067
  6,   1, // 2068-2069
  5,   1, // 2070-2071
  4,   1,   1, // 2072-2074
  4,   1,   1, // 2075-2077
  4,   1,   1, // 2078-2080
  4,   1,   1, // 2081-2083
  4,   1,   1, // 2084-2086
  4,   1,   1, // 2087-2089
  5,   1,   1, // 2090-2092
  4,   1,   1, // 2093-2095
  4,   1,   1, // 2096-2098
  4,   1,   1, // 2099-2101
  6,   1, // 2102-2103
  4,   1, // 2104-2105
  4,   1,   1, // 2106-2108
  4,   1,   1, // 2109-2111
  4,   1,   1, // 2112-2114
  4,   1,   1, // 2115-2117
  4,   1,   1, // 2118-2120
  5,   1,   1, // 2121-2123
  4,   1,   1, // 2124-2126
  4,   1,   1, // 2127-2129
  4,   1,   1, // 2130-2132
  4,   1,   1, // 2133-2135
  4,   1,   1, // 2136-2138
  4,   1,   1, // 2139-2141
  4,   1,   1, // 2142-2144
  4,   1,   1, // 2145-2147
  4,   1,   1, // 2148-2150
  6,   1, // 2151-2152
  4,   1, // 2153-2154
  4,   1,   1, // 2155-2157
  4,   1,   1, // 2158-2160
  4,   1,   1, // 2161-2163
  4,   1,   1, // 2164-2166
  4,   1, // 2167-2168
  4,   1, // 2169-2170
  4,   1,   1, // 2171-2173
  4,   1,   1, // 2174-2176
  4,   1,   1, // 2177-2179
  6,   1, // 2180-2181
  6,   1, // 2182-2183
  6,   1, // 2184-2185
  6,   1, // 2186-2187
  5,   1, // 2188-2189
  4,   1,   1, // 2190-2192
  6,   1, // 2193-2194
  7,   1, // 2195-2196
  7,   1, // 2197-2198
  4,   1,   1, // 2199-2201
  4,   1,   1, // 2202-2204
  4,   1,   1, // 2205-2207
  4,   1,   1, // 2208-2210
  4,   1,   1, // 2211-2213
  4,   1,   1, // 2214-2216
  4,   1,   1, // 2217-2219
  4,   1,   1, // 2220-2222
  4,   1,   1, // 2223-2225
  4,   1,   1, // 2226-2228
  4,   1,   1, // 2229-2231
  4,   1,   1, // 2232-2234
  4,   1,   1, // 2235-2237
  4,   1,   1, // 2238-2240
  4,   1,   1, // 2241-2243
  6,   1, // 2244-2245
  6,   1, // 2246-2247
  6,   1, // 2248-2249
  6,   1, // 2250-2251
  6,   1, // 2252-2253
  6,   1, // 2254-2255
  4,   1, // 2256-2257
  6,   1, // 2258-2259
  6,   1, // 2260-2261
  6,   1, // 2262-2263
  4,   1, // 2264-2265
  4,   1, // 2266-2267
  4,   1,   1, // 2268-2270
  4,   1,   1, // 2271-2273
  4,   1,   1, // 2274-2276
  4,   1,   1, // 2277-2279
  4,   1,   1, // 2280-2282
  4,   1, // 2283-2284
  4,   1,   1, // 2285-2287
  5,   1,   1, // 2288-2290
  4,   1,   1, // 2291-2293
  6,   1, // 2294-2295
  6,   1, // 2296-2297
  17,   1,   1, // 2298-2300
  13,   1,   1, // 2301-2303
  71,   1,   1, // 2304-2306
  11,   1,   1, // 2307-2309
  11,   1,   1, // 2310-2312
  6,   1, // 2313-2314
  41,   1,   1, // 2315-2317
  13,   1,   1,   1, // 2318-2321
  6,   1, // 2322-2323
  4,   1,   1,   1, // 2324-2327
  6,   1,   1, // 2328-2330
  6,   1, // 2331-2332
  6,   1, // 2333-2334
  7,   1,   1, // 2335-2337
  7,   1,   1, // 2338-2340
  7,   1,   1, // 2341-2343
  6,   1, // 2344-2345
  6,   1, // 2346-2347
  6,   1, // 2348-2349
  7,   1, // 2350-2351
  4,   1, // 2352-2353
  4,   1,   1, // 2354-2356
  8,   1, // 2357-2358
  4,   1, // 2359-2360
  11, // 2361
  7,   1, // 2362-2363
  8,   1, // 2364-2365
  7,   1, // 2366-2367
  7,   1, // 2368-2369
  7,   1, // 2370-2371
  4,   1, // 2372-2373
  11,   1,   1, // 2374-2376
  5,   1, // 2377-2378
  4,   1, // 2379-2380
  5,   1, // 2381-2382
  7,   1,   1, // 2383-2385
  7,   1,   1, // 2386-2388
  7,   1,   1, // 2389-2391
  4,   1,   1, // 2392-2394
  6,   1, // 2395-2396
  6,   1, // 2397-2398
  6,   1, // 2399-2400
  6,   1,   1, // 2401-2403
  6,   1,   1, // 2404-2406
  5,   1, // 2407-2408
  4,   1, // 2409-2410
  11,   1,   1, // 2411-2413
  11, // 2414
  5,   1,   1, // 2415-2417
  5,   1, // 2418-2419
  11,   1,   1, // 2420-2422
  11,   1,   1, // 2423-2425
  4,   1,   1, // 2426-2428
  5,   1,   1, // 2429-2431
  4,   1,   1, // 2432-2434
  4,   1,   1, // 2435-2437
  4,   1, // 2438-2439
  4,   1,   1, // 2440-2442
  4,   1, // 2443-2444
  4,   1, // 2445-2446
  6,   1, // 2447-2448
  4,   1,   1, // 2449-2451
  8,   1, // 2452-2453
  4,   1,   1, // 2454-2456
  4,   1,   1, // 2457-2459
  4,   1,   1, // 2460-2462
  11,   1,   1, // 2463-2465
  4,   1,   1, // 2466-2468
  4,   1,   1,   1, // 2469-2472
  4,   1, // 2473-2474
  6,   1, // 2475-2476
  6,   1, // 2477-2478
  11,   1,   1, // 2479-2481
  7,   1,   1, // 2482-2484
  7,   1,   1, // 2485-2487
  7,   1,   1, // 2488-2490
  11,   1,   1, // 2491-2493
  13,   1,   1, // 2494-2496
  13,   1,   1,   1, // 2497-2500
  11,   1,   1, // 2501-2503
  7,   1,   1, // 2504-2506
  7,   1,   1, // 2507-2509
  11,   1,   1, // 2510-2512
  13,   1,   1, // 2513-2515
  13,   1,   1,   1, // 2516-2519
  6,   1, // 2520-2521
  11,   1,   1, // 2522-2524
  6,   1, // 2525-2526
  6,   1, // 2527-2528
  7,   1,   1, // 2529-2531
  6,   1, // 2532-2533
  6,   1, // 2534-2535
  6,   1, // 2536-2537
  6,   1,   1, // 2538-2540
  7,   1, // 2541-2542
  7,   1,   1, // 2543-2545
  6,   1, // 2546-2547
  6,   1, // 2548-2549
  4,   1, // 2550-2551
  6,   1, // 2552-2553
  6,   1, // 2554-2555
  4,   1, // 2556-2557
  7,   1,   1, // 2558-2560
  7,   1,   1, // 2561-2563
  7,   1,   1, // 2564-2566
  7,   1,   1, // 2567-2569
  6,   1, // 2570-2571
  6,   1, // 2572-2573
  7,   1,   1, // 2574-2576
  6,   1,   1, // 2577-2579
  6,   1, // 2580-2581
  6,   1, // 2582-2583
  7,   1, // 2584-2585
  6,   1, // 2586-2587
  6,   1,   1, // 2588-2590
  6,   1, // 2591-2592
  4,   1, // 2593-2594
  4,   1,   1, // 2595-2597
  7,   1, // 2598-2599
  4,   1, // 2600-2601
  7,   1, // 2602-2603
  4,   1, // 2604-2605
  7,   1, // 2606-2607
  5,   1, // 2608-2609
  4,   1, // 2610-2611
  17,   1,   1, // 2612-2614
  17,   1,   1, // 2615-2617
  17,   1,   1, // 2618-2620
  17,   1,   1, // 2621-2623
  4,   1,   1, // 2624-2626
  4,   1,   1, // 2627-2629
  11,   1,   1, // 2630-2632
  4,   1, // 2633-2634
  11, // 2635
  11,   1,   1, // 2636-2638
  4,   1,   1, // 2639-2641
  4,   1,   1, // 2642-2644
  4,   1,   1, // 2645-2647
  11, // 2648
  8,   1, // 2649-2650
  71,   1,   1, // 2651-2653
  71,   1,   1, // 2654-2656
  71,   1,   1, // 2657-2659
  41,   1,   1, // 2660-2662
  41,   1,   1, // 2663-2665
  41,   1,   1, // 2666-2668
  41,   1,   1, // 2669-2671
  71,   1,   1, // 2672-2674
  7,   1,   1, // 2675-2677
  7,   1,   1, // 2678-2680
  6,   1,   1, // 2681-2683
  6,   1, // 2684-2685
  6,   1, // 2686-2687
  6,   1, // 2688-2689
  6,   1, // 2690-2691
  7,   1,   1, // 2692-2694
  7,   1,   1, // 2695-2697
  4,   1, // 2698-2699
  4,   1, // 2700-2701
  6,   1, // 2702-2703
  6,   1, // 2704-2705
  4,   1,   1, // 2706-2708
  6,   1, // 2709-2710
  6,   1, // 2711-2712
  4,   1, // 2713-2714
  6,   1, // 2715-2716
  6,   1, // 2717-2718
  7,   1,   1, // 2719-2721
  6,   1,   1, // 2722-2724
  7,   1, // 2725-2726
  5,   1, // 2727-2728
  4,   1, // 2729-2730
  4,   1, // 2731-2732
  4,   1,   1, // 2733-2735
  5,   1, // 2736-2737
  4,   1,   1, // 2738-2740
  6,   1, // 2741-2742
  11,   1,   1, // 2743-2745
  11,   1,   1, // 2746-2748
  13,   1,   1,   1, // 2749-2752
  11,   1,   1, // 2753-2755
  13,   1,   1,   1, // 2756-2759
  11,   1,   1, // 2760-2762
  4,   1, // 2763-2764
  4,   1, // 2765-2766
  4,   1, // 2767-2768
  4,   1, // 2769-2770
  4,   1,   1, // 2771-2773
  4,   1,   1, // 2774-2776
  17,   1,   1, // 2777-2779
  6,   1, // 2780-2781
  5,   1, // 2782-2783
  4,   1,   1, // 2784-2786
  4,   1,   1, // 2787-2789
  11,   1,   1, // 2790-2792
  4,   1,   1, // 2793-2795
  11,   1,   1, // 2796-2798
  11,   1,   1, // 2799-2801
  5,   1,   1, // 2802-2804
  4,   1,   1, // 2805-2807
  4,   1,   1, // 2808-2810
  6,   1, // 2811-2812
  4,   1, // 2813-2814
  4,   1,   1, // 2815-2817
  4,   1,   1, // 2818-2820
  4,   1,   1, // 2821-2823
  11,   1,   1, // 2824-2826
  4,   1,   1, // 2827-2829
  5,   1,   1, // 2830-2832
  4,   1,   1, // 2833-2835
  4,   1,   1, // 2836-2838
  4,   1,   1, // 2839-2841
  4,   1,   1, // 2842-2844
  4,   1,   1, // 2845-2847
  4,   1,   1, // 2848-2850
  6,   1, // 2851-2852
  11, // 2853
  4,   1, // 2854-2855
  4,   1,   1, // 2856-2858
  11,   1,   1, // 2859-2861
  4,   1,   1, // 2862-2864
  4,   1,   1, // 2865-2867
  4,   1,   1, // 2868-2870
  4,   1, // 2871-2872
  11,   1,   1, // 2873-2875
  4,   1, // 2876-2877
  4,   1,   1, // 2878-2880
  4,   1,   1, // 2881-2883
  11, // 2884
  11, // 2885
  6,   1, // 2886-2887
  7,   1,   1, // 2888-2890
  6,   1, // 2891-2892
  6,   1, // 2893-2894
  6,   1, // 2895-2896
  5,   1, // 2897-2898
  4,   1,   1, // 2899-2901
  6,   1, // 2902-2903
  7,   1,   1, // 2904-2906
  7,   1,   1, // 2907-2909
  7,   1, // 2910-2911
  7,   1, // 2912-2913
  4,   1,   1, // 2914-2916
  6,   1, // 2917-2918
  6,   1, // 2919-2920
  6,   1, // 2921-2922
  7,   1,   1, // 2923-2925
  6,   1, // 2926-2927
  6,   1,   1, // 2928-2930
  6,   1, // 2931-2932
  6,   1, // 2933-2934
  7,   1,   1, // 2935-2937
  7,   1,   1, // 2938-2940
  4,   1, // 2941-2942
  6,   1, // 2943-2944
  6,   1, // 2945-2946
  6,   1, // 2947-2948
  4,   1, // 2949-2950
  4,   1, // 2951-2952
  7,   1,   1, // 2953-2955
  4,   1,   1, // 2956-2958
  5,   2,   2, // 2959-2961
  5,   2,   2, // 2962-2964
  5,   2, // 2965-2966
  5,   2,   2, // 2967-2969
  6,   2,   2, // 2970-2972
  5,   2,   2, // 2973-2975
  7,   2, // 2976-2977
  7,   2, // 2978-2979
  7,   2, // 2980-2981
  30,   2,   2, // 2982-2984
  20,   2,   2, // 2985-2987
  11,   2,   2, // 2988-2990
  39,   2,   2, // 2991-2993
  11,   2,   2, // 2994-2996
  11,   2,   2, // 2997-2999
  7,   2, // 3000-3001
  5,   2,   2, // 3002-3004
  24,   2,   2, // 3005-3007
  11,   2,   2,   2, // 3008-3011
  7,   2, // 3012-3013
  5,   2,   2,   2, // 3014-3017
  7,   2,   2, // 3018-3020
  7,   2, // 3021-3022
  7,   2, // 3023-3024
  7,   2, // 3025-3026
  7,   2, // 3027-3028
  7,   2, // 3029-3030
  8,   2,   2, // 3031-3033
  8,   2,   2, // 3034-3036
  8,   2,   2, // 3037-3039
  7,   2, // 3040-3041
  7,   2, // 3042-3043
  7,   2, // 3044-3045
  8,   2, // 3046-3047
  9,   2,   2, // 3048-3050
  5,   2, // 3051-3052
  5,   2,   2, // 3053-3055
  9,   2, // 3056-3057
  5, // 3058
  11, // 3059
  9,   2, // 3060-3061
  8,   2, // 3062-3063
  8,   2, // 3064-3065
  5, // 3066
  11,   2,   2, // 3067-3069
  6,   2, // 3070-3071
  5, // 3072
  8,   2,   2, // 3073-3075
  8,   2,   2, // 3076-3078
  8,   2,   2, // 3079-3081
  6,   2,   2, // 3082-3084
  6,   2,   2, // 3085-3087
  7,   2, // 3088-3089
  7,   2, // 3090-3091
  7,   2, // 3092-3093
  7,   2, // 3094-3095
  7,   2, // 3096-3097
  7,   2,   2, // 3098-3100
  7,   2,   2, // 3101-3103
  6,   2, // 3104-3105
  5, // 3106
  11,   2,   2, // 3107-3109
  11, // 3110
  6,   2,   2, // 3111-3113
  6,   2, // 3114-3115
  11,   2,   2, // 3116-3118
  11,   2,   2, // 3119-3121
  5,   2,   2, // 3122-3124
  6,   2,   2, // 3125-3127
  5,   2,   2, // 3128-3130
  6,   2,   2, // 3131-3133
  5,   2,   2, // 3134-3136
  5,   2,   2, // 3137-3139
  5,   2, // 3140-3141
  5,   2,   2, // 3142-3144
  5,   2, // 3145-3146
  5, // 3147
  7,   2, // 3148-3149
  6,   2,   2, // 3150-3152
  5,   2,   2, // 3153-3155
  5,   2,   2, // 3156-3158
  9,   2, // 3159-3160
  5,   2,   2, // 3161-3163
  5,   2,   2, // 3164-3166
  5,   2,   2, // 3167-3169
  11,   2,   2, // 3170-3172
  6,   2,   2, // 3173-3175
  5,   2,   2,   2, // 3176-3179
  5, // 3180
  7,   2, // 3181-3182
  7,   2, // 3183-3184
  11,   2,   2, // 3185-3187
  9,   2,   2, // 3188-3190
  8,   2,   2, // 3191-3193
  8,   2,   2, // 3194-3196
  8,   2,   2, // 3197-3199
  11,   2,   2, // 3200-3202
  11,   2,   2, // 3203-3205
  11,   2,   2,   2, // 3206-3209
  11,   2,   2, // 3210-3212
  8,   2,   2, // 3213-3215
  8,   2,   2, // 3216-3218
  9,   2,   2, // 3219-3221
  11,   2,   2, // 3222-3224
  11,   2,   2, // 3225-3227
  11,   2,   2,   2, // 3228-3231
  7,   2, // 3232-3233
  11,   2,   2, // 3234-3236
  7,   2, // 3237-3238
  7,   2, // 3239-3240
  8,   2,   2, // 3241-3243
  7,   2, // 3244-3245
  7,   2, // 3246-3247
  7,   2, // 3248-3249
  7,   2,   2, // 3250-3252
  7,   2, // 3253-3254
  7,   2, // 3255-3256
  8,   2, // 3257-3258
  8,   2,   2, // 3259-3261
  7,   2, // 3262-3263
  7,   2, // 3264-3265
  5, // 3266
  7,   2, // 3267-3268
  7,   2, // 3269-3270
  7,   2, // 3271-3272
  5, // 3273
  8,   2,   2, // 3274-3276
  8,   2,   2, // 3277-3279
  8,   2,   2, // 3280-3282
  8,   2,   2, // 3283-3285
  7,   2, // 3286-3287
  7,   2, // 3288-3289
  8,   2,   2, // 3290-3292
  7,   2,   2, // 3293-3295
  7,   2, // 3296-3297
  7,   2, // 3298-3299
  7,   2, // 3300-3301
  8,   2, // 3302-3303
  7,   2, // 3304-3305
  7,   2,   2, // 3306-3308
  7,   2, // 3309-3310
  5, // 3311
  5,   2,   2, // 3312-3314
  8,   2, // 3315-3316
  5, // 3317
  8,   2, // 3318-3319
  5, // 3320
  6,   2, // 3321-3322
  5, // 3323
  20,   2,   2, // 3324-3326
  20,   2,   2, // 3327-3329
  30,   2,   2, // 3330-3332
  30,   2,   2, // 3333-3335
  20,   2,   2, // 3336-3338
  30,   2,   2, // 3339-3341
  20,   2,   2, // 3342-3344
  30,   2,   2, // 3345-3347
  5,   2,   2, // 3348-3350
  5,   2,   2, // 3351-3353
  11,   2,   2, // 3354-3356
  5,   2, // 3357-3358
  11, // 3359
  11,   2,   2, // 3360-3362
  6,   2,   2, // 3363-3365
  5,   2,   2, // 3366-3368
  5,   2,   2, // 3369-3371
  5,   2,   2, // 3372-3374
  6,   2,   2, // 3375-3377
  11, // 3378
  9,   2, // 3379-3380
  5,   2,   2, // 3381-3383
  6,   2,   2, // 3384-3386
  39,   2,   2, // 3387-3389
  39,   2,   2, // 3390-3392
  39,   2,   2, // 3393-3395
  24,   2,   2, // 3396-3398
  24,   2,   2, // 3399-3401
  24,   2,   2, // 3402-3404
  24,   2,   2, // 3405-3407
  39,   2,   2, // 3408-3410
  8,   2,   2, // 3411-3413
  8,   2,   2, // 3414-3416
  7,   2,   2, // 3417-3419
  7,   2, // 3420-3421
  7,   2, // 3422-3423
  7,   2, // 3424-3425
  7,   2, // 3426-3427
  7,   2, // 3428-3429
  7,   2, // 3430-3431
  8,   2,   2, // 3432-3434
  8,   2,   2, // 3435-3437
  5,   2, // 3438-3439
  5,   2, // 3440-3441
  7,   2, // 3442-3443
  7,   2, // 3444-3445
  5,   2,   2, // 3446-3448
  7,   2, // 3449-3450
  7,   2, // 3451-3452
  5,   2, // 3453-3454
  7,   2, // 3455-3456
  7,   2, // 3457-3458
  8,   2,   2, // 3459-3461
  7,   2,   2, // 3462-3464
  5, // 3465
  5, // 3466
  5,   2,   2, // 3467-3469
  6,   2, // 3470-3471
  5,   2,   2, // 3472-3474
  7,   2, // 3475-3476
  11,   2,   2, // 3477-3479
  11,   2,   2, // 3480-3482
  11,   2,   2,   2, // 3483-3486
  11,   2,   2, // 3487-3489
  11,   2,   2,   2, // 3490-3493
  11,   2,   2, // 3494-3496
  5,   2, // 3497-3498
  5,   2, // 3499-3500
  5,   2, // 3501-3502
  5,   2, // 3503-3504
  5,   2,   2, // 3505-3507
  5,   2,   2, // 3508-3510
  20,   2,   2, // 3511-3513
  7,   2, // 3514-3515
  6,   2, // 3516-3517
  5,   2,   2, // 3518-3520
  5,   2,   2, // 3521-3523
  11,   2,   2, // 3524-3526
  5,   2,   2, // 3527-3529
  11,   2,   2, // 3530-3532
  11,   2,   2, // 3533-3535
  6,   2,   2, // 3536-3538
  5,   2,   2, // 3539-3541
  6,   2,   2, // 3542-3544
  5,   2,   2, // 3545-3547
  5,   2,   2, // 3548-3550
  5,   2,   2, // 3551-3553
  5,   2,   2, // 3554-3556
  7,   2, // 3557-3558
  5, // 3559
  5,   2,   2, // 3560-3562
  5,   2,   2, // 3563-3565
  5,   2,   2, // 3566-3568
  11,   2,   2, // 3569-3571
  5,   2,   2, // 3572-3574
  6,   2,   2, // 3575-3577
  5,   2,   2, // 3578-3580
  5,   2,   2, // 3581-3583
  5,   2,   2, // 3584-3586
  5,   2,   2, // 3587-3589
  5,   2,   2, // 3590-3592
  5,   2,   2, // 3593-3595
  5,   2,   2, // 3596-3598
  7,   2, // 3599-3600
  5,   2,   2, // 3601-3603
  11, // 3604
  5, // 3605
  5,   2,   2, // 3606-3608
  11,   2,   2, // 3609-3611
  5,   2,   2, // 3612-3614
  5,   2,   2, // 3615-3617
  5,   2,   2, // 3618-3620
  5,   2, // 3621-3622
  11,   2,   2, // 3623-3625
  5,   2, // 3626-3627
  5,   2,   2, // 3628-3630
  5,   2,   2, // 3631-3633
  11, // 3634
  11, // 3635
  7,   2, // 3636-3637
  7,   2, // 3638-3639
  8,   2,   2, // 3640-3642
  7,   2, // 3643-3644
  7,   2, // 3645-3646
  7,   2, // 3647-3648
  7,   2, // 3649-3650
  5,   2,   2, // 3651-3653
  7,   2, // 3654-3655
  8,   2,   2, // 3656-3658
  8,   2,   2, // 3659-3661
  8,   2, // 3662-3663
  9,   2,   2, // 3664-3666
  5,   2,   2, // 3667-3669
  7,   2, // 3670-3671
  7,   2, // 3672-3673
  7,   2, // 3674-3675
  8,   2,   2, // 3676-3678
  7,   2, // 3679-3680
  7,   2, // 3681-3682
  7,   2,   2, // 3683-3685
  7,   2, // 3686-3687
  7,   2, // 3688-3689
  8,   2,   2, // 3690-3692
  8,   2,   2, // 3693-3695
  5,   2, // 3696-3697
  7,   2, // 3698-3699
  7,   2, // 3700-3701
  7,   2, // 3702-3703
  5,   2, // 3704-3705
  5,   2, // 3706-3707
  8,   2,   2, // 3708-3710
  5,   2,   2, // 3711-3713
  1,   1,   1, // 3714-3716
  1,   1,   1, // 3717-3719
  3,   1,   1, // 3720-3722
  6,   1,   1, // 3723-3725
  1,   1,   1, // 3726-3728
  1,   1,   1, // 3729-3731
  3,   1,   1, // 3732-3734
  2,   1,   1, // 3735-3737
  2,   1,   1, // 3738-3740
  23,   1,   1, // 3741-3743
  15,   1,   1, // 3744-3746
  5,   1,   1, // 3747-3749
  33,   1,   1, // 3750-3752
  8,   1,   1, // 3753-3755
  5,   1,   1, // 3756-3758
  2,   1,   1, // 3759-3761
  7,   1,   1, // 3762-3764
  1,   1,   1, // 3765-3767
  1,   1,   1, // 3768-3770
  27,   1,   1, // 3771-3773
  5,   1,   1,   1, // 3774-3777
  44,   1,   1, // 3778-3780
  32,   1,   1, // 3781-3783
  1,   1,   1,   1, // 3784-3787
  3,   1,   1, // 3788-3790
  2,   2,   1,   1, // 3791-3794
  3,   3,   1,   1, // 3795-3798
  3,   1,   1, // 3799-3801
  2,   2,   1,   1, // 3802-3805
  3,   3,   1,   1, // 3806-3809
  3,   1,   1, // 3810-3812
  3,   3,   1,   1, // 3813-3816
  3,   3,   1,   1, // 3817-3820
  3,   1,   1, // 3821-3823
  4,   4,   1,   1, // 3824-3827
  4,   4,   1,   1, // 3828-3831
  2,   1,   1, // 3832-3834
  3,   1,   1, // 3835-3837
  4,   1,   1, // 3838-3840
  3,   1,   1, // 3841-3843
  3,   1, // 3844-3845
  6,   1, // 3846-3847
  3,   1, // 3848-3849
  4,   1, // 3850-3851
  4,   1,   1, // 3852-3854
  4,   1,   1, // 3855-3857
  4,   1,   1, // 3858-3860
  1,   1,   1, // 3861-3863
  1,   1,   1, // 3864-3866
  1,   1,   1, // 3867-3869
  2,   1,   1,   1, // 3870-3873
  2,   1,   1,   1, // 3874-3877
  1,   1,   1, // 3878-3880
  1,   1,   1, // 3881-3883
  2,   1,   1,   1, // 3884-3887
  1,   1, // 3888-3889
  1,   1, // 3890-3891
  6,   1,   1, // 3892-3894
  3,   1,   1, // 3895-3897
  2,   1,   1, // 3898-3900
  6,   1,   1, // 3901-3903
  3,   1,   1, // 3904-3906
  4,   1, // 3907-3908
  1,   1,   1, // 3909-3911
  1,   1, // 3912-3913
  1,   1, // 3914-3915
  8,   1,   1, // 3916-3918
  6,   1,   1, // 3919-3921
  6,   1,   1, // 3922-3924
  8,   1,   1, // 3925-3927
  1,   1,   1, // 3928-3930
  1,   1,   1, // 3931-3933
  1,   1,   1, // 3934-3936
  2,   1,   1, // 3937-3939
  1,   1,   1, // 3940-3942
  1,   1,   1, // 3943-3945
  1,   1,   1, // 3946-3948
  3,   1,   1, // 3949-3951
  3,   1, // 3952-3953
  6,   1,   1, // 3954-3956
  3,   1,   1, // 3957-3959
  4,   1, // 3960-3961
  2,   1,   1, // 3962-3964
  1,   1,   1, // 3965-3967
  1,   1,   1, // 3968-3970
  1,   1,   1, // 3971-3973
  3,   1, // 3974-3975
  3,   1, // 3976-3977
  3,   1,   1, // 3978-3980
  1,   1,   1, // 3981-3983
  5,   1,   1, // 3984-3986
  1,   1,   1, // 3987-3989
  1,   1,   1,   1, // 3990-3993
  6,   1,   1, // 3994-3996
  4,   1, // 3997-3998
  1,   1,   1, // 3999-4001
  2,   1,   1, // 4002-4004
  6,   1,   1, // 4005-4007
  2,   1,   1, // 4008-4010
  6,   1,   1, // 4011-4013
  8,   1,   1, // 4014-4016
  6,   1,   1, // 4017-4019
  2,   1,   1, // 4020-4022
  4,   1,   1, // 4023-4025
  4,   1,   1, // 4026-4028
  4,   1,   1, // 4029-4031
  4,   1,   1, // 4032-4034
  5,   1,   1, // 4035-4037
  5,   1,   1, // 4038-4040
  5,   1,   1,   1, // 4041-4044
  6,   1,   1, // 4045-4047
  5,   1,   1, // 4048-4050
  4,   1,   1, // 4051-4053
  4,   1,   1, // 4054-4056
  4,   1,   1, // 4057-4059
  5,   1,   1, // 4060-4062
  5,   1,   1, // 4063-4065
  5,   1,   1,   1, // 4066-4069
  6,   1,   1, // 4070-4072
  2,   1,   1, // 4073-4075
  3,   1,   1, // 4076-4078
  6,   1,   1, // 4079-4081
  2,   1,   1, // 4082-4084
  8,   1,   1, // 4085-4087
  6,   1,   1, // 4088-4090
  6,   1,   1, // 4091-4093
  6,   1,   1, // 4094-4096
  6,   1,   1, // 4097-4099
  6,   1,   1, // 4100-4102
  6,   1,   1, // 4103-4105
  2,   1,   1, // 4106-4108
  2,   1,   1, // 4109-4111
  3,   1,   1, // 4112-4114
  2,   1,   1, // 4115-4117
  3,   1,   1, // 4118-4120
  2,   1,   1, // 4121-4123
  3,   1,   1, // 4124-4126
  2,   1,   1, // 4127-4129
  3,   1,   1, // 4130-4132
  2,   2,   1,   1, // 4133-4136
  3,   3,   1,   1, // 4137-4140
  4,   1, // 4141-4142
  1,   1,   1, // 4143-4145
  1,   1,   1, // 4146-4148
  3,   1,   1, // 4149-4151
  3,   1,   1, // 4152-4154
  4,   1, // 4155-4156
  3,   1,   1, // 4157-4159
  3,   1,   1, // 4160-4162
  3,   1,   1, // 4163-4165
  3,   1,   1, // 4166-4168
  4,   4,   1,   1, // 4169-4172
  4,   4,   1,   1, // 4173-4176
  3,   1,   1, // 4177-4179
  1,   1,   1, // 4180-4182
  1,   1,   1, // 4183-4185
  2,   1,   1, // 4186-4188
  2,   1,   1, // 4189-4191
  1,   1,   1, // 4192-4194
  1,   1,   1, // 4195-4197
  2,   1,   1, // 4198-4200
  4,   1, // 4201-4202
  1,   1,   1, // 4203-4205
  4,   1, // 4206-4207
  15,   1,   1, // 4208-4210
  15,   1,   1, // 4211-4213
  23,   1,   1, // 4214-4216
  23,   1,   1, // 4217-4219
  15,   1,   1, // 4220-4222
  23,   1,   1, // 4223-4225
  15,   1,   1, // 4226-4228
  23,   1,   1, // 4229-4231
  3,   1, // 4232-4233
  1,   1,   1, // 4234-4236
  5,   1,   1, // 4237-4239
  3,   1,   1, // 4240-4242
  1,   1,   1, // 4243-4245
  1,   1,   1, // 4246-4248
  1,   1,   1, // 4249-4251
  1,   1,   1, // 4252-4254
  1,   1,   1, // 4255-4257
  6,   1, // 4258-4259
  1,   1,   1, // 4260-4262
  1,   1,   1, // 4263-4265
  33,   1,   1, // 4266-4268
  33,   1,   1, // 4269-4271
  44,   1,   1, // 4272-4274
  44,   1,   1, // 4275-4277
  44,   1,   1, // 4278-4280
  32,   1,   1, // 4281-4283
  44,   1,   1, // 4284-4286
  32,   1,   1, // 4287-4289
  32,   1,   1, // 4290-4292
  32,   1,   1, // 4293-4295
  33,   1,   1, // 4296-4298
  27,   1,   1, // 4299-4301
  27,   1,   1, // 4302-4304
  27,   1,   1, // 4305-4307
  27,   1,   1, // 4308-4310
  33,   1,   1, // 4311-4313
  3,   3,   1,   1, // 4314-4317
  3,   3,   1,   1, // 4318-4321
  2,   1,   1,   1, // 4322-4325
  2,   1,   1,   1, // 4326-4329
  2,   1,   1,   1, // 4330-4333
  2,   2,   1,   1, // 4334-4337
  3,   3,   1,   1, // 4338-4341
  2,   2,   1,   1, // 4342-4345
  3,   3,   1,   1, // 4346-4349
  3,   3,   1,   1, // 4350-4353
  3,   3,   1,   1, // 4354-4357
  6,   1,   1, // 4358-4360
  3,   1,   1, // 4361-4363
  3,   1,   1, // 4364-4366
  2,   1,   1, // 4367-4369
  1,   1,   1, // 4370-4372
  1,   1,   1, // 4373-4375
  2,   1,   1, // 4376-4378
  7,   1,   1, // 4379-4381
  2,   1,   1, // 4382-4384
  1,   1,   1, // 4385-4387
  3,   1,   1, // 4388-4390
  2,   1,   1, // 4391-4393
  1,   1,   1, // 4394-4396
  3,   1,   1, // 4397-4399
  1,   1,   1, // 4400-4402
  4,   1, // 4403-4404
  1,   1,   1, // 4405-4407
  1,   1,   1, // 4408-4410
  5,   1,   1, // 4411-4413
  6,   1,   1, // 4414-4416
  6,   1,   1, // 4417-4419
  6,   1,   1, // 4420-4422
  5,   1,   1, // 4423-4425
  5,   1,   1,   1, // 4426-4429
  6,   1,   1, // 4430-4432
  2,   1,   1, // 4433-4435
  6,   1,   1, // 4436-4438
  6,   1,   1, // 4439-4441
  6,   1,   1, // 4442-4444
  6,   1,   1, // 4445-4447
  5,   1,   1, // 4448-4450
  5,   1,   1,   1, // 4451-4454
  5,   1,   1, // 4455-4457
  3,   1,   1, // 4458-4460
  3,   1,   1, // 4461-4463
  3,   1,   1, // 4464-4466
  3,   1,   1, // 4467-4469
  6,   1,   1, // 4470-4472
  1,   1,   1, // 4473-4475
  2,   1,   1, // 4476-4478
  6,   1,   1, // 4479-4481
  6,   1,   1, // 4482-4484
  6,   1,   1, // 4485-4487
  1,   1,   1, // 4488-4490
  6,   1,   1, // 4491-4493
  2,   1,   1, // 4494-4496
  2,   1,   1, // 4497-4499
  15,   1,   1, // 4500-4502
  2,   1,   1, // 4503-4505
  2,   1,   1, // 4506-4508
  2,   1,   1, // 4509-4511
  2,   1,   1, // 4512-4514
  2,   1,   1, // 4515-4517
  2,   1,   1, // 4518-4520
  6,   1,   1, // 4521-4523
  6,   1,   1, // 4524-4526
  2,   1,   1, // 4527-4529
  6,   1,   1, // 4530-4532
  2,   1,   1, // 4533-4535
  6,   1,   1, // 4536-4538
  2,   1,   1, // 4539-4541
  1,   1, // 4542-4543
  1,   1,   1, // 4544-4546
  1,   1,   1, // 4547-4549
  8,   1,   1, // 4550-4552
  2,   1,   1, // 4553-4555
  1,   1,   1, // 4556-4558
  2,   1,   1, // 4559-4561
  2,   1,   1, // 4562-4564
  6,   1,   1, // 4565-4567
  8,   1,   1, // 4568-4570
  6,   1,   1, // 4571-4573
  8,   1,   1, // 4574-4576
  1,   1,   1, // 4577-4579
  1,   1,   1, // 4580-4582
  1,   1,   1, // 4583-4585
  1,   1,   1, // 4586-4588
  6,   1,   1, // 4589-4591
  6,   1,   1, // 4592-4594
  6,   1,   1, // 4595-4597
  2,   1,   1, // 4598-4600
  6,   1,   1, // 4601-4603
  1,   1,   1, // 4604-4606
  1,   1,   1, // 4607-4609
  6,   1,   1, // 4610-4612
  6,   1,   1, // 4613-4615
  6,   1,   1, // 4616-4618
  3,   1,   1, // 4619-4621
  2,   1,   1, // 4622-4624
  1,   1,   1, // 4625-4627
  6,   1,   1, // 4628-4630
  2,   1,   1, // 4631-4633
  1,   1,   1, // 4634-4636
  1,   1,   1, // 4637-4639
  5,   1,   1, // 4640-4642
  1,   1,   1, // 4643-4645
  1,   1,   1, // 4646-4648
  2,   1,   1, // 4649-4651
  2,   1,   1, // 4652-4654
  6,   1,   1, // 4655-4657
  6,   1,   1, // 4658-4660
  6,   1,   1, // 4661-4663
  1,   1,   1, // 4664-4666
  1,   1,   1, // 4667-4669
  1,   1,   1, // 4670-4672
  3,   1,   1, // 4673-4675
  1,   1,   1, // 4676-4678
  1,   1,   1, // 4679-4681
  2,   1,   1, // 4682-4684
  6,   1,   1, // 4685-4687
  6,   1,   1, // 4688-4690
  1,   1,   1, // 4691-4693
  2,   1,   1, // 4694-4696
  1,   1,   1, // 4697-4699
  4,   1, // 4700-4701
  1,   1,   1, // 4702-4704
  1,   1,   1, // 4705-4707
  1,   1,   1, // 4708-4710
  1,   1,   1, // 4711-4713
  3,   1,   1, // 4714-4716
  5,   1,   1, // 4717-4719
  3,   1,   1, // 4720-4722
  1,   1,   1, // 4723-4725
  1,   1,   1, // 4726-4728
  2,   1,   1, // 4729-4731
  2,   1,   1, // 4732-4734
  2,   1,   1, // 4735-4737
  3,   1,   1, // 4738-4740
  2,   1,   1, // 4741-4743
  2,   1,   1, // 4744-4746
  2,   1,   1, // 4747-4749
  1,   1,   1, // 4750-4752
  2,   1,   1, // 4753-4755
  3,   1,   1, // 4756-4758
  3,   1,   1, // 4759-4761
  2,   1,   1, // 4762-4764
  6,   1,   1, // 4765-4767
  6,   1,   1, // 4768-4770
  2,   1,   1, // 4771-4773
  6,   1,   1, // 4774-4776
  6,   1,   1, // 4777-4779
  6,   1,   1, // 4780-4782
  2,   1,   1, // 4783-4785
  2,   1,   1, // 4786-4788
  2,   1,   1, // 4789-4791
  4,   1,   1, // 4792-4794
  2,   1,   1, // 4795-4797
  3,   1,   1, // 4798-4800
  6,   1,   1, // 4801-4803
  1,   1,   1, // 4804-4806
  2,   1,   1, // 4807-4809
  2,   1,   1, // 4810-4812
  6,   1,   1, // 4813-4815
  3,   1,   1, // 4816-4818
  6,   1,   1, // 4819-4821
  6,   1,   1, // 4822-4824
  2,   1,   1, // 4825-4827
  2,   1,   1, // 4828-4830
  3,   1,   1, // 4831-4833
  2,   1,   1, // 4834-4836
  6,   1,   1, // 4837-4839
  2,   1,   1, // 4840-4842
  2,   1,   1, // 4843-4845
  2,   1,   1, // 4846-4848
  3,   1,   1, // 4849-4851
  3,   1,   1, // 4852-4854
  1,   1,   1, // 4855-4857
  1,   1,   1, // 4858-4860
  2,   1,   1, // 4861-4863
  2,   1,   1, // 4864-4866
  3,   1,   1, // 4867-4869
  3,   1,   1, // 4870-4872
  3,   1,   1, // 4873-4875
  2,   1,   1, // 4876-4878
  1,   1,   1, // 4879-4881
  3,   1,   1, // 4882-4884
  3,   1,   1, // 4885-4887
  3,   1,   1, // 4888-4890
  1,   1,   1, // 4891-4893
  6,   1,   1, // 4894-4896
  2,   1,   1, // 4897-4899
  2,   1,   1, // 4900-4902
  1,   1,   1, // 4903-4905
  1,   1,   1, // 4906-4908
  3,   1,   1, // 4909-4911
  6,   1,   1, // 4912-4914
  1,   1,   1, // 4915-4917
  1,   1,   1, // 4918-4920
  3,   1,   1, // 4921-4923
  2,   1,   1, // 4924-4926
  2,   1,   1, // 4927-4929
  68,   1,   1, // 4930-4932
  36,   1,   1, // 4933-4935
  5,   1,   1, // 4936-4938
  33,   1,   1, // 4939-4941
  8,   1,   1, // 4942-4944
  5,   1,   1, // 4945-4947
  2,   1,   1, // 4948-4950
  7,   1,   1, // 4951-4953
  1,   1,   1, // 4954-4956
  1,   1,   1, // 4957-4959
  27,   1,   1, // 4960-4962
  5,   1,   1,   1, // 4963-4966
  44,   1,   1, // 4967-4969
  32,   1,   1, // 4970-4972
  1,   1,   1,   1, // 4973-4976
  3,   1,   1, // 4977-4979
  2,   2,   1,   1, // 4980-4983
  3,   3,   1,   1, // 4984-4987
  3,   1,   1, // 4988-4990
  2,   2,   1,   1, // 4991-4994
  3,   3,   1,   1, // 4995-4998
  3,   1,   1, // 4999-5001
  3,   3,   1,   1, // 5002-5005
  3,   3,   1,   1, // 5006-5009
  3,   1,   1, // 5010-5012
  4,   4,   1,   1, // 5013-5016
  4,   4,   1,   1, // 5017-5020
  2,   1,   1, // 5021-5023
  3,   1,   1, // 5024-5026
  4,   1,   1, // 5027-5029
  3,   1,   1, // 5030-5032
  3,   1, // 5033-5034
  6,   1, // 5035-5036
  3,   1, // 5037-5038
  4,   1, // 5039-5040
  4,   1,   1, // 5041-5043
  4,   1,   1, // 5044-5046
  4,   1,   1, // 5047-5049
  1,   1,   1, // 5050-5052
  1,   1,   1, // 5053-5055
  1,   1,   1, // 5056-5058
  2,   1,   1,   1, // 5059-5062
  2,   1,   1,   1, // 5063-5066
  1,   1,   1, // 5067-5069
  1,   1,   1, // 5070-5072
  1,   1,   1, // 5073-5075
  2,   1,   1,   1, // 5076-5079
  1,   1, // 5080-5081
  1,   1, // 5082-5083
  6,   1,   1, // 5084-5086
  3,   1,   1, // 5087-5089
  2,   1,   1, // 5090-5092
  6,   1,   1, // 5093-5095
  3,   1,   1, // 5096-5098
  4,   1, // 5099-5100
  1,   1,   1, // 5101-5103
  1,   1, // 5104-5105
  1,   1, // 5106-5107
  8,   1,   1, // 5108-5110
  6,   1,   1, // 5111-5113
  6,   1,   1, // 5114-5116
  8,   1,   1, // 5117-5119
  1,   1,   1, // 5120-5122
  1,   1,   1, // 5123-5125
  1,   1,   1, // 5126-5128
  2,   1,   1, // 5129-5131
  1,   1,   1, // 5132-5134
  1,   1,   1, // 5135-5137
  1,   1,   1, // 5138-5140
  3,   1,   1, // 5141-5143
  3,   1, // 5144-5145
  6,   1,   1, // 5146-5148
  3,   1,   1, // 5149-5151
  4,   1, // 5152-5153
  2,   1,   1, // 5154-5156
  1,   1,   1, // 5157-5159
  1,   1,   1, // 5160-5162
  1,   1,   1, // 5163-5165
  3,   1, // 5166-5167
  3,   1, // 5168-5169
  3,   1,   1, // 5170-5172
  1,   1,   1, // 5173-5175
  5,   1,   1, // 5176-5178
  1,   1,   1, // 5179-5181
  1,   1,   1,   1, // 5182-5185
  6,   1,   1, // 5186-5188
  4,   1, // 5189-5190
  1,   1,   1, // 5191-5193
  2,   1,   1, // 5194-5196
  6,   1,   1, // 5197-5199
  2,   1,   1, // 5200-5202
  6,   1,   1, // 5203-5205
  8,   1,   1, // 5206-5208
  6,   1,   1, // 5209-5211
  2,   1,   1, // 5212-5214
  4,   1,   1, // 5215-5217
  4,   1,   1, // 5218-5220
  4,   1,   1, // 5221-5223
  4,   1,   1, // 5224-5226
  5,   1,   1, // 5227-5229
  5,   1,   1, // 5230-5232
  5,   1,   1,   1, // 5233-5236
  6,   1,   1, // 5237-5239
  5,   1,   1, // 5240-5242
  4,   1,   1, // 5243-5245
  4,   1,   1, // 5246-5248
  4,   1,   1, // 5249-5251
  5,   1,   1, // 5252-5254
  5,   1,   1, // 5255-5257
  5,   1,   1,   1, // 5258-5261
  6,   1,   1, // 5262-5264
  2,   1,   1, // 5265-5267
  3,   1,   1, // 5268-5270
  6,   1,   1, // 5271-5273
  2,   1,   1, // 5274-5276
  8,   1,   1, // 5277-5279
  6,   1,   1, // 5280-5282
  6,   1,   1, // 5283-5285
  6,   1,   1, // 5286-5288
  6,   1,   1, // 5289-5291
  6,   1,   1, // 5292-5294
  6,   1,   1, // 5295-5297
  2,   1,   1, // 5298-5300
  2,   1,   1, // 5301-5303
  3,   1,   1, // 5304-5306
  2,   1,   1, // 5307-5309
  3,   1,   1, // 5310-5312
  2,   1,   1, // 5313-5315
  3,   1,   1, // 5316-5318
  2,   1,   1, // 5319-5321
  3,   1,   1, // 5322-5324
  2,   2,   1,   1, // 5325-5328
  3,   3,   1,   1, // 5329-5332
  4,   1, // 5333-5334
  1,   1,   1, // 5335-5337
  1,   1,   1, // 5338-5340
  3,   1,   1, // 5341-5343
  3,   1,   1, // 5344-5346
  4,   1, // 5347-5348
  3,   1,   1, // 5349-5351
  3,   1,   1, // 5352-5354
  3,   1,   1, // 5355-5357
  3,   1,   1, // 5358-5360
  4,   4,   1,   1, // 5361-5364
  4,   4,   1,   1, // 5365-5368
  3,   1,   1, // 5369-5371
  1,   1,   1, // 5372-5374
  1,   1,   1, // 5375-5377
  1,   1,   1, // 5378-5380
  2,   1,   1, // 5381-5383
  2,   1,   1, // 5384-5386
  1,   1,   1, // 5387-5389
  1,   1,   1, // 5390-5392
  2,   1,   1, // 5393-5395
  4,   1, // 5396-5397
  1,   1,   1, // 5398-5400
  4,   1, // 5401-5402
  36,   1,   1, // 5403-5405
  36,   1,   1, // 5406-5408
  68,   1,   1, // 5409-5411
  68,   1,   1, // 5412-5414
  36,   1,   1, // 5415-5417
  68,   1,   1, // 5418-5420
  36,   1,   1, // 5421-5423
  68,   1,   1, // 5424-5426
  3,   1, // 5427-5428
  1,   1,   1, // 5429-5431
  5,   1,   1, // 5432-5434
  3,   1,   1, // 5435-5437
  1,   1,   1, // 5438-5440
  1,   1,   1, // 5441-5443
  1,   1,   1, // 5444-5446
  1,   1,   1, // 5447-5449
  1,   1,   1, // 5450-5452
  6,   1, // 5453-5454
  1,   1,   1, // 5455-5457
  1,   1,   1, // 5458-5460
  33,   1,   1, // 5461-5463
  33,   1,   1, // 5464-5466
  44,   1,   1, // 5467-5469
  44,   1,   1, // 5470-5472
  44,   1,   1, // 5473-5475
  32,   1,   1, // 5476-5478
  44,   1,   1, // 5479-5481
  32,   1,   1, // 5482-5484
  32,   1,   1, // 5485-5487
  32,   1,   1, // 5488-5490
  33,   1,   1, // 5491-5493
  27,   1,   1, // 5494-5496
  27,   1,   1, // 5497-5499
  27,   1,   1, // 5500-5502
  27,   1,   1, // 5503-5505
  33,   1,   1, // 5506-5508
  3,   3,   1,   1, // 5509-5512
  3,   3,   1,   1, // 5513-5516
  2,   1,   1,   1, // 5517-5520
  2,   1,   1,   1, // 5521-5524
  2,   1,   1,   1, // 5525-5528
  2,   2,   1,   1, // 5529-5532
  3,   3,   1,   1, // 5533-5536
  2,   2,   1,   1, // 5537-5540
  3,   3,   1,   1, // 5541-5544
  3,   3,   1,   1, // 5545-5548
  3,   3,   1,   1, // 5549-5552
  6,   1,   1, // 5553-5555
  3,   1,   1, // 5556-5558
  3,   1,   1, // 5559-5561
  2,   1,   1, // 5562-5564
  1,   1,   1, // 5565-5567
  1,   1,   1, // 5568-5570
  2,   1,   1, // 5571-5573
  7,   1,   1, // 5574-5576
  2,   1,   1, // 5577-5579
  1,   1,   1, // 5580-5582
  3,   1,   1, // 5583-5585
  2,   1,   1, // 5586-5588
  1,   1,   1, // 5589-5591
  3,   1,   1, // 5592-5594
  1,   1,   1, // 5595-5597
  4,   1, // 5598-5599
  1,   1,   1, // 5600-5602
  1,   1,   1, // 5603-5605
  5,   1,   1, // 5606-5608
  6,   1,   1, // 5609-5611
  6,   1,   1, // 5612-5614
  6,   1,   1, // 5615-5617
  5,   1,   1, // 5618-5620
  5,   1,   1,   1, // 5621-5624
  6,   1,   1, // 5625-5627
  2,   1,   1, // 5628-5630
  6,   1,   1, // 5631-5633
  6,   1,   1, // 5634-5636
  6,   1,   1, // 5637-5639
  6,   1,   1, // 5640-5642
  5,   1,   1, // 5643-5645
  5,   1,   1,   1, // 5646-5649
  5,   1,   1, // 5650-5652
  3,   1,   1, // 5653-5655
  3,   1,   1, // 5656-5658
  3,   1,   1, // 5659-5661
  3,   1,   1, // 5662-5664
  6,   1,   1, // 5665-5667
  1,   1,   1, // 5668-5670
  2,   1,   1, // 5671-5673
  6,   1,   1, // 5674-5676
  6,   1,   1, // 5677-5679
  6,   1,   1, // 5680-5682
  1,   1,   1, // 5683-5685
  6,   1,   1, // 5686-5688
  2,   1,   1, // 5689-5691
  2,   1,   1, // 5692-5694
  36,   1,   1, // 5695-5697
  2,   1,   1, // 5698-5700
  2,   1,   1, // 5701-5703
  2,   1,   1, // 5704-5706
  2,   1,   1, // 5707-5709
  2,   1,   1, // 5710-5712
  2,   1,   1, // 5713-5715
  6,   1,   1, // 5716-5718
  6,   1,   1, // 5719-5721
  2,   1,   1, // 5722-5724
  6,   1,   1, // 5725-5727
  2,   1,   1, // 5728-5730
  6,   1,   1, // 5731-5733
  2,   1,   1, // 5734-5736
  1,   1, // 5737-5738
  1,   1,   1, // 5739-5741
  1,   1,   1, // 5742-5744
  8,   1,   1, // 5745-5747
  2,   1,   1, // 5748-5750
  1,   1,   1, // 5751-5753
  2,   1,   1, // 5754-5756
  2,   1,   1, // 5757-5759
  6,   1,   1, // 5760-5762
  8,   1,   1, // 5763-5765
  6,   1,   1, // 5766-5768
  8,   1,   1, // 5769-5771
  1,   1,   1, // 5772-5774
  1,   1,   1, // 5775-5777
  1,   1,   1, // 5778-5780
  1,   1,   1, // 5781-5783
  6,   1,   1, // 5784-5786
  6,   1,   1, // 5787-5789
  6,   1,   1, // 5790-5792
  2,   1,   1, // 5793-5795
  6,   1,   1, // 5796-5798
  1,   1,   1, // 5799-5801
  1,   1,   1, // 5802-5804
  6,   1,   1, // 5805-5807
  6,   1,   1, // 5808-5810
  6,   1,   1, // 5811-5813
  3,   1,   1, // 5814-5816
  2,   1,   1, // 5817-5819
  1,   1,   1, // 5820-5822
  6,   1,   1, // 5823-5825
  2,   1,   1, // 5826-5828
  1,   1,   1, // 5829-5831
  1,   1,   1, // 5832-5834
  5,   1,   1, // 5835-5837
  1,   1,   1, // 5838-5840
  1,   1,   1, // 5841-5843
  2,   1,   1, // 5844-5846
  2,   1,   1, // 5847-5849
  6,   1,   1, // 5850-5852
  6,   1,   1, // 5853-5855
  6,   1,   1, // 5856-5858
  1,   1,   1, // 5859-5861
  1,   1,   1, // 5862-5864
  1,   1,   1, // 5865-5867
  3,   1,   1, // 5868-5870
  1,   1,   1, // 5871-5873
  1,   1,   1, // 5874-5876
  2,   1,   1, // 5877-5879
  6,   1,   1, // 5880-5882
  6,   1,   1, // 5883-5885
  1,   1,   1, // 5886-5888
  2,   1,   1, // 5889-5891
  1,   1,   1, // 5892-5894
  4,   1, // 5895-5896
  1,   1,   1, // 5897-5899
  1,   1,   1, // 5900-5902
  1,   1,   1, // 5903-5905
  1,   1,   1, // 5906-5908
  3,   1,   1, // 5909-5911
  5,   1,   1, // 5912-5914
  3,   1,   1, // 5915-5917
  1,   1,   1, // 5918-5920
  1,   1,   1, // 5921-5923
  2,   1,   1, // 5924-5926
  2,   1,   1, // 5927-5929
  2,   1,   1, // 5930-5932
  3,   1,   1, // 5933-5935
  2,   1,   1, // 5936-5938
  2,   1,   1, // 5939-5941
  2,   1,   1, // 5942-5944
  1,   1,   1, // 5945-5947
  2,   1,   1, // 5948-5950
  3,   1,   1, // 5951-5953
  3,   1,   1, // 5954-5956
  2,   1,   1, // 5957-5959
  6,   1,   1, // 5960-5962
  6,   1,   1, // 5963-5965
  2,   1,   1, // 5966-5968
  6,   1,   1, // 5969-5971
  6,   1,   1, // 5972-5974
  6,   1,   1, // 5975-5977
  2,   1,   1, // 5978-5980
  2,   1,   1, // 5981-5983
  2,   1,   1, // 5984-5986
  4,   1,   1, // 5987-5989
  2,   1,   1, // 5990-5992
  3,   1,   1, // 5993-5995
  6,   1,   1, // 5996-5998
  1,   1,   1, // 5999-6001
  2,   1,   1, // 6002-6004
  2,   1,   1, // 6005-6007
  6,   1,   1, // 6008-6010
  3,   1,   1, // 6011-6013
  6,   1,   1, // 6014-6016
  6,   1,   1, // 6017-6019
  2,   1,   1, // 6020-6022
  2,   1,   1, // 6023-6025
  3,   1,   1, // 6026-6028
  2,   1,   1, // 6029-6031
  6,   1,   1, // 6032-6034
  2,   1,   1, // 6035-6037
  2,   1,   1, // 6038-6040
  2,   1,   1, // 6041-6043
  3,   1,   1, // 6044-6046
  3,   1,   1, // 6047-6049
  1,   1,   1, // 6050-6052
  1,   1,   1, // 6053-6055
  1,   1,   1, // 6056-6058
  2,   1,   1, // 6059-6061
  2,   1,   1, // 6062-6064
  3,   1,   1, // 6065-6067
  3,   1,   1, // 6068-6070
  3,   1,   1, // 6071-6073
  2,   1,   1, // 6074-6076
  1,   1,   1, // 6077-6079
  3,   1,   1, // 6080-6082
  3,   1,   1, // 6083-6085
  3,   1,   1, // 6086-6088
  1,   1,   1, // 6089-6091
  6,   1,   1, // 6092-6094
  2,   1,   1, // 6095-6097
  2,   1,   1, // 6098-6100
  0 // End operand cycles
};
extern const unsigned PPCForwardingPaths[] = {
 0, // No itinerary
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 1-3
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 4-6
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 7-8
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 9-11
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 12-14
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 15-17
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 18-19
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 20-22
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 23-25
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 26-28
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 29-31
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 32-34
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 35-37
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 38-40
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 41-43
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 44-47
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 48-50
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::NoBypass, // 51-54
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 55-57
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 58-61
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 62-65
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 66-68
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 69-72
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 73-76
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 77-79
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 80-82
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 83-85
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 86-88
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 89-91
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 92-94
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 95-96
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 97-98
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 99-101
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 102-103
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 104-105
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 106-107
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 108-109
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 110-112
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 113-114
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 115-116
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 117-119
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 120-122
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 123-125
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 126-127
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 128-130
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 131-133
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 134-137
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 138-141
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 142-144
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 145-147
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 148-150
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 151-154
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 155-156
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 157-158
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 159-161
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 162-164
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 165-167
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 168-169
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 170-172
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 173-175
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 176-178
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 179-181
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 182-184
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 185-187
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 188-190
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 191-193
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 194-195
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 196-197
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 198-200
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 201-203
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 204-206
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 207-209
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 210-212
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 213-215
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 216-218
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::NoBypass, // 219-222
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 223-224
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 225-227
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 228-230
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 231-233
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 234-236
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 237-239
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 240-242
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 243-245
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 246-248
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 249-252
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 253-255
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 256-258
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 259-261
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 262-264
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 265-267
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 268-271
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 272-274
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 275-277
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 278-280
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 281-283
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 284-286
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 287-288
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 289-291
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 292-294
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 295-297
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 298-300
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 301-303
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 304-307
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 308-311
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 312-313
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 314-316
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 317-319
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 320-322
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 323-324
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 325-327
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 328-330
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 331-333
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 334-336
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 337-339
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 340-342
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 343-345
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 346-348
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 349-351
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 352-354
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 355-357
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 358-360
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 361-363
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 364-366
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 367-369
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 370-371
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 372-374
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 375-376
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 377-378
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 379-380
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 381-382
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 383-384
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 385-387
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 388-390
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 391-393
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 394-396
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 397-399
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 400-402
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 403-405
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 406-408
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 409-411
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 412-414
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 415-417
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 418-420
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 421-423
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 424-426
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 427-428
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 429-431
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 432-434
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 435-437
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 438-440
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 441-443
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 444-446
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 447-449
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 450-452
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 453-456
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 457-460
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 461-464
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 465-468
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 469-472
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 473-476
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0,  0, // 477-480
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 481-484
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 485-488
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 489-490
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 491-492
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 493-495
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 496-498
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 499-501
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 502-504
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 505-507
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 508-509
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 510-511
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 512-514
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 515-517
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 518-520
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 521-523
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 524-525
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 526-527
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 528-529
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 530-531
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 532-534
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 535-536
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 537-539
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 540-541
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 542-544
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 545-547
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 548-551
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 552-554
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 555-558
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 559-561
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 562-563
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 564-565
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 566-567
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 568-569
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 570-572
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 573-575
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 576-578
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 579-581
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 582-583
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 584-586
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 587-589
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 590-592
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 593-595
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 596-598
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 599-601
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 602-604
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 605-607
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 608-610
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 611-613
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 614-615
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 616-618
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 619-621
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 622-624
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 625-627
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 628-630
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 631-633
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 634-636
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 637-639
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 640-642
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 643-645
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 646-648
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 649-651
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 652-654
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 655-657
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 658-659
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 660-662
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 663-665
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 666-668
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 669-671
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 672-674
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 675-676
PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, PPC440ItinerariesBypass::P440_FPR_Bypass, // 677-679
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 680-681
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 682-684
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 685-687
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 688-690
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 691-693
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 694-696
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 697-699
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 700-701
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 702-704
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 705-707
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 708-709
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 710-712
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 713-715
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 716-718
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 719-721
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 722-723
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 724-725
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 726-728
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 729-730
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 731-733
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 734-735
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 736-738
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 739-741
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 742-744
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 745-747
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 748-750
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 751-753
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 754-756
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 757-759
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 760-761
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 762-763
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 764-766
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass,  0, // 767-769
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 770-771
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 772-773
PPC440ItinerariesBypass::NoBypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 774-776
PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, PPC440ItinerariesBypass::P440_GPR_Bypass, // 777-779
 0, // 780
 0,  0,  0, // 781-783
 0,  0,  0, // 784-786
 0,  0,  0, // 787-789
 0,  0,  0, // 790-792
 0,  0,  0, // 793-795
 0,  0,  0, // 796-798
 0,  0,  0, // 799-801
 0,  0,  0, // 802-804
 0,  0,  0, // 805-807
 0,  0,  0, // 808-810
 0,  0,  0, // 811-813
 0,  0,  0, // 814-816
 0,  0,  0, // 817-819
 0,  0,  0, // 820-822
 0,  0,  0, // 823-825
 0,  0,  0, // 826-828
 0,  0,  0, // 829-831
 0,  0,  0,  0, // 832-835
 0,  0,  0, // 836-838
 0,  0,  0, // 839-841
 0,  0,  0, // 842-844
 0,  0,  0,  0, // 845-848
 0, // 849
 0,  0,  0, // 850-852
 0,  0,  0,  0, // 853-856
 0,  0,  0,  0, // 857-860
 0,  0,  0, // 861-863
 0,  0,  0, // 864-866
 0,  0,  0, // 867-869
 0,  0,  0,  0, // 870-873
 0,  0,  0,  0, // 874-877
 0,  0,  0, // 878-880
 0,  0,  0,  0, // 881-884
 0,  0,  0,  0, // 885-888
 0,  0,  0, // 889-891
 0,  0,  0, // 892-894
 0,  0, // 895-896
 0,  0, // 897-898
 0,  0, // 899-900
 0,  0, // 901-902
 0,  0, // 903-904
 0,  0, // 905-906
 0,  0, // 907-908
 0,  0,  0, // 909-911
 0,  0,  0, // 912-914
 0,  0,  0, // 915-917
 0, // 918
 0,  0,  0, // 919-921
 0,  0,  0, // 922-924
 0,  0,  0, // 925-927
 0,  0,  0,  0, // 928-931
 0,  0,  0,  0, // 932-935
 0,  0,  0, // 936-938
 0,  0,  0, // 939-941
 0,  0,  0, // 942-944
 0,  0,  0,  0, // 945-948
 0,  0, // 949-950
 0,  0, // 951-952
 0,  0, // 953-954
 0,  0,  0, // 955-957
 0,  0, // 958-959
 0,  0, // 960-961
 0,  0,  0, // 962-964
 0,  0,  0, // 965-967
 0,  0,  0, // 968-970
 0,  0,  0, // 971-973
 0,  0,  0, // 974-976
 0,  0,  0, // 977-979
 0,  0,  0, // 980-982
 0,  0,  0, // 983-985
 0,  0,  0, // 986-988
 0,  0,  0, // 989-991
 0,  0,  0, // 992-994
 0,  0, // 995-996
 0,  0,  0, // 997-999
 0,  0,  0, // 1000-1002
 0,  0,  0, // 1003-1005
 0,  0,  0, // 1006-1008
 0,  0, // 1009-1010
 0,  0,  0, // 1011-1013
 0,  0,  0, // 1014-1016
 0,  0,  0, // 1017-1019
 0,  0,  0, // 1020-1022
 0,  0,  0, // 1023-1025
 0,  0,  0,  0, // 1026-1029
 0,  0, // 1030-1031
 0,  0,  0, // 1032-1034
 0,  0,  0, // 1035-1037
 0,  0,  0, // 1038-1040
 0,  0,  0, // 1041-1043
 0,  0,  0, // 1044-1046
 0,  0,  0, // 1047-1049
 0,  0,  0, // 1050-1052
 0,  0,  0, // 1053-1055
 0,  0,  0,  0, // 1056-1059
 0,  0,  0, // 1060-1062
 0,  0,  0, // 1063-1065
 0,  0,  0, // 1066-1068
 0,  0,  0, // 1069-1071
 0,  0,  0, // 1072-1074
 0,  0,  0,  0, // 1075-1078
 0,  0,  0, // 1079-1081
 0,  0,  0, // 1082-1084
 0,  0,  0, // 1085-1087
 0,  0,  0, // 1088-1090
 0,  0,  0, // 1091-1093
 0,  0,  0, // 1094-1096
 0,  0,  0, // 1097-1099
 0,  0,  0, // 1100-1102
 0,  0,  0, // 1103-1105
 0, // 1106
 0, // 1107
 0,  0,  0, // 1108-1110
 0,  0,  0,  0, // 1111-1114
 0,  0,  0,  0, // 1115-1118
 0,  0, // 1119-1120
 0,  0,  0, // 1121-1123
 0,  0,  0, // 1124-1126
 0,  0,  0, // 1127-1129
 0,  0, // 1130-1131
 0,  0,  0, // 1132-1134
 0,  0,  0, // 1135-1137
 0,  0,  0, // 1138-1140
 0,  0,  0, // 1141-1143
 0,  0,  0,  0, // 1144-1147
 0,  0,  0,  0, // 1148-1151
 0,  0,  0, // 1152-1154
 0,  0,  0, // 1155-1157
 0,  0,  0, // 1158-1160
 0,  0,  0, // 1161-1163
 0,  0,  0, // 1164-1166
 0,  0,  0, // 1167-1169
 0,  0,  0, // 1170-1172
 0,  0,  0, // 1173-1175
 0,  0, // 1176-1177
 0,  0,  0, // 1178-1180
 0,  0, // 1181-1182
 0,  0, // 1183-1184
 0,  0, // 1185-1186
 0,  0, // 1187-1188
 0,  0, // 1189-1190
 0,  0,  0, // 1191-1193
 0,  0,  0, // 1194-1196
 0,  0,  0, // 1197-1199
 0,  0,  0, // 1200-1202
 0,  0,  0, // 1203-1205
 0,  0,  0, // 1206-1208
 0,  0,  0, // 1209-1211
 0,  0,  0, // 1212-1214
 0,  0,  0, // 1215-1217
 0,  0,  0, // 1218-1220
 0,  0,  0, // 1221-1223
 0,  0,  0, // 1224-1226
 0,  0,  0, // 1227-1229
 0,  0,  0, // 1230-1232
 0,  0,  0, // 1233-1235
 0,  0,  0, // 1236-1238
 0,  0,  0, // 1239-1241
 0,  0, // 1242-1243
 0,  0,  0, // 1244-1246
 0,  0,  0, // 1247-1249
 0,  0,  0, // 1250-1252
 0,  0,  0, // 1253-1255
 0,  0,  0, // 1256-1258
 0,  0,  0, // 1259-1261
 0,  0,  0, // 1262-1264
 0,  0,  0, // 1265-1267
 0,  0,  0, // 1268-1270
 0,  0,  0, // 1271-1273
 0,  0,  0, // 1274-1276
 0,  0,  0, // 1277-1279
 0,  0,  0, // 1280-1282
 0,  0,  0, // 1283-1285
 0,  0,  0, // 1286-1288
 0,  0,  0, // 1289-1291
 0,  0,  0, // 1292-1294
 0,  0,  0, // 1295-1297
 0,  0,  0,  0, // 1298-1301
 0,  0,  0,  0, // 1302-1305
 0,  0,  0,  0, // 1306-1309
 0,  0,  0,  0, // 1310-1313
 0,  0,  0,  0, // 1314-1317
 0,  0,  0,  0, // 1318-1321
 0,  0,  0,  0, // 1322-1325
 0,  0,  0, // 1326-1328
 0,  0,  0, // 1329-1331
 0,  0,  0,  0, // 1332-1335
 0,  0,  0,  0, // 1336-1339
 0,  0,  0, // 1340-1342
 0,  0,  0, // 1343-1345
 0,  0,  0, // 1346-1348
 0,  0,  0, // 1349-1351
 0,  0,  0, // 1352-1354
 0,  0,  0, // 1355-1357
 0,  0,  0, // 1358-1360
 0,  0,  0, // 1361-1363
 0, // 1364
 0,  0,  0, // 1365-1367
 0,  0,  0, // 1368-1370
 0,  0,  0, // 1371-1373
 0,  0,  0, // 1374-1376
 0,  0, // 1377-1378
 0,  0, // 1379-1380
 0,  0,  0, // 1381-1383
 0,  0, // 1384-1385
 0,  0,  0, // 1386-1388
 0, // 1389
 0,  0,  0, // 1390-1392
 0,  0,  0, // 1393-1395
 0,  0,  0, // 1396-1398
 0,  0,  0,  0, // 1399-1402
 0,  0,  0, // 1403-1405
 0,  0,  0,  0, // 1406-1409
 0,  0,  0, // 1410-1412
 0,  0,  0, // 1413-1415
 0,  0,  0, // 1416-1418
 0,  0,  0, // 1419-1421
 0,  0,  0, // 1422-1424
 0,  0,  0, // 1425-1427
 0,  0,  0, // 1428-1430
 0,  0,  0, // 1431-1433
 0,  0,  0, // 1434-1436
 0,  0, // 1437-1438
 0,  0,  0, // 1439-1441
 0,  0,  0, // 1442-1444
 0,  0,  0, // 1445-1447
 0,  0,  0, // 1448-1450
 0,  0,  0, // 1451-1453
 0,  0,  0, // 1454-1456
 0,  0,  0, // 1457-1459
 0,  0,  0, // 1460-1462
 0,  0,  0, // 1463-1465
 0,  0,  0, // 1466-1468
 0,  0,  0, // 1469-1471
 0,  0,  0, // 1472-1474
 0,  0,  0, // 1475-1477
 0,  0,  0, // 1478-1480
 0,  0, // 1481-1482
 0,  0,  0, // 1483-1485
 0,  0,  0, // 1486-1488
 0,  0,  0, // 1489-1491
 0,  0,  0, // 1492-1494
 0,  0,  0, // 1495-1497
 0,  0,  0, // 1498-1500
 0,  0,  0, // 1501-1503
 0,  0,  0, // 1504-1506
 0,  0,  0, // 1507-1509
 0,  0,  0, // 1510-1512
 0,  0,  0, // 1513-1515
 0,  0,  0, // 1516-1518
 0,  0,  0, // 1519-1521
 0,  0,  0, // 1522-1524
 0,  0,  0, // 1525-1527
 0,  0, // 1528-1529
 0,  0,  0, // 1530-1532
 0,  0,  0, // 1533-1535
 0,  0,  0, // 1536-1538
 0,  0,  0, // 1539-1541
 0,  0,  0, // 1542-1544
 0,  0,  0, // 1545-1547
 0,  0,  0, // 1548-1550
 0,  0,  0, // 1551-1553
 0,  0,  0, // 1554-1556
 0,  0,  0, // 1557-1559
 0,  0,  0, // 1560-1562
 0,  0,  0, // 1563-1565
 0,  0,  0, // 1566-1568
 0,  0,  0, // 1569-1571
 0,  0,  0, // 1572-1574
 0,  0,  0, // 1575-1577
 0,  0,  0, // 1578-1580
 0,  0,  0, // 1581-1583
 0,  0, // 1584-1585
 0,  0,  0, // 1586-1588
 0,  0,  0, // 1589-1591
 0,  0,  0, // 1592-1594
 0,  0,  0, // 1595-1597
 0,  0,  0, // 1598-1600
 0,  0,  0, // 1601-1603
 0,  0,  0, // 1604-1606
 0,  0,  0, // 1607-1609
 0,  0,  0, // 1610-1612
 0,  0,  0, // 1613-1615
 0,  0,  0, // 1616-1618
 0,  0,  0, // 1619-1621
 0,  0,  0, // 1622-1624
 0,  0,  0, // 1625-1627
 0,  0,  0, // 1628-1630
 0,  0,  0, // 1631-1633
 0,  0,  0, // 1634-1636
 0,  0,  0, // 1637-1639
 0,  0,  0, // 1640-1642
 0,  0,  0, // 1643-1645
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1646-1648
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1649-1651
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1652-1653
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1654-1656
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1657-1659
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1660-1662
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1663-1664
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1665-1666
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1667-1669
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1670-1672
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1673-1675
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1676-1678
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1679-1681
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1682-1684
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1685-1686
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1687-1689
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1690-1691
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1692-1695
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1696-1698
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1699-1700
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1701-1702
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1703-1704
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1705-1706
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1707-1708
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1709-1710
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1711-1712
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass,  0, // 1713-1715
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1716-1717
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1718-1719
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1720-1721
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1722-1723
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1724-1725
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1726-1727
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1728-1729
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1730-1731
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1732-1733
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1734-1735
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1736-1737
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1738-1740
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1741-1743
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1744-1746
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1747-1749
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1750-1751
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1752-1753
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1754-1755
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1756-1757
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1758-1760
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1761-1762
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1763-1765
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1766-1767
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1768-1770
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1771-1773
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1774-1776
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1777-1779
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1780-1782
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1783-1784
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass,  0, // 1785-1787
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1788-1789
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1790-1791
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1792-1793
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1794-1796
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1797-1798
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass,  0, // 1799-1801
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1802-1804
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1805-1807
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1808-1810
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1811-1814
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1815-1816
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1817-1818
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1819-1820
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1821-1823
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1824-1826
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1827-1829
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1830-1832
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1833-1835
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1836-1838
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1839-1841
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1842-1843
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1844-1846
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1847-1848
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1849-1850
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1851-1852
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1853-1854
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1855-1856
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1857-1859
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1860-1861
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1862-1863
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1864-1865
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1866-1867
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1868-1869
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1870-1871
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1872-1873
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1874-1875
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1876-1877
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1878-1879
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1880-1881
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1882-1883
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1884-1885
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1886-1887
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1888-1889
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1890-1892
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1893-1894
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1895-1896
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1897-1898
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1899-1900
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1901-1902
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1903-1904
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1905-1906
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1907-1909
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1910-1912
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1913-1915
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1916-1918
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass,  0, // 1919-1921
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1922-1924
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1925-1926
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1927-1929
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1930-1932
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1933-1935
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 1936-1937
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1938-1940
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1941-1943
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1944-1946
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1947-1949
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1950-1952
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1953-1955
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1956-1958
PPCE500ItinerariesBypass::E500_DivBypass,  0,  0, // 1959-1961
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1962-1963
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1964-1965
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1966-1967
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1968-1969
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1970-1971
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1972-1973
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1974-1975
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1976-1977
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1978-1980
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1981-1983
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 1984-1986
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1987-1988
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1989-1990
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1991-1992
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1993-1994
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1995-1996
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1997-1998
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 1999-2000
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 2001-2002
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2003-2004
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2005-2007
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2008-2009
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2010-2012
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2013-2014
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2015-2017
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2018-2019
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2020-2021
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2022-2023
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2024-2025
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2026-2028
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2029-2031
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2032-2034
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2035-2037
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2038-2040
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2041-2043
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2044-2046
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2047-2049
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2050-2052
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2053-2055
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2056-2058
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2059-2061
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2062-2064
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2065-2067
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2068-2069
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2070-2071
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2072-2074
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2075-2077
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2078-2080
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2081-2083
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2084-2086
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2087-2089
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2090-2092
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2093-2095
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2096-2098
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 2099-2101
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2102-2103
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 2104-2105
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2106-2108
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2109-2111
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2112-2114
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2115-2117
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2118-2120
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2121-2123
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2124-2126
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2127-2129
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2130-2132
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2133-2135
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2136-2138
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_CR_Bypass, // 2139-2141
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2142-2144
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2145-2147
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2148-2150
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2151-2152
PPCE500ItinerariesBypass::E500_CR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2153-2154
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2155-2157
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2158-2160
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2161-2163
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2164-2166
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2167-2168
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2169-2170
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2171-2173
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2174-2176
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2177-2179
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2180-2181
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2182-2183
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2184-2185
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2186-2187
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2188-2189
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2190-2192
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2193-2194
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2195-2196
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2197-2198
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2199-2201
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2202-2204
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2205-2207
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2208-2210
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2211-2213
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2214-2216
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2217-2219
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2220-2222
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2223-2225
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2226-2228
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2229-2231
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2232-2234
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2235-2237
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2238-2240
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2241-2243
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2244-2245
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2246-2247
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2248-2249
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2250-2251
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2252-2253
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2254-2255
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2256-2257
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2258-2259
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2260-2261
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2262-2263
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2264-2265
PPCE500ItinerariesBypass::NoBypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2266-2267
PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, PPCE500ItinerariesBypass::E500_GPR_Bypass, // 2268-2270
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2271-2273
PPCE500ItinerariesBypass::NoBypass,  0,  0, // 2274-2276
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2277-2279
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2280-2282
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2283-2284
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2285-2287
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2288-2290
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2291-2293
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2294-2295
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2296-2297
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2298-2300
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2301-2303
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2304-2306
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2307-2309
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2310-2312
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2313-2314
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2315-2317
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2318-2321
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2322-2323
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2324-2327
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2328-2330
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2331-2332
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2333-2334
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2335-2337
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2338-2340
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2341-2343
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2344-2345
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2346-2347
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2348-2349
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2350-2351
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2352-2353
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass,  0, // 2354-2356
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2357-2358
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2359-2360
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2361
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2362-2363
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2364-2365
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2366-2367
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2368-2369
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2370-2371
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2372-2373
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, // 2374-2376
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2377-2378
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2379-2380
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2381-2382
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2383-2385
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2386-2388
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2389-2391
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2392-2394
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2395-2396
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2397-2398
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2399-2400
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2401-2403
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2404-2406
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2407-2408
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2409-2410
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, // 2411-2413
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2414
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2415-2417
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2418-2419
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2420-2422
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2423-2425
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2426-2428
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2429-2431
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2432-2434
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2435-2437
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2438-2439
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass,  0, // 2440-2442
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2443-2444
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2445-2446
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2447-2448
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2449-2451
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2452-2453
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass,  0, // 2454-2456
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2457-2459
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2460-2462
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2463-2465
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2466-2468
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2469-2472
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2473-2474
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2475-2476
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2477-2478
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2479-2481
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2482-2484
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2485-2487
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2488-2490
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2491-2493
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2494-2496
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2497-2500
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2501-2503
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2504-2506
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2507-2509
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2510-2512
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2513-2515
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2516-2519
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2520-2521
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2522-2524
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2525-2526
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2527-2528
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2529-2531
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2532-2533
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2534-2535
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2536-2537
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2538-2540
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2541-2542
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2543-2545
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2546-2547
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2548-2549
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2550-2551
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2552-2553
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2554-2555
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2556-2557
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2558-2560
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2561-2563
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2564-2566
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2567-2569
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2570-2571
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2572-2573
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2574-2576
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2577-2579
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2580-2581
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2582-2583
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2584-2585
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2586-2587
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2588-2590
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2591-2592
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2593-2594
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2595-2597
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2598-2599
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2600-2601
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2602-2603
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2604-2605
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2606-2607
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2608-2609
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2610-2611
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2612-2614
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2615-2617
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2618-2620
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2621-2623
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass,  0, // 2624-2626
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2627-2629
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2630-2632
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2633-2634
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2635
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, // 2636-2638
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2639-2641
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2642-2644
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2645-2647
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2648
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2649-2650
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2651-2653
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2654-2656
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2657-2659
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2660-2662
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2663-2665
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2666-2668
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2669-2671
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2672-2674
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2675-2677
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2678-2680
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2681-2683
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2684-2685
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2686-2687
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2688-2689
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2690-2691
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2692-2694
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2695-2697
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2698-2699
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2700-2701
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2702-2703
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2704-2705
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2706-2708
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2709-2710
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2711-2712
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2713-2714
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2715-2716
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2717-2718
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2719-2721
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2722-2724
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2725-2726
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2727-2728
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2729-2730
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2731-2732
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2733-2735
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2736-2737
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2738-2740
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2741-2742
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2743-2745
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2746-2748
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2749-2752
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2753-2755
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2756-2759
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2760-2762
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2763-2764
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2765-2766
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2767-2768
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2769-2770
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2771-2773
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2774-2776
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2777-2779
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2780-2781
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2782-2783
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2784-2786
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2787-2789
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2790-2792
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2793-2795
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2796-2798
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2799-2801
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2802-2804
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2805-2807
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2808-2810
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2811-2812
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2813-2814
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2815-2817
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2818-2820
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2821-2823
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2824-2826
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2827-2829
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2830-2832
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2833-2835
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2836-2838
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2839-2841
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_CR_Bypass, // 2842-2844
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2845-2847
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2848-2850
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2851-2852
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2853
PPCE500mcItinerariesBypass::E500mc_CR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2854-2855
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2856-2858
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::NoBypass, // 2859-2861
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2862-2864
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2865-2867
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2868-2870
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2871-2872
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2873-2875
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2876-2877
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2878-2880
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2881-2883
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2884
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, // 2885
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2886-2887
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2888-2890
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2891-2892
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2893-2894
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2895-2896
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2897-2898
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2899-2901
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2902-2903
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2904-2906
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2907-2909
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2910-2911
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2912-2913
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2914-2916
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2917-2918
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2919-2920
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2921-2922
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2923-2925
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2926-2927
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2928-2930
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2931-2932
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2933-2934
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2935-2937
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2938-2940
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2941-2942
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2943-2944
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2945-2946
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2947-2948
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2949-2950
PPCE500mcItinerariesBypass::NoBypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2951-2952
PPCE500mcItinerariesBypass::E500mc_FPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2953-2955
PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, PPCE500mcItinerariesBypass::E500mc_GPR_Bypass, // 2956-2958
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2959-2961
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2962-2964
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2965-2966
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2967-2969
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2970-2972
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 2973-2975
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2976-2977
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2978-2979
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2980-2981
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2982-2984
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 2985-2987
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 2988-2990
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 2991-2993
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 2994-2996
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 2997-2999
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3000-3001
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3002-3004
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3005-3007
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3008-3011
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3012-3013
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3014-3017
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3018-3020
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3021-3022
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3023-3024
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3025-3026
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3027-3028
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3029-3030
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3031-3033
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3034-3036
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3037-3039
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3040-3041
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3042-3043
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3044-3045
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3046-3047
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3048-3050
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3051-3052
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass,  0, // 3053-3055
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3056-3057
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3058
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3059
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3060-3061
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3062-3063
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3064-3065
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3066
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, // 3067-3069
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3070-3071
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3072
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3073-3075
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3076-3078
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3079-3081
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3082-3084
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3085-3087
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3088-3089
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3090-3091
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3092-3093
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3094-3095
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3096-3097
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3098-3100
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3101-3103
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3104-3105
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3106
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, // 3107-3109
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3110
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3111-3113
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3114-3115
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3116-3118
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3119-3121
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3122-3124
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3125-3127
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3128-3130
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3131-3133
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3134-3136
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3137-3139
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3140-3141
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass,  0, // 3142-3144
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3145-3146
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3147
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3148-3149
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3150-3152
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3153-3155
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3156-3158
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3159-3160
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass,  0, // 3161-3163
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3164-3166
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3167-3169
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3170-3172
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3173-3175
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3176-3179
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3180
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3181-3182
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3183-3184
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3185-3187
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3188-3190
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3191-3193
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3194-3196
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3197-3199
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3200-3202
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3203-3205
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3206-3209
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3210-3212
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3213-3215
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3216-3218
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3219-3221
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3222-3224
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3225-3227
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3228-3231
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3232-3233
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3234-3236
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3237-3238
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3239-3240
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3241-3243
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3244-3245
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3246-3247
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3248-3249
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3250-3252
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3253-3254
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3255-3256
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3257-3258
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3259-3261
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3262-3263
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3264-3265
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3266
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3267-3268
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3269-3270
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3271-3272
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3273
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3274-3276
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3277-3279
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3280-3282
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3283-3285
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3286-3287
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3288-3289
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3290-3292
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3293-3295
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3296-3297
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3298-3299
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3300-3301
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3302-3303
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3304-3305
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3306-3308
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3309-3310
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3311
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3312-3314
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3315-3316
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3317
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3318-3319
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3320
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3321-3322
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3323
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3324-3326
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3327-3329
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3330-3332
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3333-3335
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3336-3338
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3339-3341
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3342-3344
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3345-3347
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass,  0, // 3348-3350
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3351-3353
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3354-3356
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3357-3358
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3359
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, // 3360-3362
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3363-3365
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3366-3368
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3369-3371
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3372-3374
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3375-3377
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3378
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3379-3380
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3381-3383
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3384-3386
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3387-3389
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3390-3392
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3393-3395
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3396-3398
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3399-3401
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3402-3404
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3405-3407
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3408-3410
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3411-3413
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3414-3416
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3417-3419
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3420-3421
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3422-3423
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3424-3425
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3426-3427
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3428-3429
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3430-3431
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3432-3434
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3435-3437
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3438-3439
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3440-3441
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3442-3443
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3444-3445
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3446-3448
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3449-3450
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3451-3452
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3453-3454
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3455-3456
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3457-3458
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3459-3461
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3462-3464
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3465
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3466
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3467-3469
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3470-3471
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3472-3474
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3475-3476
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3477-3479
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3480-3482
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3483-3486
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3487-3489
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3490-3493
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3494-3496
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3497-3498
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3499-3500
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3501-3502
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3503-3504
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3505-3507
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3508-3510
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3511-3513
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3514-3515
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3516-3517
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3518-3520
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3521-3523
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3524-3526
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3527-3529
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3530-3532
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3533-3535
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3536-3538
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3539-3541
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3542-3544
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3545-3547
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3548-3550
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3551-3553
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3554-3556
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3557-3558
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3559
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3560-3562
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3563-3565
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3566-3568
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3569-3571
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3572-3574
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3575-3577
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3578-3580
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3581-3583
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3584-3586
PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, PPCE5500ItinerariesBypass::E5500_CR_Bypass, // 3587-3589
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3590-3592
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3593-3595
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3596-3598
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3599-3600
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3601-3603
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3604
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3605
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3606-3608
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::NoBypass, // 3609-3611
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3612-3614
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3615-3617
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3618-3620
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3621-3622
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3623-3625
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3626-3627
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3628-3630
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3631-3633
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3634
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, // 3635
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3636-3637
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3638-3639
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3640-3642
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3643-3644
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3645-3646
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3647-3648
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3649-3650
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3651-3653
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3654-3655
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3656-3658
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3659-3661
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3662-3663
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3664-3666
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3667-3669
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3670-3671
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3672-3673
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3674-3675
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3676-3678
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3679-3680
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3681-3682
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3683-3685
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3686-3687
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3688-3689
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3690-3692
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3693-3695
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3696-3697
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3698-3699
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3700-3701
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3702-3703
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3704-3705
PPCE5500ItinerariesBypass::NoBypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3706-3707
PPCE5500ItinerariesBypass::E5500_FPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3708-3710
PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, PPCE5500ItinerariesBypass::E5500_GPR_Bypass, // 3711-3713
 0,  0,  0, // 3714-3716
 0,  0,  0, // 3717-3719
 0,  0,  0, // 3720-3722
 0,  0,  0, // 3723-3725
 0,  0,  0, // 3726-3728
 0,  0,  0, // 3729-3731
 0,  0,  0, // 3732-3734
 0,  0,  0, // 3735-3737
 0,  0,  0, // 3738-3740
 0,  0,  0, // 3741-3743
 0,  0,  0, // 3744-3746
 0,  0,  0, // 3747-3749
 0,  0,  0, // 3750-3752
 0,  0,  0, // 3753-3755
 0,  0,  0, // 3756-3758
 0,  0,  0, // 3759-3761
 0,  0,  0, // 3762-3764
 0,  0,  0, // 3765-3767
 0,  0,  0, // 3768-3770
 0,  0,  0, // 3771-3773
 0,  0,  0,  0, // 3774-3777
 0,  0,  0, // 3778-3780
 0,  0,  0, // 3781-3783
 0,  0,  0,  0, // 3784-3787
 0,  0,  0, // 3788-3790
 0,  0,  0,  0, // 3791-3794
 0,  0,  0,  0, // 3795-3798
 0,  0,  0, // 3799-3801
 0,  0,  0,  0, // 3802-3805
 0,  0,  0,  0, // 3806-3809
 0,  0,  0, // 3810-3812
 0,  0,  0,  0, // 3813-3816
 0,  0,  0,  0, // 3817-3820
 0,  0,  0, // 3821-3823
 0,  0,  0,  0, // 3824-3827
 0,  0,  0,  0, // 3828-3831
 0,  0,  0, // 3832-3834
 0,  0,  0, // 3835-3837
 0,  0,  0, // 3838-3840
 0,  0,  0, // 3841-3843
 0,  0, // 3844-3845
 0,  0, // 3846-3847
 0,  0, // 3848-3849
 0,  0, // 3850-3851
 0,  0,  0, // 3852-3854
 0,  0,  0, // 3855-3857
 0,  0,  0, // 3858-3860
 0,  0,  0, // 3861-3863
 0,  0,  0, // 3864-3866
 0,  0,  0, // 3867-3869
 0,  0,  0,  0, // 3870-3873
 0,  0,  0,  0, // 3874-3877
 0,  0,  0, // 3878-3880
 0,  0,  0, // 3881-3883
 0,  0,  0,  0, // 3884-3887
 0,  0, // 3888-3889
 0,  0, // 3890-3891
 0,  0,  0, // 3892-3894
 0,  0,  0, // 3895-3897
 0,  0,  0, // 3898-3900
 0,  0,  0, // 3901-3903
 0,  0,  0, // 3904-3906
 0,  0, // 3907-3908
 0,  0,  0, // 3909-3911
 0,  0, // 3912-3913
 0,  0, // 3914-3915
 0,  0,  0, // 3916-3918
 0,  0,  0, // 3919-3921
 0,  0,  0, // 3922-3924
 0,  0,  0, // 3925-3927
 0,  0,  0, // 3928-3930
 0,  0,  0, // 3931-3933
 0,  0,  0, // 3934-3936
 0,  0,  0, // 3937-3939
 0,  0,  0, // 3940-3942
 0,  0,  0, // 3943-3945
 0,  0,  0, // 3946-3948
 0,  0,  0, // 3949-3951
 0,  0, // 3952-3953
 0,  0,  0, // 3954-3956
 0,  0,  0, // 3957-3959
 0,  0, // 3960-3961
 0,  0,  0, // 3962-3964
 0,  0,  0, // 3965-3967
 0,  0,  0, // 3968-3970
 0,  0,  0, // 3971-3973
 0,  0, // 3974-3975
 0,  0, // 3976-3977
 0,  0,  0, // 3978-3980
 0,  0,  0, // 3981-3983
 0,  0,  0, // 3984-3986
 0,  0,  0, // 3987-3989
 0,  0,  0,  0, // 3990-3993
 0,  0,  0, // 3994-3996
 0,  0, // 3997-3998
 0,  0,  0, // 3999-4001
 0,  0,  0, // 4002-4004
 0,  0,  0, // 4005-4007
 0,  0,  0, // 4008-4010
 0,  0,  0, // 4011-4013
 0,  0,  0, // 4014-4016
 0,  0,  0, // 4017-4019
 0,  0,  0, // 4020-4022
 0,  0,  0, // 4023-4025
 0,  0,  0, // 4026-4028
 0,  0,  0, // 4029-4031
 0,  0,  0, // 4032-4034
 0,  0,  0, // 4035-4037
 0,  0,  0, // 4038-4040
 0,  0,  0,  0, // 4041-4044
 0,  0,  0, // 4045-4047
 0,  0,  0, // 4048-4050
 0,  0,  0, // 4051-4053
 0,  0,  0, // 4054-4056
 0,  0,  0, // 4057-4059
 0,  0,  0, // 4060-4062
 0,  0,  0, // 4063-4065
 0,  0,  0,  0, // 4066-4069
 0,  0,  0, // 4070-4072
 0,  0,  0, // 4073-4075
 0,  0,  0, // 4076-4078
 0,  0,  0, // 4079-4081
 0,  0,  0, // 4082-4084
 0,  0,  0, // 4085-4087
 0,  0,  0, // 4088-4090
 0,  0,  0, // 4091-4093
 0,  0,  0, // 4094-4096
 0,  0,  0, // 4097-4099
 0,  0,  0, // 4100-4102
 0,  0,  0, // 4103-4105
 0,  0,  0, // 4106-4108
 0,  0,  0, // 4109-4111
 0,  0,  0, // 4112-4114
 0,  0,  0, // 4115-4117
 0,  0,  0, // 4118-4120
 0,  0,  0, // 4121-4123
 0,  0,  0, // 4124-4126
 0,  0,  0, // 4127-4129
 0,  0,  0, // 4130-4132
 0,  0,  0,  0, // 4133-4136
 0,  0,  0,  0, // 4137-4140
 0,  0, // 4141-4142
 0,  0,  0, // 4143-4145
 0,  0,  0, // 4146-4148
 0,  0,  0, // 4149-4151
 0,  0,  0, // 4152-4154
 0,  0, // 4155-4156
 0,  0,  0, // 4157-4159
 0,  0,  0, // 4160-4162
 0,  0,  0, // 4163-4165
 0,  0,  0, // 4166-4168
 0,  0,  0,  0, // 4169-4172
 0,  0,  0,  0, // 4173-4176
 0,  0,  0, // 4177-4179
 0,  0,  0, // 4180-4182
 0,  0,  0, // 4183-4185
 0,  0,  0, // 4186-4188
 0,  0,  0, // 4189-4191
 0,  0,  0, // 4192-4194
 0,  0,  0, // 4195-4197
 0,  0,  0, // 4198-4200
 0,  0, // 4201-4202
 0,  0,  0, // 4203-4205
 0,  0, // 4206-4207
 0,  0,  0, // 4208-4210
 0,  0,  0, // 4211-4213
 0,  0,  0, // 4214-4216
 0,  0,  0, // 4217-4219
 0,  0,  0, // 4220-4222
 0,  0,  0, // 4223-4225
 0,  0,  0, // 4226-4228
 0,  0,  0, // 4229-4231
 0,  0, // 4232-4233
 0,  0,  0, // 4234-4236
 0,  0,  0, // 4237-4239
 0,  0,  0, // 4240-4242
 0,  0,  0, // 4243-4245
 0,  0,  0, // 4246-4248
 0,  0,  0, // 4249-4251
 0,  0,  0, // 4252-4254
 0,  0,  0, // 4255-4257
 0,  0, // 4258-4259
 0,  0,  0, // 4260-4262
 0,  0,  0, // 4263-4265
 0,  0,  0, // 4266-4268
 0,  0,  0, // 4269-4271
 0,  0,  0, // 4272-4274
 0,  0,  0, // 4275-4277
 0,  0,  0, // 4278-4280
 0,  0,  0, // 4281-4283
 0,  0,  0, // 4284-4286
 0,  0,  0, // 4287-4289
 0,  0,  0, // 4290-4292
 0,  0,  0, // 4293-4295
 0,  0,  0, // 4296-4298
 0,  0,  0, // 4299-4301
 0,  0,  0, // 4302-4304
 0,  0,  0, // 4305-4307
 0,  0,  0, // 4308-4310
 0,  0,  0, // 4311-4313
 0,  0,  0,  0, // 4314-4317
 0,  0,  0,  0, // 4318-4321
 0,  0,  0,  0, // 4322-4325
 0,  0,  0,  0, // 4326-4329
 0,  0,  0,  0, // 4330-4333
 0,  0,  0,  0, // 4334-4337
 0,  0,  0,  0, // 4338-4341
 0,  0,  0,  0, // 4342-4345
 0,  0,  0,  0, // 4346-4349
 0,  0,  0,  0, // 4350-4353
 0,  0,  0,  0, // 4354-4357
 0,  0,  0, // 4358-4360
 0,  0,  0, // 4361-4363
 0,  0,  0, // 4364-4366
 0,  0,  0, // 4367-4369
 0,  0,  0, // 4370-4372
 0,  0,  0, // 4373-4375
 0,  0,  0, // 4376-4378
 0,  0,  0, // 4379-4381
 0,  0,  0, // 4382-4384
 0,  0,  0, // 4385-4387
 0,  0,  0, // 4388-4390
 0,  0,  0, // 4391-4393
 0,  0,  0, // 4394-4396
 0,  0,  0, // 4397-4399
 0,  0,  0, // 4400-4402
 0,  0, // 4403-4404
 0,  0,  0, // 4405-4407
 0,  0,  0, // 4408-4410
 0,  0,  0, // 4411-4413
 0,  0,  0, // 4414-4416
 0,  0,  0, // 4417-4419
 0,  0,  0, // 4420-4422
 0,  0,  0, // 4423-4425
 0,  0,  0,  0, // 4426-4429
 0,  0,  0, // 4430-4432
 0,  0,  0, // 4433-4435
 0,  0,  0, // 4436-4438
 0,  0,  0, // 4439-4441
 0,  0,  0, // 4442-4444
 0,  0,  0, // 4445-4447
 0,  0,  0, // 4448-4450
 0,  0,  0,  0, // 4451-4454
 0,  0,  0, // 4455-4457
 0,  0,  0, // 4458-4460
 0,  0,  0, // 4461-4463
 0,  0,  0, // 4464-4466
 0,  0,  0, // 4467-4469
 0,  0,  0, // 4470-4472
 0,  0,  0, // 4473-4475
 0,  0,  0, // 4476-4478
 0,  0,  0, // 4479-4481
 0,  0,  0, // 4482-4484
 0,  0,  0, // 4485-4487
 0,  0,  0, // 4488-4490
 0,  0,  0, // 4491-4493
 0,  0,  0, // 4494-4496
 0,  0,  0, // 4497-4499
 0,  0,  0, // 4500-4502
 0,  0,  0, // 4503-4505
 0,  0,  0, // 4506-4508
 0,  0,  0, // 4509-4511
 0,  0,  0, // 4512-4514
 0,  0,  0, // 4515-4517
 0,  0,  0, // 4518-4520
 0,  0,  0, // 4521-4523
 0,  0,  0, // 4524-4526
 0,  0,  0, // 4527-4529
 0,  0,  0, // 4530-4532
 0,  0,  0, // 4533-4535
 0,  0,  0, // 4536-4538
 0,  0,  0, // 4539-4541
 0,  0, // 4542-4543
 0,  0,  0, // 4544-4546
 0,  0,  0, // 4547-4549
 0,  0,  0, // 4550-4552
 0,  0,  0, // 4553-4555
 0,  0,  0, // 4556-4558
 0,  0,  0, // 4559-4561
 0,  0,  0, // 4562-4564
 0,  0,  0, // 4565-4567
 0,  0,  0, // 4568-4570
 0,  0,  0, // 4571-4573
 0,  0,  0, // 4574-4576
 0,  0,  0, // 4577-4579
 0,  0,  0, // 4580-4582
 0,  0,  0, // 4583-4585
 0,  0,  0, // 4586-4588
 0,  0,  0, // 4589-4591
 0,  0,  0, // 4592-4594
 0,  0,  0, // 4595-4597
 0,  0,  0, // 4598-4600
 0,  0,  0, // 4601-4603
 0,  0,  0, // 4604-4606
 0,  0,  0, // 4607-4609
 0,  0,  0, // 4610-4612
 0,  0,  0, // 4613-4615
 0,  0,  0, // 4616-4618
 0,  0,  0, // 4619-4621
 0,  0,  0, // 4622-4624
 0,  0,  0, // 4625-4627
 0,  0,  0, // 4628-4630
 0,  0,  0, // 4631-4633
 0,  0,  0, // 4634-4636
 0,  0,  0, // 4637-4639
 0,  0,  0, // 4640-4642
 0,  0,  0, // 4643-4645
 0,  0,  0, // 4646-4648
 0,  0,  0, // 4649-4651
 0,  0,  0, // 4652-4654
 0,  0,  0, // 4655-4657
 0,  0,  0, // 4658-4660
 0,  0,  0, // 4661-4663
 0,  0,  0, // 4664-4666
 0,  0,  0, // 4667-4669
 0,  0,  0, // 4670-4672
 0,  0,  0, // 4673-4675
 0,  0,  0, // 4676-4678
 0,  0,  0, // 4679-4681
 0,  0,  0, // 4682-4684
 0,  0,  0, // 4685-4687
 0,  0,  0, // 4688-4690
 0,  0,  0, // 4691-4693
 0,  0,  0, // 4694-4696
 0,  0,  0, // 4697-4699
 0,  0, // 4700-4701
 0,  0,  0, // 4702-4704
 0,  0,  0, // 4705-4707
 0,  0,  0, // 4708-4710
 0,  0,  0, // 4711-4713
 0,  0,  0, // 4714-4716
 0,  0,  0, // 4717-4719
 0,  0,  0, // 4720-4722
 0,  0,  0, // 4723-4725
 0,  0,  0, // 4726-4728
 0,  0,  0, // 4729-4731
 0,  0,  0, // 4732-4734
 0,  0,  0, // 4735-4737
 0,  0,  0, // 4738-4740
 0,  0,  0, // 4741-4743
 0,  0,  0, // 4744-4746
 0,  0,  0, // 4747-4749
 0,  0,  0, // 4750-4752
 0,  0,  0, // 4753-4755
 0,  0,  0, // 4756-4758
 0,  0,  0, // 4759-4761
 0,  0,  0, // 4762-4764
 0,  0,  0, // 4765-4767
 0,  0,  0, // 4768-4770
 0,  0,  0, // 4771-4773
 0,  0,  0, // 4774-4776
 0,  0,  0, // 4777-4779
 0,  0,  0, // 4780-4782
 0,  0,  0, // 4783-4785
 0,  0,  0, // 4786-4788
 0,  0,  0, // 4789-4791
 0,  0,  0, // 4792-4794
 0,  0,  0, // 4795-4797
 0,  0,  0, // 4798-4800
 0,  0,  0, // 4801-4803
 0,  0,  0, // 4804-4806
 0,  0,  0, // 4807-4809
 0,  0,  0, // 4810-4812
 0,  0,  0, // 4813-4815
 0,  0,  0, // 4816-4818
 0,  0,  0, // 4819-4821
 0,  0,  0, // 4822-4824
 0,  0,  0, // 4825-4827
 0,  0,  0, // 4828-4830
 0,  0,  0, // 4831-4833
 0,  0,  0, // 4834-4836
 0,  0,  0, // 4837-4839
 0,  0,  0, // 4840-4842
 0,  0,  0, // 4843-4845
 0,  0,  0, // 4846-4848
 0,  0,  0, // 4849-4851
 0,  0,  0, // 4852-4854
 0,  0,  0, // 4855-4857
 0,  0,  0, // 4858-4860
 0,  0,  0, // 4861-4863
 0,  0,  0, // 4864-4866
 0,  0,  0, // 4867-4869
 0,  0,  0, // 4870-4872
 0,  0,  0, // 4873-4875
 0,  0,  0, // 4876-4878
 0,  0,  0, // 4879-4881
 0,  0,  0, // 4882-4884
 0,  0,  0, // 4885-4887
 0,  0,  0, // 4888-4890
 0,  0,  0, // 4891-4893
 0,  0,  0, // 4894-4896
 0,  0,  0, // 4897-4899
 0,  0,  0, // 4900-4902
 0,  0,  0, // 4903-4905
 0,  0,  0, // 4906-4908
 0,  0,  0, // 4909-4911
 0,  0,  0, // 4912-4914
 0,  0,  0, // 4915-4917
 0,  0,  0, // 4918-4920
 0,  0,  0, // 4921-4923
 0,  0,  0, // 4924-4926
 0,  0,  0, // 4927-4929
 0,  0,  0, // 4930-4932
 0,  0,  0, // 4933-4935
 0,  0,  0, // 4936-4938
 0,  0,  0, // 4939-4941
 0,  0,  0, // 4942-4944
 0,  0,  0, // 4945-4947
 0,  0,  0, // 4948-4950
 0,  0,  0, // 4951-4953
 0,  0,  0, // 4954-4956
 0,  0,  0, // 4957-4959
 0,  0,  0, // 4960-4962
 0,  0,  0,  0, // 4963-4966
 0,  0,  0, // 4967-4969
 0,  0,  0, // 4970-4972
 0,  0,  0,  0, // 4973-4976
 0,  0,  0, // 4977-4979
 0,  0,  0,  0, // 4980-4983
 0,  0,  0,  0, // 4984-4987
 0,  0,  0, // 4988-4990
 0,  0,  0,  0, // 4991-4994
 0,  0,  0,  0, // 4995-4998
 0,  0,  0, // 4999-5001
 0,  0,  0,  0, // 5002-5005
 0,  0,  0,  0, // 5006-5009
 0,  0,  0, // 5010-5012
 0,  0,  0,  0, // 5013-5016
 0,  0,  0,  0, // 5017-5020
 0,  0,  0, // 5021-5023
 0,  0,  0, // 5024-5026
 0,  0,  0, // 5027-5029
 0,  0,  0, // 5030-5032
 0,  0, // 5033-5034
 0,  0, // 5035-5036
 0,  0, // 5037-5038
 0,  0, // 5039-5040
 0,  0,  0, // 5041-5043
 0,  0,  0, // 5044-5046
 0,  0,  0, // 5047-5049
 0,  0,  0, // 5050-5052
 0,  0,  0, // 5053-5055
 0,  0,  0, // 5056-5058
 0,  0,  0,  0, // 5059-5062
 0,  0,  0,  0, // 5063-5066
 0,  0,  0, // 5067-5069
 0,  0,  0, // 5070-5072
 0,  0,  0, // 5073-5075
 0,  0,  0,  0, // 5076-5079
 0,  0, // 5080-5081
 0,  0, // 5082-5083
 0,  0,  0, // 5084-5086
 0,  0,  0, // 5087-5089
 0,  0,  0, // 5090-5092
 0,  0,  0, // 5093-5095
 0,  0,  0, // 5096-5098
 0,  0, // 5099-5100
 0,  0,  0, // 5101-5103
 0,  0, // 5104-5105
 0,  0, // 5106-5107
 0,  0,  0, // 5108-5110
 0,  0,  0, // 5111-5113
 0,  0,  0, // 5114-5116
 0,  0,  0, // 5117-5119
 0,  0,  0, // 5120-5122
 0,  0,  0, // 5123-5125
 0,  0,  0, // 5126-5128
 0,  0,  0, // 5129-5131
 0,  0,  0, // 5132-5134
 0,  0,  0, // 5135-5137
 0,  0,  0, // 5138-5140
 0,  0,  0, // 5141-5143
 0,  0, // 5144-5145
 0,  0,  0, // 5146-5148
 0,  0,  0, // 5149-5151
 0,  0, // 5152-5153
 0,  0,  0, // 5154-5156
 0,  0,  0, // 5157-5159
 0,  0,  0, // 5160-5162
 0,  0,  0, // 5163-5165
 0,  0, // 5166-5167
 0,  0, // 5168-5169
 0,  0,  0, // 5170-5172
 0,  0,  0, // 5173-5175
 0,  0,  0, // 5176-5178
 0,  0,  0, // 5179-5181
 0,  0,  0,  0, // 5182-5185
 0,  0,  0, // 5186-5188
 0,  0, // 5189-5190
 0,  0,  0, // 5191-5193
 0,  0,  0, // 5194-5196
 0,  0,  0, // 5197-5199
 0,  0,  0, // 5200-5202
 0,  0,  0, // 5203-5205
 0,  0,  0, // 5206-5208
 0,  0,  0, // 5209-5211
 0,  0,  0, // 5212-5214
 0,  0,  0, // 5215-5217
 0,  0,  0, // 5218-5220
 0,  0,  0, // 5221-5223
 0,  0,  0, // 5224-5226
 0,  0,  0, // 5227-5229
 0,  0,  0, // 5230-5232
 0,  0,  0,  0, // 5233-5236
 0,  0,  0, // 5237-5239
 0,  0,  0, // 5240-5242
 0,  0,  0, // 5243-5245
 0,  0,  0, // 5246-5248
 0,  0,  0, // 5249-5251
 0,  0,  0, // 5252-5254
 0,  0,  0, // 5255-5257
 0,  0,  0,  0, // 5258-5261
 0,  0,  0, // 5262-5264
 0,  0,  0, // 5265-5267
 0,  0,  0, // 5268-5270
 0,  0,  0, // 5271-5273
 0,  0,  0, // 5274-5276
 0,  0,  0, // 5277-5279
 0,  0,  0, // 5280-5282
 0,  0,  0, // 5283-5285
 0,  0,  0, // 5286-5288
 0,  0,  0, // 5289-5291
 0,  0,  0, // 5292-5294
 0,  0,  0, // 5295-5297
 0,  0,  0, // 5298-5300
 0,  0,  0, // 5301-5303
 0,  0,  0, // 5304-5306
 0,  0,  0, // 5307-5309
 0,  0,  0, // 5310-5312
 0,  0,  0, // 5313-5315
 0,  0,  0, // 5316-5318
 0,  0,  0, // 5319-5321
 0,  0,  0, // 5322-5324
 0,  0,  0,  0, // 5325-5328
 0,  0,  0,  0, // 5329-5332
 0,  0, // 5333-5334
 0,  0,  0, // 5335-5337
 0,  0,  0, // 5338-5340
 0,  0,  0, // 5341-5343
 0,  0,  0, // 5344-5346
 0,  0, // 5347-5348
 0,  0,  0, // 5349-5351
 0,  0,  0, // 5352-5354
 0,  0,  0, // 5355-5357
 0,  0,  0, // 5358-5360
 0,  0,  0,  0, // 5361-5364
 0,  0,  0,  0, // 5365-5368
 0,  0,  0, // 5369-5371
 0,  0,  0, // 5372-5374
 0,  0,  0, // 5375-5377
 0,  0,  0, // 5378-5380
 0,  0,  0, // 5381-5383
 0,  0,  0, // 5384-5386
 0,  0,  0, // 5387-5389
 0,  0,  0, // 5390-5392
 0,  0,  0, // 5393-5395
 0,  0, // 5396-5397
 0,  0,  0, // 5398-5400
 0,  0, // 5401-5402
 0,  0,  0, // 5403-5405
 0,  0,  0, // 5406-5408
 0,  0,  0, // 5409-5411
 0,  0,  0, // 5412-5414
 0,  0,  0, // 5415-5417
 0,  0,  0, // 5418-5420
 0,  0,  0, // 5421-5423
 0,  0,  0, // 5424-5426
 0,  0, // 5427-5428
 0,  0,  0, // 5429-5431
 0,  0,  0, // 5432-5434
 0,  0,  0, // 5435-5437
 0,  0,  0, // 5438-5440
 0,  0,  0, // 5441-5443
 0,  0,  0, // 5444-5446
 0,  0,  0, // 5447-5449
 0,  0,  0, // 5450-5452
 0,  0, // 5453-5454
 0,  0,  0, // 5455-5457
 0,  0,  0, // 5458-5460
 0,  0,  0, // 5461-5463
 0,  0,  0, // 5464-5466
 0,  0,  0, // 5467-5469
 0,  0,  0, // 5470-5472
 0,  0,  0, // 5473-5475
 0,  0,  0, // 5476-5478
 0,  0,  0, // 5479-5481
 0,  0,  0, // 5482-5484
 0,  0,  0, // 5485-5487
 0,  0,  0, // 5488-5490
 0,  0,  0, // 5491-5493
 0,  0,  0, // 5494-5496
 0,  0,  0, // 5497-5499
 0,  0,  0, // 5500-5502
 0,  0,  0, // 5503-5505
 0,  0,  0, // 5506-5508
 0,  0,  0,  0, // 5509-5512
 0,  0,  0,  0, // 5513-5516
 0,  0,  0,  0, // 5517-5520
 0,  0,  0,  0, // 5521-5524
 0,  0,  0,  0, // 5525-5528
 0,  0,  0,  0, // 5529-5532
 0,  0,  0,  0, // 5533-5536
 0,  0,  0,  0, // 5537-5540
 0,  0,  0,  0, // 5541-5544
 0,  0,  0,  0, // 5545-5548
 0,  0,  0,  0, // 5549-5552
 0,  0,  0, // 5553-5555
 0,  0,  0, // 5556-5558
 0,  0,  0, // 5559-5561
 0,  0,  0, // 5562-5564
 0,  0,  0, // 5565-5567
 0,  0,  0, // 5568-5570
 0,  0,  0, // 5571-5573
 0,  0,  0, // 5574-5576
 0,  0,  0, // 5577-5579
 0,  0,  0, // 5580-5582
 0,  0,  0, // 5583-5585
 0,  0,  0, // 5586-5588
 0,  0,  0, // 5589-5591
 0,  0,  0, // 5592-5594
 0,  0,  0, // 5595-5597
 0,  0, // 5598-5599
 0,  0,  0, // 5600-5602
 0,  0,  0, // 5603-5605
 0,  0,  0, // 5606-5608
 0,  0,  0, // 5609-5611
 0,  0,  0, // 5612-5614
 0,  0,  0, // 5615-5617
 0,  0,  0, // 5618-5620
 0,  0,  0,  0, // 5621-5624
 0,  0,  0, // 5625-5627
 0,  0,  0, // 5628-5630
 0,  0,  0, // 5631-5633
 0,  0,  0, // 5634-5636
 0,  0,  0, // 5637-5639
 0,  0,  0, // 5640-5642
 0,  0,  0, // 5643-5645
 0,  0,  0,  0, // 5646-5649
 0,  0,  0, // 5650-5652
 0,  0,  0, // 5653-5655
 0,  0,  0, // 5656-5658
 0,  0,  0, // 5659-5661
 0,  0,  0, // 5662-5664
 0,  0,  0, // 5665-5667
 0,  0,  0, // 5668-5670
 0,  0,  0, // 5671-5673
 0,  0,  0, // 5674-5676
 0,  0,  0, // 5677-5679
 0,  0,  0, // 5680-5682
 0,  0,  0, // 5683-5685
 0,  0,  0, // 5686-5688
 0,  0,  0, // 5689-5691
 0,  0,  0, // 5692-5694
 0,  0,  0, // 5695-5697
 0,  0,  0, // 5698-5700
 0,  0,  0, // 5701-5703
 0,  0,  0, // 5704-5706
 0,  0,  0, // 5707-5709
 0,  0,  0, // 5710-5712
 0,  0,  0, // 5713-5715
 0,  0,  0, // 5716-5718
 0,  0,  0, // 5719-5721
 0,  0,  0, // 5722-5724
 0,  0,  0, // 5725-5727
 0,  0,  0, // 5728-5730
 0,  0,  0, // 5731-5733
 0,  0,  0, // 5734-5736
 0,  0, // 5737-5738
 0,  0,  0, // 5739-5741
 0,  0,  0, // 5742-5744
 0,  0,  0, // 5745-5747
 0,  0,  0, // 5748-5750
 0,  0,  0, // 5751-5753
 0,  0,  0, // 5754-5756
 0,  0,  0, // 5757-5759
 0,  0,  0, // 5760-5762
 0,  0,  0, // 5763-5765
 0,  0,  0, // 5766-5768
 0,  0,  0, // 5769-5771
 0,  0,  0, // 5772-5774
 0,  0,  0, // 5775-5777
 0,  0,  0, // 5778-5780
 0,  0,  0, // 5781-5783
 0,  0,  0, // 5784-5786
 0,  0,  0, // 5787-5789
 0,  0,  0, // 5790-5792
 0,  0,  0, // 5793-5795
 0,  0,  0, // 5796-5798
 0,  0,  0, // 5799-5801
 0,  0,  0, // 5802-5804
 0,  0,  0, // 5805-5807
 0,  0,  0, // 5808-5810
 0,  0,  0, // 5811-5813
 0,  0,  0, // 5814-5816
 0,  0,  0, // 5817-5819
 0,  0,  0, // 5820-5822
 0,  0,  0, // 5823-5825
 0,  0,  0, // 5826-5828
 0,  0,  0, // 5829-5831
 0,  0,  0, // 5832-5834
 0,  0,  0, // 5835-5837
 0,  0,  0, // 5838-5840
 0,  0,  0, // 5841-5843
 0,  0,  0, // 5844-5846
 0,  0,  0, // 5847-5849
 0,  0,  0, // 5850-5852
 0,  0,  0, // 5853-5855
 0,  0,  0, // 5856-5858
 0,  0,  0, // 5859-5861
 0,  0,  0, // 5862-5864
 0,  0,  0, // 5865-5867
 0,  0,  0, // 5868-5870
 0,  0,  0, // 5871-5873
 0,  0,  0, // 5874-5876
 0,  0,  0, // 5877-5879
 0,  0,  0, // 5880-5882
 0,  0,  0, // 5883-5885
 0,  0,  0, // 5886-5888
 0,  0,  0, // 5889-5891
 0,  0,  0, // 5892-5894
 0,  0, // 5895-5896
 0,  0,  0, // 5897-5899
 0,  0,  0, // 5900-5902
 0,  0,  0, // 5903-5905
 0,  0,  0, // 5906-5908
 0,  0,  0, // 5909-5911
 0,  0,  0, // 5912-5914
 0,  0,  0, // 5915-5917
 0,  0,  0, // 5918-5920
 0,  0,  0, // 5921-5923
 0,  0,  0, // 5924-5926
 0,  0,  0, // 5927-5929
 0,  0,  0, // 5930-5932
 0,  0,  0, // 5933-5935
 0,  0,  0, // 5936-5938
 0,  0,  0, // 5939-5941
 0,  0,  0, // 5942-5944
 0,  0,  0, // 5945-5947
 0,  0,  0, // 5948-5950
 0,  0,  0, // 5951-5953
 0,  0,  0, // 5954-5956
 0,  0,  0, // 5957-5959
 0,  0,  0, // 5960-5962
 0,  0,  0, // 5963-5965
 0,  0,  0, // 5966-5968
 0,  0,  0, // 5969-5971
 0,  0,  0, // 5972-5974
 0,  0,  0, // 5975-5977
 0,  0,  0, // 5978-5980
 0,  0,  0, // 5981-5983
 0,  0,  0, // 5984-5986
 0,  0,  0, // 5987-5989
 0,  0,  0, // 5990-5992
 0,  0,  0, // 5993-5995
 0,  0,  0, // 5996-5998
 0,  0,  0, // 5999-6001
 0,  0,  0, // 6002-6004
 0,  0,  0, // 6005-6007
 0,  0,  0, // 6008-6010
 0,  0,  0, // 6011-6013
 0,  0,  0, // 6014-6016
 0,  0,  0, // 6017-6019
 0,  0,  0, // 6020-6022
 0,  0,  0, // 6023-6025
 0,  0,  0, // 6026-6028
 0,  0,  0, // 6029-6031
 0,  0,  0, // 6032-6034
 0,  0,  0, // 6035-6037
 0,  0,  0, // 6038-6040
 0,  0,  0, // 6041-6043
 0,  0,  0, // 6044-6046
 0,  0,  0, // 6047-6049
 0,  0,  0, // 6050-6052
 0,  0,  0, // 6053-6055
 0,  0,  0, // 6056-6058
 0,  0,  0, // 6059-6061
 0,  0,  0, // 6062-6064
 0,  0,  0, // 6065-6067
 0,  0,  0, // 6068-6070
 0,  0,  0, // 6071-6073
 0,  0,  0, // 6074-6076
 0,  0,  0, // 6077-6079
 0,  0,  0, // 6080-6082
 0,  0,  0, // 6083-6085
 0,  0,  0, // 6086-6088
 0,  0,  0, // 6089-6091
 0,  0,  0, // 6092-6094
 0,  0,  0, // 6095-6097
 0,  0,  0, // 6098-6100
 0 // End bypass tables
};

static const llvm::InstrItinerary PPC440Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 1, 6, 0, 0 }, // 1 IIC_LdStSync
  { 1, 6, 11, 1, 4 }, // 2 IIC_IntSimple
  { 1, 6, 11, 4, 7 }, // 3 IIC_IntGeneral
  { 1, 11, 16, 7, 9 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 6, 11, 9, 12 }, // 6 IIC_IntRotate
  { 1, 6, 11, 12, 15 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 11, 16, 15, 18 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 16, 21, 18, 20 }, // 13 IIC_LdStDCBF
  { 1, 21, 26, 20, 23 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 26, 31, 23, 26 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 31, 40, 26, 29 }, // 18 IIC_FPAddSub
  { 1, 40, 49, 29, 32 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 31, 40, 32, 35 }, // 21 IIC_FPCompare
  { 1, 31, 40, 35, 38 }, // 22 IIC_FPGeneral
  { 0, 0, 0, 0, 0 }, // 23 IIC_VecGeneral
  { 0, 0, 0, 0, 0 }, // 24 IIC_VecComplex
  { 1, 21, 26, 38, 41 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 49, 58, 41, 44 }, // 27 IIC_FPDivS
  { 1, 31, 40, 44, 48 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 16, 21, 48, 51 }, // 31 IIC_LdStICBI
  { 1, 6, 11, 51, 55 }, // 32 IIC_IntISEL
  { 1, 58, 74, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 74, 81, 55, 58 }, // 34 IIC_LdStLWARX
  { 1, 21, 26, 58, 62 }, // 35 IIC_LdStLoadUpd
  { 1, 21, 26, 62, 66 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 21, 26, 66, 69 }, // 40 IIC_LdStLFD
  { 1, 16, 21, 69, 73 }, // 41 IIC_LdStLFDU
  { 1, 16, 21, 73, 77 }, // 42 IIC_LdStLFDUX
  { 1, 16, 21, 77, 80 }, // 43 IIC_LdStLHA
  { 1, 16, 21, 80, 83 }, // 44 IIC_LdStLHAU
  { 1, 16, 21, 83, 86 }, // 45 IIC_LdStLHAUX
  { 1, 16, 21, 86, 89 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 11, 16, 89, 92 }, // 51 IIC_BrMCR
  { 1, 11, 16, 92, 95 }, // 52 IIC_BrMCRX
  { 1, 11, 16, 95, 97 }, // 53 IIC_SprMFCR
  { 1, 81, 86, 97, 99 }, // 54 IIC_SprMFSPR
  { 1, 11, 16, 99, 102 }, // 55 IIC_IntMFFS
  { 1, 11, 16, 102, 104 }, // 56 IIC_SprMFMSR
  { 0, 0, 0, 0, 0 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 1, 11, 16, 104, 106 }, // 59 IIC_SprMFSR
  { 1, 81, 86, 106, 108 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 81, 86, 108, 110 }, // 62 IIC_SprMTSPR
  { 1, 11, 16, 110, 113 }, // 63 IIC_IntMTFSB0
  { 1, 11, 16, 113, 115 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 1, 81, 86, 115, 117 }, // 67 IIC_SprMTSR
  { 1, 11, 16, 117, 120 }, // 68 IIC_IntMulHW
  { 1, 11, 16, 120, 123 }, // 69 IIC_IntMulHWU
  { 1, 11, 16, 123, 126 }, // 70 IIC_IntMulLI
  { 1, 11, 16, 126, 128 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 6, 11, 128, 131 }, // 82 IIC_IntShift
  { 1, 74, 81, 131, 134 }, // 83 IIC_LdStSTWCX
  { 1, 21, 26, 134, 138 }, // 84 IIC_LdStSTU
  { 1, 21, 26, 138, 142 }, // 85 IIC_LdStSTUX
  { 1, 21, 26, 142, 145 }, // 86 IIC_LdStSTD
  { 1, 74, 81, 145, 148 }, // 87 IIC_LdStSTDCX
  { 1, 16, 21, 148, 151 }, // 88 IIC_LdStSTFD
  { 1, 16, 21, 151, 155 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 11, 16, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 11, 16, 155, 157 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 0, 0, 0, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 81, 86, 157, 159 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 11, 16, 159, 162 }, // 105 MTFSB0_MTFSB1
  { 1, 11, 16, 162, 165 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 6, 11, 165, 168 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 11, 16, 168, 170 }, // 109 TW_TWI
  { 1, 31, 40, 170, 173 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 31, 40, 173, 176 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 6, 11, 176, 179 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 0, 0, 0, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 6, 11, 179, 182 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 6, 11, 182, 185 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 6, 11, 185, 188 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 11, 16, 188, 191 }, // 122 MCRF
  { 1, 11, 16, 191, 194 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 11, 16, 194, 196 }, // 125 RFEBB
  { 1, 81, 86, 196, 198 }, // 126 TBEGIN_TRECHKPT
  { 1, 21, 26, 198, 201 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 6, 11, 201, 204 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 0, 0, 0, 0, 0 }, // 131 MFOCRF_MFOCRF8
  { 1, 11, 16, 204, 207 }, // 132 MTOCRF_MTOCRF8
  { 1, 11, 16, 207, 210 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 6, 11, 210, 213 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 31, 40, 213, 216 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 6, 11, 216, 219 }, // 136 SRAW_SRAWI
  { 1, 6, 11, 219, 223 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 81, 86, 223, 225 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 21, 26, 225, 228 }, // 140 MFVSCR
  { 1, 21, 26, 228, 231 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 31, 40, 231, 234 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 0, 0, 0, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 11, 16, 234, 237 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 11, 16, 237, 240 }, // 150 MULHDU_MULHWU
  { 1, 11, 16, 240, 243 }, // 151 MULLI_MULLI8
  { 1, 31, 40, 243, 246 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 31, 40, 246, 249 }, // 153 FADD_FSUB
  { 1, 31, 40, 249, 253 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 31, 40, 253, 256 }, // 156 FSELD_rec_FSELS_rec
  { 1, 11, 16, 256, 259 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 11, 16, 259, 262 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 31, 40, 262, 265 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 31, 40, 265, 268 }, // 161 FADD_rec_FSUB_rec
  { 1, 31, 40, 268, 272 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 21, 26, 272, 275 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 0, 0, 0, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 31, 40, 275, 278 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 21, 26, 278, 281 }, // 175 LXVL_LXVLL
  { 1, 21, 26, 281, 284 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 21, 26, 284, 287 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 16, 21, 287, 289 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 16, 21, 289, 292 }, // 181 ICBI_ICBIEP
  { 1, 21, 26, 292, 295 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 74, 81, 295, 298 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 58, 74, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 11, 16, 0, 0 }, // 189 TLBSYNC
  { 1, 1, 6, 0, 0 }, // 190 SYNC
  { 1, 16, 21, 298, 301 }, // 191 LMW
  { 1, 21, 26, 301, 304 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 21, 26, 304, 308 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 21, 26, 308, 312 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 81, 86, 312, 314 }, // 201 TEND
  { 1, 74, 81, 314, 317 }, // 202 STBCX_STHCX_STWCX
  { 1, 74, 81, 317, 320 }, // 203 STDCX
  { 1, 16, 21, 320, 323 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 81, 86, 323, 325 }, // 207 TCHECK
  { 1, 21, 26, 325, 328 }, // 208 LFIWAX
  { 1, 21, 26, 328, 331 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 21, 26, 331, 334 }, // 211 LFSX_LFS
  { 1, 21, 26, 334, 337 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 16, 21, 337, 340 }, // 214 LHAU_LHAU8
  { 1, 16, 21, 340, 343 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 21, 26, 343, 346 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 16, 21, 346, 349 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 21, 26, 349, 352 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 21, 26, 352, 355 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 21, 26, 355, 358 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 16, 21, 358, 361 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 21, 26, 361, 364 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 16, 21, 364, 367 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 21, 26, 367, 370 }, // 227 STXVL_STXVLL
  { 1, 81, 86, 370, 372 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 6, 11, 372, 375 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 81, 86, 375, 377 }, // 232 MFTB_MFTB8
  { 1, 81, 86, 377, 379 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 11, 16, 379, 381 }, // 234 MFMSR
  { 1, 11, 16, 381, 383 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 81, 86, 383, 385 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 26, 31, 385, 388 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 26, 31, 388, 391 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 26, 31, 391, 394 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 26, 31, 394, 397 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 11, 16, 397, 400 }, // 246 MTCRF_MTCRF8
  { 1, 6, 11, 400, 403 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 31, 40, 403, 406 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 11, 16, 406, 409 }, // 249 MCRFS
  { 1, 11, 16, 409, 412 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 11, 16, 412, 415 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 6, 11, 415, 418 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 6, 11, 418, 421 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 6, 11, 421, 424 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 11, 16, 424, 427 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 11, 16, 427, 429 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 40, 49, 429, 432 }, // 261 FDIV
  { 1, 40, 49, 432, 435 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 40, 49, 435, 438 }, // 271 XSDIVDP
  { 1, 49, 58, 438, 441 }, // 272 FDIVS
  { 1, 49, 58, 441, 444 }, // 273 FDIVS_rec
  { 1, 49, 58, 444, 447 }, // 274 XSDIVSP
  { 1, 49, 58, 447, 450 }, // 275 XVDIVSP
  { 1, 40, 49, 450, 453 }, // 276 XVDIVDP
  { 1, 16, 21, 453, 457 }, // 277 LFSU
  { 1, 16, 21, 457, 461 }, // 278 LFSUX
  { 1, 16, 21, 461, 465 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 21, 26, 465, 469 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 21, 26, 469, 473 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 21, 26, 473, 477 }, // 282 LBZU_LBZU8
  { 1, 21, 26, 477, 481 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 1, 16, 21, 481, 485 }, // 286 LFDU
  { 1, 16, 21, 485, 489 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 11, 16, 489, 491 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 11, 16, 491, 493 }, // 290 ADDPCIS
  { 1, 21, 26, 493, 496 }, // 291 LDAT_LWAT
  { 1, 21, 26, 496, 499 }, // 292 STDAT_STWAT
  { 1, 6, 11, 499, 502 }, // 293 BRINC
  { 0, 0, 0, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 0, 0, 0, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 21, 26, 502, 505 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 21, 26, 505, 508 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 11, 16, 508, 510 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 1, 11, 16, 510, 512 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 21, 26, 512, 515 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 21, 26, 515, 518 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 21, 26, 518, 521 }, // 303 LFDEPX
  { 1, 16, 21, 521, 524 }, // 304 STFDEPX
  { 1, 11, 16, 524, 526 }, // 305 MFSR_MFSRIN
  { 1, 81, 86, 526, 528 }, // 306 MTSR_MTSRIN
  { 1, 81, 86, 528, 530 }, // 307 MFDCR
  { 1, 81, 86, 530, 532 }, // 308 MTDCR
  { 1, 6, 11, 532, 535 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 11, 16, 535, 537 }, // 311 WRTEE_WRTEEI
  { 1, 6, 11, 537, 540 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 1, 6, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 16, 21, 540, 542 }, // 317 DCBA_DCBI
  { 1, 31, 40, 542, 545 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 1, 31, 40, 545, 548 }, // 322 FADDS_FMULS_FSUBS
  { 1, 31, 40, 548, 552 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 0, 0, 0, 0, 0 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 1, 31, 40, 552, 555 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 31, 40, 555, 559 }, // 331 FMUL_rec
  { 1, 31, 40, 559, 562 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 11, 16, 562, 564 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 11, 16, 564, 566 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 11, 16, 566, 568 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 11, 16, 568, 570 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 6, 11, 570, 573 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 0, 0, 0, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 6, 11, 573, 576 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 0, 0, 0, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 0, 0, 0, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 26, 31, 576, 579 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 0, 0, 0, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 0, 0, 0, 0, 0 }, // 349 VMODSD_VMODUD
  { 0, 0, 0, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 0, 0, 0, 0, 0 }, // 351 VMODSW_VMODUW
  { 0, 0, 0, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 0, 0, 0, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 0, 0, 0, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 0, 0, 0, 0, 0 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 21, 26, 579, 582 }, // 360 TRAP
  { 1, 11, 16, 582, 584 }, // 361 TW
  { 1, 6, 11, 584, 587 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 6, 11, 587, 590 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 31, 40, 590, 593 }, // 364 FTSQRT
  { 0, 0, 0, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 6, 11, 593, 596 }, // 366 POPCNTB_POPCNTB8
  { 0, 0, 0, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 1, 31, 40, 596, 599 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 1, 31, 40, 599, 602 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 6, 11, 602, 605 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 6, 11, 605, 608 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 0, 0, 0, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 11, 16, 608, 611 }, // 387 CR6SET_CREQV_CRSET
  { 1, 21, 26, 611, 614 }, // 388 DSS_DSSALL
  { 1, 81, 86, 614, 616 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 6, 11, 616, 619 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 0, 0, 0, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 6, 11, 619, 622 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 6, 11, 622, 625 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 31, 40, 625, 628 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 6, 11, 628, 631 }, // 398 SETB_SETB8
  { 1, 6, 11, 631, 634 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 0, 0, 0, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 0, 0, 0, 0, 0 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 6, 11, 634, 637 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 6, 11, 637, 640 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 6, 11, 640, 643 }, // 407 CMPB_CMPB8
  { 1, 11, 16, 643, 646 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 6, 11, 646, 649 }, // 410 SLW_SLW8_SRW_SRW8
  { 0, 0, 0, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 6, 11, 649, 652 }, // 414 ADDEX_ADDEX8
  { 1, 21, 26, 652, 655 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 11, 16, 655, 658 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 81, 86, 658, 660 }, // 418 TRECHKPT
  { 1, 6, 11, 660, 663 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 11, 16, 663, 666 }, // 420 MTFSB0
  { 1, 6, 11, 666, 669 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 6, 11, 669, 672 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 6, 11, 672, 675 }, // 423 ADDG6S_ADDG6S8
  { 1, 11, 16, 675, 677 }, // 424 HRFID
  { 1, 31, 40, 677, 680 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 11, 16, 680, 682 }, // 426 SC
  { 1, 6, 11, 682, 685 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 6, 11, 685, 688 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 11, 16, 688, 691 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 11, 16, 691, 694 }, // 430 MTFSFI_rec
  { 0, 0, 0, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 21, 26, 694, 697 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 21, 26, 697, 700 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 16, 21, 700, 702 }, // 436 DCBT_DCBTST
  { 1, 21, 26, 702, 705 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 21, 26, 705, 708 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 81, 86, 708, 710 }, // 441 MTSR
  { 1, 6, 11, 710, 713 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 21, 26, 713, 716 }, // 443 LSWI
  { 1, 21, 26, 716, 719 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 21, 26, 719, 722 }, // 445 LXVP_LXVPX
  { 1, 11, 16, 722, 724 }, // 446 MFSR
  { 1, 81, 86, 724, 726 }, // 447 MFTB8
  { 0, 0, 0, 0, 0 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 455 PMXVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 456 XXMTACC
  { 0, 0, 0, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 0, 0, 0, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 6, 11, 726, 729 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 0, 0, 0, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 0, 0, 0, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 0, 0, 0, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 0, 0, 0, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 0, 0, 0, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 0, 0, 0, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 0, 0, 0, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 0, 0, 0, 0, 0 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 16, 21, 729, 731 }, // 478 DCBST_DCBZ
  { 1, 16, 21, 731, 734 }, // 479 ICBI
  { 1, 16, 21, 734, 736 }, // 480 DCBF
  { 1, 21, 26, 736, 739 }, // 481 PSTXVP_PSTXVPpc
  { 1, 21, 26, 739, 742 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 21, 26, 742, 745 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 16, 21, 745, 748 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 21, 26, 748, 751 }, // 488 EnforceIEIO
  { 1, 21, 26, 751, 754 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 21, 26, 754, 757 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 21, 26, 757, 760 }, // 491 STXVP_STXVPX
  { 1, 11, 16, 760, 762 }, // 492 ATTN_NAP
  { 1, 16, 21, 762, 764 }, // 493 DCBZL
  { 1, 21, 26, 764, 767 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 21, 26, 767, 770 }, // 495 ICBLC
  { 1, 11, 16, 770, 772 }, // 496 CLRBHRB
  { 1, 11, 16, 772, 774 }, // 497 MFBHRBE
  { 1, 21, 26, 774, 777 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 6, 11, 777, 780 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 0, 0, 0, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 0, 0, 0, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary G3Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 86, 87, 0, 0 }, // 1 IIC_LdStSync
  { 1, 87, 88, 0, 0 }, // 2 IIC_IntSimple
  { 1, 87, 88, 0, 0 }, // 3 IIC_IntGeneral
  { 1, 88, 89, 0, 0 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 87, 88, 0, 0 }, // 6 IIC_IntRotate
  { 1, 87, 88, 0, 0 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 89, 90, 0, 0 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 86, 87, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 90, 91, 0, 0 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 91, 92, 0, 0 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 92, 93, 0, 0 }, // 18 IIC_FPAddSub
  { 1, 93, 94, 0, 0 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 92, 93, 0, 0 }, // 21 IIC_FPCompare
  { 1, 92, 93, 0, 0 }, // 22 IIC_FPGeneral
  { 0, 0, 0, 0, 0 }, // 23 IIC_VecGeneral
  { 0, 0, 0, 0, 0 }, // 24 IIC_VecComplex
  { 1, 90, 91, 0, 0 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 94, 95, 0, 0 }, // 27 IIC_FPDivS
  { 1, 95, 96, 0, 0 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 86, 87, 0, 0 }, // 31 IIC_LdStICBI
  { 0, 0, 0, 0, 0 }, // 32 IIC_IntISEL
  { 1, 96, 97, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 86, 87, 0, 0 }, // 34 IIC_LdStLWARX
  { 1, 90, 91, 0, 0 }, // 35 IIC_LdStLoadUpd
  { 1, 90, 91, 0, 0 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 90, 91, 0, 0 }, // 40 IIC_LdStLFD
  { 1, 90, 91, 0, 0 }, // 41 IIC_LdStLFDU
  { 1, 90, 91, 0, 0 }, // 42 IIC_LdStLFDUX
  { 1, 90, 91, 0, 0 }, // 43 IIC_LdStLHA
  { 1, 90, 91, 0, 0 }, // 44 IIC_LdStLHAU
  { 1, 90, 91, 0, 0 }, // 45 IIC_LdStLHAUX
  { 1, 97, 98, 0, 0 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 89, 90, 0, 0 }, // 51 IIC_BrMCR
  { 1, 89, 90, 0, 0 }, // 52 IIC_BrMCRX
  { 1, 89, 90, 0, 0 }, // 53 IIC_SprMFCR
  { 1, 98, 99, 0, 0 }, // 54 IIC_SprMFSPR
  { 1, 92, 93, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 89, 90, 0, 0 }, // 56 IIC_SprMFMSR
  { 0, 0, 0, 0, 0 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 1, 98, 99, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 98, 99, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 96, 97, 0, 0 }, // 62 IIC_SprMTSPR
  { 1, 99, 100, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 89, 90, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 1, 96, 97, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 100, 101, 0, 0 }, // 68 IIC_IntMulHW
  { 1, 101, 102, 0, 0 }, // 69 IIC_IntMulHWU
  { 1, 102, 103, 0, 0 }, // 70 IIC_IntMulLI
  { 1, 96, 97, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 87, 88, 0, 0 }, // 82 IIC_IntShift
  { 1, 103, 104, 0, 0 }, // 83 IIC_LdStSTWCX
  { 1, 90, 91, 0, 0 }, // 84 IIC_LdStSTU
  { 1, 90, 91, 0, 0 }, // 85 IIC_LdStSTUX
  { 0, 0, 0, 0, 0 }, // 86 IIC_LdStSTD
  { 0, 0, 0, 0, 0 }, // 87 IIC_LdStSTDCX
  { 1, 90, 91, 0, 0 }, // 88 IIC_LdStSTFD
  { 1, 90, 91, 0, 0 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 98, 99, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 104, 105, 0, 0 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 0, 0, 0, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 96, 97, 0, 0 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 99, 100, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 1, 92, 93, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 87, 88, 0, 0 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 104, 105, 0, 0 }, // 109 TW_TWI
  { 1, 92, 93, 0, 0 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 92, 93, 0, 0 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 87, 88, 0, 0 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 0, 0, 0, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 87, 88, 0, 0 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 87, 88, 0, 0 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 87, 88, 0, 0 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 89, 90, 0, 0 }, // 122 MCRF
  { 1, 89, 90, 0, 0 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 88, 89, 0, 0 }, // 125 RFEBB
  { 1, 96, 97, 0, 0 }, // 126 TBEGIN_TRECHKPT
  { 1, 90, 91, 0, 0 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 87, 88, 0, 0 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 0, 0, 0, 0, 0 }, // 131 MFOCRF_MFOCRF8
  { 1, 89, 90, 0, 0 }, // 132 MTOCRF_MTOCRF8
  { 1, 89, 90, 0, 0 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 87, 88, 0, 0 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 92, 93, 0, 0 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 87, 88, 0, 0 }, // 136 SRAW_SRAWI
  { 0, 0, 0, 0, 0 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 96, 97, 0, 0 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 90, 91, 0, 0 }, // 140 MFVSCR
  { 1, 90, 91, 0, 0 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 92, 93, 0, 0 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 0, 0, 0, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 100, 101, 0, 0 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 101, 102, 0, 0 }, // 150 MULHDU_MULHWU
  { 1, 102, 103, 0, 0 }, // 151 MULLI_MULLI8
  { 1, 92, 93, 0, 0 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 92, 93, 0, 0 }, // 153 FADD_FSUB
  { 1, 95, 96, 0, 0 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 92, 93, 0, 0 }, // 156 FSELD_rec_FSELS_rec
  { 1, 101, 102, 0, 0 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 100, 101, 0, 0 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 92, 93, 0, 0 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 92, 93, 0, 0 }, // 161 FADD_rec_FSUB_rec
  { 1, 95, 96, 0, 0 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 90, 91, 0, 0 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 0, 0, 0, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 92, 93, 0, 0 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 90, 91, 0, 0 }, // 175 LXVL_LXVLL
  { 1, 90, 91, 0, 0 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 90, 91, 0, 0 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 86, 87, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 86, 87, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 90, 91, 0, 0 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 86, 87, 0, 0 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 96, 97, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 98, 99, 0, 0 }, // 189 TLBSYNC
  { 1, 86, 87, 0, 0 }, // 190 SYNC
  { 1, 97, 98, 0, 0 }, // 191 LMW
  { 1, 90, 91, 0, 0 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 90, 91, 0, 0 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 90, 91, 0, 0 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 96, 97, 0, 0 }, // 201 TEND
  { 1, 103, 104, 0, 0 }, // 202 STBCX_STHCX_STWCX
  { 0, 0, 0, 0, 0 }, // 203 STDCX
  { 1, 90, 91, 0, 0 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 96, 97, 0, 0 }, // 207 TCHECK
  { 1, 90, 91, 0, 0 }, // 208 LFIWAX
  { 1, 90, 91, 0, 0 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 90, 91, 0, 0 }, // 211 LFSX_LFS
  { 1, 90, 91, 0, 0 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 90, 91, 0, 0 }, // 214 LHAU_LHAU8
  { 1, 90, 91, 0, 0 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 90, 91, 0, 0 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 90, 91, 0, 0 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 90, 91, 0, 0 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 0, 0, 0, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 90, 91, 0, 0 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 97, 98, 0, 0 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 90, 91, 0, 0 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 90, 91, 0, 0 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 90, 91, 0, 0 }, // 227 STXVL_STXVLL
  { 1, 96, 97, 0, 0 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 87, 88, 0, 0 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 98, 99, 0, 0 }, // 232 MFTB_MFTB8
  { 1, 98, 99, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 89, 90, 0, 0 }, // 234 MFMSR
  { 1, 89, 90, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 96, 97, 0, 0 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 91, 92, 0, 0 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 91, 92, 0, 0 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 91, 92, 0, 0 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 91, 92, 0, 0 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 89, 90, 0, 0 }, // 246 MTCRF_MTCRF8
  { 1, 87, 88, 0, 0 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 92, 93, 0, 0 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 89, 90, 0, 0 }, // 249 MCRFS
  { 1, 92, 93, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 99, 100, 0, 0 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 87, 88, 0, 0 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 87, 88, 0, 0 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 87, 88, 0, 0 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 92, 93, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 89, 90, 0, 0 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 93, 94, 0, 0 }, // 261 FDIV
  { 1, 93, 94, 0, 0 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 93, 94, 0, 0 }, // 271 XSDIVDP
  { 1, 94, 95, 0, 0 }, // 272 FDIVS
  { 1, 94, 95, 0, 0 }, // 273 FDIVS_rec
  { 1, 94, 95, 0, 0 }, // 274 XSDIVSP
  { 1, 94, 95, 0, 0 }, // 275 XVDIVSP
  { 1, 93, 94, 0, 0 }, // 276 XVDIVDP
  { 1, 90, 91, 0, 0 }, // 277 LFSU
  { 1, 90, 91, 0, 0 }, // 278 LFSUX
  { 1, 90, 91, 0, 0 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 90, 91, 0, 0 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 90, 91, 0, 0 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 90, 91, 0, 0 }, // 282 LBZU_LBZU8
  { 1, 90, 91, 0, 0 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 1, 90, 91, 0, 0 }, // 286 LFDU
  { 1, 90, 91, 0, 0 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 88, 89, 0, 0 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 88, 89, 0, 0 }, // 290 ADDPCIS
  { 1, 90, 91, 0, 0 }, // 291 LDAT_LWAT
  { 1, 90, 91, 0, 0 }, // 292 STDAT_STWAT
  { 1, 87, 88, 0, 0 }, // 293 BRINC
  { 0, 0, 0, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 0, 0, 0, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 90, 91, 0, 0 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 90, 91, 0, 0 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 88, 89, 0, 0 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 1, 96, 97, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 90, 91, 0, 0 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 90, 91, 0, 0 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 90, 91, 0, 0 }, // 303 LFDEPX
  { 1, 90, 91, 0, 0 }, // 304 STFDEPX
  { 1, 98, 99, 0, 0 }, // 305 MFSR_MFSRIN
  { 1, 96, 97, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 98, 99, 0, 0 }, // 307 MFDCR
  { 1, 96, 97, 0, 0 }, // 308 MTDCR
  { 1, 87, 88, 0, 0 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 89, 90, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 87, 88, 0, 0 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 86, 87, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 86, 87, 0, 0 }, // 317 DCBA_DCBI
  { 1, 92, 93, 0, 0 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 1, 92, 93, 0, 0 }, // 322 FADDS_FMULS_FSUBS
  { 1, 95, 96, 0, 0 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 0, 0, 0, 0, 0 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 1, 92, 93, 0, 0 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 95, 96, 0, 0 }, // 331 FMUL_rec
  { 1, 92, 93, 0, 0 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 88, 89, 0, 0 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 88, 89, 0, 0 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 88, 89, 0, 0 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 88, 89, 0, 0 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 87, 88, 0, 0 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 0, 0, 0, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 87, 88, 0, 0 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 0, 0, 0, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 0, 0, 0, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 91, 92, 0, 0 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 0, 0, 0, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 0, 0, 0, 0, 0 }, // 349 VMODSD_VMODUD
  { 0, 0, 0, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 0, 0, 0, 0, 0 }, // 351 VMODSW_VMODUW
  { 0, 0, 0, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 0, 0, 0, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 0, 0, 0, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 0, 0, 0, 0, 0 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 90, 91, 0, 0 }, // 360 TRAP
  { 1, 104, 105, 0, 0 }, // 361 TW
  { 1, 87, 88, 0, 0 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 87, 88, 0, 0 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 92, 93, 0, 0 }, // 364 FTSQRT
  { 0, 0, 0, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 87, 88, 0, 0 }, // 366 POPCNTB_POPCNTB8
  { 0, 0, 0, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 1, 92, 93, 0, 0 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 1, 92, 93, 0, 0 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 87, 88, 0, 0 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 87, 88, 0, 0 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 0, 0, 0, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 89, 90, 0, 0 }, // 387 CR6SET_CREQV_CRSET
  { 1, 90, 91, 0, 0 }, // 388 DSS_DSSALL
  { 1, 98, 99, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 87, 88, 0, 0 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 0, 0, 0, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 87, 88, 0, 0 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 87, 88, 0, 0 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 92, 93, 0, 0 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 87, 88, 0, 0 }, // 398 SETB_SETB8
  { 1, 87, 88, 0, 0 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 0, 0, 0, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 0, 0, 0, 0, 0 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 87, 88, 0, 0 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 87, 88, 0, 0 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 87, 88, 0, 0 }, // 407 CMPB_CMPB8
  { 1, 89, 90, 0, 0 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 87, 88, 0, 0 }, // 410 SLW_SLW8_SRW_SRW8
  { 0, 0, 0, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 87, 88, 0, 0 }, // 414 ADDEX_ADDEX8
  { 1, 90, 91, 0, 0 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 92, 93, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 96, 97, 0, 0 }, // 418 TRECHKPT
  { 1, 87, 88, 0, 0 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 99, 100, 0, 0 }, // 420 MTFSB0
  { 1, 87, 88, 0, 0 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 87, 88, 0, 0 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 87, 88, 0, 0 }, // 423 ADDG6S_ADDG6S8
  { 1, 88, 89, 0, 0 }, // 424 HRFID
  { 1, 92, 93, 0, 0 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 88, 89, 0, 0 }, // 426 SC
  { 1, 87, 88, 0, 0 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 87, 88, 0, 0 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 92, 93, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 92, 93, 0, 0 }, // 430 MTFSFI_rec
  { 0, 0, 0, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 90, 91, 0, 0 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 90, 91, 0, 0 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 86, 87, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 90, 91, 0, 0 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 90, 91, 0, 0 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 96, 97, 0, 0 }, // 441 MTSR
  { 1, 87, 88, 0, 0 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 90, 91, 0, 0 }, // 443 LSWI
  { 1, 90, 91, 0, 0 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 90, 91, 0, 0 }, // 445 LXVP_LXVPX
  { 1, 98, 99, 0, 0 }, // 446 MFSR
  { 1, 98, 99, 0, 0 }, // 447 MFTB8
  { 0, 0, 0, 0, 0 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 455 PMXVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 456 XXMTACC
  { 0, 0, 0, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 0, 0, 0, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 87, 88, 0, 0 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 0, 0, 0, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 0, 0, 0, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 0, 0, 0, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 0, 0, 0, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 0, 0, 0, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 0, 0, 0, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 0, 0, 0, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 0, 0, 0, 0, 0 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 86, 87, 0, 0 }, // 478 DCBST_DCBZ
  { 1, 86, 87, 0, 0 }, // 479 ICBI
  { 1, 86, 87, 0, 0 }, // 480 DCBF
  { 1, 90, 91, 0, 0 }, // 481 PSTXVP_PSTXVPpc
  { 1, 90, 91, 0, 0 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 0, 0, 0, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 90, 91, 0, 0 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 90, 91, 0, 0 }, // 488 EnforceIEIO
  { 1, 90, 91, 0, 0 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 90, 91, 0, 0 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 90, 91, 0, 0 }, // 491 STXVP_STXVPX
  { 1, 88, 89, 0, 0 }, // 492 ATTN_NAP
  { 1, 86, 87, 0, 0 }, // 493 DCBZL
  { 1, 90, 91, 0, 0 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 90, 91, 0, 0 }, // 495 ICBLC
  { 1, 88, 89, 0, 0 }, // 496 CLRBHRB
  { 1, 88, 89, 0, 0 }, // 497 MFBHRBE
  { 1, 90, 91, 0, 0 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 87, 88, 0, 0 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 0, 0, 0, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 0, 0, 0, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary G4Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 105, 106, 0, 0 }, // 1 IIC_LdStSync
  { 1, 106, 107, 0, 0 }, // 2 IIC_IntSimple
  { 1, 106, 107, 0, 0 }, // 3 IIC_IntGeneral
  { 1, 107, 108, 0, 0 }, // 4 IIC_BrB
  { 1, 108, 109, 0, 0 }, // 5 IIC_VecFP
  { 1, 106, 107, 0, 0 }, // 6 IIC_IntRotate
  { 1, 106, 107, 0, 0 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 109, 110, 0, 0 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 110, 111, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 110, 111, 0, 0 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 111, 112, 0, 0 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 112, 113, 0, 0 }, // 18 IIC_FPAddSub
  { 1, 113, 114, 0, 0 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 112, 113, 0, 0 }, // 21 IIC_FPCompare
  { 1, 112, 113, 0, 0 }, // 22 IIC_FPGeneral
  { 1, 114, 115, 0, 0 }, // 23 IIC_VecGeneral
  { 1, 115, 116, 0, 0 }, // 24 IIC_VecComplex
  { 1, 110, 111, 0, 0 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 116, 117, 0, 0 }, // 27 IIC_FPDivS
  { 1, 112, 113, 0, 0 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 110, 111, 0, 0 }, // 31 IIC_LdStICBI
  { 0, 0, 0, 0, 0 }, // 32 IIC_IntISEL
  { 1, 117, 118, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 118, 119, 0, 0 }, // 34 IIC_LdStLWARX
  { 1, 110, 111, 0, 0 }, // 35 IIC_LdStLoadUpd
  { 1, 110, 111, 0, 0 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 110, 111, 0, 0 }, // 40 IIC_LdStLFD
  { 1, 110, 111, 0, 0 }, // 41 IIC_LdStLFDU
  { 1, 110, 111, 0, 0 }, // 42 IIC_LdStLFDUX
  { 1, 110, 111, 0, 0 }, // 43 IIC_LdStLHA
  { 1, 110, 111, 0, 0 }, // 44 IIC_LdStLHAU
  { 1, 110, 111, 0, 0 }, // 45 IIC_LdStLHAUX
  { 1, 119, 120, 0, 0 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 109, 110, 0, 0 }, // 51 IIC_BrMCR
  { 1, 109, 110, 0, 0 }, // 52 IIC_BrMCRX
  { 1, 109, 110, 0, 0 }, // 53 IIC_SprMFCR
  { 1, 120, 121, 0, 0 }, // 54 IIC_SprMFSPR
  { 1, 121, 122, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 109, 110, 0, 0 }, // 56 IIC_SprMFMSR
  { 0, 0, 0, 0, 0 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 1, 120, 121, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 109, 110, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 117, 118, 0, 0 }, // 62 IIC_SprMTSPR
  { 1, 121, 122, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 109, 110, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 1, 117, 118, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 122, 123, 0, 0 }, // 68 IIC_IntMulHW
  { 1, 123, 124, 0, 0 }, // 69 IIC_IntMulHWU
  { 1, 124, 125, 0, 0 }, // 70 IIC_IntMulLI
  { 1, 117, 118, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 106, 107, 0, 0 }, // 82 IIC_IntShift
  { 1, 125, 126, 0, 0 }, // 83 IIC_LdStSTWCX
  { 1, 110, 111, 0, 0 }, // 84 IIC_LdStSTU
  { 1, 110, 111, 0, 0 }, // 85 IIC_LdStSTUX
  { 0, 0, 0, 0, 0 }, // 86 IIC_LdStSTD
  { 0, 0, 0, 0, 0 }, // 87 IIC_LdStSTDCX
  { 1, 110, 111, 0, 0 }, // 88 IIC_LdStSTFD
  { 1, 110, 111, 0, 0 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 126, 127, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 127, 128, 0, 0 }, // 98 IIC_IntTrapW
  { 1, 114, 115, 0, 0 }, // 99 IIC_VecFPCompare
  { 1, 128, 129, 0, 0 }, // 100 IIC_VecPerm
  { 1, 114, 115, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 108, 109, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 1, 128, 129, 0, 0 }, // 103 XXSEL
  { 1, 117, 118, 0, 0 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 121, 122, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 1, 121, 122, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 106, 107, 0, 0 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 127, 128, 0, 0 }, // 109 TW_TWI
  { 1, 112, 113, 0, 0 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 1, 108, 109, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 1, 108, 109, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 112, 113, 0, 0 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 106, 107, 0, 0 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 114, 115, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 106, 107, 0, 0 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 106, 107, 0, 0 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 106, 107, 0, 0 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 109, 110, 0, 0 }, // 122 MCRF
  { 1, 109, 110, 0, 0 }, // 123 MCRXRX
  { 1, 108, 109, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 107, 108, 0, 0 }, // 125 RFEBB
  { 1, 117, 118, 0, 0 }, // 126 TBEGIN_TRECHKPT
  { 1, 110, 111, 0, 0 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 106, 107, 0, 0 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 0, 0, 0, 0, 0 }, // 131 MFOCRF_MFOCRF8
  { 1, 109, 110, 0, 0 }, // 132 MTOCRF_MTOCRF8
  { 1, 109, 110, 0, 0 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 106, 107, 0, 0 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 112, 113, 0, 0 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 106, 107, 0, 0 }, // 136 SRAW_SRAWI
  { 0, 0, 0, 0, 0 }, // 137 ISEL_ISEL8
  { 1, 108, 109, 0, 0 }, // 138 XSIEXPDP
  { 1, 117, 118, 0, 0 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 110, 111, 0, 0 }, // 140 MFVSCR
  { 1, 110, 111, 0, 0 }, // 141 MTVSCR
  { 1, 114, 115, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 114, 115, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 1, 108, 109, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 112, 113, 0, 0 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 1, 108, 109, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 114, 115, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 122, 123, 0, 0 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 123, 124, 0, 0 }, // 150 MULHDU_MULHWU
  { 1, 124, 125, 0, 0 }, // 151 MULLI_MULLI8
  { 1, 112, 113, 0, 0 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 112, 113, 0, 0 }, // 153 FADD_FSUB
  { 1, 112, 113, 0, 0 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 1, 108, 109, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 112, 113, 0, 0 }, // 156 FSELD_rec_FSELS_rec
  { 1, 123, 124, 0, 0 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 122, 123, 0, 0 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 112, 113, 0, 0 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 112, 113, 0, 0 }, // 161 FADD_rec_FSUB_rec
  { 1, 112, 113, 0, 0 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 1, 108, 109, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 110, 111, 0, 0 }, // 164 LVSL_LVSR
  { 1, 128, 129, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 1, 108, 109, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 114, 115, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 112, 113, 0, 0 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 1, 108, 109, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 1, 108, 109, 0, 0 }, // 170 BCDCTSQ_rec
  { 1, 108, 109, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 1, 108, 109, 0, 0 }, // 172 BCDCFSQ_rec
  { 1, 108, 109, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 1, 108, 109, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 110, 111, 0, 0 }, // 175 LXVL_LXVLL
  { 1, 110, 111, 0, 0 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 110, 111, 0, 0 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 110, 111, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 110, 111, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 110, 111, 0, 0 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 118, 119, 0, 0 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 117, 118, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 126, 127, 0, 0 }, // 189 TLBSYNC
  { 1, 105, 106, 0, 0 }, // 190 SYNC
  { 1, 119, 120, 0, 0 }, // 191 LMW
  { 1, 110, 111, 0, 0 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 110, 111, 0, 0 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 110, 111, 0, 0 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 117, 118, 0, 0 }, // 201 TEND
  { 1, 125, 126, 0, 0 }, // 202 STBCX_STHCX_STWCX
  { 0, 0, 0, 0, 0 }, // 203 STDCX
  { 1, 110, 111, 0, 0 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 117, 118, 0, 0 }, // 207 TCHECK
  { 1, 110, 111, 0, 0 }, // 208 LFIWAX
  { 1, 110, 111, 0, 0 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 110, 111, 0, 0 }, // 211 LFSX_LFS
  { 1, 110, 111, 0, 0 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 110, 111, 0, 0 }, // 214 LHAU_LHAU8
  { 1, 110, 111, 0, 0 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 110, 111, 0, 0 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 110, 111, 0, 0 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 110, 111, 0, 0 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 0, 0, 0, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 110, 111, 0, 0 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 119, 120, 0, 0 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 110, 111, 0, 0 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 110, 111, 0, 0 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 110, 111, 0, 0 }, // 227 STXVL_STXVLL
  { 1, 117, 118, 0, 0 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 106, 107, 0, 0 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 109, 110, 0, 0 }, // 232 MFTB_MFTB8
  { 1, 120, 121, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 109, 110, 0, 0 }, // 234 MFMSR
  { 1, 109, 110, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 117, 118, 0, 0 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 111, 112, 0, 0 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 111, 112, 0, 0 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 111, 112, 0, 0 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 111, 112, 0, 0 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 109, 110, 0, 0 }, // 246 MTCRF_MTCRF8
  { 1, 106, 107, 0, 0 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 112, 113, 0, 0 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 109, 110, 0, 0 }, // 249 MCRFS
  { 1, 121, 122, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 121, 122, 0, 0 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 106, 107, 0, 0 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 106, 107, 0, 0 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 106, 107, 0, 0 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 121, 122, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 109, 110, 0, 0 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 113, 114, 0, 0 }, // 261 FDIV
  { 1, 113, 114, 0, 0 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 113, 114, 0, 0 }, // 271 XSDIVDP
  { 1, 116, 117, 0, 0 }, // 272 FDIVS
  { 1, 116, 117, 0, 0 }, // 273 FDIVS_rec
  { 1, 116, 117, 0, 0 }, // 274 XSDIVSP
  { 1, 116, 117, 0, 0 }, // 275 XVDIVSP
  { 1, 113, 114, 0, 0 }, // 276 XVDIVDP
  { 1, 110, 111, 0, 0 }, // 277 LFSU
  { 1, 110, 111, 0, 0 }, // 278 LFSUX
  { 1, 110, 111, 0, 0 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 110, 111, 0, 0 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 110, 111, 0, 0 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 110, 111, 0, 0 }, // 282 LBZU_LBZU8
  { 1, 110, 111, 0, 0 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 1, 110, 111, 0, 0 }, // 286 LFDU
  { 1, 110, 111, 0, 0 }, // 287 LFDUX
  { 1, 108, 109, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 107, 108, 0, 0 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 107, 108, 0, 0 }, // 290 ADDPCIS
  { 1, 110, 111, 0, 0 }, // 291 LDAT_LWAT
  { 1, 110, 111, 0, 0 }, // 292 STDAT_STWAT
  { 1, 106, 107, 0, 0 }, // 293 BRINC
  { 1, 114, 115, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 115, 116, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 110, 111, 0, 0 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 110, 111, 0, 0 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 107, 108, 0, 0 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 1, 117, 118, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 110, 111, 0, 0 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 110, 111, 0, 0 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 110, 111, 0, 0 }, // 303 LFDEPX
  { 1, 110, 111, 0, 0 }, // 304 STFDEPX
  { 1, 120, 121, 0, 0 }, // 305 MFSR_MFSRIN
  { 1, 117, 118, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 120, 121, 0, 0 }, // 307 MFDCR
  { 1, 117, 118, 0, 0 }, // 308 MTDCR
  { 1, 106, 107, 0, 0 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 109, 110, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 106, 107, 0, 0 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 105, 106, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 110, 111, 0, 0 }, // 317 DCBA_DCBI
  { 1, 112, 113, 0, 0 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 1, 108, 109, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 1, 108, 109, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 1, 108, 109, 0, 0 }, // 321 XVCVSPBF16
  { 1, 112, 113, 0, 0 }, // 322 FADDS_FMULS_FSUBS
  { 1, 112, 113, 0, 0 }, // 323 FMUL
  { 1, 108, 109, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 114, 115, 0, 0 }, // 325 VSUBFP
  { 1, 108, 109, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 1, 108, 109, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 1, 108, 109, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 1, 108, 109, 0, 0 }, // 329 VEXPTEFP
  { 1, 112, 113, 0, 0 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 112, 113, 0, 0 }, // 331 FMUL_rec
  { 1, 112, 113, 0, 0 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 107, 108, 0, 0 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 107, 108, 0, 0 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 107, 108, 0, 0 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 107, 108, 0, 0 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 1, 108, 109, 0, 0 }, // 337 VSBOX
  { 1, 106, 107, 0, 0 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 114, 115, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 1, 108, 109, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 1, 108, 109, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 1, 108, 109, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 106, 107, 0, 0 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 1, 108, 109, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 1, 114, 115, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 114, 115, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 111, 112, 0, 0 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 114, 115, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 1, 114, 115, 0, 0 }, // 349 VMODSD_VMODUD
  { 1, 114, 115, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 1, 114, 115, 0, 0 }, // 351 VMODSW_VMODUW
  { 1, 114, 115, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 1, 114, 115, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 1, 108, 109, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 1, 108, 109, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 114, 115, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 1, 108, 109, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 114, 115, 0, 0 }, // 358 XXGENPCVBM
  { 1, 108, 109, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 110, 111, 0, 0 }, // 360 TRAP
  { 1, 127, 128, 0, 0 }, // 361 TW
  { 1, 106, 107, 0, 0 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 106, 107, 0, 0 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 112, 113, 0, 0 }, // 364 FTSQRT
  { 1, 114, 115, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 106, 107, 0, 0 }, // 366 POPCNTB_POPCNTB8
  { 1, 114, 115, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 114, 115, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 1, 108, 109, 0, 0 }, // 369 XSCVSPDPN
  { 1, 112, 113, 0, 0 }, // 370 XSTSQRTDP
  { 1, 108, 109, 0, 0 }, // 371 XVCVHPSP
  { 1, 112, 113, 0, 0 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 106, 107, 0, 0 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 106, 107, 0, 0 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 108, 109, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 1, 114, 115, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 114, 115, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 114, 115, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 1, 108, 109, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 1, 108, 109, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 1, 108, 109, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 1, 108, 109, 0, 0 }, // 386 VRLQMI
  { 1, 109, 110, 0, 0 }, // 387 CR6SET_CREQV_CRSET
  { 1, 110, 111, 0, 0 }, // 388 DSS_DSSALL
  { 1, 120, 121, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 106, 107, 0, 0 }, // 390 NOP_ORI_ORI8
  { 1, 108, 109, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 114, 115, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 106, 107, 0, 0 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 106, 107, 0, 0 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 112, 113, 0, 0 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 106, 107, 0, 0 }, // 398 SETB_SETB8
  { 1, 106, 107, 0, 0 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 114, 115, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 114, 115, 0, 0 }, // 401 VEXTSD2Q
  { 1, 108, 109, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 1, 108, 109, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 1, 108, 109, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 106, 107, 0, 0 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 106, 107, 0, 0 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 106, 107, 0, 0 }, // 407 CMPB_CMPB8
  { 1, 109, 110, 0, 0 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 106, 107, 0, 0 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 114, 115, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 1, 108, 109, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 1, 108, 109, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 106, 107, 0, 0 }, // 414 ADDEX_ADDEX8
  { 1, 110, 111, 0, 0 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 121, 122, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 117, 118, 0, 0 }, // 418 TRECHKPT
  { 1, 106, 107, 0, 0 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 121, 122, 0, 0 }, // 420 MTFSB0
  { 1, 106, 107, 0, 0 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 106, 107, 0, 0 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 106, 107, 0, 0 }, // 423 ADDG6S_ADDG6S8
  { 1, 107, 108, 0, 0 }, // 424 HRFID
  { 1, 112, 113, 0, 0 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 107, 108, 0, 0 }, // 426 SC
  { 1, 106, 107, 0, 0 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 106, 107, 0, 0 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 121, 122, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 121, 122, 0, 0 }, // 430 MTFSFI_rec
  { 1, 114, 115, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 110, 111, 0, 0 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 110, 111, 0, 0 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 110, 111, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 110, 111, 0, 0 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 110, 111, 0, 0 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 117, 118, 0, 0 }, // 441 MTSR
  { 1, 106, 107, 0, 0 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 110, 111, 0, 0 }, // 443 LSWI
  { 1, 110, 111, 0, 0 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 110, 111, 0, 0 }, // 445 LXVP_LXVPX
  { 1, 120, 121, 0, 0 }, // 446 MFSR
  { 1, 109, 110, 0, 0 }, // 447 MFTB8
  { 1, 114, 115, 0, 0 }, // 448 XXSETACCZ
  { 1, 108, 109, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 1, 108, 109, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 114, 115, 0, 0 }, // 451 XVI8GER4SPP
  { 1, 108, 109, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 1, 108, 109, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 1, 108, 109, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 114, 115, 0, 0 }, // 455 PMXVI8GER4SPP
  { 1, 114, 115, 0, 0 }, // 456 XXMTACC
  { 1, 114, 115, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 1, 114, 115, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 1, 128, 129, 0, 0 }, // 460 VSPLTISW
  { 1, 108, 109, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 106, 107, 0, 0 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 114, 115, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 114, 115, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 1, 108, 109, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 1, 128, 129, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 1, 108, 109, 0, 0 }, // 467 XVCVBF16SPN
  { 1, 108, 109, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 114, 115, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 114, 115, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 1, 128, 129, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 114, 115, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 1, 108, 109, 0, 0 }, // 473 VSUMSWS
  { 1, 114, 115, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 114, 115, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 114, 115, 0, 0 }, // 476 XXEVAL
  { 1, 128, 129, 0, 0 }, // 477 XXPERMX
  { 1, 110, 111, 0, 0 }, // 478 DCBST_DCBZ
  { 1, 110, 111, 0, 0 }, // 479 ICBI
  { 1, 110, 111, 0, 0 }, // 480 DCBF
  { 1, 110, 111, 0, 0 }, // 481 PSTXVP_PSTXVPpc
  { 1, 110, 111, 0, 0 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 0, 0, 0, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 110, 111, 0, 0 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 110, 111, 0, 0 }, // 488 EnforceIEIO
  { 1, 110, 111, 0, 0 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 110, 111, 0, 0 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 110, 111, 0, 0 }, // 491 STXVP_STXVPX
  { 1, 107, 108, 0, 0 }, // 492 ATTN_NAP
  { 1, 110, 111, 0, 0 }, // 493 DCBZL
  { 1, 110, 111, 0, 0 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 110, 111, 0, 0 }, // 495 ICBLC
  { 1, 107, 108, 0, 0 }, // 496 CLRBHRB
  { 1, 107, 108, 0, 0 }, // 497 MFBHRBE
  { 1, 110, 111, 0, 0 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 106, 107, 0, 0 }, // 499 PLI_PLI8
  { 1, 108, 109, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 114, 115, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 114, 115, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary G4PlusItineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 129, 130, 0, 0 }, // 1 IIC_LdStSync
  { 1, 130, 131, 0, 0 }, // 2 IIC_IntSimple
  { 1, 130, 131, 0, 0 }, // 3 IIC_IntGeneral
  { 1, 131, 132, 0, 0 }, // 4 IIC_BrB
  { 1, 132, 133, 0, 0 }, // 5 IIC_VecFP
  { 1, 130, 131, 0, 0 }, // 6 IIC_IntRotate
  { 1, 130, 131, 0, 0 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 133, 134, 0, 0 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 134, 135, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 134, 135, 0, 0 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 135, 136, 0, 0 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 136, 137, 0, 0 }, // 18 IIC_FPAddSub
  { 1, 137, 138, 0, 0 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 136, 137, 0, 0 }, // 21 IIC_FPCompare
  { 1, 136, 137, 0, 0 }, // 22 IIC_FPGeneral
  { 1, 138, 139, 0, 0 }, // 23 IIC_VecGeneral
  { 1, 139, 140, 0, 0 }, // 24 IIC_VecComplex
  { 1, 134, 135, 0, 0 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 140, 141, 0, 0 }, // 27 IIC_FPDivS
  { 1, 136, 137, 0, 0 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 141, 142, 0, 0 }, // 31 IIC_LdStICBI
  { 0, 0, 0, 0, 0 }, // 32 IIC_IntISEL
  { 1, 142, 143, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 134, 135, 0, 0 }, // 34 IIC_LdStLWARX
  { 1, 134, 135, 0, 0 }, // 35 IIC_LdStLoadUpd
  { 1, 134, 135, 0, 0 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 143, 144, 0, 0 }, // 40 IIC_LdStLFD
  { 1, 143, 144, 0, 0 }, // 41 IIC_LdStLFDU
  { 1, 143, 144, 0, 0 }, // 42 IIC_LdStLFDUX
  { 1, 134, 135, 0, 0 }, // 43 IIC_LdStLHA
  { 1, 134, 135, 0, 0 }, // 44 IIC_LdStLHAU
  { 1, 134, 135, 0, 0 }, // 45 IIC_LdStLHAUX
  { 1, 144, 145, 0, 0 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 1, 134, 135, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 133, 134, 0, 0 }, // 51 IIC_BrMCR
  { 1, 133, 134, 0, 0 }, // 52 IIC_BrMCRX
  { 1, 133, 134, 0, 0 }, // 53 IIC_SprMFCR
  { 1, 145, 146, 0, 0 }, // 54 IIC_SprMFSPR
  { 1, 136, 137, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 141, 142, 0, 0 }, // 56 IIC_SprMFMSR
  { 0, 0, 0, 0, 0 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 1, 145, 146, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 146, 147, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 133, 134, 0, 0 }, // 62 IIC_SprMTSPR
  { 1, 136, 137, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 133, 134, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 1, 133, 134, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 145, 146, 0, 0 }, // 68 IIC_IntMulHW
  { 1, 145, 146, 0, 0 }, // 69 IIC_IntMulHWU
  { 1, 141, 142, 0, 0 }, // 70 IIC_IntMulLI
  { 1, 130, 131, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 147, 148, 0, 0 }, // 82 IIC_IntShift
  { 1, 134, 135, 0, 0 }, // 83 IIC_LdStSTWCX
  { 1, 134, 135, 0, 0 }, // 84 IIC_LdStSTU
  { 1, 134, 135, 0, 0 }, // 85 IIC_LdStSTUX
  { 1, 134, 135, 0, 0 }, // 86 IIC_LdStSTD
  { 1, 134, 135, 0, 0 }, // 87 IIC_LdStSTDCX
  { 1, 134, 135, 0, 0 }, // 88 IIC_LdStSTFD
  { 1, 134, 135, 0, 0 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 134, 135, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 147, 148, 0, 0 }, // 98 IIC_IntTrapW
  { 1, 148, 149, 0, 0 }, // 99 IIC_VecFPCompare
  { 1, 149, 150, 0, 0 }, // 100 IIC_VecPerm
  { 1, 138, 139, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 132, 133, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 1, 149, 150, 0, 0 }, // 103 XXSEL
  { 1, 133, 134, 0, 0 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 136, 137, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 1, 136, 137, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 130, 131, 0, 0 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 147, 148, 0, 0 }, // 109 TW_TWI
  { 1, 136, 137, 0, 0 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 1, 132, 133, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 1, 132, 133, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 136, 137, 0, 0 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 130, 131, 0, 0 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 138, 139, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 130, 131, 0, 0 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 130, 131, 0, 0 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 130, 131, 0, 0 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 133, 134, 0, 0 }, // 122 MCRF
  { 1, 133, 134, 0, 0 }, // 123 MCRXRX
  { 1, 132, 133, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 131, 132, 0, 0 }, // 125 RFEBB
  { 1, 133, 134, 0, 0 }, // 126 TBEGIN_TRECHKPT
  { 1, 134, 135, 0, 0 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 130, 131, 0, 0 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 0, 0, 0, 0, 0 }, // 131 MFOCRF_MFOCRF8
  { 1, 133, 134, 0, 0 }, // 132 MTOCRF_MTOCRF8
  { 1, 133, 134, 0, 0 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 130, 131, 0, 0 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 136, 137, 0, 0 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 147, 148, 0, 0 }, // 136 SRAW_SRAWI
  { 0, 0, 0, 0, 0 }, // 137 ISEL_ISEL8
  { 1, 132, 133, 0, 0 }, // 138 XSIEXPDP
  { 1, 133, 134, 0, 0 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 134, 135, 0, 0 }, // 140 MFVSCR
  { 1, 134, 135, 0, 0 }, // 141 MTVSCR
  { 1, 148, 149, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 138, 139, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 1, 132, 133, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 136, 137, 0, 0 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 1, 132, 133, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 138, 139, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 145, 146, 0, 0 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 145, 146, 0, 0 }, // 150 MULHDU_MULHWU
  { 1, 141, 142, 0, 0 }, // 151 MULLI_MULLI8
  { 1, 136, 137, 0, 0 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 136, 137, 0, 0 }, // 153 FADD_FSUB
  { 1, 136, 137, 0, 0 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 1, 132, 133, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 136, 137, 0, 0 }, // 156 FSELD_rec_FSELS_rec
  { 1, 145, 146, 0, 0 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 145, 146, 0, 0 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 136, 137, 0, 0 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 136, 137, 0, 0 }, // 161 FADD_rec_FSUB_rec
  { 1, 136, 137, 0, 0 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 1, 132, 133, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 134, 135, 0, 0 }, // 164 LVSL_LVSR
  { 1, 149, 150, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 1, 132, 133, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 138, 139, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 136, 137, 0, 0 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 1, 132, 133, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 1, 132, 133, 0, 0 }, // 170 BCDCTSQ_rec
  { 1, 132, 133, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 1, 132, 133, 0, 0 }, // 172 BCDCFSQ_rec
  { 1, 132, 133, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 1, 132, 133, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 134, 135, 0, 0 }, // 175 LXVL_LXVLL
  { 1, 134, 135, 0, 0 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 143, 144, 0, 0 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 134, 135, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 141, 142, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 134, 135, 0, 0 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 134, 135, 0, 0 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 142, 143, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 134, 135, 0, 0 }, // 189 TLBSYNC
  { 1, 129, 130, 0, 0 }, // 190 SYNC
  { 1, 144, 145, 0, 0 }, // 191 LMW
  { 1, 143, 144, 0, 0 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 134, 135, 0, 0 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 134, 135, 0, 0 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 133, 134, 0, 0 }, // 201 TEND
  { 1, 134, 135, 0, 0 }, // 202 STBCX_STHCX_STWCX
  { 1, 134, 135, 0, 0 }, // 203 STDCX
  { 1, 134, 135, 0, 0 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 1, 134, 135, 0, 0 }, // 206 LWA_LWA_32
  { 1, 133, 134, 0, 0 }, // 207 TCHECK
  { 1, 143, 144, 0, 0 }, // 208 LFIWAX
  { 1, 143, 144, 0, 0 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 143, 144, 0, 0 }, // 211 LFSX_LFS
  { 1, 143, 144, 0, 0 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 134, 135, 0, 0 }, // 214 LHAU_LHAU8
  { 1, 134, 135, 0, 0 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 143, 144, 0, 0 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 134, 135, 0, 0 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 134, 135, 0, 0 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 134, 135, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 134, 135, 0, 0 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 144, 145, 0, 0 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 134, 135, 0, 0 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 134, 135, 0, 0 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 134, 135, 0, 0 }, // 227 STXVL_STXVLL
  { 1, 133, 134, 0, 0 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 130, 131, 0, 0 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 146, 147, 0, 0 }, // 232 MFTB_MFTB8
  { 1, 145, 146, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 141, 142, 0, 0 }, // 234 MFMSR
  { 1, 133, 134, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 133, 134, 0, 0 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 135, 136, 0, 0 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 135, 136, 0, 0 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 135, 136, 0, 0 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 135, 136, 0, 0 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 133, 134, 0, 0 }, // 246 MTCRF_MTCRF8
  { 1, 130, 131, 0, 0 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 136, 137, 0, 0 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 133, 134, 0, 0 }, // 249 MCRFS
  { 1, 136, 137, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 136, 137, 0, 0 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 130, 131, 0, 0 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 130, 131, 0, 0 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 147, 148, 0, 0 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 136, 137, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 133, 134, 0, 0 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 137, 138, 0, 0 }, // 261 FDIV
  { 1, 137, 138, 0, 0 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 137, 138, 0, 0 }, // 271 XSDIVDP
  { 1, 140, 141, 0, 0 }, // 272 FDIVS
  { 1, 140, 141, 0, 0 }, // 273 FDIVS_rec
  { 1, 140, 141, 0, 0 }, // 274 XSDIVSP
  { 1, 140, 141, 0, 0 }, // 275 XVDIVSP
  { 1, 137, 138, 0, 0 }, // 276 XVDIVDP
  { 1, 143, 144, 0, 0 }, // 277 LFSU
  { 1, 143, 144, 0, 0 }, // 278 LFSUX
  { 1, 134, 135, 0, 0 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 134, 135, 0, 0 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 134, 135, 0, 0 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 134, 135, 0, 0 }, // 282 LBZU_LBZU8
  { 1, 134, 135, 0, 0 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 1, 143, 144, 0, 0 }, // 286 LFDU
  { 1, 143, 144, 0, 0 }, // 287 LFDUX
  { 1, 132, 133, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 131, 132, 0, 0 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 131, 132, 0, 0 }, // 290 ADDPCIS
  { 1, 134, 135, 0, 0 }, // 291 LDAT_LWAT
  { 1, 134, 135, 0, 0 }, // 292 STDAT_STWAT
  { 1, 130, 131, 0, 0 }, // 293 BRINC
  { 1, 138, 139, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 139, 140, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 134, 135, 0, 0 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 134, 135, 0, 0 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 131, 132, 0, 0 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 1, 130, 131, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 134, 135, 0, 0 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 134, 135, 0, 0 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 143, 144, 0, 0 }, // 303 LFDEPX
  { 1, 134, 135, 0, 0 }, // 304 STFDEPX
  { 1, 145, 146, 0, 0 }, // 305 MFSR_MFSRIN
  { 1, 133, 134, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 145, 146, 0, 0 }, // 307 MFDCR
  { 1, 133, 134, 0, 0 }, // 308 MTDCR
  { 1, 130, 131, 0, 0 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 133, 134, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 130, 131, 0, 0 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 129, 130, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 134, 135, 0, 0 }, // 317 DCBA_DCBI
  { 1, 136, 137, 0, 0 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 1, 132, 133, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 1, 132, 133, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 1, 132, 133, 0, 0 }, // 321 XVCVSPBF16
  { 1, 136, 137, 0, 0 }, // 322 FADDS_FMULS_FSUBS
  { 1, 136, 137, 0, 0 }, // 323 FMUL
  { 1, 132, 133, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 138, 139, 0, 0 }, // 325 VSUBFP
  { 1, 132, 133, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 1, 132, 133, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 1, 132, 133, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 1, 132, 133, 0, 0 }, // 329 VEXPTEFP
  { 1, 136, 137, 0, 0 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 136, 137, 0, 0 }, // 331 FMUL_rec
  { 1, 136, 137, 0, 0 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 131, 132, 0, 0 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 131, 132, 0, 0 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 131, 132, 0, 0 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 131, 132, 0, 0 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 1, 132, 133, 0, 0 }, // 337 VSBOX
  { 1, 130, 131, 0, 0 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 138, 139, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 1, 132, 133, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 1, 132, 133, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 1, 132, 133, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 130, 131, 0, 0 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 1, 132, 133, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 1, 138, 139, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 138, 139, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 135, 136, 0, 0 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 138, 139, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 1, 138, 139, 0, 0 }, // 349 VMODSD_VMODUD
  { 1, 138, 139, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 1, 138, 139, 0, 0 }, // 351 VMODSW_VMODUW
  { 1, 138, 139, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 1, 138, 139, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 1, 132, 133, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 1, 132, 133, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 138, 139, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 1, 132, 133, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 138, 139, 0, 0 }, // 358 XXGENPCVBM
  { 1, 132, 133, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 134, 135, 0, 0 }, // 360 TRAP
  { 1, 147, 148, 0, 0 }, // 361 TW
  { 1, 130, 131, 0, 0 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 130, 131, 0, 0 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 136, 137, 0, 0 }, // 364 FTSQRT
  { 1, 138, 139, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 130, 131, 0, 0 }, // 366 POPCNTB_POPCNTB8
  { 1, 138, 139, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 138, 139, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 1, 132, 133, 0, 0 }, // 369 XSCVSPDPN
  { 1, 136, 137, 0, 0 }, // 370 XSTSQRTDP
  { 1, 132, 133, 0, 0 }, // 371 XVCVHPSP
  { 1, 136, 137, 0, 0 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 130, 131, 0, 0 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 130, 131, 0, 0 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 132, 133, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 1, 148, 149, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 148, 149, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 138, 139, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 1, 132, 133, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 1, 132, 133, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 1, 132, 133, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 1, 132, 133, 0, 0 }, // 386 VRLQMI
  { 1, 133, 134, 0, 0 }, // 387 CR6SET_CREQV_CRSET
  { 1, 134, 135, 0, 0 }, // 388 DSS_DSSALL
  { 1, 145, 146, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 130, 131, 0, 0 }, // 390 NOP_ORI_ORI8
  { 1, 132, 133, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 138, 139, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 130, 131, 0, 0 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 130, 131, 0, 0 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 136, 137, 0, 0 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 130, 131, 0, 0 }, // 398 SETB_SETB8
  { 1, 130, 131, 0, 0 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 138, 139, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 138, 139, 0, 0 }, // 401 VEXTSD2Q
  { 1, 132, 133, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 1, 132, 133, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 1, 132, 133, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 130, 131, 0, 0 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 130, 131, 0, 0 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 130, 131, 0, 0 }, // 407 CMPB_CMPB8
  { 1, 133, 134, 0, 0 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 130, 131, 0, 0 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 138, 139, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 1, 132, 133, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 1, 132, 133, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 130, 131, 0, 0 }, // 414 ADDEX_ADDEX8
  { 1, 134, 135, 0, 0 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 136, 137, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 133, 134, 0, 0 }, // 418 TRECHKPT
  { 1, 130, 131, 0, 0 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 136, 137, 0, 0 }, // 420 MTFSB0
  { 1, 130, 131, 0, 0 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 130, 131, 0, 0 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 130, 131, 0, 0 }, // 423 ADDG6S_ADDG6S8
  { 1, 131, 132, 0, 0 }, // 424 HRFID
  { 1, 136, 137, 0, 0 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 131, 132, 0, 0 }, // 426 SC
  { 1, 130, 131, 0, 0 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 130, 131, 0, 0 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 136, 137, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 136, 137, 0, 0 }, // 430 MTFSFI_rec
  { 1, 138, 139, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 134, 135, 0, 0 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 143, 144, 0, 0 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 134, 135, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 134, 135, 0, 0 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 134, 135, 0, 0 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 133, 134, 0, 0 }, // 441 MTSR
  { 1, 130, 131, 0, 0 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 134, 135, 0, 0 }, // 443 LSWI
  { 1, 143, 144, 0, 0 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 143, 144, 0, 0 }, // 445 LXVP_LXVPX
  { 1, 145, 146, 0, 0 }, // 446 MFSR
  { 1, 146, 147, 0, 0 }, // 447 MFTB8
  { 1, 138, 139, 0, 0 }, // 448 XXSETACCZ
  { 1, 132, 133, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 1, 132, 133, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 138, 139, 0, 0 }, // 451 XVI8GER4SPP
  { 1, 132, 133, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 1, 132, 133, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 1, 132, 133, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 138, 139, 0, 0 }, // 455 PMXVI8GER4SPP
  { 1, 138, 139, 0, 0 }, // 456 XXMTACC
  { 1, 138, 139, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 1, 138, 139, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 1, 149, 150, 0, 0 }, // 460 VSPLTISW
  { 1, 132, 133, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 130, 131, 0, 0 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 138, 139, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 138, 139, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 1, 132, 133, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 1, 149, 150, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 1, 132, 133, 0, 0 }, // 467 XVCVBF16SPN
  { 1, 132, 133, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 138, 139, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 138, 139, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 1, 149, 150, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 138, 139, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 1, 132, 133, 0, 0 }, // 473 VSUMSWS
  { 1, 138, 139, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 138, 139, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 138, 139, 0, 0 }, // 476 XXEVAL
  { 1, 149, 150, 0, 0 }, // 477 XXPERMX
  { 1, 134, 135, 0, 0 }, // 478 DCBST_DCBZ
  { 1, 141, 142, 0, 0 }, // 479 ICBI
  { 1, 134, 135, 0, 0 }, // 480 DCBF
  { 1, 143, 144, 0, 0 }, // 481 PSTXVP_PSTXVPpc
  { 1, 134, 135, 0, 0 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 134, 135, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 134, 135, 0, 0 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 134, 135, 0, 0 }, // 488 EnforceIEIO
  { 1, 134, 135, 0, 0 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 143, 144, 0, 0 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 143, 144, 0, 0 }, // 491 STXVP_STXVPX
  { 1, 131, 132, 0, 0 }, // 492 ATTN_NAP
  { 1, 134, 135, 0, 0 }, // 493 DCBZL
  { 1, 134, 135, 0, 0 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 134, 135, 0, 0 }, // 495 ICBLC
  { 1, 131, 132, 0, 0 }, // 496 CLRBHRB
  { 1, 131, 132, 0, 0 }, // 497 MFBHRBE
  { 1, 143, 144, 0, 0 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 130, 131, 0, 0 }, // 499 PLI_PLI8
  { 1, 132, 133, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 138, 139, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 138, 139, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary G5Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 150, 151, 0, 0 }, // 1 IIC_LdStSync
  { 1, 151, 152, 0, 0 }, // 2 IIC_IntSimple
  { 1, 151, 152, 0, 0 }, // 3 IIC_IntGeneral
  { 1, 152, 153, 0, 0 }, // 4 IIC_BrB
  { 1, 153, 154, 0, 0 }, // 5 IIC_VecFP
  { 1, 154, 155, 0, 0 }, // 6 IIC_IntRotate
  { 1, 155, 156, 0, 0 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 156, 157, 0, 0 }, // 11 IIC_BrCR
  { 1, 157, 158, 0, 0 }, // 12 IIC_LdStLD
  { 1, 157, 158, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 157, 158, 0, 0 }, // 14 IIC_LdStLoad
  { 1, 158, 159, 0, 0 }, // 15 IIC_IntDivD
  { 1, 159, 160, 0, 0 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 160, 161, 0, 0 }, // 18 IIC_FPAddSub
  { 1, 161, 162, 0, 0 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 162, 163, 0, 0 }, // 21 IIC_FPCompare
  { 1, 160, 161, 0, 0 }, // 22 IIC_FPGeneral
  { 1, 163, 164, 0, 0 }, // 23 IIC_VecGeneral
  { 1, 164, 165, 0, 0 }, // 24 IIC_VecComplex
  { 1, 157, 158, 0, 0 }, // 25 IIC_LdStStore
  { 1, 151, 152, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 161, 162, 0, 0 }, // 27 IIC_FPDivS
  { 1, 160, 161, 0, 0 }, // 28 IIC_FPFused
  { 1, 165, 166, 0, 0 }, // 29 IIC_FPSqrtD
  { 1, 165, 166, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 166, 167, 0, 0 }, // 31 IIC_LdStICBI
  { 0, 0, 0, 0, 0 }, // 32 IIC_IntISEL
  { 1, 166, 167, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 167, 168, 0, 0 }, // 34 IIC_LdStLWARX
  { 1, 157, 158, 0, 0 }, // 35 IIC_LdStLoadUpd
  { 1, 157, 158, 0, 0 }, // 36 IIC_LdStLoadUpdX
  { 1, 167, 168, 0, 0 }, // 37 IIC_LdStLDARX
  { 1, 157, 158, 0, 0 }, // 38 IIC_LdStLDU
  { 1, 157, 158, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 157, 158, 0, 0 }, // 40 IIC_LdStLFD
  { 1, 168, 169, 0, 0 }, // 41 IIC_LdStLFDU
  { 1, 168, 169, 0, 0 }, // 42 IIC_LdStLFDUX
  { 1, 168, 169, 0, 0 }, // 43 IIC_LdStLHA
  { 1, 168, 169, 0, 0 }, // 44 IIC_LdStLHAU
  { 1, 168, 169, 0, 0 }, // 45 IIC_LdStLHAUX
  { 1, 169, 170, 0, 0 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 1, 168, 169, 0, 0 }, // 49 IIC_LdStLWA
  { 1, 170, 171, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 171, 172, 0, 0 }, // 51 IIC_BrMCR
  { 1, 172, 173, 0, 0 }, // 52 IIC_BrMCRX
  { 1, 173, 174, 0, 0 }, // 53 IIC_SprMFCR
  { 1, 174, 175, 0, 0 }, // 54 IIC_SprMFSPR
  { 1, 175, 176, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 174, 175, 0, 0 }, // 56 IIC_SprMFMSR
  { 1, 173, 174, 0, 0 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 1, 157, 158, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 176, 177, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 177, 178, 0, 0 }, // 62 IIC_SprMTSPR
  { 1, 160, 161, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 157, 158, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 1, 157, 158, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 178, 179, 0, 0 }, // 68 IIC_IntMulHW
  { 1, 178, 179, 0, 0 }, // 69 IIC_IntMulHWU
  { 1, 154, 155, 0, 0 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 1, 179, 180, 0, 0 }, // 72 IIC_IntRFID
  { 1, 151, 152, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 151, 152, 0, 0 }, // 82 IIC_IntShift
  { 1, 167, 168, 0, 0 }, // 83 IIC_LdStSTWCX
  { 1, 157, 158, 0, 0 }, // 84 IIC_LdStSTU
  { 1, 157, 158, 0, 0 }, // 85 IIC_LdStSTUX
  { 1, 157, 158, 0, 0 }, // 86 IIC_LdStSTD
  { 1, 167, 168, 0, 0 }, // 87 IIC_LdStSTDCX
  { 1, 180, 181, 0, 0 }, // 88 IIC_LdStSTFD
  { 1, 180, 181, 0, 0 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 1, 181, 182, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 157, 158, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 181, 182, 0, 0 }, // 98 IIC_IntTrapW
  { 1, 182, 183, 0, 0 }, // 99 IIC_VecFPCompare
  { 1, 183, 184, 0, 0 }, // 100 IIC_VecPerm
  { 1, 163, 164, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 153, 154, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 1, 183, 184, 0, 0 }, // 103 XXSEL
  { 1, 177, 178, 0, 0 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 160, 161, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 1, 175, 176, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 155, 156, 0, 0 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 1, 181, 182, 0, 0 }, // 108 TD_TDI
  { 1, 181, 182, 0, 0 }, // 109 TW_TWI
  { 1, 162, 163, 0, 0 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 1, 153, 154, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 1, 153, 154, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 162, 163, 0, 0 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 151, 152, 0, 0 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 1, 151, 152, 0, 0 }, // 115 SLD_SRD_SRAD
  { 1, 151, 152, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 163, 164, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 155, 156, 0, 0 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 151, 152, 0, 0 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 151, 152, 0, 0 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 171, 172, 0, 0 }, // 122 MCRF
  { 1, 172, 173, 0, 0 }, // 123 MCRXRX
  { 1, 153, 154, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 152, 153, 0, 0 }, // 125 RFEBB
  { 1, 177, 178, 0, 0 }, // 126 TBEGIN_TRECHKPT
  { 1, 157, 158, 0, 0 }, // 127 WAIT
  { 1, 151, 152, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 154, 155, 0, 0 }, // 129 RLWIMI_RLWIMI8
  { 1, 151, 152, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 173, 174, 0, 0 }, // 131 MFOCRF_MFOCRF8
  { 1, 172, 173, 0, 0 }, // 132 MTOCRF_MTOCRF8
  { 1, 156, 157, 0, 0 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 151, 152, 0, 0 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 160, 161, 0, 0 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 151, 152, 0, 0 }, // 136 SRAW_SRAWI
  { 0, 0, 0, 0, 0 }, // 137 ISEL_ISEL8
  { 1, 153, 154, 0, 0 }, // 138 XSIEXPDP
  { 1, 177, 178, 0, 0 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 157, 158, 0, 0 }, // 140 MFVSCR
  { 1, 157, 158, 0, 0 }, // 141 MTVSCR
  { 1, 182, 183, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 163, 164, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 1, 153, 154, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 162, 163, 0, 0 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 1, 153, 154, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 163, 164, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 1, 170, 171, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 178, 179, 0, 0 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 178, 179, 0, 0 }, // 150 MULHDU_MULHWU
  { 1, 154, 155, 0, 0 }, // 151 MULLI_MULLI8
  { 1, 160, 161, 0, 0 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 160, 161, 0, 0 }, // 153 FADD_FSUB
  { 1, 160, 161, 0, 0 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 1, 153, 154, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 160, 161, 0, 0 }, // 156 FSELD_rec_FSELS_rec
  { 1, 178, 179, 0, 0 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 178, 179, 0, 0 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 1, 170, 171, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 160, 161, 0, 0 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 160, 161, 0, 0 }, // 161 FADD_rec_FSUB_rec
  { 1, 160, 161, 0, 0 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 1, 153, 154, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 157, 158, 0, 0 }, // 164 LVSL_LVSR
  { 1, 183, 184, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 1, 153, 154, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 163, 164, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 162, 163, 0, 0 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 1, 153, 154, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 1, 153, 154, 0, 0 }, // 170 BCDCTSQ_rec
  { 1, 153, 154, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 1, 153, 154, 0, 0 }, // 172 BCDCFSQ_rec
  { 1, 153, 154, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 1, 153, 154, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 157, 158, 0, 0 }, // 175 LXVL_LXVLL
  { 1, 157, 158, 0, 0 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 157, 158, 0, 0 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 157, 158, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 166, 167, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 157, 158, 0, 0 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 167, 168, 0, 0 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 1, 157, 158, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 1, 167, 168, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 166, 167, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 157, 158, 0, 0 }, // 189 TLBSYNC
  { 1, 150, 151, 0, 0 }, // 190 SYNC
  { 1, 169, 170, 0, 0 }, // 191 LMW
  { 1, 157, 158, 0, 0 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 157, 158, 0, 0 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 157, 158, 0, 0 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 177, 178, 0, 0 }, // 201 TEND
  { 1, 167, 168, 0, 0 }, // 202 STBCX_STHCX_STWCX
  { 1, 167, 168, 0, 0 }, // 203 STDCX
  { 1, 168, 169, 0, 0 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 1, 168, 169, 0, 0 }, // 206 LWA_LWA_32
  { 1, 177, 178, 0, 0 }, // 207 TCHECK
  { 1, 157, 158, 0, 0 }, // 208 LFIWAX
  { 1, 157, 158, 0, 0 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 157, 158, 0, 0 }, // 211 LFSX_LFS
  { 1, 157, 158, 0, 0 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 168, 169, 0, 0 }, // 214 LHAU_LHAU8
  { 1, 168, 169, 0, 0 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 157, 158, 0, 0 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 180, 181, 0, 0 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 157, 158, 0, 0 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 157, 158, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 157, 158, 0, 0 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 169, 170, 0, 0 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 157, 158, 0, 0 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 180, 181, 0, 0 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 157, 158, 0, 0 }, // 227 STXVL_STXVLL
  { 1, 177, 178, 0, 0 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 151, 152, 0, 0 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 176, 177, 0, 0 }, // 232 MFTB_MFTB8
  { 1, 174, 175, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 174, 175, 0, 0 }, // 234 MFMSR
  { 1, 157, 158, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 177, 178, 0, 0 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 159, 160, 0, 0 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 159, 160, 0, 0 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 1, 158, 159, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 1, 158, 159, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 159, 160, 0, 0 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 1, 158, 159, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 159, 160, 0, 0 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 1, 158, 159, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 172, 173, 0, 0 }, // 246 MTCRF_MTCRF8
  { 1, 151, 152, 0, 0 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 160, 161, 0, 0 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 171, 172, 0, 0 }, // 249 MCRFS
  { 1, 175, 176, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 160, 161, 0, 0 }, // 251 MTFSFb
  { 1, 151, 152, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 1, 151, 152, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 154, 155, 0, 0 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 151, 152, 0, 0 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 151, 152, 0, 0 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 175, 176, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 173, 174, 0, 0 }, // 258 MFCR_MFCR8
  { 1, 151, 152, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 1, 151, 152, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 161, 162, 0, 0 }, // 261 FDIV
  { 1, 161, 162, 0, 0 }, // 262 FDIV_rec
  { 1, 165, 166, 0, 0 }, // 263 XSSQRTDP
  { 1, 165, 166, 0, 0 }, // 264 FSQRT
  { 1, 165, 166, 0, 0 }, // 265 XVSQRTDP
  { 1, 165, 166, 0, 0 }, // 266 XVSQRTSP
  { 1, 165, 166, 0, 0 }, // 267 FSQRT_rec
  { 1, 165, 166, 0, 0 }, // 268 XSSQRTSP
  { 1, 165, 166, 0, 0 }, // 269 FSQRTS
  { 1, 165, 166, 0, 0 }, // 270 FSQRTS_rec
  { 1, 161, 162, 0, 0 }, // 271 XSDIVDP
  { 1, 161, 162, 0, 0 }, // 272 FDIVS
  { 1, 161, 162, 0, 0 }, // 273 FDIVS_rec
  { 1, 161, 162, 0, 0 }, // 274 XSDIVSP
  { 1, 161, 162, 0, 0 }, // 275 XVDIVSP
  { 1, 161, 162, 0, 0 }, // 276 XVDIVDP
  { 1, 168, 169, 0, 0 }, // 277 LFSU
  { 1, 168, 169, 0, 0 }, // 278 LFSUX
  { 1, 180, 181, 0, 0 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 157, 158, 0, 0 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 157, 158, 0, 0 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 157, 158, 0, 0 }, // 282 LBZU_LBZU8
  { 1, 157, 158, 0, 0 }, // 283 LBZUX_LBZUX8
  { 1, 157, 158, 0, 0 }, // 284 LDU
  { 1, 157, 158, 0, 0 }, // 285 LDUX
  { 1, 168, 169, 0, 0 }, // 286 LFDU
  { 1, 168, 169, 0, 0 }, // 287 LFDUX
  { 1, 153, 154, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 152, 153, 0, 0 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 152, 153, 0, 0 }, // 290 ADDPCIS
  { 1, 157, 158, 0, 0 }, // 291 LDAT_LWAT
  { 1, 157, 158, 0, 0 }, // 292 STDAT_STWAT
  { 1, 151, 152, 0, 0 }, // 293 BRINC
  { 1, 163, 164, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 164, 165, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 157, 158, 0, 0 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 157, 158, 0, 0 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 152, 153, 0, 0 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 1, 179, 180, 0, 0 }, // 300 RFID
  { 1, 157, 158, 0, 0 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 157, 158, 0, 0 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 157, 158, 0, 0 }, // 303 LFDEPX
  { 1, 180, 181, 0, 0 }, // 304 STFDEPX
  { 1, 157, 158, 0, 0 }, // 305 MFSR_MFSRIN
  { 1, 157, 158, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 174, 175, 0, 0 }, // 307 MFDCR
  { 1, 177, 178, 0, 0 }, // 308 MTDCR
  { 1, 151, 152, 0, 0 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 157, 158, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 151, 152, 0, 0 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 150, 151, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 157, 158, 0, 0 }, // 317 DCBA_DCBI
  { 1, 160, 161, 0, 0 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 1, 153, 154, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 1, 153, 154, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 1, 153, 154, 0, 0 }, // 321 XVCVSPBF16
  { 1, 160, 161, 0, 0 }, // 322 FADDS_FMULS_FSUBS
  { 1, 160, 161, 0, 0 }, // 323 FMUL
  { 1, 153, 154, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 163, 164, 0, 0 }, // 325 VSUBFP
  { 1, 153, 154, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 1, 153, 154, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 1, 153, 154, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 1, 153, 154, 0, 0 }, // 329 VEXPTEFP
  { 1, 160, 161, 0, 0 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 160, 161, 0, 0 }, // 331 FMUL_rec
  { 1, 160, 161, 0, 0 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 152, 153, 0, 0 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 152, 153, 0, 0 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 152, 153, 0, 0 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 152, 153, 0, 0 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 1, 153, 154, 0, 0 }, // 337 VSBOX
  { 1, 151, 152, 0, 0 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 163, 164, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 1, 153, 154, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 1, 153, 154, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 1, 153, 154, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 151, 152, 0, 0 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 1, 153, 154, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 1, 163, 164, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 163, 164, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 159, 160, 0, 0 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 163, 164, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 1, 163, 164, 0, 0 }, // 349 VMODSD_VMODUD
  { 1, 163, 164, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 1, 163, 164, 0, 0 }, // 351 VMODSW_VMODUW
  { 1, 163, 164, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 1, 163, 164, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 1, 153, 154, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 1, 153, 154, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 163, 164, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 1, 153, 154, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 163, 164, 0, 0 }, // 358 XXGENPCVBM
  { 1, 153, 154, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 157, 158, 0, 0 }, // 360 TRAP
  { 1, 181, 182, 0, 0 }, // 361 TW
  { 1, 151, 152, 0, 0 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 151, 152, 0, 0 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 162, 163, 0, 0 }, // 364 FTSQRT
  { 1, 163, 164, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 151, 152, 0, 0 }, // 366 POPCNTB_POPCNTB8
  { 1, 163, 164, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 163, 164, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 1, 153, 154, 0, 0 }, // 369 XSCVSPDPN
  { 1, 162, 163, 0, 0 }, // 370 XSTSQRTDP
  { 1, 153, 154, 0, 0 }, // 371 XVCVHPSP
  { 1, 162, 163, 0, 0 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 155, 156, 0, 0 }, // 373 CMPEQB
  { 1, 151, 152, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 1, 151, 152, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 151, 152, 0, 0 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 153, 154, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 1, 182, 183, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 182, 183, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 163, 164, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 1, 153, 154, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 1, 151, 152, 0, 0 }, // 382 RLDIC_rec
  { 1, 151, 152, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 1, 153, 154, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 1, 153, 154, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 1, 153, 154, 0, 0 }, // 386 VRLQMI
  { 1, 156, 157, 0, 0 }, // 387 CR6SET_CREQV_CRSET
  { 1, 157, 158, 0, 0 }, // 388 DSS_DSSALL
  { 1, 174, 175, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 151, 152, 0, 0 }, // 390 NOP_ORI_ORI8
  { 1, 153, 154, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 163, 164, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 151, 152, 0, 0 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 151, 152, 0, 0 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 160, 161, 0, 0 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 151, 152, 0, 0 }, // 398 SETB_SETB8
  { 1, 155, 156, 0, 0 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 163, 164, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 163, 164, 0, 0 }, // 401 VEXTSD2Q
  { 1, 153, 154, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 1, 153, 154, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 1, 153, 154, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 151, 152, 0, 0 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 151, 152, 0, 0 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 151, 152, 0, 0 }, // 407 CMPB_CMPB8
  { 1, 156, 157, 0, 0 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 1, 151, 152, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 151, 152, 0, 0 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 163, 164, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 1, 153, 154, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 1, 153, 154, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 151, 152, 0, 0 }, // 414 ADDEX_ADDEX8
  { 1, 157, 158, 0, 0 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 1, 151, 152, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 175, 176, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 177, 178, 0, 0 }, // 418 TRECHKPT
  { 1, 151, 152, 0, 0 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 160, 161, 0, 0 }, // 420 MTFSB0
  { 1, 151, 152, 0, 0 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 151, 152, 0, 0 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 151, 152, 0, 0 }, // 423 ADDG6S_ADDG6S8
  { 1, 152, 153, 0, 0 }, // 424 HRFID
  { 1, 160, 161, 0, 0 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 152, 153, 0, 0 }, // 426 SC
  { 1, 151, 152, 0, 0 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 151, 152, 0, 0 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 175, 176, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 175, 176, 0, 0 }, // 430 MTFSFI_rec
  { 1, 163, 164, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 157, 158, 0, 0 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 1, 157, 158, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 157, 158, 0, 0 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 157, 158, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 157, 158, 0, 0 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 1, 157, 158, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 157, 158, 0, 0 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 157, 158, 0, 0 }, // 441 MTSR
  { 1, 151, 152, 0, 0 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 157, 158, 0, 0 }, // 443 LSWI
  { 1, 157, 158, 0, 0 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 157, 158, 0, 0 }, // 445 LXVP_LXVPX
  { 1, 157, 158, 0, 0 }, // 446 MFSR
  { 1, 176, 177, 0, 0 }, // 447 MFTB8
  { 1, 163, 164, 0, 0 }, // 448 XXSETACCZ
  { 1, 153, 154, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 1, 153, 154, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 163, 164, 0, 0 }, // 451 XVI8GER4SPP
  { 1, 153, 154, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 1, 153, 154, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 1, 153, 154, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 163, 164, 0, 0 }, // 455 PMXVI8GER4SPP
  { 1, 163, 164, 0, 0 }, // 456 XXMTACC
  { 1, 163, 164, 0, 0 }, // 457 XXMFACC
  { 1, 170, 171, 0, 0 }, // 458 MULLD_MULLDO
  { 1, 163, 164, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 1, 183, 184, 0, 0 }, // 460 VSPLTISW
  { 1, 153, 154, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 154, 155, 0, 0 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 163, 164, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 163, 164, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 1, 153, 154, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 1, 183, 184, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 1, 153, 154, 0, 0 }, // 467 XVCVBF16SPN
  { 1, 153, 154, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 163, 164, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 163, 164, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 1, 183, 184, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 163, 164, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 1, 153, 154, 0, 0 }, // 473 VSUMSWS
  { 1, 163, 164, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 163, 164, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 163, 164, 0, 0 }, // 476 XXEVAL
  { 1, 183, 184, 0, 0 }, // 477 XXPERMX
  { 1, 157, 158, 0, 0 }, // 478 DCBST_DCBZ
  { 1, 166, 167, 0, 0 }, // 479 ICBI
  { 1, 157, 158, 0, 0 }, // 480 DCBF
  { 1, 157, 158, 0, 0 }, // 481 PSTXVP_PSTXVPpc
  { 1, 157, 158, 0, 0 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 157, 158, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 180, 181, 0, 0 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 157, 158, 0, 0 }, // 488 EnforceIEIO
  { 1, 157, 158, 0, 0 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 157, 158, 0, 0 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 157, 158, 0, 0 }, // 491 STXVP_STXVPX
  { 1, 152, 153, 0, 0 }, // 492 ATTN_NAP
  { 1, 157, 158, 0, 0 }, // 493 DCBZL
  { 1, 157, 158, 0, 0 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 157, 158, 0, 0 }, // 495 ICBLC
  { 1, 152, 153, 0, 0 }, // 496 CLRBHRB
  { 1, 152, 153, 0, 0 }, // 497 MFBHRBE
  { 1, 157, 158, 0, 0 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 151, 152, 0, 0 }, // 499 PLI_PLI8
  { 1, 153, 154, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 163, 164, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 163, 164, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary PPCA2Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 184, 185, 780, 781 }, // 1 IIC_LdStSync
  { 1, 184, 185, 781, 784 }, // 2 IIC_IntSimple
  { 1, 184, 185, 784, 787 }, // 3 IIC_IntGeneral
  { 1, 184, 185, 787, 790 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 184, 185, 790, 793 }, // 6 IIC_IntRotate
  { 1, 184, 185, 793, 796 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 184, 185, 796, 799 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 184, 185, 799, 802 }, // 13 IIC_LdStDCBF
  { 1, 184, 185, 802, 805 }, // 14 IIC_LdStLoad
  { 1, 184, 185, 805, 808 }, // 15 IIC_IntDivD
  { 1, 184, 185, 808, 811 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 185, 186, 811, 814 }, // 18 IIC_FPAddSub
  { 1, 185, 186, 814, 817 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 185, 186, 817, 820 }, // 21 IIC_FPCompare
  { 1, 185, 186, 820, 823 }, // 22 IIC_FPGeneral
  { 0, 0, 0, 0, 0 }, // 23 IIC_VecGeneral
  { 0, 0, 0, 0, 0 }, // 24 IIC_VecComplex
  { 1, 184, 185, 823, 826 }, // 25 IIC_LdStStore
  { 1, 184, 185, 826, 829 }, // 26 IIC_IntRotateDI
  { 1, 185, 186, 829, 832 }, // 27 IIC_FPDivS
  { 1, 185, 186, 832, 836 }, // 28 IIC_FPFused
  { 1, 185, 186, 836, 839 }, // 29 IIC_FPSqrtD
  { 1, 185, 186, 839, 842 }, // 30 IIC_FPSqrtS
  { 1, 184, 185, 842, 845 }, // 31 IIC_LdStICBI
  { 1, 184, 185, 845, 849 }, // 32 IIC_IntISEL
  { 1, 184, 185, 849, 850 }, // 33 IIC_SprISYNC
  { 1, 184, 185, 850, 853 }, // 34 IIC_LdStLWARX
  { 1, 184, 185, 853, 857 }, // 35 IIC_LdStLoadUpd
  { 1, 184, 185, 857, 861 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 1, 184, 185, 861, 864 }, // 38 IIC_LdStLDU
  { 1, 184, 185, 864, 867 }, // 39 IIC_LdStLDUX
  { 1, 184, 185, 867, 870 }, // 40 IIC_LdStLFD
  { 1, 184, 185, 870, 874 }, // 41 IIC_LdStLFDU
  { 1, 184, 185, 874, 878 }, // 42 IIC_LdStLFDUX
  { 1, 184, 185, 878, 881 }, // 43 IIC_LdStLHA
  { 1, 184, 185, 881, 885 }, // 44 IIC_LdStLHAU
  { 1, 184, 185, 885, 889 }, // 45 IIC_LdStLHAUX
  { 0, 0, 0, 0, 0 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 184, 185, 889, 892 }, // 51 IIC_BrMCR
  { 1, 184, 185, 892, 895 }, // 52 IIC_BrMCRX
  { 1, 184, 185, 895, 897 }, // 53 IIC_SprMFCR
  { 1, 184, 185, 897, 899 }, // 54 IIC_SprMFSPR
  { 0, 0, 0, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 184, 185, 899, 901 }, // 56 IIC_SprMFMSR
  { 1, 184, 185, 901, 903 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 0, 0, 0, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 184, 185, 903, 905 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 184, 185, 905, 907 }, // 62 IIC_SprMTSPR
  { 0, 0, 0, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 184, 185, 907, 909 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 0, 0, 0, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 184, 185, 909, 912 }, // 68 IIC_IntMulHW
  { 1, 184, 185, 912, 915 }, // 69 IIC_IntMulHWU
  { 1, 184, 185, 915, 918 }, // 70 IIC_IntMulLI
  { 1, 184, 185, 918, 919 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 1, 184, 185, 919, 922 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 184, 185, 922, 925 }, // 82 IIC_IntShift
  { 1, 184, 185, 925, 928 }, // 83 IIC_LdStSTWCX
  { 1, 184, 185, 928, 932 }, // 84 IIC_LdStSTU
  { 1, 184, 185, 932, 936 }, // 85 IIC_LdStSTUX
  { 1, 184, 185, 936, 939 }, // 86 IIC_LdStSTD
  { 1, 184, 185, 939, 942 }, // 87 IIC_LdStSTDCX
  { 1, 184, 185, 942, 945 }, // 88 IIC_LdStSTFD
  { 1, 184, 185, 945, 949 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 1, 184, 185, 949, 951 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 0, 0, 0, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 184, 185, 951, 953 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 0, 0, 0, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 184, 185, 953, 955 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 0, 0, 0, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 0, 0, 0, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 184, 185, 955, 958 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 1, 184, 185, 958, 960 }, // 108 TD_TDI
  { 1, 184, 185, 960, 962 }, // 109 TW_TWI
  { 1, 185, 186, 962, 965 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 185, 186, 965, 968 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 184, 185, 968, 971 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 1, 184, 185, 971, 974 }, // 115 SLD_SRD_SRAD
  { 1, 184, 185, 974, 977 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 0, 0, 0, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 184, 185, 977, 980 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 184, 185, 980, 983 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 184, 185, 983, 986 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 184, 185, 986, 989 }, // 122 MCRF
  { 1, 184, 185, 989, 992 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 184, 185, 992, 995 }, // 125 RFEBB
  { 1, 184, 185, 995, 997 }, // 126 TBEGIN_TRECHKPT
  { 1, 184, 185, 997, 1000 }, // 127 WAIT
  { 1, 184, 185, 1000, 1003 }, // 128 RLDCL_RLDCR
  { 1, 184, 185, 1003, 1006 }, // 129 RLWIMI_RLWIMI8
  { 1, 184, 185, 1006, 1009 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 184, 185, 1009, 1011 }, // 131 MFOCRF_MFOCRF8
  { 1, 184, 185, 1011, 1014 }, // 132 MTOCRF_MTOCRF8
  { 1, 184, 185, 1014, 1017 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 184, 185, 1017, 1020 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 185, 186, 1020, 1023 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 184, 185, 1023, 1026 }, // 136 SRAW_SRAWI
  { 1, 184, 185, 1026, 1030 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 184, 185, 1030, 1032 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 184, 185, 1032, 1035 }, // 140 MFVSCR
  { 1, 184, 185, 1035, 1038 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 185, 186, 1038, 1041 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 0, 0, 0, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 184, 185, 1041, 1044 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 184, 185, 1044, 1047 }, // 150 MULHDU_MULHWU
  { 1, 184, 185, 1047, 1050 }, // 151 MULLI_MULLI8
  { 1, 185, 186, 1050, 1053 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 185, 186, 1053, 1056 }, // 153 FADD_FSUB
  { 1, 185, 186, 1056, 1060 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 185, 186, 1060, 1063 }, // 156 FSELD_rec_FSELS_rec
  { 1, 184, 185, 1063, 1066 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 184, 185, 1066, 1069 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 185, 186, 1069, 1072 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 185, 186, 1072, 1075 }, // 161 FADD_rec_FSUB_rec
  { 1, 185, 186, 1075, 1079 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 184, 185, 1079, 1082 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 0, 0, 0, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 185, 186, 1082, 1085 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 184, 185, 1085, 1088 }, // 175 LXVL_LXVLL
  { 1, 184, 185, 1088, 1091 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 184, 185, 1091, 1094 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 184, 185, 1094, 1097 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 184, 185, 1097, 1100 }, // 181 ICBI_ICBIEP
  { 1, 184, 185, 1100, 1103 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 184, 185, 1103, 1106 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 1, 184, 185, 1106, 1107 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 0, 0, 0, 0, 0 }, // 189 TLBSYNC
  { 1, 184, 185, 1107, 1108 }, // 190 SYNC
  { 0, 0, 0, 0, 0 }, // 191 LMW
  { 1, 184, 185, 1108, 1111 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 184, 185, 1111, 1115 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 184, 185, 1115, 1119 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 184, 185, 1119, 1121 }, // 201 TEND
  { 1, 184, 185, 1121, 1124 }, // 202 STBCX_STHCX_STWCX
  { 1, 184, 185, 1124, 1127 }, // 203 STDCX
  { 1, 184, 185, 1127, 1130 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 184, 185, 1130, 1132 }, // 207 TCHECK
  { 1, 184, 185, 1132, 1135 }, // 208 LFIWAX
  { 1, 184, 185, 1135, 1138 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 184, 185, 1138, 1141 }, // 211 LFSX_LFS
  { 1, 184, 185, 1141, 1144 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 184, 185, 1144, 1148 }, // 214 LHAU_LHAU8
  { 1, 184, 185, 1148, 1152 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 184, 185, 1152, 1155 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 184, 185, 1155, 1158 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 184, 185, 1158, 1161 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 184, 185, 1161, 1164 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 184, 185, 1164, 1167 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 0, 0, 0, 0, 0 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 184, 185, 1167, 1170 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 184, 185, 1170, 1173 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 184, 185, 1173, 1176 }, // 227 STXVL_STXVLL
  { 1, 184, 185, 1176, 1178 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 184, 185, 1178, 1181 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 1, 184, 185, 1181, 1183 }, // 232 MFTB_MFTB8
  { 1, 184, 185, 1183, 1185 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 184, 185, 1185, 1187 }, // 234 MFMSR
  { 1, 184, 185, 1187, 1189 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 184, 185, 1189, 1191 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 184, 185, 1191, 1194 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 184, 185, 1194, 1197 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 1, 184, 185, 1197, 1200 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 1, 184, 185, 1200, 1203 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 184, 185, 1203, 1206 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 1, 184, 185, 1206, 1209 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 184, 185, 1209, 1212 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 1, 184, 185, 1212, 1215 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 184, 185, 1215, 1218 }, // 246 MTCRF_MTCRF8
  { 1, 184, 185, 1218, 1221 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 185, 186, 1221, 1224 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 184, 185, 1224, 1227 }, // 249 MCRFS
  { 0, 0, 0, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 251 MTFSFb
  { 1, 184, 185, 1227, 1230 }, // 252 RLDCL_rec_RLDCR_rec
  { 1, 184, 185, 1230, 1233 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 184, 185, 1233, 1236 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 184, 185, 1236, 1239 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 184, 185, 1239, 1242 }, // 256 SRAWI_rec_SRAW_rec
  { 0, 0, 0, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 184, 185, 1242, 1244 }, // 258 MFCR_MFCR8
  { 1, 184, 185, 1244, 1247 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 1, 184, 185, 1247, 1250 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 185, 186, 1250, 1253 }, // 261 FDIV
  { 1, 185, 186, 1253, 1256 }, // 262 FDIV_rec
  { 1, 185, 186, 1256, 1259 }, // 263 XSSQRTDP
  { 1, 185, 186, 1259, 1262 }, // 264 FSQRT
  { 1, 185, 186, 1262, 1265 }, // 265 XVSQRTDP
  { 1, 185, 186, 1265, 1268 }, // 266 XVSQRTSP
  { 1, 185, 186, 1268, 1271 }, // 267 FSQRT_rec
  { 1, 185, 186, 1271, 1274 }, // 268 XSSQRTSP
  { 1, 185, 186, 1274, 1277 }, // 269 FSQRTS
  { 1, 185, 186, 1277, 1280 }, // 270 FSQRTS_rec
  { 1, 185, 186, 1280, 1283 }, // 271 XSDIVDP
  { 1, 185, 186, 1283, 1286 }, // 272 FDIVS
  { 1, 185, 186, 1286, 1289 }, // 273 FDIVS_rec
  { 1, 185, 186, 1289, 1292 }, // 274 XSDIVSP
  { 1, 185, 186, 1292, 1295 }, // 275 XVDIVSP
  { 1, 185, 186, 1295, 1298 }, // 276 XVDIVDP
  { 1, 184, 185, 1298, 1302 }, // 277 LFSU
  { 1, 184, 185, 1302, 1306 }, // 278 LFSUX
  { 1, 184, 185, 1306, 1310 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 184, 185, 1310, 1314 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 184, 185, 1314, 1318 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 184, 185, 1318, 1322 }, // 282 LBZU_LBZU8
  { 1, 184, 185, 1322, 1326 }, // 283 LBZUX_LBZUX8
  { 1, 184, 185, 1326, 1329 }, // 284 LDU
  { 1, 184, 185, 1329, 1332 }, // 285 LDUX
  { 1, 184, 185, 1332, 1336 }, // 286 LFDU
  { 1, 184, 185, 1336, 1340 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 184, 185, 1340, 1343 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 184, 185, 1343, 1346 }, // 290 ADDPCIS
  { 1, 184, 185, 1346, 1349 }, // 291 LDAT_LWAT
  { 1, 184, 185, 1349, 1352 }, // 292 STDAT_STWAT
  { 1, 184, 185, 1352, 1355 }, // 293 BRINC
  { 0, 0, 0, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 0, 0, 0, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 184, 185, 1355, 1358 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 184, 185, 1358, 1361 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 184, 185, 1361, 1364 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 1, 184, 185, 1364, 1365 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 184, 185, 1365, 1368 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 184, 185, 1368, 1371 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 184, 185, 1371, 1374 }, // 303 LFDEPX
  { 1, 184, 185, 1374, 1377 }, // 304 STFDEPX
  { 0, 0, 0, 0, 0 }, // 305 MFSR_MFSRIN
  { 0, 0, 0, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 184, 185, 1377, 1379 }, // 307 MFDCR
  { 1, 184, 185, 1379, 1381 }, // 308 MTDCR
  { 1, 184, 185, 1381, 1384 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 184, 185, 1384, 1386 }, // 311 WRTEE_WRTEEI
  { 1, 184, 185, 1386, 1389 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 184, 185, 1389, 1390 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 184, 185, 1390, 1393 }, // 317 DCBA_DCBI
  { 1, 185, 186, 1393, 1396 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 1, 185, 186, 1396, 1399 }, // 322 FADDS_FMULS_FSUBS
  { 1, 185, 186, 1399, 1403 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 0, 0, 0, 0, 0 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 1, 185, 186, 1403, 1406 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 185, 186, 1406, 1410 }, // 331 FMUL_rec
  { 1, 185, 186, 1410, 1413 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 184, 185, 1413, 1416 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 184, 185, 1416, 1419 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 184, 185, 1419, 1422 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 184, 185, 1422, 1425 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 184, 185, 1425, 1428 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 0, 0, 0, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 184, 185, 1428, 1431 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 0, 0, 0, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 0, 0, 0, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 184, 185, 1431, 1434 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 0, 0, 0, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 0, 0, 0, 0, 0 }, // 349 VMODSD_VMODUD
  { 0, 0, 0, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 0, 0, 0, 0, 0 }, // 351 VMODSW_VMODUW
  { 0, 0, 0, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 0, 0, 0, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 0, 0, 0, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 0, 0, 0, 0, 0 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 184, 185, 1434, 1437 }, // 360 TRAP
  { 1, 184, 185, 1437, 1439 }, // 361 TW
  { 1, 184, 185, 1439, 1442 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 184, 185, 1442, 1445 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 185, 186, 1445, 1448 }, // 364 FTSQRT
  { 0, 0, 0, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 184, 185, 1448, 1451 }, // 366 POPCNTB_POPCNTB8
  { 0, 0, 0, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 1, 185, 186, 1451, 1454 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 1, 185, 186, 1454, 1457 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 184, 185, 1457, 1460 }, // 373 CMPEQB
  { 1, 184, 185, 1460, 1463 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 1, 184, 185, 1463, 1466 }, // 375 SLD_rec_SRD_rec
  { 1, 184, 185, 1466, 1469 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 0, 0, 0, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 1, 184, 185, 1469, 1472 }, // 382 RLDIC_rec
  { 1, 184, 185, 1472, 1475 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 184, 185, 1475, 1478 }, // 387 CR6SET_CREQV_CRSET
  { 1, 184, 185, 1478, 1481 }, // 388 DSS_DSSALL
  { 1, 184, 185, 1481, 1483 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 184, 185, 1483, 1486 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 0, 0, 0, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 184, 185, 1486, 1489 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 184, 185, 1489, 1492 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 185, 186, 1492, 1495 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 184, 185, 1495, 1498 }, // 398 SETB_SETB8
  { 1, 184, 185, 1498, 1501 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 0, 0, 0, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 0, 0, 0, 0, 0 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 184, 185, 1501, 1504 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 184, 185, 1504, 1507 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 184, 185, 1507, 1510 }, // 407 CMPB_CMPB8
  { 1, 184, 185, 1510, 1513 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 1, 184, 185, 1513, 1516 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 184, 185, 1516, 1519 }, // 410 SLW_SLW8_SRW_SRW8
  { 0, 0, 0, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 184, 185, 1519, 1522 }, // 414 ADDEX_ADDEX8
  { 1, 184, 185, 1522, 1525 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 1, 184, 185, 1525, 1528 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 0, 0, 0, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 184, 185, 1528, 1530 }, // 418 TRECHKPT
  { 1, 184, 185, 1530, 1533 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 0, 0, 0, 0, 0 }, // 420 MTFSB0
  { 1, 184, 185, 1533, 1536 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 184, 185, 1536, 1539 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 184, 185, 1539, 1542 }, // 423 ADDG6S_ADDG6S8
  { 1, 184, 185, 1542, 1545 }, // 424 HRFID
  { 1, 185, 186, 1545, 1548 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 184, 185, 1548, 1551 }, // 426 SC
  { 1, 184, 185, 1551, 1554 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 184, 185, 1554, 1557 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 0, 0, 0, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 430 MTFSFI_rec
  { 0, 0, 0, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 184, 185, 1557, 1560 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 184, 185, 1560, 1563 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 184, 185, 1563, 1566 }, // 436 DCBT_DCBTST
  { 1, 184, 185, 1566, 1569 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 184, 185, 1569, 1572 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 0, 0, 0, 0, 0 }, // 441 MTSR
  { 1, 184, 185, 1572, 1575 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 184, 185, 1575, 1578 }, // 443 LSWI
  { 1, 184, 185, 1578, 1581 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 184, 185, 1581, 1584 }, // 445 LXVP_LXVPX
  { 0, 0, 0, 0, 0 }, // 446 MFSR
  { 1, 184, 185, 1584, 1586 }, // 447 MFTB8
  { 0, 0, 0, 0, 0 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 455 PMXVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 456 XXMTACC
  { 0, 0, 0, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 0, 0, 0, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 184, 185, 1586, 1589 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 0, 0, 0, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 0, 0, 0, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 0, 0, 0, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 0, 0, 0, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 0, 0, 0, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 0, 0, 0, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 0, 0, 0, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 0, 0, 0, 0, 0 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 184, 185, 1589, 1592 }, // 478 DCBST_DCBZ
  { 1, 184, 185, 1592, 1595 }, // 479 ICBI
  { 1, 184, 185, 1595, 1598 }, // 480 DCBF
  { 1, 184, 185, 1598, 1601 }, // 481 PSTXVP_PSTXVPpc
  { 1, 184, 185, 1601, 1604 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 184, 185, 1604, 1607 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 184, 185, 1607, 1610 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 184, 185, 1610, 1613 }, // 488 EnforceIEIO
  { 1, 184, 185, 1613, 1616 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 184, 185, 1616, 1619 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 184, 185, 1619, 1622 }, // 491 STXVP_STXVPX
  { 1, 184, 185, 1622, 1625 }, // 492 ATTN_NAP
  { 1, 184, 185, 1625, 1628 }, // 493 DCBZL
  { 1, 184, 185, 1628, 1631 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 184, 185, 1631, 1634 }, // 495 ICBLC
  { 1, 184, 185, 1634, 1637 }, // 496 CLRBHRB
  { 1, 184, 185, 1637, 1640 }, // 497 MFBHRBE
  { 1, 184, 185, 1640, 1643 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 184, 185, 1643, 1646 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 0, 0, 0, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 0, 0, 0, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary PPCE500Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 186, 188, 0, 0 }, // 1 IIC_LdStSync
  { 1, 188, 190, 1646, 1649 }, // 2 IIC_IntSimple
  { 1, 188, 190, 1649, 1652 }, // 3 IIC_IntGeneral
  { 1, 190, 192, 1652, 1654 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 188, 190, 1654, 1657 }, // 6 IIC_IntRotate
  { 1, 188, 190, 1657, 1660 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 190, 192, 1660, 1663 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 186, 188, 1663, 1665 }, // 13 IIC_LdStDCBF
  { 1, 186, 188, 1665, 1667 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 192, 195, 1667, 1670 }, // 16 IIC_IntDivW
  { 1, 195, 197, 1670, 1673 }, // 17 IIC_FPDGeneral
  { 0, 0, 0, 0, 0 }, // 18 IIC_FPAddSub
  { 1, 197, 199, 1673, 1676 }, // 19 IIC_FPDivD
  { 1, 199, 201, 1676, 1679 }, // 20 IIC_FPSGeneral
  { 0, 0, 0, 0, 0 }, // 21 IIC_FPCompare
  { 0, 0, 0, 0, 0 }, // 22 IIC_FPGeneral
  { 1, 201, 203, 1679, 1682 }, // 23 IIC_VecGeneral
  { 1, 199, 201, 1682, 1685 }, // 24 IIC_VecComplex
  { 1, 186, 188, 1685, 1687 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 203, 205, 1687, 1690 }, // 27 IIC_FPDivS
  { 0, 0, 0, 0, 0 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 186, 188, 1690, 1692 }, // 31 IIC_LdStICBI
  { 1, 188, 190, 1692, 1696 }, // 32 IIC_IntISEL
  { 0, 0, 0, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 205, 207, 1696, 1699 }, // 34 IIC_LdStLWARX
  { 2, 207, 210, 1699, 1701 }, // 35 IIC_LdStLoadUpd
  { 2, 207, 210, 1701, 1703 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 0, 0, 0, 0, 0 }, // 40 IIC_LdStLFD
  { 0, 0, 0, 0, 0 }, // 41 IIC_LdStLFDU
  { 0, 0, 0, 0, 0 }, // 42 IIC_LdStLFDUX
  { 1, 186, 188, 1703, 1705 }, // 43 IIC_LdStLHA
  { 1, 207, 210, 1705, 1707 }, // 44 IIC_LdStLHAU
  { 1, 207, 210, 1707, 1709 }, // 45 IIC_LdStLHAUX
  { 1, 186, 188, 1709, 1711 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 190, 192, 1711, 1713 }, // 51 IIC_BrMCR
  { 1, 188, 190, 1713, 1716 }, // 52 IIC_BrMCRX
  { 1, 210, 212, 1716, 1718 }, // 53 IIC_SprMFCR
  { 1, 188, 190, 1718, 1720 }, // 54 IIC_SprMFSPR
  { 0, 0, 0, 0, 0 }, // 55 IIC_IntMFFS
  { 1, 212, 214, 1720, 1722 }, // 56 IIC_SprMFMSR
  { 1, 210, 212, 1722, 1724 }, // 57 IIC_SprMFCRF
  { 1, 212, 214, 1724, 1726 }, // 58 IIC_SprMFPMR
  { 1, 212, 214, 1726, 1728 }, // 59 IIC_SprMFSR
  { 1, 212, 214, 1728, 1730 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 188, 190, 1730, 1732 }, // 62 IIC_SprMTSPR
  { 0, 0, 0, 0, 0 }, // 63 IIC_IntMTFSB0
  { 1, 214, 216, 1732, 1734 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 1, 201, 203, 1734, 1736 }, // 66 IIC_SprMTPMR
  { 1, 201, 203, 1736, 1738 }, // 67 IIC_SprMTSR
  { 1, 199, 201, 1738, 1741 }, // 68 IIC_IntMulHW
  { 1, 199, 201, 1741, 1744 }, // 69 IIC_IntMulHWU
  { 1, 199, 201, 1744, 1747 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 188, 190, 1747, 1750 }, // 82 IIC_IntShift
  { 1, 186, 188, 1750, 1752 }, // 83 IIC_LdStSTWCX
  { 2, 207, 210, 1752, 1754 }, // 84 IIC_LdStSTU
  { 2, 207, 210, 1754, 1756 }, // 85 IIC_LdStSTUX
  { 0, 0, 0, 0, 0 }, // 86 IIC_LdStSTD
  { 0, 0, 0, 0, 0 }, // 87 IIC_LdStSTDCX
  { 0, 0, 0, 0, 0 }, // 88 IIC_LdStSTFD
  { 0, 0, 0, 0, 0 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 216, 218, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 218, 220, 1756, 1758 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 1, 201, 203, 1758, 1761 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 188, 190, 1761, 1763 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 0, 0, 0, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 0, 0, 0, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 188, 190, 1763, 1766 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 218, 220, 1766, 1768 }, // 109 TW_TWI
  { 0, 0, 0, 0, 0 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 0, 0, 0, 0, 0 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 188, 190, 1768, 1771 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 201, 203, 1771, 1774 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 188, 190, 1774, 1777 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 188, 190, 1777, 1780 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 188, 190, 1780, 1783 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 190, 192, 1783, 1785 }, // 122 MCRF
  { 1, 188, 190, 1785, 1788 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 190, 192, 1788, 1790 }, // 125 RFEBB
  { 1, 188, 190, 1790, 1792 }, // 126 TBEGIN_TRECHKPT
  { 1, 186, 188, 1792, 1794 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 188, 190, 1794, 1797 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 210, 212, 1797, 1799 }, // 131 MFOCRF_MFOCRF8
  { 1, 188, 190, 1799, 1802 }, // 132 MTOCRF_MTOCRF8
  { 1, 190, 192, 1802, 1805 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 188, 190, 1805, 1808 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 0, 0, 0, 0, 0 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 188, 190, 1808, 1811 }, // 136 SRAW_SRAWI
  { 1, 188, 190, 1811, 1815 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 188, 190, 1815, 1817 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 186, 188, 1817, 1819 }, // 140 MFVSCR
  { 1, 186, 188, 1819, 1821 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 201, 203, 1821, 1824 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 0, 0, 0, 0, 0 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 201, 203, 1824, 1827 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 199, 201, 1827, 1830 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 199, 201, 1830, 1833 }, // 150 MULHDU_MULHWU
  { 1, 199, 201, 1833, 1836 }, // 151 MULLI_MULLI8
  { 0, 0, 0, 0, 0 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 0, 0, 0, 0, 0 }, // 153 FADD_FSUB
  { 0, 0, 0, 0, 0 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 156 FSELD_rec_FSELS_rec
  { 1, 199, 201, 1836, 1839 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 199, 201, 1839, 1842 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 0, 0, 0, 0, 0 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 0, 0, 0, 0, 0 }, // 161 FADD_rec_FSUB_rec
  { 0, 0, 0, 0, 0 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 186, 188, 1842, 1844 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 201, 203, 1844, 1847 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 186, 188, 1847, 1849 }, // 175 LXVL_LXVLL
  { 1, 186, 188, 1849, 1851 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 0, 0, 0, 0, 0 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 186, 188, 1851, 1853 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 186, 188, 1853, 1855 }, // 181 ICBI_ICBIEP
  { 1, 186, 188, 1855, 1857 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 205, 207, 1857, 1860 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 0, 0, 0, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 216, 218, 0, 0 }, // 189 TLBSYNC
  { 1, 186, 188, 0, 0 }, // 190 SYNC
  { 1, 186, 188, 1860, 1862 }, // 191 LMW
  { 0, 0, 0, 0, 0 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 2, 207, 210, 1862, 1864 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 2, 207, 210, 1864, 1866 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 188, 190, 1866, 1868 }, // 201 TEND
  { 1, 186, 188, 1868, 1870 }, // 202 STBCX_STHCX_STWCX
  { 0, 0, 0, 0, 0 }, // 203 STDCX
  { 1, 186, 188, 1870, 1872 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 188, 190, 1872, 1874 }, // 207 TCHECK
  { 0, 0, 0, 0, 0 }, // 208 LFIWAX
  { 0, 0, 0, 0, 0 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 0, 0, 0, 0, 0 }, // 211 LFSX_LFS
  { 0, 0, 0, 0, 0 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 207, 210, 1874, 1876 }, // 214 LHAU_LHAU8
  { 1, 207, 210, 1876, 1878 }, // 215 LHAUX_LHAUX8_LWAUX
  { 0, 0, 0, 0, 0 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 0, 0, 0, 0, 0 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 186, 188, 1878, 1880 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 0, 0, 0, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 186, 188, 1880, 1882 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 186, 188, 1882, 1884 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 186, 188, 1884, 1886 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 0, 0, 0, 0, 0 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 186, 188, 1886, 1888 }, // 227 STXVL_STXVLL
  { 1, 188, 190, 1888, 1890 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 188, 190, 1890, 1893 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 1, 212, 214, 1893, 1895 }, // 230 MFPMR
  { 1, 201, 203, 1895, 1897 }, // 231 MTPMR
  { 1, 212, 214, 1897, 1899 }, // 232 MFTB_MFTB8
  { 1, 188, 190, 1899, 1901 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 212, 214, 1901, 1903 }, // 234 MFMSR
  { 1, 214, 216, 1903, 1905 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 188, 190, 1905, 1907 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 192, 195, 1907, 1910 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 192, 195, 1910, 1913 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 192, 195, 1913, 1916 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 192, 195, 1916, 1919 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 188, 190, 1919, 1922 }, // 246 MTCRF_MTCRF8
  { 1, 188, 190, 1922, 1925 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 0, 0, 0, 0, 0 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 190, 192, 1925, 1927 }, // 249 MCRFS
  { 0, 0, 0, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 188, 190, 1927, 1930 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 188, 190, 1930, 1933 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 188, 190, 1933, 1936 }, // 256 SRAWI_rec_SRAW_rec
  { 0, 0, 0, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 210, 212, 1936, 1938 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 197, 199, 1938, 1941 }, // 261 FDIV
  { 1, 197, 199, 1941, 1944 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 197, 199, 1944, 1947 }, // 271 XSDIVDP
  { 1, 203, 205, 1947, 1950 }, // 272 FDIVS
  { 1, 203, 205, 1950, 1953 }, // 273 FDIVS_rec
  { 1, 203, 205, 1953, 1956 }, // 274 XSDIVSP
  { 1, 203, 205, 1956, 1959 }, // 275 XVDIVSP
  { 1, 197, 199, 1959, 1962 }, // 276 XVDIVDP
  { 0, 0, 0, 0, 0 }, // 277 LFSU
  { 0, 0, 0, 0, 0 }, // 278 LFSUX
  { 0, 0, 0, 0, 0 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 2, 207, 210, 1962, 1964 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 2, 207, 210, 1964, 1966 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 2, 207, 210, 1966, 1968 }, // 282 LBZU_LBZU8
  { 2, 207, 210, 1968, 1970 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 0, 0, 0, 0, 0 }, // 286 LFDU
  { 0, 0, 0, 0, 0 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 190, 192, 1970, 1972 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 190, 192, 1972, 1974 }, // 290 ADDPCIS
  { 1, 186, 188, 1974, 1976 }, // 291 LDAT_LWAT
  { 1, 186, 188, 1976, 1978 }, // 292 STDAT_STWAT
  { 1, 188, 190, 1978, 1981 }, // 293 BRINC
  { 1, 201, 203, 1981, 1984 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 199, 201, 1984, 1987 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 186, 188, 1987, 1989 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 186, 188, 1989, 1991 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 190, 192, 1991, 1993 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 186, 188, 1993, 1995 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 186, 188, 1995, 1997 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 0, 0, 0, 0, 0 }, // 303 LFDEPX
  { 0, 0, 0, 0, 0 }, // 304 STFDEPX
  { 1, 212, 214, 1997, 1999 }, // 305 MFSR_MFSRIN
  { 1, 201, 203, 1999, 2001 }, // 306 MTSR_MTSRIN
  { 1, 188, 190, 2001, 2003 }, // 307 MFDCR
  { 1, 188, 190, 2003, 2005 }, // 308 MTDCR
  { 1, 188, 190, 2005, 2008 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 214, 216, 2008, 2010 }, // 311 WRTEE_WRTEEI
  { 1, 188, 190, 2010, 2013 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 186, 188, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 186, 188, 2013, 2015 }, // 317 DCBA_DCBI
  { 0, 0, 0, 0, 0 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 0, 0, 0, 0, 0 }, // 322 FADDS_FMULS_FSUBS
  { 0, 0, 0, 0, 0 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 201, 203, 2015, 2018 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 0, 0, 0, 0, 0 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 0, 0, 0, 0, 0 }, // 331 FMUL_rec
  { 0, 0, 0, 0, 0 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 190, 192, 2018, 2020 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 190, 192, 2020, 2022 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 190, 192, 2022, 2024 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 190, 192, 2024, 2026 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 188, 190, 2026, 2029 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 201, 203, 2029, 2032 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 188, 190, 2032, 2035 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 1, 201, 203, 2035, 2038 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 201, 203, 2038, 2041 }, // 346 VMODSQ_VMODUQ
  { 1, 192, 195, 2041, 2044 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 201, 203, 2044, 2047 }, // 348 VDIVSD_VDIVUD
  { 1, 201, 203, 2047, 2050 }, // 349 VMODSD_VMODUD
  { 1, 201, 203, 2050, 2053 }, // 350 VDIVSW_VDIVUW
  { 1, 201, 203, 2053, 2056 }, // 351 VMODSW_VMODUW
  { 1, 201, 203, 2056, 2059 }, // 352 VDIVESD_VDIVEUD
  { 1, 201, 203, 2059, 2062 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 201, 203, 2062, 2065 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 201, 203, 2065, 2068 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 186, 188, 2068, 2070 }, // 360 TRAP
  { 1, 218, 220, 2070, 2072 }, // 361 TW
  { 1, 188, 190, 2072, 2075 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 188, 190, 2075, 2078 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 0, 0, 0, 0, 0 }, // 364 FTSQRT
  { 1, 201, 203, 2078, 2081 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 188, 190, 2081, 2084 }, // 366 POPCNTB_POPCNTB8
  { 1, 201, 203, 2084, 2087 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 201, 203, 2087, 2090 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 0, 0, 0, 0, 0 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 0, 0, 0, 0, 0 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 188, 190, 2090, 2093 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 188, 190, 2093, 2096 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 201, 203, 2096, 2099 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 190, 192, 2099, 2102 }, // 387 CR6SET_CREQV_CRSET
  { 1, 186, 188, 2102, 2104 }, // 388 DSS_DSSALL
  { 1, 188, 190, 2104, 2106 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 188, 190, 2106, 2109 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 201, 203, 2109, 2112 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 188, 190, 2112, 2115 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 188, 190, 2115, 2118 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 0, 0, 0, 0, 0 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 188, 190, 2118, 2121 }, // 398 SETB_SETB8
  { 1, 188, 190, 2121, 2124 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 201, 203, 2124, 2127 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 201, 203, 2127, 2130 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 188, 190, 2130, 2133 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 188, 190, 2133, 2136 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 188, 190, 2136, 2139 }, // 407 CMPB_CMPB8
  { 1, 190, 192, 2139, 2142 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 188, 190, 2142, 2145 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 201, 203, 2145, 2148 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 188, 190, 2148, 2151 }, // 414 ADDEX_ADDEX8
  { 1, 186, 188, 2151, 2153 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 0, 0, 0, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 188, 190, 2153, 2155 }, // 418 TRECHKPT
  { 1, 188, 190, 2155, 2158 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 0, 0, 0, 0, 0 }, // 420 MTFSB0
  { 1, 188, 190, 2158, 2161 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 188, 190, 2161, 2164 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 188, 190, 2164, 2167 }, // 423 ADDG6S_ADDG6S8
  { 1, 190, 192, 2167, 2169 }, // 424 HRFID
  { 0, 0, 0, 0, 0 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 190, 192, 2169, 2171 }, // 426 SC
  { 1, 188, 190, 2171, 2174 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 188, 190, 2174, 2177 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 0, 0, 0, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 430 MTFSFI_rec
  { 1, 201, 203, 2177, 2180 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 186, 188, 2180, 2182 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 0, 0, 0, 0, 0 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 186, 188, 2182, 2184 }, // 436 DCBT_DCBTST
  { 1, 186, 188, 2184, 2186 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 186, 188, 2186, 2188 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 201, 203, 2188, 2190 }, // 441 MTSR
  { 1, 188, 190, 2190, 2193 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 186, 188, 2193, 2195 }, // 443 LSWI
  { 0, 0, 0, 0, 0 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 0, 0, 0, 0, 0 }, // 445 LXVP_LXVPX
  { 1, 212, 214, 2195, 2197 }, // 446 MFSR
  { 1, 212, 214, 2197, 2199 }, // 447 MFTB8
  { 1, 201, 203, 2199, 2202 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 201, 203, 2202, 2205 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 201, 203, 2205, 2208 }, // 455 PMXVI8GER4SPP
  { 1, 201, 203, 2208, 2211 }, // 456 XXMTACC
  { 1, 201, 203, 2211, 2214 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 1, 201, 203, 2214, 2217 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 188, 190, 2217, 2220 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 201, 203, 2220, 2223 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 201, 203, 2223, 2226 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 201, 203, 2226, 2229 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 201, 203, 2229, 2232 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 201, 203, 2232, 2235 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 1, 201, 203, 2235, 2238 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 201, 203, 2238, 2241 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 201, 203, 2241, 2244 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 186, 188, 2244, 2246 }, // 478 DCBST_DCBZ
  { 1, 186, 188, 2246, 2248 }, // 479 ICBI
  { 1, 186, 188, 2248, 2250 }, // 480 DCBF
  { 0, 0, 0, 0, 0 }, // 481 PSTXVP_PSTXVPpc
  { 1, 186, 188, 2250, 2252 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 0, 0, 0, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 0, 0, 0, 0, 0 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 186, 188, 2252, 2254 }, // 488 EnforceIEIO
  { 1, 186, 188, 2254, 2256 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 0, 0, 0, 0, 0 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 0, 0, 0, 0, 0 }, // 491 STXVP_STXVPX
  { 1, 190, 192, 2256, 2258 }, // 492 ATTN_NAP
  { 1, 186, 188, 2258, 2260 }, // 493 DCBZL
  { 1, 186, 188, 2260, 2262 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 186, 188, 2262, 2264 }, // 495 ICBLC
  { 1, 190, 192, 2264, 2266 }, // 496 CLRBHRB
  { 1, 190, 192, 2266, 2268 }, // 497 MFBHRBE
  { 0, 0, 0, 0, 0 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 188, 190, 2268, 2271 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 201, 203, 2271, 2274 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 201, 203, 2274, 2277 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary PPCE500mcItineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 220, 222, 0, 0 }, // 1 IIC_LdStSync
  { 1, 222, 224, 2277, 2280 }, // 2 IIC_IntSimple
  { 1, 222, 224, 2280, 2283 }, // 3 IIC_IntGeneral
  { 1, 224, 226, 2283, 2285 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 222, 224, 2285, 2288 }, // 6 IIC_IntRotate
  { 1, 222, 224, 2288, 2291 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 224, 226, 2291, 2294 }, // 11 IIC_BrCR
  { 0, 0, 0, 0, 0 }, // 12 IIC_LdStLD
  { 1, 220, 222, 2294, 2296 }, // 13 IIC_LdStDCBF
  { 1, 220, 222, 2296, 2298 }, // 14 IIC_LdStLoad
  { 0, 0, 0, 0, 0 }, // 15 IIC_IntDivD
  { 1, 226, 229, 2298, 2301 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 229, 231, 2301, 2304 }, // 18 IIC_FPAddSub
  { 1, 231, 233, 2304, 2307 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 233, 235, 2307, 2310 }, // 21 IIC_FPCompare
  { 1, 233, 235, 2310, 2313 }, // 22 IIC_FPGeneral
  { 0, 0, 0, 0, 0 }, // 23 IIC_VecGeneral
  { 0, 0, 0, 0, 0 }, // 24 IIC_VecComplex
  { 1, 220, 222, 2313, 2315 }, // 25 IIC_LdStStore
  { 0, 0, 0, 0, 0 }, // 26 IIC_IntRotateDI
  { 1, 235, 237, 2315, 2318 }, // 27 IIC_FPDivS
  { 1, 229, 231, 2318, 2322 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 220, 222, 2322, 2324 }, // 31 IIC_LdStICBI
  { 1, 222, 224, 2324, 2328 }, // 32 IIC_IntISEL
  { 0, 0, 0, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 237, 239, 2328, 2331 }, // 34 IIC_LdStLWARX
  { 2, 239, 242, 2331, 2333 }, // 35 IIC_LdStLoadUpd
  { 2, 239, 242, 2333, 2335 }, // 36 IIC_LdStLoadUpdX
  { 0, 0, 0, 0, 0 }, // 37 IIC_LdStLDARX
  { 0, 0, 0, 0, 0 }, // 38 IIC_LdStLDU
  { 0, 0, 0, 0, 0 }, // 39 IIC_LdStLDUX
  { 1, 220, 222, 2335, 2338 }, // 40 IIC_LdStLFD
  { 2, 239, 242, 2338, 2341 }, // 41 IIC_LdStLFDU
  { 2, 239, 242, 2341, 2344 }, // 42 IIC_LdStLFDUX
  { 1, 220, 222, 2344, 2346 }, // 43 IIC_LdStLHA
  { 1, 239, 242, 2346, 2348 }, // 44 IIC_LdStLHAU
  { 1, 239, 242, 2348, 2350 }, // 45 IIC_LdStLHAUX
  { 1, 220, 222, 2350, 2352 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 0, 0, 0, 0, 0 }, // 50 IIC_IntMulHD
  { 1, 224, 226, 2352, 2354 }, // 51 IIC_BrMCR
  { 1, 222, 224, 2354, 2357 }, // 52 IIC_BrMCRX
  { 1, 242, 244, 2357, 2359 }, // 53 IIC_SprMFCR
  { 1, 222, 224, 2359, 2361 }, // 54 IIC_SprMFSPR
  { 1, 244, 246, 2361, 2362 }, // 55 IIC_IntMFFS
  { 1, 246, 248, 2362, 2364 }, // 56 IIC_SprMFMSR
  { 1, 242, 244, 2364, 2366 }, // 57 IIC_SprMFCRF
  { 1, 246, 248, 2366, 2368 }, // 58 IIC_SprMFPMR
  { 1, 246, 248, 2368, 2370 }, // 59 IIC_SprMFSR
  { 1, 246, 248, 2370, 2372 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 222, 224, 2372, 2374 }, // 62 IIC_SprMTSPR
  { 1, 244, 246, 2374, 2377 }, // 63 IIC_IntMTFSB0
  { 1, 248, 250, 2377, 2379 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 1, 250, 252, 2379, 2381 }, // 66 IIC_SprMTPMR
  { 1, 250, 252, 2381, 2383 }, // 67 IIC_SprMTSR
  { 1, 252, 254, 2383, 2386 }, // 68 IIC_IntMulHW
  { 1, 252, 254, 2386, 2389 }, // 69 IIC_IntMulHWU
  { 1, 252, 254, 2389, 2392 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 0, 0, 0, 0, 0 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 222, 224, 2392, 2395 }, // 82 IIC_IntShift
  { 1, 220, 222, 2395, 2397 }, // 83 IIC_LdStSTWCX
  { 2, 239, 242, 2397, 2399 }, // 84 IIC_LdStSTU
  { 2, 239, 242, 2399, 2401 }, // 85 IIC_LdStSTUX
  { 0, 0, 0, 0, 0 }, // 86 IIC_LdStSTD
  { 0, 0, 0, 0, 0 }, // 87 IIC_LdStSTDCX
  { 1, 220, 222, 2401, 2404 }, // 88 IIC_LdStSTFD
  { 2, 239, 242, 2404, 2407 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 254, 256, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 256, 258, 2407, 2409 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 0, 0, 0, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 222, 224, 2409, 2411 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 244, 246, 2411, 2414 }, // 105 MTFSB0_MTFSB1
  { 1, 244, 246, 2414, 2415 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 222, 224, 2415, 2418 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 256, 258, 2418, 2420 }, // 109 TW_TWI
  { 1, 233, 235, 2420, 2423 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 233, 235, 2423, 2426 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 222, 224, 2426, 2429 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 0, 0, 0, 0, 0 }, // 115 SLD_SRD_SRAD
  { 0, 0, 0, 0, 0 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 0, 0, 0, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 222, 224, 2429, 2432 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 222, 224, 2432, 2435 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 222, 224, 2435, 2438 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 224, 226, 2438, 2440 }, // 122 MCRF
  { 1, 222, 224, 2440, 2443 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 224, 226, 2443, 2445 }, // 125 RFEBB
  { 1, 222, 224, 2445, 2447 }, // 126 TBEGIN_TRECHKPT
  { 1, 220, 222, 2447, 2449 }, // 127 WAIT
  { 0, 0, 0, 0, 0 }, // 128 RLDCL_RLDCR
  { 1, 222, 224, 2449, 2452 }, // 129 RLWIMI_RLWIMI8
  { 0, 0, 0, 0, 0 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 242, 244, 2452, 2454 }, // 131 MFOCRF_MFOCRF8
  { 1, 222, 224, 2454, 2457 }, // 132 MTOCRF_MTOCRF8
  { 1, 224, 226, 2457, 2460 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 222, 224, 2460, 2463 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 233, 235, 2463, 2466 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 222, 224, 2466, 2469 }, // 136 SRAW_SRAWI
  { 1, 222, 224, 2469, 2473 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 222, 224, 2473, 2475 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 220, 222, 2475, 2477 }, // 140 MFVSCR
  { 1, 220, 222, 2477, 2479 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 233, 235, 2479, 2482 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 0, 0, 0, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 0, 0, 0, 0, 0 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 252, 254, 2482, 2485 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 252, 254, 2485, 2488 }, // 150 MULHDU_MULHWU
  { 1, 252, 254, 2488, 2491 }, // 151 MULLI_MULLI8
  { 1, 233, 235, 2491, 2494 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 229, 231, 2494, 2497 }, // 153 FADD_FSUB
  { 1, 229, 231, 2497, 2501 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 233, 235, 2501, 2504 }, // 156 FSELD_rec_FSELS_rec
  { 1, 252, 254, 2504, 2507 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 252, 254, 2507, 2510 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 0, 0, 0, 0, 0 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 233, 235, 2510, 2513 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 229, 231, 2513, 2516 }, // 161 FADD_rec_FSUB_rec
  { 1, 229, 231, 2516, 2520 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 220, 222, 2520, 2522 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 0, 0, 0, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 233, 235, 2522, 2525 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 220, 222, 2525, 2527 }, // 175 LXVL_LXVLL
  { 1, 220, 222, 2527, 2529 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 220, 222, 2529, 2532 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 220, 222, 2532, 2534 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 220, 222, 2534, 2536 }, // 181 ICBI_ICBIEP
  { 1, 220, 222, 2536, 2538 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 237, 239, 2538, 2541 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 0, 0, 0, 0, 0 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 0, 0, 0, 0, 0 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 0, 0, 0, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 254, 256, 0, 0 }, // 189 TLBSYNC
  { 1, 220, 222, 0, 0 }, // 190 SYNC
  { 1, 220, 222, 2541, 2543 }, // 191 LMW
  { 1, 220, 222, 2543, 2546 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 2, 239, 242, 2546, 2548 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 2, 239, 242, 2548, 2550 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 222, 224, 2550, 2552 }, // 201 TEND
  { 1, 220, 222, 2552, 2554 }, // 202 STBCX_STHCX_STWCX
  { 0, 0, 0, 0, 0 }, // 203 STDCX
  { 1, 220, 222, 2554, 2556 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 222, 224, 2556, 2558 }, // 207 TCHECK
  { 1, 220, 222, 2558, 2561 }, // 208 LFIWAX
  { 1, 220, 222, 2561, 2564 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 220, 222, 2564, 2567 }, // 211 LFSX_LFS
  { 1, 220, 222, 2567, 2570 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 239, 242, 2570, 2572 }, // 214 LHAU_LHAU8
  { 1, 239, 242, 2572, 2574 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 220, 222, 2574, 2577 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 220, 222, 2577, 2580 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 220, 222, 2580, 2582 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 0, 0, 0, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 220, 222, 2582, 2584 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 220, 222, 2584, 2586 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 220, 222, 2586, 2588 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 220, 222, 2588, 2591 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 220, 222, 2591, 2593 }, // 227 STXVL_STXVLL
  { 1, 222, 224, 2593, 2595 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 222, 224, 2595, 2598 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 1, 246, 248, 2598, 2600 }, // 230 MFPMR
  { 1, 250, 252, 2600, 2602 }, // 231 MTPMR
  { 1, 246, 248, 2602, 2604 }, // 232 MFTB_MFTB8
  { 1, 222, 224, 2604, 2606 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 1, 246, 248, 2606, 2608 }, // 234 MFMSR
  { 1, 248, 250, 2608, 2610 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 222, 224, 2610, 2612 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 226, 229, 2612, 2615 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 226, 229, 2615, 2618 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 0, 0, 0, 0, 0 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 0, 0, 0, 0, 0 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 226, 229, 2618, 2621 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 0, 0, 0, 0, 0 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 226, 229, 2621, 2624 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 0, 0, 0, 0, 0 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 222, 224, 2624, 2627 }, // 246 MTCRF_MTCRF8
  { 1, 222, 224, 2627, 2630 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 233, 235, 2630, 2633 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 224, 226, 2633, 2635 }, // 249 MCRFS
  { 1, 244, 246, 2635, 2636 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 244, 246, 2636, 2639 }, // 251 MTFSFb
  { 0, 0, 0, 0, 0 }, // 252 RLDCL_rec_RLDCR_rec
  { 0, 0, 0, 0, 0 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 222, 224, 2639, 2642 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 222, 224, 2642, 2645 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 222, 224, 2645, 2648 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 244, 246, 2648, 2649 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 242, 244, 2649, 2651 }, // 258 MFCR_MFCR8
  { 0, 0, 0, 0, 0 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 231, 233, 2651, 2654 }, // 261 FDIV
  { 1, 231, 233, 2654, 2657 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 231, 233, 2657, 2660 }, // 271 XSDIVDP
  { 1, 235, 237, 2660, 2663 }, // 272 FDIVS
  { 1, 235, 237, 2663, 2666 }, // 273 FDIVS_rec
  { 1, 235, 237, 2666, 2669 }, // 274 XSDIVSP
  { 1, 235, 237, 2669, 2672 }, // 275 XVDIVSP
  { 1, 231, 233, 2672, 2675 }, // 276 XVDIVDP
  { 2, 239, 242, 2675, 2678 }, // 277 LFSU
  { 2, 239, 242, 2678, 2681 }, // 278 LFSUX
  { 2, 239, 242, 2681, 2684 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 2, 239, 242, 2684, 2686 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 2, 239, 242, 2686, 2688 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 2, 239, 242, 2688, 2690 }, // 282 LBZU_LBZU8
  { 2, 239, 242, 2690, 2692 }, // 283 LBZUX_LBZUX8
  { 0, 0, 0, 0, 0 }, // 284 LDU
  { 0, 0, 0, 0, 0 }, // 285 LDUX
  { 2, 239, 242, 2692, 2695 }, // 286 LFDU
  { 2, 239, 242, 2695, 2698 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 224, 226, 2698, 2700 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 224, 226, 2700, 2702 }, // 290 ADDPCIS
  { 1, 220, 222, 2702, 2704 }, // 291 LDAT_LWAT
  { 1, 220, 222, 2704, 2706 }, // 292 STDAT_STWAT
  { 1, 222, 224, 2706, 2709 }, // 293 BRINC
  { 0, 0, 0, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 0, 0, 0, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 220, 222, 2709, 2711 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 220, 222, 2711, 2713 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 224, 226, 2713, 2715 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 220, 222, 2715, 2717 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 220, 222, 2717, 2719 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 220, 222, 2719, 2722 }, // 303 LFDEPX
  { 1, 220, 222, 2722, 2725 }, // 304 STFDEPX
  { 1, 246, 248, 2725, 2727 }, // 305 MFSR_MFSRIN
  { 1, 250, 252, 2727, 2729 }, // 306 MTSR_MTSRIN
  { 1, 222, 224, 2729, 2731 }, // 307 MFDCR
  { 1, 222, 224, 2731, 2733 }, // 308 MTDCR
  { 1, 222, 224, 2733, 2736 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 248, 250, 2736, 2738 }, // 311 WRTEE_WRTEEI
  { 1, 222, 224, 2738, 2741 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 220, 222, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 220, 222, 2741, 2743 }, // 317 DCBA_DCBI
  { 1, 233, 235, 2743, 2746 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 1, 233, 235, 2746, 2749 }, // 322 FADDS_FMULS_FSUBS
  { 1, 229, 231, 2749, 2753 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 0, 0, 0, 0, 0 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 1, 233, 235, 2753, 2756 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 229, 231, 2756, 2760 }, // 331 FMUL_rec
  { 1, 233, 235, 2760, 2763 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 224, 226, 2763, 2765 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 224, 226, 2765, 2767 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 224, 226, 2767, 2769 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 224, 226, 2769, 2771 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 222, 224, 2771, 2774 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 0, 0, 0, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 222, 224, 2774, 2777 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 0, 0, 0, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 0, 0, 0, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 226, 229, 2777, 2780 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 0, 0, 0, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 0, 0, 0, 0, 0 }, // 349 VMODSD_VMODUD
  { 0, 0, 0, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 0, 0, 0, 0, 0 }, // 351 VMODSW_VMODUW
  { 0, 0, 0, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 0, 0, 0, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 0, 0, 0, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 0, 0, 0, 0, 0 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 220, 222, 2780, 2782 }, // 360 TRAP
  { 1, 256, 258, 2782, 2784 }, // 361 TW
  { 1, 222, 224, 2784, 2787 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 222, 224, 2787, 2790 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 233, 235, 2790, 2793 }, // 364 FTSQRT
  { 0, 0, 0, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 222, 224, 2793, 2796 }, // 366 POPCNTB_POPCNTB8
  { 0, 0, 0, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 1, 233, 235, 2796, 2799 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 1, 233, 235, 2799, 2802 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 222, 224, 2802, 2805 }, // 373 CMPEQB
  { 0, 0, 0, 0, 0 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 0, 0, 0, 0, 0 }, // 375 SLD_rec_SRD_rec
  { 1, 222, 224, 2805, 2808 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 0, 0, 0, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 0, 0, 0, 0, 0 }, // 382 RLDIC_rec
  { 0, 0, 0, 0, 0 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 224, 226, 2808, 2811 }, // 387 CR6SET_CREQV_CRSET
  { 1, 220, 222, 2811, 2813 }, // 388 DSS_DSSALL
  { 1, 222, 224, 2813, 2815 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 222, 224, 2815, 2818 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 0, 0, 0, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 222, 224, 2818, 2821 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 222, 224, 2821, 2824 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 233, 235, 2824, 2827 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 222, 224, 2827, 2830 }, // 398 SETB_SETB8
  { 1, 222, 224, 2830, 2833 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 0, 0, 0, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 0, 0, 0, 0, 0 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 222, 224, 2833, 2836 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 222, 224, 2836, 2839 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 222, 224, 2839, 2842 }, // 407 CMPB_CMPB8
  { 1, 224, 226, 2842, 2845 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 0, 0, 0, 0, 0 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 222, 224, 2845, 2848 }, // 410 SLW_SLW8_SRW_SRW8
  { 0, 0, 0, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 222, 224, 2848, 2851 }, // 414 ADDEX_ADDEX8
  { 1, 220, 222, 2851, 2853 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 0, 0, 0, 0, 0 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 244, 246, 2853, 2854 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 222, 224, 2854, 2856 }, // 418 TRECHKPT
  { 1, 222, 224, 2856, 2859 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 244, 246, 2859, 2862 }, // 420 MTFSB0
  { 1, 222, 224, 2862, 2865 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 222, 224, 2865, 2868 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 222, 224, 2868, 2871 }, // 423 ADDG6S_ADDG6S8
  { 1, 224, 226, 2871, 2873 }, // 424 HRFID
  { 1, 233, 235, 2873, 2876 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 224, 226, 2876, 2878 }, // 426 SC
  { 1, 222, 224, 2878, 2881 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 222, 224, 2881, 2884 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 244, 246, 2884, 2885 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 244, 246, 2885, 2886 }, // 430 MTFSFI_rec
  { 0, 0, 0, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 220, 222, 2886, 2888 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 0, 0, 0, 0, 0 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 220, 222, 2888, 2891 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 220, 222, 2891, 2893 }, // 436 DCBT_DCBTST
  { 1, 220, 222, 2893, 2895 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 0, 0, 0, 0, 0 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 220, 222, 2895, 2897 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 1, 250, 252, 2897, 2899 }, // 441 MTSR
  { 1, 222, 224, 2899, 2902 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 220, 222, 2902, 2904 }, // 443 LSWI
  { 1, 220, 222, 2904, 2907 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 220, 222, 2907, 2910 }, // 445 LXVP_LXVPX
  { 1, 246, 248, 2910, 2912 }, // 446 MFSR
  { 1, 246, 248, 2912, 2914 }, // 447 MFTB8
  { 0, 0, 0, 0, 0 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 455 PMXVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 456 XXMTACC
  { 0, 0, 0, 0, 0 }, // 457 XXMFACC
  { 0, 0, 0, 0, 0 }, // 458 MULLD_MULLDO
  { 0, 0, 0, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 222, 224, 2914, 2917 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 0, 0, 0, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 0, 0, 0, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 0, 0, 0, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 0, 0, 0, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 0, 0, 0, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 0, 0, 0, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 0, 0, 0, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 0, 0, 0, 0, 0 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 220, 222, 2917, 2919 }, // 478 DCBST_DCBZ
  { 1, 220, 222, 2919, 2921 }, // 479 ICBI
  { 1, 220, 222, 2921, 2923 }, // 480 DCBF
  { 1, 220, 222, 2923, 2926 }, // 481 PSTXVP_PSTXVPpc
  { 1, 220, 222, 2926, 2928 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 0, 0, 0, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 220, 222, 2928, 2931 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 220, 222, 2931, 2933 }, // 488 EnforceIEIO
  { 1, 220, 222, 2933, 2935 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 220, 222, 2935, 2938 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 220, 222, 2938, 2941 }, // 491 STXVP_STXVPX
  { 1, 224, 226, 2941, 2943 }, // 492 ATTN_NAP
  { 1, 220, 222, 2943, 2945 }, // 493 DCBZL
  { 1, 220, 222, 2945, 2947 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 220, 222, 2947, 2949 }, // 495 ICBLC
  { 1, 224, 226, 2949, 2951 }, // 496 CLRBHRB
  { 1, 224, 226, 2951, 2953 }, // 497 MFBHRBE
  { 1, 220, 222, 2953, 2956 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 222, 224, 2956, 2959 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 0, 0, 0, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 0, 0, 0, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary PPCE5500Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 1, 258, 260, 0, 0 }, // 1 IIC_LdStSync
  { 1, 260, 262, 2959, 2962 }, // 2 IIC_IntSimple
  { 1, 260, 262, 2962, 2965 }, // 3 IIC_IntGeneral
  { 1, 262, 264, 2965, 2967 }, // 4 IIC_BrB
  { 0, 0, 0, 0, 0 }, // 5 IIC_VecFP
  { 1, 260, 262, 2967, 2970 }, // 6 IIC_IntRotate
  { 1, 260, 262, 2970, 2973 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 262, 264, 2973, 2976 }, // 11 IIC_BrCR
  { 1, 258, 260, 2976, 2978 }, // 12 IIC_LdStLD
  { 1, 258, 260, 2978, 2980 }, // 13 IIC_LdStDCBF
  { 1, 258, 260, 2980, 2982 }, // 14 IIC_LdStLoad
  { 1, 264, 267, 2982, 2985 }, // 15 IIC_IntDivD
  { 1, 267, 270, 2985, 2988 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 270, 272, 2988, 2991 }, // 18 IIC_FPAddSub
  { 1, 272, 274, 2991, 2994 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 270, 272, 2994, 2997 }, // 21 IIC_FPCompare
  { 1, 270, 272, 2997, 3000 }, // 22 IIC_FPGeneral
  { 0, 0, 0, 0, 0 }, // 23 IIC_VecGeneral
  { 0, 0, 0, 0, 0 }, // 24 IIC_VecComplex
  { 1, 258, 260, 3000, 3002 }, // 25 IIC_LdStStore
  { 1, 260, 262, 3002, 3005 }, // 26 IIC_IntRotateDI
  { 1, 274, 276, 3005, 3008 }, // 27 IIC_FPDivS
  { 1, 270, 272, 3008, 3012 }, // 28 IIC_FPFused
  { 0, 0, 0, 0, 0 }, // 29 IIC_FPSqrtD
  { 0, 0, 0, 0, 0 }, // 30 IIC_FPSqrtS
  { 1, 258, 260, 3012, 3014 }, // 31 IIC_LdStICBI
  { 1, 260, 262, 3014, 3018 }, // 32 IIC_IntISEL
  { 0, 0, 0, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 276, 278, 3018, 3021 }, // 34 IIC_LdStLWARX
  { 2, 278, 281, 3021, 3023 }, // 35 IIC_LdStLoadUpd
  { 2, 278, 281, 3023, 3025 }, // 36 IIC_LdStLoadUpdX
  { 1, 276, 278, 3025, 3027 }, // 37 IIC_LdStLDARX
  { 2, 278, 281, 3027, 3029 }, // 38 IIC_LdStLDU
  { 2, 278, 281, 3029, 3031 }, // 39 IIC_LdStLDUX
  { 2, 258, 260, 3031, 3034 }, // 40 IIC_LdStLFD
  { 2, 278, 281, 3034, 3037 }, // 41 IIC_LdStLFDU
  { 2, 278, 281, 3037, 3040 }, // 42 IIC_LdStLFDUX
  { 1, 258, 260, 3040, 3042 }, // 43 IIC_LdStLHA
  { 2, 278, 281, 3042, 3044 }, // 44 IIC_LdStLHAU
  { 2, 278, 281, 3044, 3046 }, // 45 IIC_LdStLHAUX
  { 1, 281, 283, 3046, 3048 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 0, 0, 0, 0, 0 }, // 49 IIC_LdStLWA
  { 1, 283, 286, 3048, 3051 }, // 50 IIC_IntMulHD
  { 1, 262, 264, 3051, 3053 }, // 51 IIC_BrMCR
  { 1, 286, 288, 3053, 3056 }, // 52 IIC_BrMCRX
  { 1, 288, 290, 3056, 3058 }, // 53 IIC_SprMFCR
  { 1, 286, 288, 3058, 3059 }, // 54 IIC_SprMFSPR
  { 1, 270, 272, 3059, 3060 }, // 55 IIC_IntMFFS
  { 0, 0, 0, 0, 0 }, // 56 IIC_SprMFMSR
  { 1, 288, 290, 3060, 3062 }, // 57 IIC_SprMFCRF
  { 1, 290, 292, 3062, 3064 }, // 58 IIC_SprMFPMR
  { 0, 0, 0, 0, 0 }, // 59 IIC_SprMFSR
  { 1, 290, 292, 3064, 3066 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 286, 288, 3066, 3067 }, // 62 IIC_SprMTSPR
  { 1, 292, 294, 3067, 3070 }, // 63 IIC_IntMTFSB0
  { 1, 294, 296, 3070, 3072 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 1, 286, 288, 3072, 3073 }, // 66 IIC_SprMTPMR
  { 0, 0, 0, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 296, 299, 3073, 3076 }, // 68 IIC_IntMulHW
  { 1, 296, 299, 3076, 3079 }, // 69 IIC_IntMulHWU
  { 1, 283, 286, 3079, 3082 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 1, 299, 301, 3082, 3085 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 299, 301, 3085, 3088 }, // 82 IIC_IntShift
  { 1, 258, 260, 3088, 3090 }, // 83 IIC_LdStSTWCX
  { 2, 278, 281, 3090, 3092 }, // 84 IIC_LdStSTU
  { 2, 278, 281, 3092, 3094 }, // 85 IIC_LdStSTUX
  { 1, 258, 260, 3094, 3096 }, // 86 IIC_LdStSTD
  { 1, 258, 260, 3096, 3098 }, // 87 IIC_LdStSTDCX
  { 1, 258, 260, 3098, 3101 }, // 88 IIC_LdStSTFD
  { 2, 278, 281, 3101, 3104 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 0, 0, 0, 0, 0 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 1, 301, 303, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 303, 305, 3104, 3106 }, // 98 IIC_IntTrapW
  { 0, 0, 0, 0, 0 }, // 99 IIC_VecFPCompare
  { 0, 0, 0, 0, 0 }, // 100 IIC_VecPerm
  { 0, 0, 0, 0, 0 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 0, 0, 0, 0, 0 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 0, 0, 0, 0, 0 }, // 103 XXSEL
  { 1, 286, 288, 3106, 3107 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 1, 292, 294, 3107, 3110 }, // 105 MTFSB0_MTFSB1
  { 1, 270, 272, 3110, 3111 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 260, 262, 3111, 3114 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 0, 0, 0, 0, 0 }, // 108 TD_TDI
  { 1, 303, 305, 3114, 3116 }, // 109 TW_TWI
  { 1, 270, 272, 3116, 3119 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 0, 0, 0, 0, 0 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 0, 0, 0, 0, 0 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 270, 272, 3119, 3122 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 260, 262, 3122, 3125 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 1, 299, 301, 3125, 3128 }, // 115 SLD_SRD_SRAD
  { 1, 260, 262, 3128, 3131 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 0, 0, 0, 0, 0 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 260, 262, 3131, 3134 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 260, 262, 3134, 3137 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 260, 262, 3137, 3140 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 262, 264, 3140, 3142 }, // 122 MCRF
  { 1, 286, 288, 3142, 3145 }, // 123 MCRXRX
  { 0, 0, 0, 0, 0 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 262, 264, 3145, 3147 }, // 125 RFEBB
  { 1, 286, 288, 3147, 3148 }, // 126 TBEGIN_TRECHKPT
  { 1, 258, 260, 3148, 3150 }, // 127 WAIT
  { 1, 299, 301, 3150, 3153 }, // 128 RLDCL_RLDCR
  { 1, 260, 262, 3153, 3156 }, // 129 RLWIMI_RLWIMI8
  { 1, 260, 262, 3156, 3159 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 288, 290, 3159, 3161 }, // 131 MFOCRF_MFOCRF8
  { 1, 286, 288, 3161, 3164 }, // 132 MTOCRF_MTOCRF8
  { 1, 262, 264, 3164, 3167 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 260, 262, 3167, 3170 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 270, 272, 3170, 3173 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 299, 301, 3173, 3176 }, // 136 SRAW_SRAWI
  { 1, 260, 262, 3176, 3180 }, // 137 ISEL_ISEL8
  { 0, 0, 0, 0, 0 }, // 138 XSIEXPDP
  { 1, 286, 288, 3180, 3181 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 258, 260, 3181, 3183 }, // 140 MFVSCR
  { 1, 258, 260, 3183, 3185 }, // 141 MTVSCR
  { 0, 0, 0, 0, 0 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 270, 272, 3185, 3188 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 0, 0, 0, 0, 0 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 0, 0, 0, 0, 0 }, // 147 VSUBFP_VMULUWM
  { 1, 283, 286, 3188, 3191 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 296, 299, 3191, 3194 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 296, 299, 3194, 3197 }, // 150 MULHDU_MULHWU
  { 1, 283, 286, 3197, 3200 }, // 151 MULLI_MULLI8
  { 1, 270, 272, 3200, 3203 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 270, 272, 3203, 3206 }, // 153 FADD_FSUB
  { 1, 270, 272, 3206, 3210 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 0, 0, 0, 0, 0 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 270, 272, 3210, 3213 }, // 156 FSELD_rec_FSELS_rec
  { 1, 296, 299, 3213, 3216 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 296, 299, 3216, 3219 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 1, 283, 286, 3219, 3222 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 270, 272, 3222, 3225 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 270, 272, 3225, 3228 }, // 161 FADD_rec_FSUB_rec
  { 1, 270, 272, 3228, 3232 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 0, 0, 0, 0, 0 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 258, 260, 3232, 3234 }, // 164 LVSL_LVSR
  { 0, 0, 0, 0, 0 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 0, 0, 0, 0, 0 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 0, 0, 0, 0, 0 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 270, 272, 3234, 3237 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 0, 0, 0, 0, 0 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 0, 0, 0, 0, 0 }, // 170 BCDCTSQ_rec
  { 0, 0, 0, 0, 0 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 0, 0, 0, 0, 0 }, // 172 BCDCFSQ_rec
  { 0, 0, 0, 0, 0 }, // 173 XSDIVQP_XSDIVQPO
  { 0, 0, 0, 0, 0 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 258, 260, 3237, 3239 }, // 175 LXVL_LXVLL
  { 1, 258, 260, 3239, 3241 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 2, 258, 260, 3241, 3244 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 1, 258, 260, 3244, 3246 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 1, 258, 260, 3246, 3248 }, // 181 ICBI_ICBIEP
  { 1, 258, 260, 3248, 3250 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 276, 278, 3250, 3253 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 1, 258, 260, 3253, 3255 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 1, 276, 278, 3255, 3257 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 0, 0, 0, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 1, 301, 303, 0, 0 }, // 189 TLBSYNC
  { 1, 258, 260, 0, 0 }, // 190 SYNC
  { 1, 281, 283, 3257, 3259 }, // 191 LMW
  { 2, 258, 260, 3259, 3262 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 2, 278, 281, 3262, 3264 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 2, 278, 281, 3264, 3266 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 286, 288, 3266, 3267 }, // 201 TEND
  { 1, 258, 260, 3267, 3269 }, // 202 STBCX_STHCX_STWCX
  { 1, 258, 260, 3269, 3271 }, // 203 STDCX
  { 1, 258, 260, 3271, 3273 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 0, 0, 0, 0, 0 }, // 206 LWA_LWA_32
  { 1, 286, 288, 3273, 3274 }, // 207 TCHECK
  { 2, 258, 260, 3274, 3277 }, // 208 LFIWAX
  { 2, 258, 260, 3277, 3280 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 2, 258, 260, 3280, 3283 }, // 211 LFSX_LFS
  { 2, 258, 260, 3283, 3286 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 2, 278, 281, 3286, 3288 }, // 214 LHAU_LHAU8
  { 2, 278, 281, 3288, 3290 }, // 215 LHAUX_LHAUX8_LWAUX
  { 2, 258, 260, 3290, 3293 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 258, 260, 3293, 3296 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 258, 260, 3296, 3298 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 258, 260, 3298, 3300 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 258, 260, 3300, 3302 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 281, 283, 3302, 3304 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 258, 260, 3304, 3306 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 258, 260, 3306, 3309 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 258, 260, 3309, 3311 }, // 227 STXVL_STXVLL
  { 1, 286, 288, 3311, 3312 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 260, 262, 3312, 3315 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 1, 290, 292, 3315, 3317 }, // 230 MFPMR
  { 1, 286, 288, 3317, 3318 }, // 231 MTPMR
  { 1, 290, 292, 3318, 3320 }, // 232 MFTB_MFTB8
  { 1, 286, 288, 3320, 3321 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 0, 0, 0, 0, 0 }, // 234 MFMSR
  { 1, 294, 296, 3321, 3323 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 286, 288, 3323, 3324 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 267, 270, 3324, 3327 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 267, 270, 3327, 3330 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 1, 264, 267, 3330, 3333 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 1, 264, 267, 3333, 3336 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 267, 270, 3336, 3339 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 1, 264, 267, 3339, 3342 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 267, 270, 3342, 3345 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 1, 264, 267, 3345, 3348 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 286, 288, 3348, 3351 }, // 246 MTCRF_MTCRF8
  { 1, 260, 262, 3351, 3354 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 270, 272, 3354, 3357 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 262, 264, 3357, 3359 }, // 249 MCRFS
  { 1, 270, 272, 3359, 3360 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 1, 292, 294, 3360, 3363 }, // 251 MTFSFb
  { 1, 299, 301, 3363, 3366 }, // 252 RLDCL_rec_RLDCR_rec
  { 1, 260, 262, 3366, 3369 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 260, 262, 3369, 3372 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 260, 262, 3372, 3375 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 299, 301, 3375, 3378 }, // 256 SRAWI_rec_SRAW_rec
  { 1, 270, 272, 3378, 3379 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 288, 290, 3379, 3381 }, // 258 MFCR_MFCR8
  { 1, 260, 262, 3381, 3384 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 1, 299, 301, 3384, 3387 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 272, 274, 3387, 3390 }, // 261 FDIV
  { 1, 272, 274, 3390, 3393 }, // 262 FDIV_rec
  { 0, 0, 0, 0, 0 }, // 263 XSSQRTDP
  { 0, 0, 0, 0, 0 }, // 264 FSQRT
  { 0, 0, 0, 0, 0 }, // 265 XVSQRTDP
  { 0, 0, 0, 0, 0 }, // 266 XVSQRTSP
  { 0, 0, 0, 0, 0 }, // 267 FSQRT_rec
  { 0, 0, 0, 0, 0 }, // 268 XSSQRTSP
  { 0, 0, 0, 0, 0 }, // 269 FSQRTS
  { 0, 0, 0, 0, 0 }, // 270 FSQRTS_rec
  { 1, 272, 274, 3393, 3396 }, // 271 XSDIVDP
  { 1, 274, 276, 3396, 3399 }, // 272 FDIVS
  { 1, 274, 276, 3399, 3402 }, // 273 FDIVS_rec
  { 1, 274, 276, 3402, 3405 }, // 274 XSDIVSP
  { 1, 274, 276, 3405, 3408 }, // 275 XVDIVSP
  { 1, 272, 274, 3408, 3411 }, // 276 XVDIVDP
  { 2, 278, 281, 3411, 3414 }, // 277 LFSU
  { 2, 278, 281, 3414, 3417 }, // 278 LFSUX
  { 2, 278, 281, 3417, 3420 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 2, 278, 281, 3420, 3422 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 2, 278, 281, 3422, 3424 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 2, 278, 281, 3424, 3426 }, // 282 LBZU_LBZU8
  { 2, 278, 281, 3426, 3428 }, // 283 LBZUX_LBZUX8
  { 2, 278, 281, 3428, 3430 }, // 284 LDU
  { 2, 278, 281, 3430, 3432 }, // 285 LDUX
  { 2, 278, 281, 3432, 3435 }, // 286 LFDU
  { 2, 278, 281, 3435, 3438 }, // 287 LFDUX
  { 0, 0, 0, 0, 0 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 262, 264, 3438, 3440 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 262, 264, 3440, 3442 }, // 290 ADDPCIS
  { 1, 258, 260, 3442, 3444 }, // 291 LDAT_LWAT
  { 1, 258, 260, 3444, 3446 }, // 292 STDAT_STWAT
  { 1, 260, 262, 3446, 3449 }, // 293 BRINC
  { 0, 0, 0, 0, 0 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 0, 0, 0, 0, 0 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 258, 260, 3449, 3451 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 258, 260, 3451, 3453 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 262, 264, 3453, 3455 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 258, 260, 3455, 3457 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 258, 260, 3457, 3459 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 2, 258, 260, 3459, 3462 }, // 303 LFDEPX
  { 1, 258, 260, 3462, 3465 }, // 304 STFDEPX
  { 0, 0, 0, 0, 0 }, // 305 MFSR_MFSRIN
  { 0, 0, 0, 0, 0 }, // 306 MTSR_MTSRIN
  { 1, 286, 288, 3465, 3466 }, // 307 MFDCR
  { 1, 286, 288, 3466, 3467 }, // 308 MTDCR
  { 1, 260, 262, 3467, 3470 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 1, 294, 296, 3470, 3472 }, // 311 WRTEE_WRTEEI
  { 1, 260, 262, 3472, 3475 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 1, 258, 260, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 1, 258, 260, 3475, 3477 }, // 317 DCBA_DCBI
  { 1, 270, 272, 3477, 3480 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 0, 0, 0, 0, 0 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 0, 0, 0, 0, 0 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 0, 0, 0, 0, 0 }, // 321 XVCVSPBF16
  { 1, 270, 272, 3480, 3483 }, // 322 FADDS_FMULS_FSUBS
  { 1, 270, 272, 3483, 3487 }, // 323 FMUL
  { 0, 0, 0, 0, 0 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 0, 0, 0, 0, 0 }, // 325 VSUBFP
  { 0, 0, 0, 0, 0 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 0, 0, 0, 0, 0 }, // 327 XSMULDP_XSMULSP
  { 0, 0, 0, 0, 0 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 0, 0, 0, 0, 0 }, // 329 VEXPTEFP
  { 1, 270, 272, 3487, 3490 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 270, 272, 3490, 3494 }, // 331 FMUL_rec
  { 1, 270, 272, 3494, 3497 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 262, 264, 3497, 3499 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 262, 264, 3499, 3501 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 262, 264, 3501, 3503 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 262, 264, 3503, 3505 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 0, 0, 0, 0, 0 }, // 337 VSBOX
  { 1, 260, 262, 3505, 3508 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 0, 0, 0, 0, 0 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 0, 0, 0, 0, 0 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 0, 0, 0, 0, 0 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 0, 0, 0, 0, 0 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 260, 262, 3508, 3511 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 0, 0, 0, 0, 0 }, // 344 XSMULQP_XSMULQPO
  { 0, 0, 0, 0, 0 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 0, 0, 0, 0, 0 }, // 346 VMODSQ_VMODUQ
  { 1, 267, 270, 3511, 3514 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 0, 0, 0, 0, 0 }, // 348 VDIVSD_VDIVUD
  { 0, 0, 0, 0, 0 }, // 349 VMODSD_VMODUD
  { 0, 0, 0, 0, 0 }, // 350 VDIVSW_VDIVUW
  { 0, 0, 0, 0, 0 }, // 351 VMODSW_VMODUW
  { 0, 0, 0, 0, 0 }, // 352 VDIVESD_VDIVEUD
  { 0, 0, 0, 0, 0 }, // 353 VDIVESW_VDIVEUW
  { 0, 0, 0, 0, 0 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 0, 0, 0, 0, 0 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 0, 0, 0, 0, 0 }, // 356 VADDUQM_VSUBUQM
  { 0, 0, 0, 0, 0 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 0, 0, 0, 0, 0 }, // 358 XXGENPCVBM
  { 0, 0, 0, 0, 0 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 258, 260, 3514, 3516 }, // 360 TRAP
  { 1, 303, 305, 3516, 3518 }, // 361 TW
  { 1, 260, 262, 3518, 3521 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 260, 262, 3521, 3524 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 270, 272, 3524, 3527 }, // 364 FTSQRT
  { 0, 0, 0, 0, 0 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 260, 262, 3527, 3530 }, // 366 POPCNTB_POPCNTB8
  { 0, 0, 0, 0, 0 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 0, 0, 0, 0, 0 }, // 368 VPOPCNTB_VPOPCNTH
  { 0, 0, 0, 0, 0 }, // 369 XSCVSPDPN
  { 1, 270, 272, 3530, 3533 }, // 370 XSTSQRTDP
  { 0, 0, 0, 0, 0 }, // 371 XVCVHPSP
  { 1, 270, 272, 3533, 3536 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 260, 262, 3536, 3539 }, // 373 CMPEQB
  { 1, 260, 262, 3539, 3542 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 1, 299, 301, 3542, 3545 }, // 375 SLD_rec_SRD_rec
  { 1, 260, 262, 3545, 3548 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 0, 0, 0, 0, 0 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 0, 0, 0, 0, 0 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 0, 0, 0, 0, 0 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 0, 0, 0, 0, 0 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 0, 0, 0, 0, 0 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 1, 260, 262, 3548, 3551 }, // 382 RLDIC_rec
  { 1, 260, 262, 3551, 3554 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 0, 0, 0, 0, 0 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 0, 0, 0, 0, 0 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 0, 0, 0, 0, 0 }, // 386 VRLQMI
  { 1, 262, 264, 3554, 3557 }, // 387 CR6SET_CREQV_CRSET
  { 1, 258, 260, 3557, 3559 }, // 388 DSS_DSSALL
  { 1, 286, 288, 3559, 3560 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 260, 262, 3560, 3563 }, // 390 NOP_ORI_ORI8
  { 0, 0, 0, 0, 0 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 0, 0, 0, 0, 0 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 260, 262, 3563, 3566 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 260, 262, 3566, 3569 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 270, 272, 3569, 3572 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 260, 262, 3572, 3575 }, // 398 SETB_SETB8
  { 1, 260, 262, 3575, 3578 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 0, 0, 0, 0, 0 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 0, 0, 0, 0, 0 }, // 401 VEXTSD2Q
  { 0, 0, 0, 0, 0 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 0, 0, 0, 0, 0 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 0, 0, 0, 0, 0 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 260, 262, 3578, 3581 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 260, 262, 3581, 3584 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 260, 262, 3584, 3587 }, // 407 CMPB_CMPB8
  { 1, 262, 264, 3587, 3590 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 1, 260, 262, 3590, 3593 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 260, 262, 3593, 3596 }, // 410 SLW_SLW8_SRW_SRW8
  { 0, 0, 0, 0, 0 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 0, 0, 0, 0, 0 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 0, 0, 0, 0, 0 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 260, 262, 3596, 3599 }, // 414 ADDEX_ADDEX8
  { 1, 258, 260, 3599, 3601 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 1, 260, 262, 3601, 3604 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 1, 270, 272, 3604, 3605 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 286, 288, 3605, 3606 }, // 418 TRECHKPT
  { 1, 260, 262, 3606, 3609 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 1, 292, 294, 3609, 3612 }, // 420 MTFSB0
  { 1, 260, 262, 3612, 3615 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 260, 262, 3615, 3618 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 260, 262, 3618, 3621 }, // 423 ADDG6S_ADDG6S8
  { 1, 262, 264, 3621, 3623 }, // 424 HRFID
  { 1, 270, 272, 3623, 3626 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 262, 264, 3626, 3628 }, // 426 SC
  { 1, 260, 262, 3628, 3631 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 260, 262, 3631, 3634 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 1, 270, 272, 3634, 3635 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 1, 270, 272, 3635, 3636 }, // 430 MTFSFI_rec
  { 0, 0, 0, 0, 0 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 258, 260, 3636, 3638 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 1, 258, 260, 3638, 3640 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 2, 258, 260, 3640, 3643 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 1, 258, 260, 3643, 3645 }, // 436 DCBT_DCBTST
  { 1, 258, 260, 3645, 3647 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 1, 258, 260, 3647, 3649 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 258, 260, 3649, 3651 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 0, 0, 0, 0, 0 }, // 441 MTSR
  { 1, 260, 262, 3651, 3654 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 258, 260, 3654, 3656 }, // 443 LSWI
  { 2, 258, 260, 3656, 3659 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 2, 258, 260, 3659, 3662 }, // 445 LXVP_LXVPX
  { 0, 0, 0, 0, 0 }, // 446 MFSR
  { 1, 290, 292, 3662, 3664 }, // 447 MFTB8
  { 0, 0, 0, 0, 0 }, // 448 XXSETACCZ
  { 0, 0, 0, 0, 0 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 0, 0, 0, 0, 0 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 451 XVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 452 PMXVF32GER_PMXVF64GER
  { 0, 0, 0, 0, 0 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 0, 0, 0, 0, 0 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 0, 0, 0, 0, 0 }, // 455 PMXVI8GER4SPP
  { 0, 0, 0, 0, 0 }, // 456 XXMTACC
  { 0, 0, 0, 0, 0 }, // 457 XXMFACC
  { 1, 283, 286, 3664, 3667 }, // 458 MULLD_MULLDO
  { 0, 0, 0, 0, 0 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 0, 0, 0, 0, 0 }, // 460 VSPLTISW
  { 0, 0, 0, 0, 0 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 260, 262, 3667, 3670 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 0, 0, 0, 0, 0 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 0, 0, 0, 0, 0 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 0, 0, 0, 0, 0 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 0, 0, 0, 0, 0 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 0, 0, 0, 0, 0 }, // 467 XVCVBF16SPN
  { 0, 0, 0, 0, 0 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 0, 0, 0, 0, 0 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 0, 0, 0, 0, 0 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 0, 0, 0, 0, 0 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 0, 0, 0, 0, 0 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 0, 0, 0, 0, 0 }, // 473 VSUMSWS
  { 0, 0, 0, 0, 0 }, // 474 XXSPLTIDP_XXSPLTIW
  { 0, 0, 0, 0, 0 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 0, 0, 0, 0, 0 }, // 476 XXEVAL
  { 0, 0, 0, 0, 0 }, // 477 XXPERMX
  { 1, 258, 260, 3670, 3672 }, // 478 DCBST_DCBZ
  { 1, 258, 260, 3672, 3674 }, // 479 ICBI
  { 1, 258, 260, 3674, 3676 }, // 480 DCBF
  { 2, 258, 260, 3676, 3679 }, // 481 PSTXVP_PSTXVPpc
  { 1, 258, 260, 3679, 3681 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 258, 260, 3681, 3683 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 258, 260, 3683, 3686 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 258, 260, 3686, 3688 }, // 488 EnforceIEIO
  { 1, 258, 260, 3688, 3690 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 2, 258, 260, 3690, 3693 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 2, 258, 260, 3693, 3696 }, // 491 STXVP_STXVPX
  { 1, 262, 264, 3696, 3698 }, // 492 ATTN_NAP
  { 1, 258, 260, 3698, 3700 }, // 493 DCBZL
  { 1, 258, 260, 3700, 3702 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 258, 260, 3702, 3704 }, // 495 ICBLC
  { 1, 262, 264, 3704, 3706 }, // 496 CLRBHRB
  { 1, 262, 264, 3706, 3708 }, // 497 MFBHRBE
  { 2, 258, 260, 3708, 3711 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 260, 262, 3711, 3714 }, // 499 PLI_PLI8
  { 0, 0, 0, 0, 0 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 0, 0, 0, 0, 0 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 0, 0, 0, 0, 0 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary P8Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 0, 0, 0, 0, 0 }, // 1 IIC_LdStSync
  { 1, 305, 307, 3714, 3717 }, // 2 IIC_IntSimple
  { 1, 305, 307, 3717, 3720 }, // 3 IIC_IntGeneral
  { 1, 307, 309, 3720, 3723 }, // 4 IIC_BrB
  { 1, 309, 311, 3723, 3726 }, // 5 IIC_VecFP
  { 1, 311, 313, 3726, 3729 }, // 6 IIC_IntRotate
  { 1, 311, 313, 3729, 3732 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 313, 315, 3732, 3735 }, // 11 IIC_BrCR
  { 1, 315, 317, 3735, 3738 }, // 12 IIC_LdStLD
  { 0, 0, 0, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 315, 317, 3738, 3741 }, // 14 IIC_LdStLoad
  { 1, 317, 319, 3741, 3744 }, // 15 IIC_IntDivD
  { 1, 319, 321, 3744, 3747 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 321, 323, 3747, 3750 }, // 18 IIC_FPAddSub
  { 1, 321, 323, 3750, 3753 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 321, 323, 3753, 3756 }, // 21 IIC_FPCompare
  { 1, 321, 323, 3756, 3759 }, // 22 IIC_FPGeneral
  { 1, 309, 311, 3759, 3762 }, // 23 IIC_VecGeneral
  { 1, 309, 311, 3762, 3765 }, // 24 IIC_VecComplex
  { 1, 323, 326, 3765, 3768 }, // 25 IIC_LdStStore
  { 1, 311, 313, 3768, 3771 }, // 26 IIC_IntRotateDI
  { 1, 321, 323, 3771, 3774 }, // 27 IIC_FPDivS
  { 1, 321, 323, 3774, 3778 }, // 28 IIC_FPFused
  { 1, 321, 323, 3778, 3781 }, // 29 IIC_FPSqrtD
  { 1, 321, 323, 3781, 3784 }, // 30 IIC_FPSqrtS
  { 0, 0, 0, 0, 0 }, // 31 IIC_LdStICBI
  { 1, 326, 329, 3784, 3788 }, // 32 IIC_IntISEL
  { 0, 0, 0, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 329, 334, 3788, 3791 }, // 34 IIC_LdStLWARX
  { 1, 334, 338, 3791, 3795 }, // 35 IIC_LdStLoadUpd
  { 1, 334, 338, 3795, 3799 }, // 36 IIC_LdStLoadUpdX
  { 1, 338, 345, 3799, 3802 }, // 37 IIC_LdStLDARX
  { 1, 334, 338, 3802, 3806 }, // 38 IIC_LdStLDU
  { 1, 334, 338, 3806, 3810 }, // 39 IIC_LdStLDUX
  { 1, 345, 347, 3810, 3813 }, // 40 IIC_LdStLFD
  { 1, 347, 351, 3813, 3817 }, // 41 IIC_LdStLFDU
  { 1, 347, 351, 3817, 3821 }, // 42 IIC_LdStLFDUX
  { 1, 351, 355, 3821, 3824 }, // 43 IIC_LdStLHA
  { 1, 355, 360, 3824, 3828 }, // 44 IIC_LdStLHAU
  { 1, 360, 369, 3828, 3832 }, // 45 IIC_LdStLHAUX
  { 1, 315, 317, 3832, 3835 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 1, 369, 373, 3835, 3838 }, // 49 IIC_LdStLWA
  { 1, 311, 313, 3838, 3841 }, // 50 IIC_IntMulHD
  { 1, 373, 375, 3841, 3844 }, // 51 IIC_BrMCR
  { 1, 375, 377, 3844, 3846 }, // 52 IIC_BrMCRX
  { 1, 313, 315, 3846, 3848 }, // 53 IIC_SprMFCR
  { 0, 0, 0, 0, 0 }, // 54 IIC_SprMFSPR
  { 0, 0, 0, 0, 0 }, // 55 IIC_IntMFFS
  { 0, 0, 0, 0, 0 }, // 56 IIC_SprMFMSR
  { 1, 313, 315, 3848, 3850 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 0, 0, 0, 0, 0 }, // 59 IIC_SprMFSR
  { 0, 0, 0, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 375, 377, 3850, 3852 }, // 62 IIC_SprMTSPR
  { 0, 0, 0, 0, 0 }, // 63 IIC_IntMTFSB0
  { 0, 0, 0, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 0, 0, 0, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 311, 313, 3852, 3855 }, // 68 IIC_IntMulHW
  { 1, 311, 313, 3855, 3858 }, // 69 IIC_IntMulHWU
  { 1, 311, 313, 3858, 3861 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 1, 311, 313, 3861, 3864 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 311, 313, 3864, 3867 }, // 82 IIC_IntShift
  { 1, 377, 385, 3867, 3870 }, // 83 IIC_LdStSTWCX
  { 1, 385, 389, 3870, 3874 }, // 84 IIC_LdStSTU
  { 1, 389, 398, 3874, 3878 }, // 85 IIC_LdStSTUX
  { 1, 398, 401, 0, 0 }, // 86 IIC_LdStSTD
  { 1, 377, 385, 3878, 3881 }, // 87 IIC_LdStSTDCX
  { 1, 401, 404, 3881, 3884 }, // 88 IIC_LdStSTFD
  { 1, 404, 409, 3884, 3888 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 1, 311, 313, 3888, 3890 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 0, 0, 0, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 311, 313, 3890, 3892 }, // 98 IIC_IntTrapW
  { 1, 309, 311, 3892, 3895 }, // 99 IIC_VecFPCompare
  { 1, 409, 411, 3895, 3898 }, // 100 IIC_VecPerm
  { 1, 309, 311, 3898, 3901 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 309, 311, 3901, 3904 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 1, 409, 411, 3904, 3907 }, // 103 XXSEL
  { 1, 375, 377, 3907, 3909 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 0, 0, 0, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 0, 0, 0, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 311, 313, 3909, 3912 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 1, 311, 313, 3912, 3914 }, // 108 TD_TDI
  { 1, 311, 313, 3914, 3916 }, // 109 TW_TWI
  { 1, 321, 323, 3916, 3919 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 1, 309, 311, 3919, 3922 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 1, 309, 311, 3922, 3925 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 321, 323, 3925, 3928 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 305, 307, 3928, 3931 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 1, 311, 313, 3931, 3934 }, // 115 SLD_SRD_SRAD
  { 1, 311, 313, 3934, 3937 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 309, 311, 3937, 3940 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 311, 313, 3940, 3943 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 305, 307, 3943, 3946 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 305, 307, 3946, 3949 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 373, 375, 3949, 3952 }, // 122 MCRF
  { 1, 375, 377, 3952, 3954 }, // 123 MCRXRX
  { 1, 309, 311, 3954, 3957 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 307, 309, 3957, 3960 }, // 125 RFEBB
  { 1, 375, 377, 3960, 3962 }, // 126 TBEGIN_TRECHKPT
  { 1, 315, 317, 3962, 3965 }, // 127 WAIT
  { 1, 311, 313, 3965, 3968 }, // 128 RLDCL_RLDCR
  { 1, 311, 313, 3968, 3971 }, // 129 RLWIMI_RLWIMI8
  { 1, 311, 313, 3971, 3974 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 313, 315, 3974, 3976 }, // 131 MFOCRF_MFOCRF8
  { 1, 375, 377, 3976, 3978 }, // 132 MTOCRF_MTOCRF8
  { 1, 313, 315, 3978, 3981 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 305, 307, 3981, 3984 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 321, 323, 3984, 3987 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 311, 313, 3987, 3990 }, // 136 SRAW_SRAWI
  { 1, 326, 329, 3990, 3994 }, // 137 ISEL_ISEL8
  { 1, 309, 311, 3994, 3997 }, // 138 XSIEXPDP
  { 1, 375, 377, 3997, 3999 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 323, 326, 3999, 4002 }, // 140 MFVSCR
  { 1, 315, 317, 4002, 4005 }, // 141 MTVSCR
  { 1, 309, 311, 4005, 4008 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 309, 311, 4008, 4011 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 1, 309, 311, 4011, 4014 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 321, 323, 4014, 4017 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 1, 309, 311, 4017, 4020 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 309, 311, 4020, 4023 }, // 147 VSUBFP_VMULUWM
  { 1, 311, 313, 4023, 4026 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 311, 313, 4026, 4029 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 311, 313, 4029, 4032 }, // 150 MULHDU_MULHWU
  { 1, 311, 313, 4032, 4035 }, // 151 MULLI_MULLI8
  { 1, 321, 323, 4035, 4038 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 321, 323, 4038, 4041 }, // 153 FADD_FSUB
  { 1, 321, 323, 4041, 4045 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 1, 309, 311, 4045, 4048 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 321, 323, 4048, 4051 }, // 156 FSELD_rec_FSELS_rec
  { 1, 311, 313, 4051, 4054 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 311, 313, 4054, 4057 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 1, 311, 313, 4057, 4060 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 321, 323, 4060, 4063 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 321, 323, 4063, 4066 }, // 161 FADD_rec_FSUB_rec
  { 1, 321, 323, 4066, 4070 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 1, 309, 311, 4070, 4073 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 315, 317, 4073, 4076 }, // 164 LVSL_LVSR
  { 1, 409, 411, 4076, 4079 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 1, 309, 311, 4079, 4082 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 309, 311, 4082, 4085 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 321, 323, 4085, 4088 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 1, 309, 311, 4088, 4091 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 1, 309, 311, 4091, 4094 }, // 170 BCDCTSQ_rec
  { 1, 309, 311, 4094, 4097 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 1, 309, 311, 4097, 4100 }, // 172 BCDCFSQ_rec
  { 1, 309, 311, 4100, 4103 }, // 173 XSDIVQP_XSDIVQPO
  { 1, 309, 311, 4103, 4106 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 315, 317, 4106, 4109 }, // 175 LXVL_LXVLL
  { 1, 315, 317, 4109, 4112 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 345, 347, 4112, 4115 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 0, 0, 0, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 0, 0, 0, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 315, 317, 4115, 4118 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 329, 334, 4118, 4121 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 1, 315, 317, 4121, 4124 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 1, 338, 345, 4124, 4127 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 0, 0, 0, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 0, 0, 0, 0, 0 }, // 189 TLBSYNC
  { 0, 0, 0, 0, 0 }, // 190 SYNC
  { 1, 315, 317, 4127, 4130 }, // 191 LMW
  { 1, 345, 347, 4130, 4133 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 334, 338, 4133, 4137 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 334, 338, 4137, 4141 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 375, 377, 4141, 4143 }, // 201 TEND
  { 1, 377, 385, 4143, 4146 }, // 202 STBCX_STHCX_STWCX
  { 1, 377, 385, 4146, 4149 }, // 203 STDCX
  { 1, 351, 355, 4149, 4152 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 1, 369, 373, 4152, 4155 }, // 206 LWA_LWA_32
  { 1, 375, 377, 4155, 4157 }, // 207 TCHECK
  { 1, 345, 347, 4157, 4160 }, // 208 LFIWAX
  { 1, 345, 347, 4160, 4163 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 345, 347, 4163, 4166 }, // 211 LFSX_LFS
  { 1, 345, 347, 4166, 4169 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 355, 360, 4169, 4173 }, // 214 LHAU_LHAU8
  { 1, 360, 369, 4173, 4177 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 345, 347, 4177, 4180 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 401, 404, 4180, 4183 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 323, 326, 4183, 4186 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 398, 401, 0, 0 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 315, 317, 4186, 4189 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 315, 317, 4189, 4192 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 323, 326, 4192, 4195 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 401, 404, 4195, 4198 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 315, 317, 4198, 4201 }, // 227 STXVL_STXVLL
  { 1, 375, 377, 4201, 4203 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 305, 307, 4203, 4206 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 0, 0, 0, 0, 0 }, // 232 MFTB_MFTB8
  { 0, 0, 0, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 0, 0, 0, 0, 0 }, // 234 MFMSR
  { 0, 0, 0, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 375, 377, 4206, 4208 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 319, 321, 4208, 4211 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 319, 321, 4211, 4214 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 1, 317, 319, 4214, 4217 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 1, 317, 319, 4217, 4220 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 319, 321, 4220, 4223 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 1, 317, 319, 4223, 4226 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 319, 321, 4226, 4229 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 1, 317, 319, 4229, 4232 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 375, 377, 4232, 4234 }, // 246 MTCRF_MTCRF8
  { 1, 305, 307, 4234, 4237 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 321, 323, 4237, 4240 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 373, 375, 4240, 4243 }, // 249 MCRFS
  { 0, 0, 0, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 251 MTFSFb
  { 1, 311, 313, 4243, 4246 }, // 252 RLDCL_rec_RLDCR_rec
  { 1, 311, 313, 4246, 4249 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 311, 313, 4249, 4252 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 305, 307, 4252, 4255 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 311, 313, 4255, 4258 }, // 256 SRAWI_rec_SRAW_rec
  { 0, 0, 0, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 313, 315, 4258, 4260 }, // 258 MFCR_MFCR8
  { 1, 311, 313, 4260, 4263 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 1, 311, 313, 4263, 4266 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 321, 323, 4266, 4269 }, // 261 FDIV
  { 1, 321, 323, 4269, 4272 }, // 262 FDIV_rec
  { 1, 321, 323, 4272, 4275 }, // 263 XSSQRTDP
  { 1, 321, 323, 4275, 4278 }, // 264 FSQRT
  { 1, 321, 323, 4278, 4281 }, // 265 XVSQRTDP
  { 1, 321, 323, 4281, 4284 }, // 266 XVSQRTSP
  { 1, 321, 323, 4284, 4287 }, // 267 FSQRT_rec
  { 1, 321, 323, 4287, 4290 }, // 268 XSSQRTSP
  { 1, 321, 323, 4290, 4293 }, // 269 FSQRTS
  { 1, 321, 323, 4293, 4296 }, // 270 FSQRTS_rec
  { 1, 321, 323, 4296, 4299 }, // 271 XSDIVDP
  { 1, 321, 323, 4299, 4302 }, // 272 FDIVS
  { 1, 321, 323, 4302, 4305 }, // 273 FDIVS_rec
  { 1, 321, 323, 4305, 4308 }, // 274 XSDIVSP
  { 1, 321, 323, 4308, 4311 }, // 275 XVDIVSP
  { 1, 321, 323, 4311, 4314 }, // 276 XVDIVDP
  { 1, 347, 351, 4314, 4318 }, // 277 LFSU
  { 1, 347, 351, 4318, 4322 }, // 278 LFSUX
  { 1, 404, 409, 4322, 4326 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 385, 389, 4326, 4330 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 389, 398, 4330, 4334 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 334, 338, 4334, 4338 }, // 282 LBZU_LBZU8
  { 1, 334, 338, 4338, 4342 }, // 283 LBZUX_LBZUX8
  { 1, 334, 338, 4342, 4346 }, // 284 LDU
  { 1, 334, 338, 4346, 4350 }, // 285 LDUX
  { 1, 347, 351, 4350, 4354 }, // 286 LFDU
  { 1, 347, 351, 4354, 4358 }, // 287 LFDUX
  { 1, 309, 311, 4358, 4361 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 307, 309, 4361, 4364 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 307, 309, 4364, 4367 }, // 290 ADDPCIS
  { 1, 315, 317, 4367, 4370 }, // 291 LDAT_LWAT
  { 1, 323, 326, 4370, 4373 }, // 292 STDAT_STWAT
  { 1, 305, 307, 4373, 4376 }, // 293 BRINC
  { 1, 309, 311, 4376, 4379 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 309, 311, 4379, 4382 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 315, 317, 4382, 4385 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 323, 326, 4385, 4388 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 307, 309, 4388, 4391 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 315, 317, 4391, 4394 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 323, 326, 4394, 4397 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 345, 347, 4397, 4400 }, // 303 LFDEPX
  { 1, 401, 404, 4400, 4403 }, // 304 STFDEPX
  { 0, 0, 0, 0, 0 }, // 305 MFSR_MFSRIN
  { 0, 0, 0, 0, 0 }, // 306 MTSR_MTSRIN
  { 0, 0, 0, 0, 0 }, // 307 MFDCR
  { 1, 375, 377, 4403, 4405 }, // 308 MTDCR
  { 1, 305, 307, 4405, 4408 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 0, 0, 0, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 305, 307, 4408, 4411 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 0, 0, 0, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 0, 0, 0, 0, 0 }, // 317 DCBA_DCBI
  { 1, 321, 323, 4411, 4414 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 1, 309, 311, 4414, 4417 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 1, 309, 311, 4417, 4420 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 1, 309, 311, 4420, 4423 }, // 321 XVCVSPBF16
  { 1, 321, 323, 4423, 4426 }, // 322 FADDS_FMULS_FSUBS
  { 1, 321, 323, 4426, 4430 }, // 323 FMUL
  { 1, 309, 311, 4430, 4433 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 309, 311, 4433, 4436 }, // 325 VSUBFP
  { 1, 309, 311, 4436, 4439 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 1, 309, 311, 4439, 4442 }, // 327 XSMULDP_XSMULSP
  { 1, 309, 311, 4442, 4445 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 1, 309, 311, 4445, 4448 }, // 329 VEXPTEFP
  { 1, 321, 323, 4448, 4451 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 321, 323, 4451, 4455 }, // 331 FMUL_rec
  { 1, 321, 323, 4455, 4458 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 307, 309, 4458, 4461 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 307, 309, 4461, 4464 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 307, 309, 4464, 4467 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 307, 309, 4467, 4470 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 1, 309, 311, 4470, 4473 }, // 337 VSBOX
  { 1, 305, 307, 4473, 4476 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 309, 311, 4476, 4479 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 1, 309, 311, 4479, 4482 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 1, 309, 311, 4482, 4485 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 1, 309, 311, 4485, 4488 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 305, 307, 4488, 4491 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 1, 309, 311, 4491, 4494 }, // 344 XSMULQP_XSMULQPO
  { 1, 309, 311, 4494, 4497 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 309, 311, 4497, 4500 }, // 346 VMODSQ_VMODUQ
  { 1, 319, 321, 4500, 4503 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 309, 311, 4503, 4506 }, // 348 VDIVSD_VDIVUD
  { 1, 309, 311, 4506, 4509 }, // 349 VMODSD_VMODUD
  { 1, 309, 311, 4509, 4512 }, // 350 VDIVSW_VDIVUW
  { 1, 309, 311, 4512, 4515 }, // 351 VMODSW_VMODUW
  { 1, 309, 311, 4515, 4518 }, // 352 VDIVESD_VDIVEUD
  { 1, 309, 311, 4518, 4521 }, // 353 VDIVESW_VDIVEUW
  { 1, 309, 311, 4521, 4524 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 1, 309, 311, 4524, 4527 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 309, 311, 4527, 4530 }, // 356 VADDUQM_VSUBUQM
  { 1, 309, 311, 4530, 4533 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 309, 311, 4533, 4536 }, // 358 XXGENPCVBM
  { 1, 309, 311, 4536, 4539 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 315, 317, 4539, 4542 }, // 360 TRAP
  { 1, 311, 313, 4542, 4544 }, // 361 TW
  { 1, 305, 307, 4544, 4547 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 305, 307, 4547, 4550 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 321, 323, 4550, 4553 }, // 364 FTSQRT
  { 1, 309, 311, 4553, 4556 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 305, 307, 4556, 4559 }, // 366 POPCNTB_POPCNTB8
  { 1, 309, 311, 4559, 4562 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 309, 311, 4562, 4565 }, // 368 VPOPCNTB_VPOPCNTH
  { 1, 309, 311, 4565, 4568 }, // 369 XSCVSPDPN
  { 1, 321, 323, 4568, 4571 }, // 370 XSTSQRTDP
  { 1, 309, 311, 4571, 4574 }, // 371 XVCVHPSP
  { 1, 321, 323, 4574, 4577 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 311, 313, 4577, 4580 }, // 373 CMPEQB
  { 1, 311, 313, 4580, 4583 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 1, 311, 313, 4583, 4586 }, // 375 SLD_rec_SRD_rec
  { 1, 305, 307, 4586, 4589 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 309, 311, 4589, 4592 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 1, 309, 311, 4592, 4595 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 309, 311, 4595, 4598 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 309, 311, 4598, 4601 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 1, 309, 311, 4601, 4604 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 1, 311, 313, 4604, 4607 }, // 382 RLDIC_rec
  { 1, 311, 313, 4607, 4610 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 1, 309, 311, 4610, 4613 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 1, 309, 311, 4613, 4616 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 1, 309, 311, 4616, 4619 }, // 386 VRLQMI
  { 1, 313, 315, 4619, 4622 }, // 387 CR6SET_CREQV_CRSET
  { 1, 315, 317, 4622, 4625 }, // 388 DSS_DSSALL
  { 0, 0, 0, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 305, 307, 4625, 4628 }, // 390 NOP_ORI_ORI8
  { 1, 309, 311, 4628, 4631 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 309, 311, 4631, 4634 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 305, 307, 4634, 4637 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 305, 307, 4637, 4640 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 321, 323, 4640, 4643 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 305, 307, 4643, 4646 }, // 398 SETB_SETB8
  { 1, 311, 313, 4646, 4649 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 309, 311, 4649, 4652 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 309, 311, 4652, 4655 }, // 401 VEXTSD2Q
  { 1, 309, 311, 4655, 4658 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 1, 309, 311, 4658, 4661 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 1, 309, 311, 4661, 4664 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 305, 307, 4664, 4667 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 305, 307, 4667, 4670 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 305, 307, 4670, 4673 }, // 407 CMPB_CMPB8
  { 1, 313, 315, 4673, 4676 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 1, 311, 313, 4676, 4679 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 305, 307, 4679, 4682 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 309, 311, 4682, 4685 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 1, 309, 311, 4685, 4688 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 1, 309, 311, 4688, 4691 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 305, 307, 4691, 4694 }, // 414 ADDEX_ADDEX8
  { 1, 315, 317, 4694, 4697 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 1, 311, 313, 4697, 4700 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 0, 0, 0, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 375, 377, 4700, 4702 }, // 418 TRECHKPT
  { 1, 305, 307, 4702, 4705 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 0, 0, 0, 0, 0 }, // 420 MTFSB0
  { 1, 305, 307, 4705, 4708 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 305, 307, 4708, 4711 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 305, 307, 4711, 4714 }, // 423 ADDG6S_ADDG6S8
  { 1, 307, 309, 4714, 4717 }, // 424 HRFID
  { 1, 321, 323, 4717, 4720 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 307, 309, 4720, 4723 }, // 426 SC
  { 1, 305, 307, 4723, 4726 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 305, 307, 4726, 4729 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 0, 0, 0, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 430 MTFSFI_rec
  { 1, 309, 311, 4729, 4732 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 315, 317, 4732, 4735 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 1, 315, 317, 4735, 4738 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 345, 347, 4738, 4741 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 0, 0, 0, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 315, 317, 4741, 4744 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 1, 315, 317, 4744, 4747 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 315, 317, 4747, 4750 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 0, 0, 0, 0, 0 }, // 441 MTSR
  { 1, 305, 307, 4750, 4753 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 315, 317, 4753, 4756 }, // 443 LSWI
  { 1, 345, 347, 4756, 4759 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 345, 347, 4759, 4762 }, // 445 LXVP_LXVPX
  { 0, 0, 0, 0, 0 }, // 446 MFSR
  { 0, 0, 0, 0, 0 }, // 447 MFTB8
  { 1, 309, 311, 4762, 4765 }, // 448 XXSETACCZ
  { 1, 309, 311, 4765, 4768 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 1, 309, 311, 4768, 4771 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 309, 311, 4771, 4774 }, // 451 XVI8GER4SPP
  { 1, 309, 311, 4774, 4777 }, // 452 PMXVF32GER_PMXVF64GER
  { 1, 309, 311, 4777, 4780 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 1, 309, 311, 4780, 4783 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 309, 311, 4783, 4786 }, // 455 PMXVI8GER4SPP
  { 1, 309, 311, 4786, 4789 }, // 456 XXMTACC
  { 1, 309, 311, 4789, 4792 }, // 457 XXMFACC
  { 1, 311, 313, 4792, 4795 }, // 458 MULLD_MULLDO
  { 1, 309, 311, 4795, 4798 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 1, 409, 411, 4798, 4801 }, // 460 VSPLTISW
  { 1, 309, 311, 4801, 4804 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 311, 313, 4804, 4807 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 309, 311, 4807, 4810 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 309, 311, 4810, 4813 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 1, 309, 311, 4813, 4816 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 1, 409, 411, 4816, 4819 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 1, 309, 311, 4819, 4822 }, // 467 XVCVBF16SPN
  { 1, 309, 311, 4822, 4825 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 309, 311, 4825, 4828 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 309, 311, 4828, 4831 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 1, 409, 411, 4831, 4834 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 309, 311, 4834, 4837 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 1, 309, 311, 4837, 4840 }, // 473 VSUMSWS
  { 1, 309, 311, 4840, 4843 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 309, 311, 4843, 4846 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 309, 311, 4846, 4849 }, // 476 XXEVAL
  { 1, 409, 411, 4849, 4852 }, // 477 XXPERMX
  { 0, 0, 0, 0, 0 }, // 478 DCBST_DCBZ
  { 0, 0, 0, 0, 0 }, // 479 ICBI
  { 0, 0, 0, 0, 0 }, // 480 DCBF
  { 1, 345, 347, 4852, 4855 }, // 481 PSTXVP_PSTXVPpc
  { 1, 323, 326, 4855, 4858 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 398, 401, 0, 0 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 401, 404, 4858, 4861 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 315, 317, 4861, 4864 }, // 488 EnforceIEIO
  { 1, 315, 317, 4864, 4867 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 345, 347, 4867, 4870 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 345, 347, 4870, 4873 }, // 491 STXVP_STXVPX
  { 1, 307, 309, 4873, 4876 }, // 492 ATTN_NAP
  { 0, 0, 0, 0, 0 }, // 493 DCBZL
  { 1, 315, 317, 4876, 4879 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 323, 326, 4879, 4882 }, // 495 ICBLC
  { 1, 307, 309, 4882, 4885 }, // 496 CLRBHRB
  { 1, 307, 309, 4885, 4888 }, // 497 MFBHRBE
  { 1, 345, 347, 4888, 4891 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 305, 307, 4891, 4894 }, // 499 PLI_PLI8
  { 1, 309, 311, 4894, 4897 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 309, 311, 4897, 4900 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 309, 311, 4900, 4903 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

static const llvm::InstrItinerary P7Itineraries[] = {
  { 0, 0, 0, 0, 0 }, // 0 NoInstrModel
  { 0, 0, 0, 0, 0 }, // 1 IIC_LdStSync
  { 1, 411, 413, 4903, 4906 }, // 2 IIC_IntSimple
  { 1, 413, 415, 4906, 4909 }, // 3 IIC_IntGeneral
  { 1, 415, 417, 4909, 4912 }, // 4 IIC_BrB
  { 1, 417, 419, 4912, 4915 }, // 5 IIC_VecFP
  { 1, 413, 415, 4915, 4918 }, // 6 IIC_IntRotate
  { 1, 413, 415, 4918, 4921 }, // 7 IIC_IntCompare
  { 0, 0, 0, 0, 0 }, // 8 IIC_SprABORT
  { 0, 0, 0, 0, 0 }, // 9 IIC_LdStCOPY
  { 0, 0, 0, 0, 0 }, // 10 IIC_LdStPASTE
  { 1, 419, 421, 4921, 4924 }, // 11 IIC_BrCR
  { 1, 421, 423, 4924, 4927 }, // 12 IIC_LdStLD
  { 0, 0, 0, 0, 0 }, // 13 IIC_LdStDCBF
  { 1, 421, 423, 4927, 4930 }, // 14 IIC_LdStLoad
  { 1, 423, 426, 4930, 4933 }, // 15 IIC_IntDivD
  { 1, 426, 429, 4933, 4936 }, // 16 IIC_IntDivW
  { 0, 0, 0, 0, 0 }, // 17 IIC_FPDGeneral
  { 1, 429, 431, 4936, 4939 }, // 18 IIC_FPAddSub
  { 1, 429, 431, 4939, 4942 }, // 19 IIC_FPDivD
  { 0, 0, 0, 0, 0 }, // 20 IIC_FPSGeneral
  { 1, 429, 431, 4942, 4945 }, // 21 IIC_FPCompare
  { 1, 429, 431, 4945, 4948 }, // 22 IIC_FPGeneral
  { 1, 431, 433, 4948, 4951 }, // 23 IIC_VecGeneral
  { 1, 431, 433, 4951, 4954 }, // 24 IIC_VecComplex
  { 1, 433, 436, 4954, 4957 }, // 25 IIC_LdStStore
  { 1, 413, 415, 4957, 4960 }, // 26 IIC_IntRotateDI
  { 1, 429, 431, 4960, 4963 }, // 27 IIC_FPDivS
  { 1, 429, 431, 4963, 4967 }, // 28 IIC_FPFused
  { 1, 429, 431, 4967, 4970 }, // 29 IIC_FPSqrtD
  { 1, 429, 431, 4970, 4973 }, // 30 IIC_FPSqrtS
  { 0, 0, 0, 0, 0 }, // 31 IIC_LdStICBI
  { 1, 436, 439, 4973, 4977 }, // 32 IIC_IntISEL
  { 0, 0, 0, 0, 0 }, // 33 IIC_SprISYNC
  { 1, 439, 444, 4977, 4980 }, // 34 IIC_LdStLWARX
  { 1, 444, 448, 4980, 4984 }, // 35 IIC_LdStLoadUpd
  { 1, 448, 455, 4984, 4988 }, // 36 IIC_LdStLoadUpdX
  { 1, 439, 444, 4988, 4991 }, // 37 IIC_LdStLDARX
  { 1, 444, 448, 4991, 4995 }, // 38 IIC_LdStLDU
  { 1, 448, 455, 4995, 4999 }, // 39 IIC_LdStLDUX
  { 1, 421, 423, 4999, 5002 }, // 40 IIC_LdStLFD
  { 1, 444, 448, 5002, 5006 }, // 41 IIC_LdStLFDU
  { 1, 444, 448, 5006, 5010 }, // 42 IIC_LdStLFDUX
  { 1, 455, 459, 5010, 5013 }, // 43 IIC_LdStLHA
  { 1, 459, 464, 5013, 5017 }, // 44 IIC_LdStLHAU
  { 1, 464, 472, 5017, 5021 }, // 45 IIC_LdStLHAUX
  { 1, 421, 423, 5021, 5024 }, // 46 IIC_LdStLMW
  { 0, 0, 0, 0, 0 }, // 47 IIC_LdStLQ
  { 0, 0, 0, 0, 0 }, // 48 IIC_LdStLQARX
  { 1, 455, 459, 5024, 5027 }, // 49 IIC_LdStLWA
  { 1, 413, 415, 5027, 5030 }, // 50 IIC_IntMulHD
  { 1, 415, 417, 5030, 5033 }, // 51 IIC_BrMCR
  { 1, 472, 478, 5033, 5035 }, // 52 IIC_BrMCRX
  { 1, 419, 421, 5035, 5037 }, // 53 IIC_SprMFCR
  { 0, 0, 0, 0, 0 }, // 54 IIC_SprMFSPR
  { 0, 0, 0, 0, 0 }, // 55 IIC_IntMFFS
  { 0, 0, 0, 0, 0 }, // 56 IIC_SprMFMSR
  { 1, 419, 421, 5037, 5039 }, // 57 IIC_SprMFCRF
  { 0, 0, 0, 0, 0 }, // 58 IIC_SprMFPMR
  { 0, 0, 0, 0, 0 }, // 59 IIC_SprMFSR
  { 0, 0, 0, 0, 0 }, // 60 IIC_SprMFTB
  { 0, 0, 0, 0, 0 }, // 61 IIC_SprMSGSYNC
  { 1, 478, 480, 5039, 5041 }, // 62 IIC_SprMTSPR
  { 0, 0, 0, 0, 0 }, // 63 IIC_IntMTFSB0
  { 0, 0, 0, 0, 0 }, // 64 IIC_SprMTMSR
  { 0, 0, 0, 0, 0 }, // 65 IIC_SprMTMSRD
  { 0, 0, 0, 0, 0 }, // 66 IIC_SprMTPMR
  { 0, 0, 0, 0, 0 }, // 67 IIC_SprMTSR
  { 1, 413, 415, 5041, 5044 }, // 68 IIC_IntMulHW
  { 1, 413, 415, 5044, 5047 }, // 69 IIC_IntMulHWU
  { 1, 413, 415, 5047, 5050 }, // 70 IIC_IntMulLI
  { 0, 0, 0, 0, 0 }, // 71 IIC_SprRFI
  { 0, 0, 0, 0, 0 }, // 72 IIC_IntRFID
  { 1, 413, 415, 5050, 5053 }, // 73 IIC_IntRotateD
  { 0, 0, 0, 0, 0 }, // 74 IIC_SprSLBFEE
  { 0, 0, 0, 0, 0 }, // 75 IIC_SprSLBIA
  { 0, 0, 0, 0, 0 }, // 76 IIC_SprSLBIE
  { 0, 0, 0, 0, 0 }, // 77 IIC_SprSLBIEG
  { 0, 0, 0, 0, 0 }, // 78 IIC_SprSLBMFEE
  { 0, 0, 0, 0, 0 }, // 79 IIC_SprSLBMFEV
  { 0, 0, 0, 0, 0 }, // 80 IIC_SprSLBMTE
  { 0, 0, 0, 0, 0 }, // 81 IIC_SprSLBSYNC
  { 1, 413, 415, 5053, 5056 }, // 82 IIC_IntShift
  { 1, 439, 444, 5056, 5059 }, // 83 IIC_LdStSTWCX
  { 1, 459, 464, 5059, 5063 }, // 84 IIC_LdStSTU
  { 1, 480, 487, 5063, 5067 }, // 85 IIC_LdStSTUX
  { 1, 433, 436, 5067, 5070 }, // 86 IIC_LdStSTD
  { 1, 439, 444, 5070, 5073 }, // 87 IIC_LdStSTDCX
  { 1, 487, 490, 5073, 5076 }, // 88 IIC_LdStSTFD
  { 1, 490, 495, 5076, 5080 }, // 89 IIC_LdStSTFDU
  { 0, 0, 0, 0, 0 }, // 90 IIC_SprSTOP
  { 0, 0, 0, 0, 0 }, // 91 IIC_LdStSTQ
  { 0, 0, 0, 0, 0 }, // 92 IIC_LdStSTQCX
  { 1, 413, 415, 5080, 5082 }, // 93 IIC_IntTrapD
  { 0, 0, 0, 0, 0 }, // 94 IIC_SprTLBIA
  { 0, 0, 0, 0, 0 }, // 95 IIC_SprTLBIE
  { 0, 0, 0, 0, 0 }, // 96 IIC_SprTLBIEL
  { 0, 0, 0, 0, 0 }, // 97 IIC_SprTLBSYNC
  { 1, 413, 415, 5082, 5084 }, // 98 IIC_IntTrapW
  { 1, 417, 419, 5084, 5087 }, // 99 IIC_VecFPCompare
  { 1, 495, 497, 5087, 5090 }, // 100 IIC_VecPerm
  { 1, 431, 433, 5090, 5093 }, // 101 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 417, 419, 5093, 5096 }, // 102 VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP
  { 1, 495, 497, 5096, 5099 }, // 103 XXSEL
  { 1, 478, 480, 5099, 5101 }, // 104 TABORTDC_TABORTDCI_TABORTWC_TABORTWCI
  { 0, 0, 0, 0, 0 }, // 105 MTFSB0_MTFSB1
  { 0, 0, 0, 0, 0 }, // 106 MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI
  { 1, 413, 415, 5101, 5104 }, // 107 CMPRB_CMPRB8_CMPEQB
  { 1, 413, 415, 5104, 5106 }, // 108 TD_TDI
  { 1, 413, 415, 5106, 5108 }, // 109 TW_TWI
  { 1, 429, 431, 5108, 5111 }, // 110 FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT
  { 1, 417, 419, 5111, 5114 }, // 111 XSTSTDCDP_XSTSTDCSP
  { 1, 417, 419, 5114, 5117 }, // 112 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN
  { 1, 429, 431, 5117, 5120 }, // 113 XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP
  { 1, 413, 415, 5120, 5123 }, // 114 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD
  { 1, 413, 415, 5123, 5126 }, // 115 SLD_SRD_SRAD
  { 1, 413, 415, 5126, 5129 }, // 116 SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC
  { 1, 431, 433, 5129, 5132 }, // 117 MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ
  { 1, 413, 415, 5132, 5135 }, // 118 CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI
  { 1, 413, 415, 5135, 5138 }, // 119 SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8
  { 1, 411, 413, 5138, 5141 }, // 120 ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP
  { 0, 0, 0, 0, 0 }, // 121 ADDIStocHA_ADDIStocHA8_ADDItocL_COPY
  { 1, 415, 417, 5141, 5144 }, // 122 MCRF
  { 1, 472, 478, 5144, 5146 }, // 123 MCRXRX
  { 1, 417, 419, 5146, 5149 }, // 124 XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP
  { 1, 415, 417, 5149, 5152 }, // 125 RFEBB
  { 1, 478, 480, 5152, 5154 }, // 126 TBEGIN_TRECHKPT
  { 1, 421, 423, 5154, 5157 }, // 127 WAIT
  { 1, 413, 415, 5157, 5160 }, // 128 RLDCL_RLDCR
  { 1, 413, 415, 5160, 5163 }, // 129 RLWIMI_RLWIMI8
  { 1, 413, 415, 5163, 5166 }, // 130 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI
  { 1, 419, 421, 5166, 5168 }, // 131 MFOCRF_MFOCRF8
  { 1, 472, 478, 5168, 5170 }, // 132 MTOCRF_MTOCRF8
  { 1, 419, 421, 5170, 5173 }, // 133 CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR
  { 1, 413, 415, 5173, 5176 }, // 134 SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8
  { 1, 429, 431, 5176, 5179 }, // 135 FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR
  { 1, 413, 415, 5179, 5182 }, // 136 SRAW_SRAWI
  { 1, 436, 439, 5182, 5186 }, // 137 ISEL_ISEL8
  { 1, 417, 419, 5186, 5189 }, // 138 XSIEXPDP
  { 1, 478, 480, 5189, 5191 }, // 139 TRECLAIM_TSR_TABORT
  { 1, 433, 436, 5191, 5194 }, // 140 MFVSCR
  { 1, 421, 423, 5194, 5197 }, // 141 MTVSCR
  { 1, 417, 419, 5197, 5200 }, // 142 VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 431, 433, 5200, 5203 }, // 143 VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW
  { 1, 417, 419, 5203, 5206 }, // 144 VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP
  { 1, 429, 431, 5206, 5209 }, // 145 XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP
  { 1, 417, 419, 5209, 5212 }, // 146 VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS
  { 1, 431, 433, 5212, 5215 }, // 147 VSUBFP_VMULUWM
  { 1, 413, 415, 5215, 5218 }, // 148 MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO
  { 1, 413, 415, 5218, 5221 }, // 149 MULHD_MULHW_MULLW_MULLWO
  { 1, 413, 415, 5221, 5224 }, // 150 MULHDU_MULHWU
  { 1, 413, 415, 5224, 5227 }, // 151 MULLI_MULLI8
  { 1, 429, 431, 5227, 5230 }, // 152 FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
  { 1, 429, 431, 5230, 5233 }, // 153 FADD_FSUB
  { 1, 429, 431, 5233, 5237 }, // 154 FMSUB_FMADD_FNMADD_FNMSUB_FMUL
  { 1, 417, 419, 5237, 5240 }, // 155 XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
  { 1, 429, 431, 5240, 5243 }, // 156 FSELD_rec_FSELS_rec
  { 1, 413, 415, 5243, 5246 }, // 157 MULHDU_rec_MULHWU_rec
  { 1, 413, 415, 5246, 5249 }, // 158 MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec
  { 1, 413, 415, 5249, 5252 }, // 159 MULLDO_rec_MULLD_rec
  { 1, 429, 431, 5252, 5255 }, // 160 FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec
  { 1, 429, 431, 5255, 5258 }, // 161 FADD_rec_FSUB_rec
  { 1, 429, 431, 5258, 5262 }, // 162 FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec
  { 1, 417, 419, 5262, 5265 }, // 163 XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP
  { 1, 421, 423, 5265, 5268 }, // 164 LVSL_LVSR
  { 1, 495, 497, 5268, 5271 }, // 165 VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs
  { 1, 417, 419, 5271, 5274 }, // 166 V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec
  { 1, 431, 433, 5274, 5277 }, // 167 VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM
  { 1, 429, 431, 5277, 5280 }, // 168 XSCMPEXPQP_XSCMPOQP_XSCMPUQP
  { 1, 417, 419, 5280, 5283 }, // 169 BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO
  { 1, 417, 419, 5283, 5286 }, // 170 BCDCTSQ_rec
  { 1, 417, 419, 5286, 5289 }, // 171 XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO
  { 1, 417, 419, 5289, 5292 }, // 172 BCDCFSQ_rec
  { 1, 417, 419, 5292, 5295 }, // 173 XSDIVQP_XSDIVQPO
  { 1, 417, 419, 5295, 5298 }, // 174 XSSQRTQP_XSSQRTQPO
  { 1, 421, 423, 5298, 5301 }, // 175 LXVL_LXVLL
  { 1, 421, 423, 5301, 5304 }, // 176 LVEBX_LVEHX_LVEWX_LVX_LVXL
  { 1, 421, 423, 5304, 5307 }, // 177 LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD
  { 0, 0, 0, 0, 0 }, // 178 DFLOADf64_XFLOADf64_LIWZX
  { 0, 0, 0, 0, 0 }, // 179 DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP
  { 0, 0, 0, 0, 0 }, // 180 CP_COPY_CP_COPY8
  { 0, 0, 0, 0, 0 }, // 181 ICBI_ICBIEP
  { 1, 421, 423, 5307, 5310 }, // 182 ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI
  { 1, 439, 444, 5310, 5313 }, // 183 LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL
  { 1, 421, 423, 5313, 5316 }, // 184 LD_LDX_LDXTLS_LDXTLS__DARN
  { 1, 439, 444, 5316, 5319 }, // 185 LDARX_LDARXL
  { 0, 0, 0, 0, 0 }, // 186 CP_ABORT
  { 0, 0, 0, 0, 0 }, // 187 ISYNC
  { 0, 0, 0, 0, 0 }, // 188 MSGSYNC
  { 0, 0, 0, 0, 0 }, // 189 TLBSYNC
  { 0, 0, 0, 0, 0 }, // 190 SYNC
  { 1, 421, 423, 5319, 5322 }, // 191 LMW
  { 1, 421, 423, 5322, 5325 }, // 192 LFIWZX_LFDX_LFD
  { 0, 0, 0, 0, 0 }, // 193 SLBIA
  { 0, 0, 0, 0, 0 }, // 194 SLBIE
  { 0, 0, 0, 0, 0 }, // 195 SLBMFEE
  { 0, 0, 0, 0, 0 }, // 196 SLBMFEV
  { 0, 0, 0, 0, 0 }, // 197 SLBMTE
  { 0, 0, 0, 0, 0 }, // 198 TLBIEL
  { 1, 444, 448, 5325, 5329 }, // 199 LHZU_LHZU8_LWZU_LWZU8
  { 1, 448, 455, 5329, 5333 }, // 200 LHZUX_LHZUX8_LWZUX_LWZUX8
  { 1, 478, 480, 5333, 5335 }, // 201 TEND
  { 1, 439, 444, 5335, 5338 }, // 202 STBCX_STHCX_STWCX
  { 1, 439, 444, 5338, 5341 }, // 203 STDCX
  { 1, 455, 459, 5341, 5344 }, // 204 LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32
  { 0, 0, 0, 0, 0 }, // 205 CP_PASTE8_rec_CP_PASTE_rec
  { 1, 455, 459, 5344, 5347 }, // 206 LWA_LWA_32
  { 1, 478, 480, 5347, 5349 }, // 207 TCHECK
  { 1, 421, 423, 5349, 5352 }, // 208 LFIWAX
  { 1, 421, 423, 5352, 5355 }, // 209 LXSIWAX
  { 0, 0, 0, 0, 0 }, // 210 LIWAX
  { 1, 421, 423, 5355, 5358 }, // 211 LFSX_LFS
  { 1, 421, 423, 5358, 5361 }, // 212 LXSSP_LXSSPX
  { 0, 0, 0, 0, 0 }, // 213 XFLOADf32_DFLOADf32
  { 1, 459, 464, 5361, 5365 }, // 214 LHAU_LHAU8
  { 1, 464, 472, 5365, 5369 }, // 215 LHAUX_LHAUX8_LWAUX
  { 1, 421, 423, 5369, 5372 }, // 216 LXVH8X_LXVDSX_LXVW4X
  { 1, 487, 490, 5372, 5375 }, // 217 STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX
  { 1, 433, 436, 5375, 5378 }, // 218 STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32
  { 0, 0, 0, 0, 0 }, // 219 DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX
  { 1, 433, 436, 5378, 5381 }, // 220 STD_STDX_STDXTLS_STDXTLS_
  { 1, 421, 423, 5381, 5384 }, // 221 STBCIX_STDCIX_STHCIX_STWCIX_STSWI
  { 0, 0, 0, 0, 0 }, // 222 SLBIEG
  { 1, 421, 423, 5384, 5387 }, // 223 STMW
  { 0, 0, 0, 0, 0 }, // 224 TLBIE
  { 1, 433, 436, 5387, 5390 }, // 225 STVEBX_STVEHX_STVEWX_STVX_STVXL
  { 1, 487, 490, 5390, 5393 }, // 226 STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX
  { 1, 421, 423, 5393, 5396 }, // 227 STXVL_STXVLL
  { 1, 478, 480, 5396, 5398 }, // 228 MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8
  { 1, 413, 415, 5398, 5401 }, // 229 MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv
  { 0, 0, 0, 0, 0 }, // 230 MFPMR
  { 0, 0, 0, 0, 0 }, // 231 MTPMR
  { 0, 0, 0, 0, 0 }, // 232 MFTB_MFTB8
  { 0, 0, 0, 0, 0 }, // 233 MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR
  { 0, 0, 0, 0, 0 }, // 234 MFMSR
  { 0, 0, 0, 0, 0 }, // 235 MTMSR
  { 0, 0, 0, 0, 0 }, // 236 MTMSRD
  { 1, 478, 480, 5401, 5403 }, // 237 MTUDSCR_MTSPR_MTSPR8
  { 1, 426, 429, 5403, 5406 }, // 238 DIVW_DIVWO_DIVWU_DIVWUO_MODSW
  { 1, 426, 429, 5406, 5409 }, // 239 DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW
  { 1, 423, 426, 5409, 5412 }, // 240 DIVD_DIVDO_DIVDU_DIVDUO
  { 1, 423, 426, 5412, 5415 }, // 241 DIVDE_DIVDEO_DIVDEU_DIVDEUO
  { 1, 426, 429, 5415, 5418 }, // 242 DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec
  { 1, 423, 426, 5418, 5421 }, // 243 DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec
  { 1, 426, 429, 5421, 5424 }, // 244 DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec
  { 1, 423, 426, 5424, 5427 }, // 245 DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec
  { 1, 472, 478, 5427, 5429 }, // 246 MTCRF_MTCRF8
  { 1, 413, 415, 5429, 5432 }, // 247 ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec
  { 1, 429, 431, 5432, 5435 }, // 248 FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec
  { 1, 415, 417, 5435, 5438 }, // 249 MCRFS
  { 0, 0, 0, 0, 0 }, // 250 MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 251 MTFSFb
  { 1, 413, 415, 5438, 5441 }, // 252 RLDCL_rec_RLDCR_rec
  { 1, 413, 415, 5441, 5444 }, // 253 RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec
  { 1, 413, 415, 5444, 5447 }, // 254 RLWIMI8_rec_RLWIMI_rec
  { 1, 413, 415, 5447, 5450 }, // 255 RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 413, 415, 5450, 5453 }, // 256 SRAWI_rec_SRAW_rec
  { 0, 0, 0, 0, 0 }, // 257 MFFS_MFFSCE_MFFSL_MFFS_rec
  { 1, 419, 421, 5453, 5455 }, // 258 MFCR_MFCR8
  { 1, 413, 415, 5455, 5458 }, // 259 EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec
  { 1, 413, 415, 5458, 5461 }, // 260 SRAD_rec_SLD_rec_SRD_rec
  { 1, 429, 431, 5461, 5464 }, // 261 FDIV
  { 1, 429, 431, 5464, 5467 }, // 262 FDIV_rec
  { 1, 429, 431, 5467, 5470 }, // 263 XSSQRTDP
  { 1, 429, 431, 5470, 5473 }, // 264 FSQRT
  { 1, 429, 431, 5473, 5476 }, // 265 XVSQRTDP
  { 1, 429, 431, 5476, 5479 }, // 266 XVSQRTSP
  { 1, 429, 431, 5479, 5482 }, // 267 FSQRT_rec
  { 1, 429, 431, 5482, 5485 }, // 268 XSSQRTSP
  { 1, 429, 431, 5485, 5488 }, // 269 FSQRTS
  { 1, 429, 431, 5488, 5491 }, // 270 FSQRTS_rec
  { 1, 429, 431, 5491, 5494 }, // 271 XSDIVDP
  { 1, 429, 431, 5494, 5497 }, // 272 FDIVS
  { 1, 429, 431, 5497, 5500 }, // 273 FDIVS_rec
  { 1, 429, 431, 5500, 5503 }, // 274 XSDIVSP
  { 1, 429, 431, 5503, 5506 }, // 275 XVDIVSP
  { 1, 429, 431, 5506, 5509 }, // 276 XVDIVDP
  { 1, 444, 448, 5509, 5513 }, // 277 LFSU
  { 1, 444, 448, 5513, 5517 }, // 278 LFSUX
  { 1, 490, 495, 5517, 5521 }, // 279 STFDU_STFDUX_STFSU_STFSUX
  { 1, 459, 464, 5521, 5525 }, // 280 STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8
  { 1, 480, 487, 5525, 5529 }, // 281 STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8
  { 1, 444, 448, 5529, 5533 }, // 282 LBZU_LBZU8
  { 1, 448, 455, 5533, 5537 }, // 283 LBZUX_LBZUX8
  { 1, 444, 448, 5537, 5541 }, // 284 LDU
  { 1, 448, 455, 5541, 5545 }, // 285 LDUX
  { 1, 444, 448, 5545, 5549 }, // 286 LFDU
  { 1, 444, 448, 5549, 5553 }, // 287 LFDUX
  { 1, 417, 419, 5553, 5556 }, // 288 VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
  { 1, 415, 417, 5556, 5559 }, // 289 BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP
  { 1, 415, 417, 5559, 5562 }, // 290 ADDPCIS
  { 1, 421, 423, 5562, 5565 }, // 291 LDAT_LWAT
  { 1, 433, 436, 5565, 5568 }, // 292 STDAT_STWAT
  { 1, 411, 413, 5568, 5571 }, // 293 BRINC
  { 1, 431, 433, 5571, 5574 }, // 294 EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW
  { 1, 431, 433, 5574, 5577 }, // 295 EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW
  { 1, 421, 423, 5577, 5580 }, // 296 EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX
  { 1, 433, 436, 5580, 5583 }, // 297 EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX
  { 1, 415, 417, 5583, 5586 }, // 298 HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC
  { 0, 0, 0, 0, 0 }, // 299 RFI
  { 0, 0, 0, 0, 0 }, // 300 RFID
  { 1, 421, 423, 5586, 5589 }, // 301 DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI
  { 1, 433, 436, 5589, 5592 }, // 302 ICBLC_STBEPX_STHEPX_STWEPX
  { 1, 421, 423, 5592, 5595 }, // 303 LFDEPX
  { 1, 487, 490, 5595, 5598 }, // 304 STFDEPX
  { 0, 0, 0, 0, 0 }, // 305 MFSR_MFSRIN
  { 0, 0, 0, 0, 0 }, // 306 MTSR_MTSRIN
  { 0, 0, 0, 0, 0 }, // 307 MFDCR
  { 1, 478, 480, 5598, 5600 }, // 308 MTDCR
  { 1, 411, 413, 5600, 5603 }, // 309 NOP_GT_PWR6_NOP_GT_PWR7
  { 0, 0, 0, 0, 0 }, // 310 TLBIA
  { 0, 0, 0, 0, 0 }, // 311 WRTEE_WRTEEI
  { 1, 413, 415, 5603, 5606 }, // 312 HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8
  { 0, 0, 0, 0, 0 }, // 313 MSYNC
  { 0, 0, 0, 0, 0 }, // 314 SLBSYNC
  { 0, 0, 0, 0, 0 }, // 315 SLBFEE_rec
  { 0, 0, 0, 0, 0 }, // 316 STOP
  { 0, 0, 0, 0, 0 }, // 317 DCBA_DCBI
  { 1, 429, 431, 5606, 5609 }, // 318 FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
  { 1, 417, 419, 5609, 5612 }, // 319 VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
  { 1, 417, 419, 5612, 5615 }, // 320 XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
  { 1, 417, 419, 5615, 5618 }, // 321 XVCVSPBF16
  { 1, 429, 431, 5618, 5621 }, // 322 FADDS_FMULS_FSUBS
  { 1, 429, 431, 5621, 5625 }, // 323 FMUL
  { 1, 417, 419, 5625, 5628 }, // 324 VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
  { 1, 431, 433, 5628, 5631 }, // 325 VSUBFP
  { 1, 417, 419, 5631, 5634 }, // 326 XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
  { 1, 417, 419, 5634, 5637 }, // 327 XSMULDP_XSMULSP
  { 1, 417, 419, 5637, 5640 }, // 328 VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
  { 1, 417, 419, 5640, 5643 }, // 329 VEXPTEFP
  { 1, 429, 431, 5643, 5646 }, // 330 FADDS_rec_FMULS_rec_FSUBS_rec
  { 1, 429, 431, 5646, 5650 }, // 331 FMUL_rec
  { 1, 429, 431, 5650, 5653 }, // 332 FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec
  { 1, 415, 417, 5653, 5656 }, // 333 BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS
  { 1, 415, 417, 5656, 5659 }, // 334 BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS
  { 1, 415, 417, 5659, 5662 }, // 335 B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM
  { 1, 415, 417, 5662, 5665 }, // 336 BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL
  { 1, 417, 419, 5665, 5668 }, // 337 VSBOX
  { 1, 413, 415, 5668, 5671 }, // 338 CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
  { 1, 431, 433, 5671, 5674 }, // 339 VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
  { 1, 417, 419, 5674, 5677 }, // 340 XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP
  { 1, 417, 419, 5677, 5680 }, // 341 XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP
  { 1, 417, 419, 5680, 5683 }, // 342 XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO
  { 1, 413, 415, 5683, 5686 }, // 343 HASHST_HASHST8_HASHSTP_HASHSTP8
  { 1, 417, 419, 5686, 5689 }, // 344 XSMULQP_XSMULQPO
  { 1, 431, 433, 5689, 5692 }, // 345 VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ
  { 1, 431, 433, 5692, 5695 }, // 346 VMODSQ_VMODUQ
  { 1, 426, 429, 5695, 5698 }, // 347 DIVWE_DIVWEO_DIVWEU_DIVWEUO
  { 1, 431, 433, 5698, 5701 }, // 348 VDIVSD_VDIVUD
  { 1, 431, 433, 5701, 5704 }, // 349 VMODSD_VMODUD
  { 1, 431, 433, 5704, 5707 }, // 350 VDIVSW_VDIVUW
  { 1, 431, 433, 5707, 5710 }, // 351 VMODSW_VMODUW
  { 1, 431, 433, 5710, 5713 }, // 352 VDIVESD_VDIVEUD
  { 1, 431, 433, 5713, 5716 }, // 353 VDIVESW_VDIVEUW
  { 1, 417, 419, 5716, 5719 }, // 354 BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP
  { 1, 417, 419, 5719, 5722 }, // 355 BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP
  { 1, 431, 433, 5722, 5725 }, // 356 VADDUQM_VSUBUQM
  { 1, 417, 419, 5725, 5728 }, // 357 XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP
  { 1, 431, 433, 5728, 5731 }, // 358 XXGENPCVBM
  { 1, 417, 419, 5731, 5734 }, // 359 BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM
  { 1, 421, 423, 5734, 5737 }, // 360 TRAP
  { 1, 413, 415, 5737, 5739 }, // 361 TW
  { 1, 413, 415, 5739, 5742 }, // 362 CBCDTD_CBCDTD8_CDTBCD_CDTBCD8
  { 1, 413, 415, 5742, 5745 }, // 363 CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW
  { 1, 429, 431, 5745, 5748 }, // 364 FTSQRT
  { 1, 431, 433, 5748, 5751 }, // 365 MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB
  { 1, 413, 415, 5751, 5754 }, // 366 POPCNTB_POPCNTB8
  { 1, 431, 433, 5754, 5757 }, // 367 VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW
  { 1, 431, 433, 5757, 5760 }, // 368 VPOPCNTB_VPOPCNTH
  { 1, 417, 419, 5760, 5763 }, // 369 XSCVSPDPN
  { 1, 429, 431, 5763, 5766 }, // 370 XSTSQRTDP
  { 1, 417, 419, 5766, 5769 }, // 371 XVCVHPSP
  { 1, 429, 431, 5769, 5772 }, // 372 XVTSQRTDP_XVTSQRTSP
  { 1, 413, 415, 5772, 5775 }, // 373 CMPEQB
  { 1, 413, 415, 5775, 5778 }, // 374 EXTSWSLI_32_64_rec_EXTSWSLI_rec
  { 1, 413, 415, 5778, 5781 }, // 375 SLD_rec_SRD_rec
  { 1, 413, 415, 5781, 5784 }, // 376 SLW8_rec_SLW_rec_SRW8_rec_SRW_rec
  { 1, 417, 419, 5784, 5787 }, // 377 VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP
  { 1, 417, 419, 5787, 5790 }, // 378 VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec
  { 1, 417, 419, 5790, 5793 }, // 379 VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec
  { 1, 431, 433, 5793, 5796 }, // 380 VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW
  { 1, 417, 419, 5796, 5799 }, // 381 XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP
  { 1, 413, 415, 5799, 5802 }, // 382 RLDIC_rec
  { 1, 413, 415, 5802, 5805 }, // 383 RLDICL_32_rec_RLDICL_rec_RLDICR_rec
  { 1, 417, 419, 5805, 5808 }, // 384 VSHASIGMAD_VSHASIGMAW
  { 1, 417, 419, 5808, 5811 }, // 385 VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ
  { 1, 417, 419, 5811, 5814 }, // 386 VRLQMI
  { 1, 419, 421, 5814, 5817 }, // 387 CR6SET_CREQV_CRSET
  { 1, 421, 423, 5817, 5820 }, // 388 DSS_DSSALL
  { 0, 0, 0, 0, 0 }, // 389 MFCTR_MFCTR8_MFLR_MFLR8
  { 1, 411, 413, 5820, 5823 }, // 390 NOP_ORI_ORI8
  { 1, 417, 419, 5823, 5826 }, // 391 VXOR_V_SET0_V_SET0B_V_SET0H
  { 1, 431, 433, 5826, 5829 }, // 392 XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz
  { 1, 411, 413, 5829, 5832 }, // 393 ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO
  { 0, 0, 0, 0, 0 }, // 394 ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32
  { 0, 0, 0, 0, 0 }, // 395 ADDItocL_ADDIStocHA_ADDIStocHA8
  { 1, 413, 415, 5832, 5835 }, // 396 ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO
  { 1, 429, 431, 5835, 5838 }, // 397 FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS
  { 1, 413, 415, 5838, 5841 }, // 398 SETB_SETB8
  { 1, 413, 415, 5841, 5844 }, // 399 SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8
  { 1, 431, 433, 5844, 5847 }, // 400 VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW
  { 1, 431, 433, 5847, 5850 }, // 401 VEXTSD2Q
  { 1, 417, 419, 5850, 5853 }, // 402 XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP
  { 1, 417, 419, 5853, 5856 }, // 403 XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP
  { 1, 417, 419, 5856, 5859 }, // 404 XVXSIGDP_XVXSIGSP
  { 1, 411, 413, 5859, 5862 }, // 405 ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8
  { 1, 413, 415, 5862, 5865 }, // 406 ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO
  { 1, 413, 415, 5865, 5868 }, // 407 CMPB_CMPB8
  { 1, 419, 421, 5868, 5871 }, // 408 CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR
  { 1, 413, 415, 5871, 5874 }, // 409 EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32
  { 1, 413, 415, 5874, 5877 }, // 410 SLW_SLW8_SRW_SRW8
  { 1, 431, 433, 5877, 5880 }, // 411 VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC
  { 1, 417, 419, 5880, 5883 }, // 412 VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP
  { 1, 417, 419, 5883, 5886 }, // 413 VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW
  { 1, 413, 415, 5886, 5889 }, // 414 ADDEX_ADDEX8
  { 1, 421, 423, 5889, 5892 }, // 415 DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64
  { 1, 413, 415, 5892, 5895 }, // 416 RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32
  { 0, 0, 0, 0, 0 }, // 417 MFFS_MFFS_rec_MFFSL
  { 1, 478, 480, 5895, 5897 }, // 418 TRECHKPT
  { 1, 413, 415, 5897, 5900 }, // 419 ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec
  { 0, 0, 0, 0, 0 }, // 420 MTFSB0
  { 1, 411, 413, 5900, 5903 }, // 421 NEG8O_rec_NEGO_rec
  { 1, 413, 415, 5903, 5906 }, // 422 ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec
  { 1, 413, 415, 5906, 5909 }, // 423 ADDG6S_ADDG6S8
  { 1, 415, 417, 5909, 5912 }, // 424 HRFID
  { 1, 429, 431, 5912, 5915 }, // 425 FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec
  { 1, 415, 417, 5915, 5918 }, // 426 SC
  { 1, 413, 415, 5918, 5921 }, // 427 ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO
  { 1, 413, 415, 5921, 5924 }, // 428 ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec
  { 0, 0, 0, 0, 0 }, // 429 MTFSF_MTFSFI_MTFSFIb
  { 0, 0, 0, 0, 0 }, // 430 MTFSFI_rec
  { 1, 431, 433, 5924, 5927 }, // 431 VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec
  { 1, 421, 423, 5927, 5930 }, // 432 LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8
  { 1, 421, 423, 5930, 5933 }, // 433 LD
  { 0, 0, 0, 0, 0 }, // 434 LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL
  { 1, 421, 423, 5933, 5936 }, // 435 LXVRBX_LXVRDX_LXVRHX_LXVRWX
  { 0, 0, 0, 0, 0 }, // 436 DCBT_DCBTST
  { 1, 421, 423, 5936, 5939 }, // 437 ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32
  { 1, 421, 423, 5939, 5942 }, // 438 LDX_LDXTLS_LDXTLS_
  { 0, 0, 0, 0, 0 }, // 439 SPILLTOVSR_LDX
  { 1, 421, 423, 5942, 5945 }, // 440 LBZCIX_LDCIX_LHZCIX_LWZCIX
  { 0, 0, 0, 0, 0 }, // 441 MTSR
  { 1, 413, 415, 5945, 5948 }, // 442 MTVRSAVE_MTVRSAVEv
  { 1, 421, 423, 5948, 5951 }, // 443 LSWI
  { 1, 421, 423, 5951, 5954 }, // 444 PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc
  { 1, 421, 423, 5954, 5957 }, // 445 LXVP_LXVPX
  { 0, 0, 0, 0, 0 }, // 446 MFSR
  { 0, 0, 0, 0, 0 }, // 447 MFTB8
  { 1, 431, 433, 5957, 5960 }, // 448 XXSETACCZ
  { 1, 417, 419, 5960, 5963 }, // 449 XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
  { 1, 417, 419, 5963, 5966 }, // 450 XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
  { 1, 431, 433, 5966, 5969 }, // 451 XVI8GER4SPP
  { 1, 417, 419, 5969, 5972 }, // 452 PMXVF32GER_PMXVF64GER
  { 1, 417, 419, 5972, 5975 }, // 453 PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
  { 1, 417, 419, 5975, 5978 }, // 454 PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
  { 1, 431, 433, 5978, 5981 }, // 455 PMXVI8GER4SPP
  { 1, 431, 433, 5981, 5984 }, // 456 XXMTACC
  { 1, 431, 433, 5984, 5987 }, // 457 XXMFACC
  { 1, 413, 415, 5987, 5990 }, // 458 MULLD_MULLDO
  { 1, 431, 433, 5990, 5993 }, // 459 VMULHSD_VMULHUD_VMULLD
  { 1, 495, 497, 5993, 5996 }, // 460 VSPLTISW
  { 1, 417, 419, 5996, 5999 }, // 461 V_SETALLONES_V_SETALLONESB_V_SETALLONESH
  { 1, 413, 415, 5999, 6002 }, // 462 BRD_BRH_BRH8_BRW_BRW8
  { 1, 431, 433, 6002, 6005 }, // 463 LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR
  { 1, 431, 433, 6005, 6008 }, // 464 MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ
  { 1, 417, 419, 6008, 6011 }, // 465 VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW
  { 1, 495, 497, 6011, 6014 }, // 466 VSPLTISB_VSPLTISH_XXSPLTIB
  { 1, 417, 419, 6014, 6017 }, // 467 XVCVBF16SPN
  { 1, 417, 419, 6017, 6020 }, // 468 VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW
  { 1, 431, 433, 6020, 6023 }, // 469 VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM
  { 1, 431, 433, 6023, 6026 }, // 470 VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW
  { 1, 495, 497, 6026, 6029 }, // 471 VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs
  { 1, 431, 433, 6029, 6032 }, // 472 VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI
  { 1, 417, 419, 6032, 6035 }, // 473 VSUMSWS
  { 1, 431, 433, 6035, 6038 }, // 474 XXSPLTIDP_XXSPLTIW
  { 1, 431, 433, 6038, 6041 }, // 475 XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX
  { 1, 431, 433, 6041, 6044 }, // 476 XXEVAL
  { 1, 495, 497, 6044, 6047 }, // 477 XXPERMX
  { 0, 0, 0, 0, 0 }, // 478 DCBST_DCBZ
  { 0, 0, 0, 0, 0 }, // 479 ICBI
  { 0, 0, 0, 0, 0 }, // 480 DCBF
  { 1, 421, 423, 6047, 6050 }, // 481 PSTXVP_PSTXVPpc
  { 1, 433, 436, 6050, 6053 }, // 482 STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX
  { 0, 0, 0, 0, 0 }, // 483 SPILLTOVSR_ST
  { 1, 433, 436, 6053, 6056 }, // 484 STD
  { 0, 0, 0, 0, 0 }, // 485 DFSTOREf32_DFSTOREf64_STIWX
  { 1, 487, 490, 6056, 6059 }, // 486 STXVRBX_STXVRDX_STXVRHX_STXVRWX
  { 0, 0, 0, 0, 0 }, // 487 SPILLTOVSR_STX
  { 1, 421, 423, 6059, 6062 }, // 488 EnforceIEIO
  { 1, 421, 423, 6062, 6065 }, // 489 STBCIX_STDCIX_STHCIX_STWCIX
  { 1, 421, 423, 6065, 6068 }, // 490 PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc
  { 1, 421, 423, 6068, 6071 }, // 491 STXVP_STXVPX
  { 1, 415, 417, 6071, 6074 }, // 492 ATTN_NAP
  { 0, 0, 0, 0, 0 }, // 493 DCBZL
  { 1, 421, 423, 6074, 6077 }, // 494 DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2
  { 1, 433, 436, 6077, 6080 }, // 495 ICBLC
  { 1, 415, 417, 6080, 6083 }, // 496 CLRBHRB
  { 1, 415, 417, 6083, 6086 }, // 497 MFBHRBE
  { 1, 421, 423, 6086, 6089 }, // 498 PADDI_PADDI8_PADDI8pc_PADDIpc
  { 1, 411, 413, 6089, 6092 }, // 499 PLI_PLI8
  { 1, 417, 419, 6092, 6095 }, // 500 VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS
  { 1, 431, 433, 6095, 6098 }, // 501 VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD
  { 1, 431, 433, 6098, 6101 }, // 502 VMSUMCUD
  { 0, uint16_t(~0U), uint16_t(~0U), uint16_t(~0U), uint16_t(~0U) }// end marker
};

// ===============================================================
// Data tables for the new per-operand machine model.

// {ProcResourceIdx, Cycles}
extern const llvm::MCWriteProcResEntry PPCWriteProcResTable[] = {
  { 0,  0}, // Invalid
  { 1,  1}, // #1
  {13,  1}, // #2
  { 1,  1}, // #3
  { 9,  1}, // #4
  { 1,  2}, // #5
  { 8,  1}, // #6
  { 9,  1}, // #7
  { 1,  2}, // #8
  { 8,  1}, // #9
  { 9,  2}, // #10
  { 1,  1}, // #11
  {15,  1}, // #12
  { 1,  1}, // #13
  { 2,  1}, // #14
  { 1,  2}, // #15
  { 2,  1}, // #16
  { 8,  1}, // #17
  { 9,  1}, // #18
  { 1,  1}, // #19
  { 7,  1}, // #20
  { 1,  1}, // #21
  { 5,  1}, // #22
  { 1,  1}, // #23
  { 5, 16}, // #24
  { 1,  1}, // #25
  { 5, 17}, // #26
  { 1,  1}, // #27
  { 5, 30}, // #28
  { 1,  1}, // #29
  { 5, 49}, // #30
  { 1,  1}, // #31
  { 5, 67}, // #32
  { 1,  1}, // #33
  {10,  1}, // #34
  { 1,  1}, // #35
  {14,  1}, // #36
  { 1,  2}, // #37
  { 8,  1}, // #38
  {10,  1}, // #39
  { 1,  2}, // #40
  { 8,  1}, // #41
  { 9,  1}, // #42
  {14,  1}, // #43
  { 1,  2}, // #44
  { 8,  1}, // #45
  {14,  1}, // #46
  { 1,  4}, // #47
  { 8,  1}, // #48
  {10,  4}, // #49
  { 1,  4}, // #50
  { 8,  2}, // #51
  {10,  2}, // #52
  {12,  2}, // #53
  { 1,  2}, // #54
  { 8,  1}, // #55
  {10,  1}, // #56
  {15,  1}, // #57
  { 1,  2}, // #58
  { 8,  1}, // #59
  { 9,  1}, // #60
  {10,  1}, // #61
  {12,  1}, // #62
  { 1,  4}, // #63
  { 8,  1}, // #64
  {14,  4}, // #65
  { 1,  2}, // #66
  { 8,  1}, // #67
  {15,  1}, // #68
  { 1,  1}, // #69
  { 6, 10}, // #70
  { 1,  2}, // #71
  { 6, 10}, // #72
  { 8,  1}, // #73
  { 9,  1}, // #74
  { 1,  2}, // #75
  { 8,  1}, // #76
  { 9,  2}, // #77
  {12,  1}, // #78
  { 1,  4}, // #79
  { 8,  1}, // #80
  { 9,  4}, // #81
  { 1,  2}, // #82
  { 2,  7}, // #83
  { 8,  1}, // #84
  { 9,  1}, // #85
  { 1,  2}, // #86
  { 2, 10}, // #87
  { 8,  1}, // #88
  { 9,  1}, // #89
  { 1,  2}, // #90
  { 2,  5}, // #91
  { 8,  1}, // #92
  { 9,  1}, // #93
  { 1,  4}, // #94
  { 8,  1}, // #95
  { 9,  2}, // #96
  {10,  1}, // #97
  {12,  1}, // #98
  {15,  1}, // #99
  { 1,  1}, // #100
  { 3,  1}, // #101
  { 1,  2}, // #102
  { 8,  1}, // #103
  { 9,  1}, // #104
  {15,  1}, // #105
  { 1,  8}, // #106
  { 8,  1}, // #107
  { 9,  3}, // #108
  {10,  1}, // #109
  {14,  4}, // #110
  { 1,  4}, // #111
  { 8,  1}, // #112
  { 9,  1}, // #113
  {14,  3}, // #114
  { 1,  2}, // #115
  { 5,  1}, // #116
  { 8,  1}, // #117
  {10,  1}, // #118
  { 1,  2}, // #119
  { 5,  1}, // #120
  { 8,  1}, // #121
  {14,  1}, // #122
  { 1,  1}, // #123
  { 5, 12}, // #124
  { 1,  1}, // #125
  { 5, 15}, // #126
  { 1,  1}, // #127
  { 6, 21}, // #128
  { 1,  1}, // #129
  { 6, 33}, // #130
  { 1,  2}, // #131
  { 8,  1}, // #132
  { 9,  1}, // #133
  {13,  1}, // #134
  { 1,  2}, // #135
  { 8,  1}, // #136
  {10,  1}, // #137
  {12,  1}, // #138
  { 1,  2}, // #139
  { 8,  1}, // #140
  {10,  1}, // #141
  {12,  1}, // #142
  {15,  1}, // #143
  { 1,  1}, // #144
  {11,  1}, // #145
  { 1,  2}, // #146
  { 8,  1}, // #147
  { 9,  1}, // #148
  {11,  1}, // #149
  {12,  1}, // #150
  { 1,  4}, // #151
  { 8,  2}, // #152
  { 9,  2}, // #153
  {11,  2}, // #154
  {12,  2}, // #155
  { 1,  2}, // #156
  { 2,  1}, // #157
  { 8,  1}, // #158
  {13,  1}, // #159
  { 1,  2}, // #160
  { 8,  1}, // #161
  {12,  1}, // #162
  {13,  1}, // #163
  { 1,  2}, // #164
  { 8,  1}, // #165
  {12,  1}, // #166
  {14,  1}, // #167
  { 1,  2}, // #168
  { 8,  1}, // #169
  {12,  1}, // #170
  {14,  2}, // #171
  { 1,  2}, // #172
  { 8,  1}, // #173
  {12,  1}, // #174
  {15,  1}, // #175
  { 1,  1}, // #176
  { 2,  7}, // #177
  { 1,  1}, // #178
  { 2, 10}, // #179
  { 1,  1}, // #180
  { 2,  5}, // #181
  { 1,  1}, // #182
  { 2,  8}, // #183
  { 1,  1}, // #184
  { 4,  1}, // #185
  { 1,  2}, // #186
  { 2,  2}, // #187
  { 8,  1}, // #188
  { 1,  2}, // #189
  { 8,  1}, // #190
  {11,  1}, // #191
  {12,  1}, // #192
  { 1,  2}, // #193
  { 2,  1}, // #194
  { 3,  1}, // #195
  { 7,  1}, // #196
  {18,  2}, // #197
  {19,  1}, // #198
  {20,  1}, // #199
  { 1,  1}, // #200
  { 7,  3}, // #201
  { 8,  2}, // #202
  {10,  1}, // #203
  {11,  1}, // #204
  {12,  1}, // #205
  {18,  1}, // #206
  { 1,  1}, // #207
  { 7,  1}, // #208
  {18,  1}, // #209
  { 7,  1}, // #210
  {14,  2}, // #211
  {15,  1}, // #212
  {16,  1}, // #213
  {18,  2}, // #214
  {19,  1}, // #215
  {20,  1}, // #216
  { 7,  3}, // #217
  { 8,  2}, // #218
  {10,  1}, // #219
  {11,  1}, // #220
  {12,  1}, // #221
  {14,  1}, // #222
  {18,  1}, // #223
  { 1,  1}, // #224
  { 7,  4}, // #225
  { 8,  2}, // #226
  {10,  1}, // #227
  {11,  1}, // #228
  {12,  1}, // #229
  {14,  1}, // #230
  {18,  2}, // #231
  { 7,  1}, // #232
  {14,  1}, // #233
  {18,  1}, // #234
  { 7,  1}, // #235
  {18,  2}, // #236
  {19,  1}, // #237
  {20,  1}, // #238
  {22,  1}, // #239
  { 6,  1}, // #240
  { 7,  1}, // #241
  {18,  2}, // #242
  {19,  1}, // #243
  {20,  1}, // #244
  { 6, 11}, // #245
  { 7,  1}, // #246
  {18,  2}, // #247
  {19,  1}, // #248
  {20,  1}, // #249
  { 6, 12}, // #250
  { 7,  1}, // #251
  {18,  2}, // #252
  {19,  1}, // #253
  {20,  1}, // #254
  { 6, 25}, // #255
  { 7,  1}, // #256
  {18,  2}, // #257
  {19,  1}, // #258
  {20,  1}, // #259
  { 6, 44}, // #260
  { 7,  1}, // #261
  {18,  2}, // #262
  {19,  1}, // #263
  {20,  1}, // #264
  { 6, 62}, // #265
  { 7,  1}, // #266
  {18,  2}, // #267
  {19,  1}, // #268
  {20,  1}, // #269
  { 7,  1}, // #270
  {17,  1}, // #271
  {21,  1}, // #272
  { 7,  3}, // #273
  { 8,  2}, // #274
  {10,  1}, // #275
  {11,  1}, // #276
  {12,  1}, // #277
  {17,  1}, // #278
  {21,  1}, // #279
  { 7,  2}, // #280
  { 8,  2}, // #281
  {17,  2}, // #282
  {21,  2}, // #283
  { 1,  1}, // #284
  { 7,  4}, // #285
  { 8,  4}, // #286
  {17,  1}, // #287
  {18,  1}, // #288
  {21,  1}, // #289
  { 1,  1}, // #290
  { 7,  2}, // #291
  {17,  1}, // #292
  {18,  1}, // #293
  {21,  1}, // #294
  { 1,  1}, // #295
  { 7,  4}, // #296
  { 8,  2}, // #297
  {10,  1}, // #298
  {11,  1}, // #299
  {12,  1}, // #300
  {17,  1}, // #301
  {18,  2}, // #302
  {21,  1}, // #303
  { 1,  1}, // #304
  { 7,  6}, // #305
  { 8,  4}, // #306
  {10,  2}, // #307
  {11,  2}, // #308
  {12,  2}, // #309
  {17,  1}, // #310
  {18,  1}, // #311
  {21,  1}, // #312
  { 1,  2}, // #313
  { 7,  5}, // #314
  { 8,  4}, // #315
  {17,  1}, // #316
  {18,  2}, // #317
  {21,  1}, // #318
  { 7,  2}, // #319
  {17,  1}, // #320
  {18,  2}, // #321
  {19,  1}, // #322
  {20,  1}, // #323
  {21,  1}, // #324
  {22,  1}, // #325
  { 7,  3}, // #326
  { 8,  2}, // #327
  {10,  1}, // #328
  {11,  1}, // #329
  {12,  1}, // #330
  {17,  1}, // #331
  {18,  1}, // #332
  {21,  1}, // #333
  { 7,  1}, // #334
  {17,  1}, // #335
  {18,  2}, // #336
  {19,  1}, // #337
  {20,  1}, // #338
  {21,  1}, // #339
  { 7,  2}, // #340
  { 8,  2}, // #341
  {10,  1}, // #342
  {11,  1}, // #343
  {13,  1}, // #344
  {18,  2}, // #345
  {19,  1}, // #346
  {20,  1}, // #347
  { 7,  2}, // #348
  { 8,  2}, // #349
  {10,  1}, // #350
  {11,  1}, // #351
  {13,  8}, // #352
  {18,  2}, // #353
  {19,  1}, // #354
  {20,  1}, // #355
  { 1,  1}, // #356
  { 7,  3}, // #357
  { 8,  2}, // #358
  {10,  1}, // #359
  {11,  1}, // #360
  {13,  8}, // #361
  {18,  3}, // #362
  {19,  1}, // #363
  {20,  1}, // #364
  { 1,  2}, // #365
  { 7,  6}, // #366
  { 8,  4}, // #367
  {10,  2}, // #368
  {11,  2}, // #369
  {12,  2}, // #370
  {18,  2}, // #371
  { 1,  2}, // #372
  { 7,  2}, // #373
  {18,  2}, // #374
  { 1,  2}, // #375
  { 7,  4}, // #376
  { 8,  2}, // #377
  {10,  1}, // #378
  {11,  1}, // #379
  {12,  1}, // #380
  {18,  2}, // #381
  { 1,  3}, // #382
  { 7,  9}, // #383
  { 8,  6}, // #384
  {10,  3}, // #385
  {11,  3}, // #386
  {12,  3}, // #387
  {18,  3}, // #388
  { 7,  3}, // #389
  { 8,  2}, // #390
  {10,  1}, // #391
  {11,  1}, // #392
  {12,  1}, // #393
  {14,  8}, // #394
  {18,  1}, // #395
  { 1,  1}, // #396
  { 7,  4}, // #397
  { 8,  2}, // #398
  {10,  1}, // #399
  {11,  1}, // #400
  {12,  1}, // #401
  {14,  8}, // #402
  {18,  2}, // #403
  { 7,  1}, // #404
  {14, 10}, // #405
  {18,  1}, // #406
  { 7,  3}, // #407
  { 8,  2}, // #408
  {10,  1}, // #409
  {11,  1}, // #410
  {12,  1}, // #411
  {14, 10}, // #412
  {18,  1}, // #413
  { 7,  1}, // #414
  {14, 20}, // #415
  {18,  2}, // #416
  {19,  1}, // #417
  {20,  1}, // #418
  { 1,  1}, // #419
  { 7,  4}, // #420
  { 8,  2}, // #421
  {10,  1}, // #422
  {11,  1}, // #423
  {12,  1}, // #424
  {14, 10}, // #425
  {18,  2}, // #426
  { 7,  1}, // #427
  {14,  5}, // #428
  {18,  1}, // #429
  { 7,  3}, // #430
  { 8,  2}, // #431
  {10,  1}, // #432
  {11,  1}, // #433
  {12,  1}, // #434
  {14,  5}, // #435
  {18,  1}, // #436
  { 1,  1}, // #437
  { 7,  4}, // #438
  { 8,  2}, // #439
  {10,  1}, // #440
  {11,  1}, // #441
  {12,  1}, // #442
  {14,  5}, // #443
  {18,  2}, // #444
  { 7,  1}, // #445
  {14,  8}, // #446
  {18,  1}, // #447
  { 7,  1}, // #448
  {14, 16}, // #449
  {15,  8}, // #450
  {16,  8}, // #451
  {18,  2}, // #452
  {19,  1}, // #453
  {20,  1}, // #454
  { 1,  2}, // #455
  { 7,  7}, // #456
  { 8,  4}, // #457
  {10,  2}, // #458
  {11,  2}, // #459
  {12,  2}, // #460
  {17,  1}, // #461
  {18,  2}, // #462
  {21,  1}, // #463
  { 1,  1}, // #464
  { 7,  4}, // #465
  { 8,  2}, // #466
  {10,  1}, // #467
  {11,  1}, // #468
  {12,  1}, // #469
  {17,  1}, // #470
  {18,  1}, // #471
  {21,  1}, // #472
  { 5,  1}, // #473
  { 7,  1}, // #474
  {18,  2}, // #475
  {19,  1}, // #476
  {20,  1}, // #477
  { 4,  1}, // #478
  { 7,  1}, // #479
  {12,  1}, // #480
  { 1,  1}, // #481
  { 4,  1}, // #482
  { 7,  2}, // #483
  {12,  1}, // #484
  {18,  1}, // #485
  { 7, 10}, // #486
  { 8,  4}, // #487
  {10,  2}, // #488
  {11,  2}, // #489
  {12,  2}, // #490
  {17,  5}, // #491
  {18,  2}, // #492
  {21,  5}, // #493
  { 7,  5}, // #494
  { 8,  2}, // #495
  {10,  1}, // #496
  {11,  1}, // #497
  {12,  1}, // #498
  {17,  3}, // #499
  {18,  1}, // #500
  {21,  3} // #501
}; // PPCWriteProcResTable

// {Cycles, WriteResourceID}
extern const llvm::MCWriteLatencyEntry PPCWriteLatencyTable[] = {
  { 0,  0}, // Invalid
  { 4, 107}, // #1 P10W_PM_4C
  { 1,  0}, // #2 P10W_DISP_ANY_P10W_DISP_PAIR
  { 3, 102}, // #3 P10W_FX_3C
  { 1,  0}, // #4 P10W_DISP_ANY_P10W_DISP_EVEN
  { 4, 100}, // #5 P10W_F2_4C
  { 1,  0}, // #6 P10W_DISP_EVEN_P10W_DISP_ANY
  { 1,  0}, // #7 P10W_DISP_ANY
  { 3, 102}, // #8 P10W_FX_3C
  { 1,  0}, // #9 P10W_DISP_EVEN_P10W_DISP_PAIR
  { 3, 102}, // #10 P10W_FX_3C
  { 1,  0}, // #11 P10W_DISP_ANY
  { 3, 102}, // #12 P10W_FX_3C
  { 1,  0}, // #13 P10W_DISP_EVEN
  { 1,  0}, // #14 P10W_DISP_ANY
  { 0,  0}, // #15 P10W_SX
  { 1,  0}, // #16 P10W_DISP_ANY
  { 7, 111}, // #17 P10W_vMU_7C
  { 1,  0}, // #18 P10W_DISP_ANY
  { 5, 106}, // #19 P10W_MU_5C
  { 1,  0}, // #20 P10W_DISP_ANY
  { 7, 70}, // #21 P10W_BF_7C
  { 1,  0}, // #22 P10W_DISP_EVEN_P10W_DISP_ANY
  { 3, 102}, // #23 P10W_FX_3C
  { 1,  0}, // #24 P10W_DISP_ANY
  { 5, 106}, // #25 P10W_MU_5C
  { 1,  0}, // #26 P10W_DISP_EVEN
  { 3, 102}, // #27 P10W_FX_3C
  { 1,  0}, // #28 P10W_DISP_ANY
  { 5, 99}, // #29 P10W_DX_5C
  { 1,  0}, // #30 P10W_DISP_ANY
  {13, 78}, // #31 P10W_DF_13C
  { 1,  0}, // #32 P10W_DISP_ANY
  {24,  0}, // #33 P10W_DF_24C_P10W_BF_24C
  { 1,  0}, // #34 P10W_DISP_ANY
  {25,  0}, // #35 P10W_DF_25C_P10W_DV_25C
  { 1,  0}, // #36 P10W_DISP_ANY
  {38,  0}, // #37 P10W_DF_38C
  { 1,  0}, // #38 P10W_DISP_ANY
  {59,  0}, // #39 P10W_DF_59C
  { 1,  0}, // #40 P10W_DISP_ANY
  {77,  0}, // #41 P10W_DF_77C
  { 1,  0}, // #42 P10W_DISP_ANY
  { 6,  0}, // #43 P10W_LD_6C
  { 1,  0}, // #44 P10W_DISP_ANY_P10W_DISP_PAIR
  { 3, 108}, // #45 P10W_ST_3C
  { 1,  0}, // #46 P10W_DISP_ANY_P10W_DISP_PAIR
  { 6,  0}, // #47 P10W_LD_6C_P9_LS_6C
  { 1,  0}, // #48 P10W_DISP_EVEN_IP_AGEN_1C
  { 1,  0}, // #49 P10W_DISP_ANY_DISP_1C
  { 3, 108}, // #50 P10W_ST_3C
  { 1,  0}, // #51 P10W_DISP_EVEN
  { 3, 102}, // #52 P10W_FX_3C
  { 1,  0}, // #53 P10W_DISP_ANY
  { 3, 108}, // #54 P10W_ST_3C
  { 1,  0}, // #55 P10W_DISP_EVEN
  { 1,  0}, // #56 P10W_DISP_ANY
  { 6,  0}, // #57 P10W_LD_6C
  { 1,  0}, // #58 P10W_DISP_EVEN_P10W_DISP_PAIR
  { 6,  0}, // #59 P10W_LD_6C
  { 1,  0}, // #60 P10W_DISP_ANY_P10W_DISP_PAIR
  { 6,  0}, // #61 P10W_LD_6C
  { 1,  0}, // #62 P10W_DISP_ANY
  { 6,  0}, // #63 P10W_LD_6C
  { 1,  0}, // #64 P10W_DISP_ANY
  { 6,  0}, // #65 P10W_LD_6C
  { 1,  0}, // #66 P10W_DISP_EVEN_P10W_DISP_PAIR
  { 3, 110}, // #67 P10W_SX_3C
  { 1,  0}, // #68 P10W_DISP_ANY_P10W_DISP_PAIR
  { 6,  0}, // #69 P10W_LD_6C
  { 1,  0}, // #70 P10W_DISP_PAIR
  { 4, 100}, // #71 P10W_F2_4C
  { 3, 108}, // #72 P10W_ST_3C
  { 1,  0}, // #73 P10W_DISP_EVEN_P10W_DISP_PAIR
  { 3, 108}, // #74 P10W_ST_3C
  { 1,  0}, // #75 P10W_DISP_ANY
  { 3, 108}, // #76 P10W_ST_3C
  { 1,  0}, // #77 P10W_DISP_ANY
  { 3, 108}, // #78 P10W_ST_3C
  { 1,  0}, // #79 P10W_DISP_ANY
  { 2,  0}, // #80 P10W_FX_2C_P10W_BR_2C_P9_BR_2C
  { 1,  0}, // #81 P10W_DISP_ANY_DISP_BR_1C
  {13,  0}, // #82 P10W_MFL_13C
  { 1,  0}, // #83 P10W_DISP_EVEN
  { 1,  0}, // #84 P10W_DISP_ANY
  { 3, 110}, // #85 P10W_SX_3C
  { 1,  0}, // #86 P10W_DISP_EVEN
  { 1,  0}, // #87 P10W_DISP_ANY
  {20,  0}, // #88 P10W_DV_20C
  { 1,  0}, // #89 P10W_DISP_ANY
  {27,  0}, // #90 P10W_DV_27C_P10W_BF_27C
  { 1,  0}, // #91 P10W_DISP_ANY
  {41,  0}, // #92 P10W_DV_41C
  { 1,  0}, // #93 P10W_DISP_ANY
  {20,  0}, // #94 P10W_DV_20C
  { 1,  0}, // #95 P10W_DISP_EVEN
  { 3, 102}, // #96 P10W_FX_3C
  { 1,  0}, // #97 P10W_DISP_ANY
  {25,  0}, // #98 P10W_DV_25C
  { 1,  0}, // #99 P10W_DISP_EVEN
  { 3, 102}, // #100 P10W_FX_3C
  { 1,  0}, // #101 P10W_DISP_ANY
  {41,  0}, // #102 P10W_DV_41C
  { 1,  0}, // #103 P10W_DISP_EVEN
  { 3, 102}, // #104 P10W_FX_3C
  { 1,  0}, // #105 P10W_DISP_ANY
  { 3, 102}, // #106 P10W_FX_3C
  { 1,  0}, // #107 P10W_DISP_EVEN
  { 3, 102}, // #108 P10W_FX_3C
  { 1,  0}, // #109 P10W_DISP_ANY
  { 3, 102}, // #110 P10W_FX_3C
  { 1,  0}, // #111 P10W_DISP_ANY
  { 3, 102}, // #112 P10W_FX_3C
  { 1,  0}, // #113 P10W_DISP_ANY
  { 4, 100}, // #114 P10W_F2_4C
  { 1,  0}, // #115 P10W_DISP_PAIR
  { 4, 100}, // #116 P10W_F2_4C
  {27,  0}, // #117 P10W_BF_27C
  { 1,  0}, // #118 P10W_DISP_EVEN
  { 3, 102}, // #119 P10W_FX_3C
  { 1,  0}, // #120 P10W_DISP_ANY
  {36,  0}, // #121 P10W_BF_36C
  { 1,  0}, // #122 P10W_DISP_EVEN_P10W_DISP_ANY
  { 3, 102}, // #123 P10W_FX_3C
  { 1,  0}, // #124 P10W_DISP_ANY
  {26,  0}, // #125 P10W_BF_26C
  { 1,  0}, // #126 P10W_DISP_EVEN_P10W_DISP_ANY
  { 3, 102}, // #127 P10W_FX_3C
  { 1,  0}, // #128 P10W_DISP_ANY
  {22,  0}, // #129 P10W_BF_22C
  { 1,  0}, // #130 P10W_DISP_EVEN_P10W_DISP_ANY
  { 3, 102}, // #131 P10W_FX_3C
  { 1,  0}, // #132 P10W_DISP_ANY
  { 6,  0}, // #133 P10W_LD_6C
  { 1,  0}, // #134 P10W_DISP_PAIR
  { 4, 100}, // #135 P10W_F2_4C
  { 3, 110}, // #136 P10W_SX_3C
  { 1,  0}, // #137 P10W_DISP_ANY_P10W_DISP_EVEN
  { 3, 102}, // #138 P10W_FX_3C
  { 1,  0}, // #139 P10W_DISP_ANY
  { 3, 108}, // #140 P10W_ST_3C
  { 1,  0}, // #141 P10W_DISP_EVEN
  { 3, 102}, // #142 P10W_FX_3C
  { 1,  0}, // #143 P10W_DISP_ANY
  { 3, 108}, // #144 P10W_ST_3C
  { 1,  0}, // #145 P10W_DISP_ANY
  { 3, 102}, // #146 P10W_FX_3C
  { 1,  0}, // #147 P10W_DISP_ANY
  { 3, 108}, // #148 P10W_ST_3C
  { 1,  0}, // #149 P10W_DISP_ANY
  { 3, 102}, // #150 P10W_FX_3C
  { 1,  0}, // #151 P10W_DISP_ANY
  { 6,  0}, // #152 P10W_LD_6C
  { 1,  0}, // #153 P10W_DISP_ANY
  { 3, 108}, // #154 P10W_ST_3C
  { 1,  0}, // #155 P10W_DISP_ANY
  { 3, 108}, // #156 P10W_ST_3C
  { 1,  0}, // #157 P10W_DISP_EVEN
  { 3, 102}, // #158 P10W_FX_3C
  { 1,  0}, // #159 P10W_DISP_ANY
  { 3, 108}, // #160 P10W_ST_3C
  { 1,  0}, // #161 P10W_DISP_ANY
  { 3, 108}, // #162 P10W_ST_3C
  { 1,  0}, // #163 P10W_DISP_ANY
  { 6,  0}, // #164 P10W_LD_6C
  { 1,  0}, // #165 P10W_DISP_EVEN
  {13, 78}, // #166 P10W_DF_13C
  { 1,  0}, // #167 P10W_DISP_ANY
  {13, 78}, // #168 P10W_DF_13C
  { 1,  0}, // #169 P10W_DISP_EVEN
  { 3, 108}, // #170 P10W_ST_3C
  { 1,  0}, // #171 P10W_DISP_ANY
  {61,  0}, // #172 P10W_DF_61C
  { 1,  0}, // #173 P10W_DISP_ANY
  {68,  0}, // #174 P10W_DF_68C
  { 1,  0}, // #175 P10W_DISP_ANY
  {43,  0}, // #176 P10W_DV_43C
  { 1,  0}, // #177 P10W_DISP_ANY
  {47,  0}, // #178 P10W_DV_47C
  { 1,  0}, // #179 P10W_DISP_ANY
  {54,  0}, // #180 P10W_DV_54C
  { 1,  0}, // #181 P10W_DISP_ANY
  {60,  0}, // #182 P10W_DV_60C
  { 1,  0}, // #183 P10W_DISP_ANY
  {75,  0}, // #184 P10W_DV_75C
  { 1,  0}, // #185 P10W_DISP_ANY
  {83,  0}, // #186 P10W_DV_83C
  { 1,  0}, // #187 P10W_DISP_ANY
  { 4, 100}, // #188 P10W_F2_4C
  { 1,  0}, // #189 P10W_DISP_EVEN
  { 4, 107}, // #190 P10W_PM_4C
  { 1,  0}, // #191 P10W_DISP_ANY
  { 3, 102}, // #192 P10W_FX_3C
  { 1,  0}, // #193 P10W_DISP_EVEN
  { 4, 107}, // #194 P10W_PM_4C
  { 1,  0}, // #195 P10W_DISP_ANY
  {10, 105}, // #196 P10W_MM_10C
  { 1,  0}, // #197 P10W_DISP_ANY_P10W_DISP_PAIR
  {10, 105}, // #198 P10W_MM_10C
  { 1,  0}, // #199 P10W_DISP_PAIR
  { 3, 102}, // #200 P10W_FX_3C
  {10, 105}, // #201 P10W_MM_10C
  { 1,  0}, // #202 P10W_DISP_PAIR
  { 3, 102}, // #203 P10W_FX_3C
  {10, 105}, // #204 P10W_MM_10C
  { 1,  0}, // #205 P10W_DISP_PAIR
  { 3, 102}, // #206 P10W_FX_3C
  { 4, 107}, // #207 P10W_PM_4C
  { 1,  0}, // #208 P10W_DISP_EVEN
  { 7, 111}, // #209 P10W_vMU_7C
  { 1,  0}, // #210 P10W_DISP_ANY
  { 7, 77}, // #211 P10W_CY_7C
  { 1,  0}, // #212 P10W_DISP_ANY
  { 7, 70}, // #213 P10W_BF_7C
  { 1,  0}, // #214 P10W_DISP_EVEN
  { 7, 70}, // #215 P10W_BF_7C
  { 1,  0}, // #216 P10W_DISP_ANY
  { 2,  0}, // #217 P9_ALUE_2C
  { 2,  0}, // #218 P9_ALUO_2C_P9_ALU_2C
  { 1,  0}, // #219 IP_EXECE_1C_IP_EXEC_1C
  { 1,  0}, // #220 IP_EXECO_1C_DISP_1C_DISP_3SLOTS_1C
  { 1,  0}, // #221 DISP_1C
  { 3,  0}, // #222 P9_ALU_3C
  { 1,  0}, // #223 IP_EXEC_1C
  { 1,  0}, // #224 DISP_3SLOTS_1C_DISP_1C
  { 3,  0}, // #225 P9_ALUE_3C
  { 3,  0}, // #226 P9_ALUO_3C_P9_PM_3C
  { 1,  0}, // #227 IP_EXECE_1C_IP_EXECO_1C
  { 1,  0}, // #228 IP_EXECO_1C_IP_EXECE_1C
  { 1,  0}, // #229 DISP_1C
  { 7,  0}, // #230 P9_DPE_7C
  { 7,  0}, // #231 P9_DPO_7C_P9_DP_7C_P9_ALU_2C
  { 1,  0}, // #232 IP_EXECE_1C_IP_EXEC_1C
  { 1,  0}, // #233 IP_EXECO_1C_DISP_3SLOTS_1C_DISP_1C_DISP_BR_1C
  { 1,  0}, // #234 DISP_1C
  { 5,  0}, // #235 P9_DP_5C_P9_LS_5C
  { 1,  0}, // #236 IP_EXEC_1C_IP_AGEN_1C
  { 1,  0}, // #237 DISP_3SLOTS_1C_DISP_1C
  { 7,  0}, // #238 P9_DP_7C
  { 3,  0}, // #239 P9_ALU_3C
  { 1,  0}, // #240 IP_EXEC_1C_P9_LS_1C
  { 1,  0}, // #241 IP_EXEC_1C
  { 1,  0}, // #242 DISP_3SLOTS_1C_IP_AGEN_1C
  { 1,  0}, // #243 DISP_1C_DISP_3SLOTS_1C
  { 7,  0}, // #244 P9_ALU_2C_P9_ALU_3C
  { 1,  0}, // #245 IP_EXEC_1C_IP_AGEN_1C
  { 1,  0}, // #246 IP_EXEC_1C
  { 1,  0}, // #247 DISP_3SLOTS_1C_DISP_1C
  { 1,  0}, // #248 DISP_1C_DISP_3SLOTS_1C
  {10,  0}, // #249 P9_ALU_3C
  { 1,  0}, // #250 IP_EXEC_1C
  { 1,  0}, // #251 IP_EXEC_1C
  { 1,  0}, // #252 DISP_3SLOTS_1C
  { 1,  0}, // #253 DISP_1C
  {12,  0}, // #254 P9_DFU_12C_P9_DIV_12C
  { 1,  0}, // #255 IP_EXECE_1C
  { 1,  0}, // #256 IP_EXECO_1C
  { 1,  0}, // #257 DISP_1C_DISP_EVEN_1C
  {23,  0}, // #258 P9_DFU_23C
  { 1,  0}, // #259 IP_EXECE_1C
  { 1,  0}, // #260 IP_EXECO_1C
  { 1,  0}, // #261 DISP_1C
  {24,  0}, // #262 P9_DFU_24C_P9_DIV_24C_8
  { 1,  0}, // #263 IP_EXECE_1C_IP_EXECO_1C
  { 1,  0}, // #264 IP_EXECO_1C_IP_EXECE_1C
  { 1,  0}, // #265 DISP_1C_DISP_EVEN_1C
  {37,  0}, // #266 P9_DFU_37C
  { 1,  0}, // #267 IP_EXECE_1C
  { 1,  0}, // #268 IP_EXECO_1C
  { 1,  0}, // #269 DISP_1C
  {58,  0}, // #270 P9_DFU_58C
  { 1,  0}, // #271 IP_EXECE_1C
  { 1,  0}, // #272 IP_EXECO_1C
  { 1,  0}, // #273 DISP_1C
  {76,  0}, // #274 P9_DFU_76C
  { 1,  0}, // #275 IP_EXECE_1C
  { 1,  0}, // #276 IP_EXECO_1C
  { 1,  0}, // #277 DISP_1C
  { 4,  0}, // #278 P9_LS_4C
  { 1,  0}, // #279 IP_AGEN_1C
  { 1,  0}, // #280 DISP_1C_DISP_3SLOTS_1C
  { 4,  0}, // #281 P9_LS_4C
  { 4,  0}, // #282 P9_LS_4C
  { 1,  0}, // #283 IP_AGEN_1C
  { 1,  0}, // #284 IP_AGEN_1C
  { 1,  0}, // #285 DISP_PAIR_1C
  { 4,  0}, // #286 P9_LS_4C
  { 2,  0}, // #287 P9_ALU_2C
  { 1,  0}, // #288 IP_EXEC_1C_IP_AGEN_1C
  { 1,  0}, // #289 IP_AGEN_1C_IP_EXEC_1C
  { 1,  0}, // #290 DISP_PAIR_1C_DISP_1C_DISP_3SLOTS_1C
  { 1,  0}, // #291 DISP_PAIR_1C_DISP_1C
  { 3,  0}, // #292 P9_ALU_2C
  { 1,  0}, // #293 IP_EXEC_1C_P9_LS_1C
  { 1,  0}, // #294 IP_EXEC_1C_IP_EXECE_1C
  { 1,  0}, // #295 IP_AGEN_1C_IP_EXECO_1C
  { 1,  0}, // #296 DISP_3SLOTS_1C_IP_AGEN_1C
  { 1,  0}, // #297 DISP_1C
  { 6,  0}, // #298 P9_ALU_2C_P9_ALU_3C_P9_CY_6C
  { 1,  0}, // #299 IP_EXEC_1C_IP_EXECO_1C
  { 1,  0}, // #300 IP_AGEN_1C_IP_EXEC_1C_IP_EXECE_1C
  { 1,  0}, // #301 DISP_1C_DISP_3SLOTS_1C
  { 1,  0}, // #302 DISP_1C_DISP_3SLOTS_1C
  { 8,  0}, // #303 P9_ALU_3C
  { 1,  0}, // #304 IP_AGEN_1C
  { 1,  0}, // #305 IP_EXEC_1C
  { 1,  0}, // #306 DISP_1C
  { 1,  0}, // #307 DISP_1C
  { 6,  0}, // #308 P9_ALU_2C
  { 2,  0}, // #309 P9_ALU_2C
  { 1,  0}, // #310 IP_AGEN_1C
  { 1,  0}, // #311 IP_EXEC_1C
  { 1,  0}, // #312 IP_EXEC_1C
  { 1,  0}, // #313 DISP_PAIR_1C
  { 1,  0}, // #314 DISP_PAIR_1C
  { 1,  0}, // #315 DISP_1C
  { 8,  0}, // #316 P9_PM_3C
  { 1,  0}, // #317 IP_AGEN_1C
  { 1,  0}, // #318 IP_EXECE_1C
  { 1,  0}, // #319 IP_EXECO_1C
  { 1,  0}, // #320 DISP_1C
  { 1,  0}, // #321 DISP_1C
  { 5,  0}, // #322 P9_DIV_5C
  { 1,  0}, // #323 IP_EXECE_1C
  { 1,  0}, // #324 IP_EXECO_1C
  { 1,  0}, // #325 DISP_EVEN_1C
  {16,  0}, // #326 P9_DIV_16C_8
  { 1,  0}, // #327 IP_EXECO_1C
  { 1,  0}, // #328 IP_EXECE_1C
  { 1,  0}, // #329 DISP_EVEN_1C
  {40,  0}, // #330 P9_DIV_40C_8
  { 1,  0}, // #331 IP_EXECO_1C
  { 1,  0}, // #332 IP_EXECE_1C
  { 1,  0}, // #333 DISP_EVEN_1C
  {18,  0}, // #334 P9_ALU_2C
  { 1,  0}, // #335 IP_EXECE_1C
  { 1,  0}, // #336 IP_EXECO_1C
  { 1,  0}, // #337 IP_EXEC_1C
  { 1,  0}, // #338 DISP_EVEN_1C
  { 1,  0}, // #339 DISP_1C
  {26,  0}, // #340 P9_ALU_2C
  { 1,  0}, // #341 IP_EXECE_1C
  { 1,  0}, // #342 IP_EXECO_1C
  { 1,  0}, // #343 IP_EXEC_1C
  { 1,  0}, // #344 DISP_EVEN_1C
  { 1,  0}, // #345 DISP_1C
  {42,  0}, // #346 P9_ALU_2C
  { 1,  0}, // #347 IP_EXECE_1C
  { 1,  0}, // #348 IP_EXECO_1C
  { 1,  0}, // #349 IP_EXEC_1C
  { 1,  0}, // #350 DISP_EVEN_1C
  { 1,  0}, // #351 DISP_1C
  { 2,  0}, // #352 P9_ALU_2C
  { 2,  0}, // #353 P9_ALU_2C
  { 1,  0}, // #354 IP_EXEC_1C
  { 1,  0}, // #355 IP_EXEC_1C
  { 1,  0}, // #356 DISP_3SLOTS_1C_DISP_1C
  { 1,  0}, // #357 DISP_3SLOTS_1C_DISP_1C
  { 2,  0}, // #358 P9_ALU_2C
  { 3,  0}, // #359 P9_ALU_3C
  { 1,  0}, // #360 IP_EXEC_1C
  { 1,  0}, // #361 IP_EXEC_1C
  { 1,  0}, // #362 DISP_3SLOTS_1C
  { 1,  0}, // #363 DISP_1C
  { 3,  0}, // #364 P9_ALU_3C
  { 3,  0}, // #365 P9_ALU_3C
  { 1,  0}, // #366 IP_EXEC_1C
  { 1,  0}, // #367 IP_EXEC_1C
  { 1,  0}, // #368 DISP_1C_DISP_3SLOTS_1C
  { 1,  0}, // #369 DISP_1C_DISP_3SLOTS_1C
  { 4,  0}, // #370 P9_ALU_2C
  { 1,  0}, // #371 IP_EXEC_1C
  { 1,  0}, // #372 IP_EXEC_1C
  { 1,  0}, // #373 DISP_3SLOTS_1C_DISP_1C
  { 1,  0}, // #374 DISP_1C
  { 6,  0}, // #375 P9_ALU_2C
  { 1,  0}, // #376 IP_EXEC_1C
  { 1,  0}, // #377 IP_EXEC_1C
  { 1,  0}, // #378 IP_EXEC_1C
  { 1,  0}, // #379 DISP_3SLOTS_1C
  { 1,  0}, // #380 DISP_3SLOTS_1C
  { 1,  0}, // #381 DISP_3SLOTS_1C
  {33,  0}, // #382 P9_DP_33C_8
  { 1,  0}, // #383 IP_EXEC_1C
  { 1,  0}, // #384 DISP_3SLOTS_1C_DISP_1C
  {36,  0}, // #385 P9_ALU_3C_P9_DP_36C_10
  { 1,  0}, // #386 IP_EXEC_1C
  { 1,  0}, // #387 IP_EXEC_1C_DISP_1C_DISP_3SLOTS_1C
  { 1,  0}, // #388 DISP_3SLOTS_1C
  { 1,  0}, // #389 DISP_1C
  {36,  0}, // #390 P9_DPE_36C_10
  {36,  0}, // #391 P9_DPO_36C_10
  { 1,  0}, // #392 IP_EXECE_1C
  { 1,  0}, // #393 IP_EXECO_1C
  { 1,  0}, // #394 DISP_1C
  {27,  0}, // #395 P9_DPE_27C_10
  {27,  0}, // #396 P9_DPO_27C_10
  { 1,  0}, // #397 IP_EXECE_1C
  { 1,  0}, // #398 IP_EXECO_1C
  { 1,  0}, // #399 DISP_1C
  {39,  0}, // #400 P9_ALU_3C
  { 1,  0}, // #401 IP_EXEC_1C
  { 1,  0}, // #402 IP_EXEC_1C
  { 1,  0}, // #403 DISP_3SLOTS_1C
  { 1,  0}, // #404 DISP_1C
  {22,  0}, // #405 P9_DP_26C_5_P9_DP_22C_5
  { 1,  0}, // #406 IP_EXEC_1C
  { 1,  0}, // #407 DISP_1C_DISP_3SLOTS_1C
  {25,  0}, // #408 P9_ALU_3C
  { 1,  0}, // #409 IP_EXEC_1C
  { 1,  0}, // #410 IP_EXEC_1C
  { 1,  0}, // #411 DISP_3SLOTS_1C
  { 1,  0}, // #412 DISP_1C
  {24,  0}, // #413 P9_DPE_24C_8
  {24,  0}, // #414 P9_DPO_24C_8
  { 1,  0}, // #415 IP_EXECE_1C
  { 1,  0}, // #416 IP_EXECO_1C
  { 1,  0}, // #417 DISP_1C
  {33,  0}, // #418 P9_DPE_33C_8
  {33,  0}, // #419 P9_DPO_33C_8
  { 1,  0}, // #420 IP_EXECE_1C
  { 1,  0}, // #421 IP_EXECO_1C
  { 1,  0}, // #422 DISP_1C
  { 7,  0}, // #423 P9_ALU_3C
  { 2,  0}, // #424 P9_ALU_2C
  { 1,  0}, // #425 IP_AGEN_1C
  { 1,  0}, // #426 IP_EXEC_1C
  { 1,  0}, // #427 IP_EXEC_1C
  { 1,  0}, // #428 DISP_3SLOTS_1C
  { 1,  0}, // #429 DISP_3SLOTS_1C
  { 1,  0}, // #430 DISP_1C
  { 1,  0}, // #431 P9_LS_1C
  { 2,  0}, // #432 P9_ALU_2C
  { 1,  0}, // #433 IP_AGEN_1C
  { 1,  0}, // #434 IP_EXEC_1C
  { 1,  0}, // #435 IP_EXEC_1C
  { 1,  0}, // #436 DISP_3SLOTS_1C
  { 1,  0}, // #437 DISP_1C
  { 1,  0}, // #438 P9_LS_1C
  { 1,  0}, // #439 P9_LS_1C
  { 4,  0}, // #440 P9_LS_4C
  { 4,  0}, // #441 P9_LS_4C
  { 4,  0}, // #442 P9_LS_4C
  { 1,  0}, // #443 IP_EXEC_1C
  { 1,  0}, // #444 IP_EXEC_1C
  { 1,  0}, // #445 IP_AGEN_1C
  { 1,  0}, // #446 IP_AGEN_1C
  { 1,  0}, // #447 IP_AGEN_1C
  { 1,  0}, // #448 IP_AGEN_1C
  { 1,  0}, // #449 IP_AGEN_1C
  { 1,  0}, // #450 DISP_1C
  { 1,  0}, // #451 DISP_3SLOTS_1C
  { 1,  0}, // #452 DISP_3SLOTS_1C
  { 1,  0}, // #453 DISP_1C
  { 1,  0}, // #454 DISP_1C
  { 1,  0}, // #455 DISP_1C
  { 1,  0}, // #456 P9_LS_1C
  { 4,  0}, // #457 P9_LS_4C
  { 4,  0}, // #458 P9_LS_4C
  { 1,  0}, // #459 IP_EXEC_1C
  { 1,  0}, // #460 IP_AGEN_1C
  { 1,  0}, // #461 IP_AGEN_1C
  { 1,  0}, // #462 IP_AGEN_1C
  { 1,  0}, // #463 DISP_1C
  { 1,  0}, // #464 DISP_3SLOTS_1C
  { 1,  0} // #465 DISP_1C
}; // PPCWriteLatencyTable

// {UseIdx, WriteResourceID, Cycles}
extern const llvm::MCReadAdvanceEntry PPCReadAdvanceTable[] = {
  {0,  0,  0}, // Invalid
  {0, 100,  1}, // #1
  {0, 102,  1}, // #2
  {0, 107,  1}, // #3
  {0, 108,  1}, // #4
  {0, 110,  1}, // #5
  {1, 100,  1}, // #6
  {1, 102,  1}, // #7
  {1, 107,  1}, // #8
  {1, 108,  1}, // #9
  {1, 110,  1}, // #10
  {0, 100,  1}, // #11
  {0, 102,  1}, // #12
  {0, 107,  1}, // #13
  {0, 108,  1}, // #14
  {0, 110,  1}, // #15
  {1, 100,  1}, // #16
  {1, 102,  1}, // #17
  {1, 107,  1}, // #18
  {1, 108,  1}, // #19
  {1, 110,  1}, // #20
  {2, 100,  1}, // #21
  {2, 102,  1}, // #22
  {2, 107,  1}, // #23
  {2, 108,  1}, // #24
  {2, 110,  1}, // #25
  {0, 100,  1}, // #26
  {0, 102,  1}, // #27
  {0, 107,  1}, // #28
  {0, 108,  1}, // #29
  {0, 110,  1}, // #30
  {1, 100,  1}, // #31
  {1, 102,  1}, // #32
  {1, 107,  1}, // #33
  {1, 108,  1}, // #34
  {1, 110,  1}, // #35
  {2, 100,  1}, // #36
  {2, 102,  1}, // #37
  {2, 107,  1}, // #38
  {2, 108,  1}, // #39
  {2, 110,  1}, // #40
  {3, 100,  1}, // #41
  {3, 102,  1}, // #42
  {3, 107,  1}, // #43
  {3, 108,  1}, // #44
  {3, 110,  1}, // #45
  {4, 100,  1}, // #46
  {4, 102,  1}, // #47
  {4, 107,  1}, // #48
  {4, 108,  1}, // #49
  {4, 110,  1}, // #50
  {0, 70,  1}, // #51
  {0, 77,  1}, // #52
  {0, 78,  1}, // #53
  {0, 99,  1}, // #54
  {0, 105,  1}, // #55
  {0, 106,  1}, // #56
  {0, 111,  1}, // #57
  {1, 70,  1}, // #58
  {1, 77,  1}, // #59
  {1, 78,  1}, // #60
  {1, 99,  1}, // #61
  {1, 105,  1}, // #62
  {1, 106,  1}, // #63
  {1, 111,  1}, // #64
  {2, 70,  1}, // #65
  {2, 77,  1}, // #66
  {2, 78,  1}, // #67
  {2, 99,  1}, // #68
  {2, 105,  1}, // #69
  {2, 106,  1}, // #70
  {2, 111,  1}, // #71
  {0, 78,  1}, // #72
  {0, 99,  1}, // #73
  {0, 106,  1}, // #74
  {1, 78,  1}, // #75
  {1, 99,  1}, // #76
  {1, 106,  1}, // #77
  {2, 78,  1}, // #78
  {2, 99,  1}, // #79
  {2, 106,  1}, // #80
  {0, 100,  1}, // #81
  {0, 102,  1}, // #82
  {0, 108,  1}, // #83
  {0, 110,  1}, // #84
  {1, 100,  1}, // #85
  {1, 102,  1}, // #86
  {1, 108,  1}, // #87
  {1, 110,  1}, // #88
  {0, 100,  1}, // #89
  {0, 102,  1}, // #90
  {0, 105,  1}, // #91
  {0, 107,  1}, // #92
  {0, 108,  1}, // #93
  {0, 110,  1}, // #94
  {0, 100,  1}, // #95
  {0, 102,  1}, // #96
  {0, 105,  1}, // #97
  {0, 107,  1}, // #98
  {0, 108,  1}, // #99
  {0, 110,  1}, // #100
  {1, 100,  1}, // #101
  {1, 102,  1}, // #102
  {1, 105,  1}, // #103
  {1, 107,  1}, // #104
  {1, 108,  1}, // #105
  {1, 110,  1}, // #106
  {0, 100,  1}, // #107
  {0, 102,  1}, // #108
  {1, 100,  1}, // #109
  {1, 102,  1}, // #110
  {2, 100,  1}, // #111
  {2, 102,  1}, // #112
  {3, 100,  1}, // #113
  {3, 102,  1}, // #114
  {0, 70,  2}, // #115
  {1, 70,  2}, // #116
  {2, 70,  2}, // #117
  {0, 77,  1}, // #118
  {0, 78,  1}, // #119
  {0, 99,  1}, // #120
  {0, 105,  1}, // #121
  {0, 106,  1}, // #122
  {0, 111,  1}, // #123
  {1, 77,  1}, // #124
  {1, 78,  1}, // #125
  {1, 99,  1}, // #126
  {1, 105,  1}, // #127
  {1, 106,  1}, // #128
  {1, 111,  1}, // #129
  {2, 77,  1}, // #130
  {2, 78,  1}, // #131
  {2, 99,  1}, // #132
  {2, 105,  1}, // #133
  {2, 106,  1}, // #134
  {2, 111,  1}, // #135
  {0, 77,  3}, // #136
  {1, 77,  3}, // #137
  {0, 70,  1}, // #138
  {0, 78,  1}, // #139
  {0, 99,  1}, // #140
  {0, 105,  1}, // #141
  {0, 106,  1}, // #142
  {0, 111,  1}, // #143
  {1, 70,  1}, // #144
  {1, 78,  1}, // #145
  {1, 99,  1}, // #146
  {1, 105,  1}, // #147
  {1, 106,  1}, // #148
  {1, 111,  1}, // #149
  {0, 105,  6}, // #150
  {1, 105,  6}, // #151
  {0, 70,  1}, // #152
  {0, 77,  1}, // #153
  {0, 78,  1}, // #154
  {0, 99,  1}, // #155
  {0, 106,  1}, // #156
  {0, 111,  1}, // #157
  {1, 70,  1}, // #158
  {1, 77,  1}, // #159
  {1, 78,  1}, // #160
  {1, 99,  1}, // #161
  {1, 106,  1}, // #162
  {1, 111,  1}, // #163
  {0, 105,  6}, // #164
  {1, 105,  6}, // #165
  {2, 105,  6}, // #166
  {0, 70,  1}, // #167
  {0, 77,  1}, // #168
  {0, 78,  1}, // #169
  {0, 99,  1}, // #170
  {0, 106,  1}, // #171
  {0, 111,  1}, // #172
  {1, 70,  1}, // #173
  {1, 77,  1}, // #174
  {1, 78,  1}, // #175
  {1, 99,  1}, // #176
  {1, 106,  1}, // #177
  {1, 111,  1}, // #178
  {2, 70,  1}, // #179
  {2, 77,  1}, // #180
  {2, 78,  1}, // #181
  {2, 99,  1}, // #182
  {2, 106,  1}, // #183
  {2, 111,  1}, // #184
  {0, 105,  6}, // #185
  {1, 105,  6}, // #186
  {2, 105,  6}, // #187
  {3, 105,  6}, // #188
  {0, 70,  1}, // #189
  {0, 77,  1}, // #190
  {0, 78,  1}, // #191
  {0, 99,  1}, // #192
  {0, 106,  1}, // #193
  {0, 111,  1}, // #194
  {1, 70,  1}, // #195
  {1, 77,  1}, // #196
  {1, 78,  1}, // #197
  {1, 99,  1}, // #198
  {1, 106,  1}, // #199
  {1, 111,  1}, // #200
  {2, 70,  1}, // #201
  {2, 77,  1}, // #202
  {2, 78,  1}, // #203
  {2, 99,  1}, // #204
  {2, 106,  1}, // #205
  {2, 111,  1}, // #206
  {3, 70,  1}, // #207
  {3, 77,  1}, // #208
  {3, 78,  1}, // #209
  {3, 99,  1}, // #210
  {3, 106,  1}, // #211
  {3, 111,  1}, // #212
  {0, 105,  6}, // #213
  {1, 105,  6}, // #214
  {2, 105,  6}, // #215
  {3, 105,  6}, // #216
  {4, 105,  6}, // #217
  {0, 70,  1}, // #218
  {0, 77,  1}, // #219
  {0, 78,  1}, // #220
  {0, 99,  1}, // #221
  {0, 106,  1}, // #222
  {0, 111,  1}, // #223
  {1, 70,  1}, // #224
  {1, 77,  1}, // #225
  {1, 78,  1}, // #226
  {1, 99,  1}, // #227
  {1, 106,  1}, // #228
  {1, 111,  1}, // #229
  {2, 70,  1}, // #230
  {2, 77,  1}, // #231
  {2, 78,  1}, // #232
  {2, 99,  1}, // #233
  {2, 106,  1}, // #234
  {2, 111,  1}, // #235
  {3, 70,  1}, // #236
  {3, 77,  1}, // #237
  {3, 78,  1}, // #238
  {3, 99,  1}, // #239
  {3, 106,  1}, // #240
  {3, 111,  1}, // #241
  {4, 70,  1}, // #242
  {4, 77,  1}, // #243
  {4, 78,  1}, // #244
  {4, 99,  1}, // #245
  {4, 106,  1}, // #246
  {4, 111,  1}, // #247
  {0, 105,  6}, // #248
  {1, 105,  6}, // #249
  {2, 105,  6}, // #250
  {3, 105,  6}, // #251
  {4, 105,  6}, // #252
  {5, 105,  6}, // #253
  {0, 70,  1}, // #254
  {0, 77,  1}, // #255
  {0, 78,  1}, // #256
  {0, 99,  1}, // #257
  {0, 106,  1}, // #258
  {0, 111,  1}, // #259
  {1, 70,  1}, // #260
  {1, 77,  1}, // #261
  {1, 78,  1}, // #262
  {1, 99,  1}, // #263
  {1, 106,  1}, // #264
  {1, 111,  1}, // #265
  {2, 70,  1}, // #266
  {2, 77,  1}, // #267
  {2, 78,  1}, // #268
  {2, 99,  1}, // #269
  {2, 106,  1}, // #270
  {2, 111,  1}, // #271
  {3, 70,  1}, // #272
  {3, 77,  1}, // #273
  {3, 78,  1}, // #274
  {3, 99,  1}, // #275
  {3, 106,  1}, // #276
  {3, 111,  1}, // #277
  {4, 70,  1}, // #278
  {4, 77,  1}, // #279
  {4, 78,  1}, // #280
  {4, 99,  1}, // #281
  {4, 106,  1}, // #282
  {4, 111,  1}, // #283
  {5, 70,  1}, // #284
  {5, 77,  1}, // #285
  {5, 78,  1}, // #286
  {5, 99,  1}, // #287
  {5, 106,  1}, // #288
  {5, 111,  1} // #289
}; // PPCReadAdvanceTable

// {Name, NumMicroOps, BeginGroup, EndGroup, RetireOOO, WriteProcResIdx,#, WriteLatencyIdx,#, ReadAdvanceIdx,#}
static const llvm::MCSchedClassDesc P10ModelSchedClasses[] = {
  {DBGFIELD("InvalidSchedClass")  8191, false, false, false, 0, 0,  0, 0,  0, 0},
  {DBGFIELD("IIC_LdStSync")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #1
  {DBGFIELD("IIC_IntSimple")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #2
  {DBGFIELD("IIC_IntGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #3
  {DBGFIELD("IIC_BrB")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #4
  {DBGFIELD("IIC_VecFP")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #5
  {DBGFIELD("IIC_IntRotate")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #6
  {DBGFIELD("IIC_IntCompare")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #7
  {DBGFIELD("IIC_SprABORT")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #8
  {DBGFIELD("IIC_LdStCOPY")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #9
  {DBGFIELD("IIC_LdStPASTE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #10
  {DBGFIELD("IIC_BrCR")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #11
  {DBGFIELD("IIC_LdStLD")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #12
  {DBGFIELD("IIC_LdStDCBF")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #13
  {DBGFIELD("IIC_LdStLoad")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #14
  {DBGFIELD("IIC_IntDivD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #15
  {DBGFIELD("IIC_IntDivW")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #16
  {DBGFIELD("IIC_FPDGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #17
  {DBGFIELD("IIC_FPAddSub")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #18
  {DBGFIELD("IIC_FPDivD")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #19
  {DBGFIELD("IIC_FPSGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #20
  {DBGFIELD("IIC_FPCompare")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #21
  {DBGFIELD("IIC_FPGeneral")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #22
  {DBGFIELD("IIC_VecGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #23
  {DBGFIELD("IIC_VecComplex")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #24
  {DBGFIELD("IIC_LdStStore")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #25
  {DBGFIELD("IIC_IntRotateDI")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #26
  {DBGFIELD("IIC_FPDivS")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #27
  {DBGFIELD("IIC_FPFused")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #28
  {DBGFIELD("IIC_FPSqrtD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #29
  {DBGFIELD("IIC_FPSqrtS")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #30
  {DBGFIELD("IIC_LdStICBI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #31
  {DBGFIELD("IIC_IntISEL")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #32
  {DBGFIELD("IIC_SprISYNC")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #33
  {DBGFIELD("IIC_LdStLWARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #34
  {DBGFIELD("IIC_LdStLoadUpd")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #35
  {DBGFIELD("IIC_LdStLoadUpdX")   8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #36
  {DBGFIELD("IIC_LdStLDARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #37
  {DBGFIELD("IIC_LdStLDU")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #38
  {DBGFIELD("IIC_LdStLDUX")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #39
  {DBGFIELD("IIC_LdStLFD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #40
  {DBGFIELD("IIC_LdStLFDU")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #41
  {DBGFIELD("IIC_LdStLFDUX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #42
  {DBGFIELD("IIC_LdStLHA")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #43
  {DBGFIELD("IIC_LdStLHAU")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #44
  {DBGFIELD("IIC_LdStLHAUX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #45
  {DBGFIELD("IIC_LdStLMW")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #46
  {DBGFIELD("IIC_LdStLQ")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #47
  {DBGFIELD("IIC_LdStLQARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #48
  {DBGFIELD("IIC_LdStLWA")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #49
  {DBGFIELD("IIC_IntMulHD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #50
  {DBGFIELD("IIC_BrMCR")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #51
  {DBGFIELD("IIC_BrMCRX")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #52
  {DBGFIELD("IIC_SprMFCR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #53
  {DBGFIELD("IIC_SprMFSPR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #54
  {DBGFIELD("IIC_IntMFFS")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #55
  {DBGFIELD("IIC_SprMFMSR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #56
  {DBGFIELD("IIC_SprMFCRF")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #57
  {DBGFIELD("IIC_SprMFPMR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #58
  {DBGFIELD("IIC_SprMFSR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #59
  {DBGFIELD("IIC_SprMFTB")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #60
  {DBGFIELD("IIC_SprMSGSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #61
  {DBGFIELD("IIC_SprMTSPR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #62
  {DBGFIELD("IIC_IntMTFSB0")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #63
  {DBGFIELD("IIC_SprMTMSR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #64
  {DBGFIELD("IIC_SprMTMSRD")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #65
  {DBGFIELD("IIC_SprMTPMR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #66
  {DBGFIELD("IIC_SprMTSR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #67
  {DBGFIELD("IIC_IntMulHW")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #68
  {DBGFIELD("IIC_IntMulHWU")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #69
  {DBGFIELD("IIC_IntMulLI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #70
  {DBGFIELD("IIC_SprRFI")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #71
  {DBGFIELD("IIC_IntRFID")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #72
  {DBGFIELD("IIC_IntRotateD")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #73
  {DBGFIELD("IIC_SprSLBFEE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #74
  {DBGFIELD("IIC_SprSLBIA")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #75
  {DBGFIELD("IIC_SprSLBIE")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #76
  {DBGFIELD("IIC_SprSLBIEG")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #77
  {DBGFIELD("IIC_SprSLBMFEE")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #78
  {DBGFIELD("IIC_SprSLBMFEV")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #79
  {DBGFIELD("IIC_SprSLBMTE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #80
  {DBGFIELD("IIC_SprSLBSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #81
  {DBGFIELD("IIC_IntShift")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #82
  {DBGFIELD("IIC_LdStSTWCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #83
  {DBGFIELD("IIC_LdStSTU")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #84
  {DBGFIELD("IIC_LdStSTUX")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #85
  {DBGFIELD("IIC_LdStSTD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #86
  {DBGFIELD("IIC_LdStSTDCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #87
  {DBGFIELD("IIC_LdStSTFD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #88
  {DBGFIELD("IIC_LdStSTFDU")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #89
  {DBGFIELD("IIC_SprSTOP")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #90
  {DBGFIELD("IIC_LdStSTQ")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #91
  {DBGFIELD("IIC_LdStSTQCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #92
  {DBGFIELD("IIC_IntTrapD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #93
  {DBGFIELD("IIC_SprTLBIA")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #94
  {DBGFIELD("IIC_SprTLBIE")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #95
  {DBGFIELD("IIC_SprTLBIEL")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #96
  {DBGFIELD("IIC_SprTLBSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #97
  {DBGFIELD("IIC_IntTrapW")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #98
  {DBGFIELD("IIC_VecFPCompare")   8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #99
  {DBGFIELD("IIC_VecPerm")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #100
  {DBGFIELD("VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #101
  {DBGFIELD("VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP") 1, false, false, false,  3, 2,  3, 2, 11, 15}, // #102
  {DBGFIELD("XXSEL")              1, false, false, false,  3, 2,  3, 2, 11, 15}, // #103
  {DBGFIELD("TABORTDC_TABORTDCI_TABORTWC_TABORTWCI") 1, false, false, false,  5, 3,  5, 3, 11, 15}, // #104
  {DBGFIELD("MTFSB0_MTFSB1")      2, false, false, false,  8, 3,  8, 4,  1, 5}, // #105
  {DBGFIELD("MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI") 1, false, false, false,  5, 3, 12, 3,  1, 5}, // #106
  {DBGFIELD("CMPRB_CMPRB8_CMPEQB") 1, false, false, false,  3, 2,  5, 2, 11, 15}, // #107
  {DBGFIELD("TD_TDI")             1, false, false, false,  3, 2,  5, 2, 11, 15}, // #108
  {DBGFIELD("TW_TWI")             1, false, false, false,  3, 2,  5, 2, 11, 15}, // #109
  {DBGFIELD("FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #110
  {DBGFIELD("XSTSTDCDP_XSTSTDCSP") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #111
  {DBGFIELD("XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #112
  {DBGFIELD("XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #113
  {DBGFIELD("CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #114
  {DBGFIELD("SLD_SRD_SRAD")       1, false, false, false,  3, 2,  3, 2,  1, 10}, // #115
  {DBGFIELD("SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC") 1, false, false, false,  3, 2,  3, 2, 11, 15}, // #116
  {DBGFIELD("MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #117
  {DBGFIELD("CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #118
  {DBGFIELD("SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8") 1, false, false, false, 11, 2, 15, 2,  0, 0}, // #119
  {DBGFIELD("ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP") 1, false, false, false,  5, 3, 12, 3,  1, 10}, // #120
  {DBGFIELD("ADDIStocHA_ADDIStocHA8_ADDItocL_COPY") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #121
  {DBGFIELD("MCRF")               1, false, false, false,  3, 2,  3, 2,  1, 5}, // #122
  {DBGFIELD("MCRXRX")             1, false, false, false,  3, 2,  3, 2,  0, 0}, // #123
  {DBGFIELD("XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #124
  {DBGFIELD("RFEBB")              2, false, false, false,  8, 3,  8, 4,  1, 5}, // #125
  {DBGFIELD("TBEGIN_TRECHKPT")    1, false, false, false,  5, 3, 12, 3,  1, 5}, // #126
  {DBGFIELD("WAIT")               1, false, false, false,  3, 2,  3, 2,  1, 5}, // #127
  {DBGFIELD("RLDCL_RLDCR")        1, false, false, false,  3, 2,  3, 2, 11, 15}, // #128
  {DBGFIELD("RLWIMI_RLWIMI8")     1, false, false, false,  3, 2,  3, 2, 26, 25}, // #129
  {DBGFIELD("RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI") 1, false, false, false,  3, 2,  3, 2, 26, 20}, // #130
  {DBGFIELD("MFOCRF_MFOCRF8")     1, false, false, false,  3, 2,  3, 2,  1, 5}, // #131
  {DBGFIELD("MTOCRF_MTOCRF8")     1, false, false, false,  3, 2,  3, 2,  1, 5}, // #132
  {DBGFIELD("CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR") 1, false, false, false, 11, 2, 15, 2,  0, 0}, // #133
  {DBGFIELD("SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8") 1, false, false, false,  3, 2,  3, 2, 26, 20}, // #134
  {DBGFIELD("FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #135
  {DBGFIELD("SRAW_SRAWI")         1, false, false, false,  3, 2,  3, 2,  1, 10}, // #136
  {DBGFIELD("ISEL_ISEL8")         1, false, false, false,  3, 2,  3, 2, 11, 15}, // #137
  {DBGFIELD("XSIEXPDP")           1, false, false, false,  3, 2,  3, 2,  1, 10}, // #138
  {DBGFIELD("TRECLAIM_TSR_TABORT") 1, false, false, false,  5, 3, 12, 3,  1, 5}, // #139
  {DBGFIELD("MFVSCR")             1, false, false, false,  5, 3, 12, 3,  0, 0}, // #140
  {DBGFIELD("MTVSCR")             1, false, false, false,  5, 3, 12, 3,  1, 5}, // #141
  {DBGFIELD("VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #142
  {DBGFIELD("VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #143
  {DBGFIELD("VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #144
  {DBGFIELD("XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #145
  {DBGFIELD("VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS") 1, false, false, false, 13, 2, 17, 2, 51, 21}, // #146
  {DBGFIELD("VSUBFP_VMULUWM")     1, false, false, false, 13, 2, 17, 2, 51, 14}, // #147
  {DBGFIELD("MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO") 1, false, false, false, 13, 2, 19, 2, 72, 9}, // #148
  {DBGFIELD("MULHD_MULHW_MULLW_MULLWO") 1, false, false, false, 13, 2, 19, 2, 72, 6}, // #149
  {DBGFIELD("MULHDU_MULHWU")      1, false, false, false, 13, 2, 19, 2, 72, 6}, // #150
  {DBGFIELD("MULLI_MULLI8")       1, false, false, false, 13, 2, 19, 2, 72, 6}, // #151
  {DBGFIELD("FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #152
  {DBGFIELD("FADD_FSUB")          8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #153
  {DBGFIELD("FMSUB_FMADD_FNMADD_FNMSUB_FMUL") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #154
  {DBGFIELD("XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #155
  {DBGFIELD("FSELD_rec_FSELS_rec") 2, false, false, false, 15, 4, 21, 4,  0, 0}, // #156
  {DBGFIELD("MULHDU_rec_MULHWU_rec") 2, false, false, false, 15, 4, 25, 4,  0, 0}, // #157
  {DBGFIELD("MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec") 2, false, false, false, 15, 4, 25, 4,  0, 0}, // #158
  {DBGFIELD("MULLDO_rec_MULLD_rec") 2, false, false, false, 15, 4, 25, 4,  0, 0}, // #159
  {DBGFIELD("FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec") 2, false, false, false, 15, 4, 21, 4,  0, 0}, // #160
  {DBGFIELD("FADD_rec_FSUB_rec")  2, false, false, false, 15, 4, 21, 4,  0, 0}, // #161
  {DBGFIELD("FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec") 2, false, false, false, 15, 4, 21, 4,  0, 0}, // #162
  {DBGFIELD("XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #163
  {DBGFIELD("LVSL_LVSR")          1, false, false, false,  1, 2,  1, 2,  1, 5}, // #164
  {DBGFIELD("VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs") 1, false, false, false,  1, 2,  1, 2, 11, 15}, // #165
  {DBGFIELD("V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec") 1, false, false, false,  1, 2,  1, 2, 11, 15}, // #166
  {DBGFIELD("VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM") 1, false, false, false,  1, 2,  1, 2, 11, 15}, // #167
  {DBGFIELD("XSCMPEXPQP_XSCMPOQP_XSCMPUQP") 1, false, false, false, 19, 2, 29, 2, 51, 14}, // #168
  {DBGFIELD("BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO") 1, false, false, false, 21, 2, 31, 2, 51, 21}, // #169
  {DBGFIELD("BCDCTSQ_rec")        1, false, false, false, 23, 2, 33, 2, 51, 7}, // #170
  {DBGFIELD("XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO") 1, false, false, false, 25, 2, 35, 2, 51, 21}, // #171
  {DBGFIELD("BCDCFSQ_rec")        1, false, false, false, 27, 2, 37, 2, 51, 14}, // #172
  {DBGFIELD("XSDIVQP_XSDIVQPO")   1, false, false, false, 29, 2, 39, 2, 51, 14}, // #173
  {DBGFIELD("XSSQRTQP_XSSQRTQPO") 1, false, false, false, 31, 2, 41, 2, 51, 7}, // #174
  {DBGFIELD("LXVL_LXVLL")         1, false, false, false, 33, 2, 43, 2, 81, 8}, // #175
  {DBGFIELD("LVEBX_LVEHX_LVEWX_LVX_LVXL") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #176
  {DBGFIELD("LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #177
  {DBGFIELD("DFLOADf64_XFLOADf64_LIWZX") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #178
  {DBGFIELD("DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #179
  {DBGFIELD("CP_COPY_CP_COPY8")   1, false, false, false, 35, 2, 45, 2, 11, 15}, // #180
  {DBGFIELD("ICBI_ICBIEP")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #181
  {DBGFIELD("ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI") 1, false, false, false, 11, 2, 15, 2,  0, 0}, // #182
  {DBGFIELD("LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL") 1, false, false, false, 37, 3, 47, 3, 81, 4}, // #183
  {DBGFIELD("LD_LDX_LDXTLS_LDXTLS__DARN") 1, false, false, false, 37, 3, 47, 3, 81, 4}, // #184
  {DBGFIELD("LDARX_LDARXL")       1, false, false, false, 37, 3, 47, 3, 81, 4}, // #185
  {DBGFIELD("CP_ABORT")           1, false, false, false, 11, 2, 15, 2,  0, 0}, // #186
  {DBGFIELD("ISYNC")              2, false, false, false, 40, 4, 50, 4,  0, 0}, // #187
  {DBGFIELD("MSGSYNC")            1, false, false, false, 44, 3, 54, 3,  0, 0}, // #188
  {DBGFIELD("TLBSYNC")            1, false, false, false, 44, 3, 54, 3,  0, 0}, // #189
  {DBGFIELD("SYNC")               2, false, false, false, 40, 4, 50, 4,  0, 0}, // #190
  {DBGFIELD("LMW")                4, false, false, false, 47, 3, 57, 8, 81, 4}, // #191
  {DBGFIELD("LFIWZX_LFDX_LFD")    1, false, false, false, 33, 2, 43, 2, 81, 4}, // #192
  {DBGFIELD("SLBIA")              1, false, false, false, 37, 3, 47, 3,  0, 0}, // #193
  {DBGFIELD("SLBIE")              1, false, false, false, 37, 3, 47, 3, 81, 4}, // #194
  {DBGFIELD("SLBMFEE")            1, false, false, false, 37, 3, 47, 3, 81, 4}, // #195
  {DBGFIELD("SLBMFEV")            1, false, false, false, 37, 3, 47, 3, 81, 4}, // #196
  {DBGFIELD("SLBMTE")             2, false, false, false, 50, 4, 57, 4, 81, 8}, // #197
  {DBGFIELD("TLBIEL")             2, false, false, false, 50, 4, 57, 4, 81, 4}, // #198
  {DBGFIELD("LHZU_LHZU8_LWZU_LWZU8") 2, false, false, false, 54, 4, 65, 4,  0, 0}, // #199
  {DBGFIELD("LHZUX_LHZUX8_LWZUX_LWZUX8") 2, false, false, false, 54, 4, 65, 4,  0, 0}, // #200
  {DBGFIELD("TEND")               1, false, false, false, 44, 3, 54, 3,  1, 5}, // #201
  {DBGFIELD("STBCX_STHCX_STWCX")  1, false, false, false, 44, 3, 54, 3,  1, 10}, // #202
  {DBGFIELD("STDCX")              1, false, false, false, 44, 3, 54, 3,  1, 10}, // #203
  {DBGFIELD("LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #204
  {DBGFIELD("CP_PASTE8_rec_CP_PASTE_rec") 1, false, false, false, 44, 3, 54, 3, 11, 15}, // #205
  {DBGFIELD("LWA_LWA_32")         1, false, false, false, 33, 2, 43, 2, 81, 4}, // #206
  {DBGFIELD("TCHECK")             1, false, false, false, 44, 3, 54, 3,  0, 0}, // #207
  {DBGFIELD("LFIWAX")             1, false, false, false, 33, 2, 43, 2, 81, 4}, // #208
  {DBGFIELD("LXSIWAX")            1, false, false, false, 33, 2, 43, 2, 81, 4}, // #209
  {DBGFIELD("LIWAX")              1, false, false, false, 33, 2, 43, 2, 81, 4}, // #210
  {DBGFIELD("LFSX_LFS")           2, false, false, false, 58, 5, 69, 3,  0, 0}, // #211
  {DBGFIELD("LXSSP_LXSSPX")       2, false, false, false, 58, 5, 69, 3,  0, 0}, // #212
  {DBGFIELD("XFLOADf32_DFLOADf32") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #213
  {DBGFIELD("LHAU_LHAU8")         2, false, false, false, 54, 4, 65, 4,  0, 0}, // #214
  {DBGFIELD("LHAUX_LHAUX8_LWAUX") 2, false, false, false, 54, 4, 65, 4,  0, 0}, // #215
  {DBGFIELD("LXVH8X_LXVDSX_LXVW4X") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #216
  {DBGFIELD("STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #217
  {DBGFIELD("STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32") 1, false, false, false, 35, 2, 45, 2, 11, 15}, // #218
  {DBGFIELD("DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #219
  {DBGFIELD("STD_STDX_STDXTLS_STDXTLS_") 1, false, false, false, 35, 2, 45, 2, 11, 15}, // #220
  {DBGFIELD("STBCIX_STDCIX_STHCIX_STWCIX_STSWI") 4, false, false, false, 63, 3, 72, 8, 11, 15}, // #221
  {DBGFIELD("SLBIEG")             1, false, false, false, 44, 3, 54, 3,  1, 10}, // #222
  {DBGFIELD("STMW")               4, false, false, false, 63, 3, 72, 8,  1, 10}, // #223
  {DBGFIELD("TLBIE")              1, false, false, false, 44, 3, 54, 3,  1, 10}, // #224
  {DBGFIELD("STVEBX_STVEHX_STVEWX_STVX_STVXL") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #225
  {DBGFIELD("STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #226
  {DBGFIELD("STXVL_STXVLL")       1, false, false, false, 35, 2, 45, 2, 11, 15}, // #227
  {DBGFIELD("MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8") 1, false, false, false,  3, 2, 80, 2,  1, 5}, // #228
  {DBGFIELD("MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv") 1, false, false, false, 66, 3, 82, 3,  0, 0}, // #229
  {DBGFIELD("MFPMR")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #230
  {DBGFIELD("MTPMR")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #231
  {DBGFIELD("MFTB_MFTB8")         1, false, false, false, 66, 3, 85, 3, 89, 6}, // #232
  {DBGFIELD("MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR") 1, false, false, false, 66, 3, 82, 3,  0, 0}, // #233
  {DBGFIELD("MFMSR")              1, false, false, false, 66, 3, 85, 3,  0, 0}, // #234
  {DBGFIELD("MTMSR")              1, false, false, false, 66, 3, 85, 3, 95, 12}, // #235
  {DBGFIELD("MTMSRD")             1, false, false, false, 66, 3, 85, 3, 95, 12}, // #236
  {DBGFIELD("MTUDSCR_MTSPR_MTSPR8") 1, false, false, false, 37, 3, 47, 3, 81, 8}, // #237
  {DBGFIELD("DIVW_DIVWO_DIVWU_DIVWUO_MODSW") 1, false, false, false, 69, 2, 88, 2, 51, 14}, // #238
  {DBGFIELD("DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW") 1, false, false, false, 69, 2, 90, 2, 51, 14}, // #239
  {DBGFIELD("DIVD_DIVDO_DIVDU_DIVDUO") 1, false, false, false, 69, 2, 35, 2, 51, 14}, // #240
  {DBGFIELD("DIVDE_DIVDEO_DIVDEU_DIVDEUO") 1, false, false, false, 69, 2, 92, 2, 51, 14}, // #241
  {DBGFIELD("DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec") 2, false, false, false, 71, 4, 94, 4,  0, 0}, // #242
  {DBGFIELD("DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec") 2, false, false, false, 71, 4, 98, 4,  0, 0}, // #243
  {DBGFIELD("DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec") 2, false, false, false, 71, 4, 98, 4,  0, 0}, // #244
  {DBGFIELD("DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec") 2, false, false, false, 71, 4, 102, 4,  0, 0}, // #245
  {DBGFIELD("MTCRF_MTCRF8")       2, false, false, false, 75, 4,  8, 3,  1, 10}, // #246
  {DBGFIELD("ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec") 4, false, false, false, 79, 3, 106, 8,  1, 10}, // #247
  {DBGFIELD("FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec") 2, false, false, false,  8, 3,  8, 4,  1, 10}, // #248
  {DBGFIELD("MCRFS")              1, false, false, false,  5, 3, 12, 3,  1, 5}, // #249
  {DBGFIELD("MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb") 2, false, false, false,  8, 3,  8, 4, 26, 20}, // #250
  {DBGFIELD("MTFSFb")             2, false, false, false,  8, 3,  8, 4,  1, 10}, // #251
  {DBGFIELD("RLDCL_rec_RLDCR_rec") 1, false, false, false,  3, 2,  5, 2, 11, 15}, // #252
  {DBGFIELD("RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec") 1, false, false, false,  3, 2,  5, 2, 26, 20}, // #253
  {DBGFIELD("RLWIMI8_rec_RLWIMI_rec") 1, false, false, false,  3, 2,  5, 2, 26, 25}, // #254
  {DBGFIELD("RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec") 1, false, false, false,  3, 2,  5, 2, 26, 20}, // #255
  {DBGFIELD("SRAWI_rec_SRAW_rec") 1, false, false, false,  5, 3,  5, 3,  1, 10}, // #256
  {DBGFIELD("MFFS_MFFSCE_MFFSL_MFFS_rec") 2, false, false, false,  8, 3,  8, 4,  0, 0}, // #257
  {DBGFIELD("MFCR_MFCR8")         2, false, false, false, 75, 4, 114, 3,  0, 0}, // #258
  {DBGFIELD("EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec") 1, false, false, false,  5, 3,  5, 3,  1, 10}, // #259
  {DBGFIELD("SRAD_rec_SLD_rec_SRD_rec") 1, false, false, false,  5, 3,  5, 3,  1, 10}, // #260
  {DBGFIELD("FDIV")               8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #261
  {DBGFIELD("FDIV_rec")           2, false, false, false, 82, 4, 117, 4,  0, 0}, // #262
  {DBGFIELD("XSSQRTDP")           8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #263
  {DBGFIELD("FSQRT")              8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #264
  {DBGFIELD("XVSQRTDP")           8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #265
  {DBGFIELD("XVSQRTSP")           8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #266
  {DBGFIELD("FSQRT_rec")          2, false, false, false, 86, 4, 121, 4,  0, 0}, // #267
  {DBGFIELD("XSSQRTSP")           8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #268
  {DBGFIELD("FSQRTS")             8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #269
  {DBGFIELD("FSQRTS_rec")         2, false, false, false, 90, 4, 125, 4,  0, 0}, // #270
  {DBGFIELD("XSDIVDP")            8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #271
  {DBGFIELD("FDIVS")              8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #272
  {DBGFIELD("FDIVS_rec")          2, false, false, false, 90, 4, 129, 4,  0, 0}, // #273
  {DBGFIELD("XSDIVSP")            8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #274
  {DBGFIELD("XVDIVSP")            8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #275
  {DBGFIELD("XVDIVDP")            8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #276
  {DBGFIELD("LFSU")               4, false, false, false, 94, 6, 133, 7,  0, 0}, // #277
  {DBGFIELD("LFSUX")              4, false, false, false, 94, 6, 133, 7,  0, 0}, // #278
  {DBGFIELD("STFDU_STFDUX_STFSU_STFSUX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #279
  {DBGFIELD("STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #280
  {DBGFIELD("STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #281
  {DBGFIELD("LBZU_LBZU8")         2, false, false, false, 54, 4, 65, 4,  0, 0}, // #282
  {DBGFIELD("LBZUX_LBZUX8")       2, false, false, false, 54, 4, 65, 4,  0, 0}, // #283
  {DBGFIELD("LDU")                2, false, false, false, 54, 4, 65, 4,  0, 0}, // #284
  {DBGFIELD("LDUX")               2, false, false, false, 54, 4, 65, 4,  0, 0}, // #285
  {DBGFIELD("LFDU")               2, false, false, false, 54, 4, 65, 4,  0, 0}, // #286
  {DBGFIELD("LFDUX")              2, false, false, false, 54, 4, 65, 4,  0, 0}, // #287
  {DBGFIELD("VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #288
  {DBGFIELD("BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP") 1, false, false, false, 100, 2, 80, 2, 107, 8}, // #289
  {DBGFIELD("ADDPCIS")            2, false, false, false, 102, 4, 136, 4,  0, 0}, // #290
  {DBGFIELD("LDAT_LWAT")          8, false, false, false, 106, 5, 140, 16,  0, 0}, // #291
  {DBGFIELD("STDAT_STWAT")        4, false, false, false, 111, 4, 156, 8,  0, 0}, // #292
  {DBGFIELD("BRINC")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #293
  {DBGFIELD("EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #294
  {DBGFIELD("EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #295
  {DBGFIELD("EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #296
  {DBGFIELD("EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #297
  {DBGFIELD("HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #298
  {DBGFIELD("RFI")                8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #299
  {DBGFIELD("RFID")               2, false, false, false,  8, 3,  8, 4,  0, 0}, // #300
  {DBGFIELD("DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #301
  {DBGFIELD("ICBLC_STBEPX_STHEPX_STWEPX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #302
  {DBGFIELD("LFDEPX")             8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #303
  {DBGFIELD("STFDEPX")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #304
  {DBGFIELD("MFSR_MFSRIN")        1, false, false, false, 11, 2, 15, 2,  0, 0}, // #305
  {DBGFIELD("MTSR_MTSRIN")        1, false, false, false, 11, 2, 15, 2,  0, 0}, // #306
  {DBGFIELD("MFDCR")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #307
  {DBGFIELD("MTDCR")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #308
  {DBGFIELD("NOP_GT_PWR6_NOP_GT_PWR7") 1, false, false, false,  3, 2,  3, 2,  0, 0}, // #309
  {DBGFIELD("TLBIA")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #310
  {DBGFIELD("WRTEE_WRTEEI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #311
  {DBGFIELD("HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8") 2, false, false, false, 115, 4, 164, 4,  0, 0}, // #312
  {DBGFIELD("MSYNC")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #313
  {DBGFIELD("SLBSYNC")            1, false, false, false, 44, 3, 54, 3,  0, 0}, // #314
  {DBGFIELD("SLBFEE_rec")         1, false, false, false, 37, 3, 47, 3, 81, 4}, // #315
  {DBGFIELD("STOP")               2, false, false, false,  8, 3,  8, 4,  0, 0}, // #316
  {DBGFIELD("DCBA_DCBI")          1, false, false, false, 11, 2, 15, 2,  0, 0}, // #317
  {DBGFIELD("FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #318
  {DBGFIELD("VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #319
  {DBGFIELD("XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #320
  {DBGFIELD("XVCVSPBF16")         8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #321
  {DBGFIELD("FADDS_FMULS_FSUBS")  8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #322
  {DBGFIELD("FMUL")               8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #323
  {DBGFIELD("VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #324
  {DBGFIELD("VSUBFP")             8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #325
  {DBGFIELD("XSADDDP_XSADDSP_XSSUBDP_XSSUBSP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #326
  {DBGFIELD("XSMULDP_XSMULSP")    8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #327
  {DBGFIELD("VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #328
  {DBGFIELD("VEXPTEFP")           8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #329
  {DBGFIELD("FADDS_rec_FMULS_rec_FSUBS_rec") 2, false, false, false, 15, 4, 21, 4,  0, 0}, // #330
  {DBGFIELD("FMUL_rec")           2, false, false, false, 15, 4, 21, 4,  0, 0}, // #331
  {DBGFIELD("FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec") 2, false, false, false, 15, 4, 21, 4,  0, 0}, // #332
  {DBGFIELD("BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS") 1, false, false, false, 100, 2, 80, 2,  0, 0}, // #333
  {DBGFIELD("BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS") 1, false, false, false, 100, 2, 80, 2,  0, 0}, // #334
  {DBGFIELD("B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM") 1, false, false, false, 100, 2, 80, 2,  1, 2}, // #335
  {DBGFIELD("BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL") 1, false, false, false, 100, 2, 80, 2, 107, 6}, // #336
  {DBGFIELD("VSBOX")              8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #337
  {DBGFIELD("CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #338
  {DBGFIELD("VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #339
  {DBGFIELD("XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP") 1, false, false, false, 21, 2, 31, 2, 51, 7}, // #340
  {DBGFIELD("XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP") 1, false, false, false, 21, 2, 31, 2, 51, 7}, // #341
  {DBGFIELD("XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO") 1, false, false, false, 21, 2, 31, 2, 51, 14}, // #342
  {DBGFIELD("HASHST_HASHST8_HASHSTP_HASHSTP8") 2, false, false, false, 119, 4, 168, 4,  0, 0}, // #343
  {DBGFIELD("XSMULQP_XSMULQPO")   1, false, false, false, 25, 2, 35, 2, 51, 14}, // #344
  {DBGFIELD("VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ") 1, false, false, false, 123, 2, 172, 2, 51, 14}, // #345
  {DBGFIELD("VMODSQ_VMODUQ")      1, false, false, false, 125, 2, 174, 2, 51, 14}, // #346
  {DBGFIELD("DIVWE_DIVWEO_DIVWEU_DIVWEUO") 1, false, false, false, 69, 2, 35, 2, 51, 14}, // #347
  {DBGFIELD("VDIVSD_VDIVUD")      1, false, false, false, 127, 2, 176, 2, 51, 14}, // #348
  {DBGFIELD("VMODSD_VMODUD")      1, false, false, false, 127, 2, 178, 2, 51, 14}, // #349
  {DBGFIELD("VDIVSW_VDIVUW")      1, false, false, false, 129, 2, 180, 2, 51, 14}, // #350
  {DBGFIELD("VMODSW_VMODUW")      1, false, false, false, 129, 2, 182, 2, 51, 14}, // #351
  {DBGFIELD("VDIVESD_VDIVEUD")    1, false, false, false, 127, 2, 184, 2, 51, 14}, // #352
  {DBGFIELD("VDIVESW_VDIVEUW")    1, false, false, false, 129, 2, 186, 2, 51, 14}, // #353
  {DBGFIELD("BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP") 1, false, false, false, 19, 2, 29, 2, 51, 7}, // #354
  {DBGFIELD("BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP") 1, false, false, false, 19, 2, 29, 2, 51, 14}, // #355
  {DBGFIELD("VADDUQM_VSUBUQM")    1, false, false, false, 19, 2, 29, 2, 51, 14}, // #356
  {DBGFIELD("XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP") 1, false, false, false, 19, 2, 29, 2, 51, 14}, // #357
  {DBGFIELD("XXGENPCVBM")         1, false, false, false, 19, 2, 29, 2, 51, 14}, // #358
  {DBGFIELD("BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM") 1, false, false, false, 19, 2, 29, 2, 51, 21}, // #359
  {DBGFIELD("TRAP")               1, false, false, false,  3, 2,  5, 2,  0, 0}, // #360
  {DBGFIELD("TW")                 1, false, false, false,  3, 2,  5, 2,  0, 0}, // #361
  {DBGFIELD("CBCDTD_CBCDTD8_CDTBCD_CDTBCD8") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #362
  {DBGFIELD("CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #363
  {DBGFIELD("FTSQRT")             1, false, false, false,  3, 2,  5, 2,  1, 5}, // #364
  {DBGFIELD("MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #365
  {DBGFIELD("POPCNTB_POPCNTB8")   1, false, false, false,  3, 2,  5, 2,  1, 5}, // #366
  {DBGFIELD("VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #367
  {DBGFIELD("VPOPCNTB_VPOPCNTH")  1, false, false, false,  3, 2,  5, 2,  1, 5}, // #368
  {DBGFIELD("XSCVSPDPN")          1, false, false, false,  3, 2,  5, 2,  1, 5}, // #369
  {DBGFIELD("XSTSQRTDP")          1, false, false, false,  3, 2,  5, 2,  1, 5}, // #370
  {DBGFIELD("XVCVHPSP")           1, false, false, false,  3, 2,  5, 2,  1, 5}, // #371
  {DBGFIELD("XVTSQRTDP_XVTSQRTSP") 1, false, false, false,  3, 2,  5, 2,  1, 5}, // #372
  {DBGFIELD("CMPEQB")             1, false, false, false,  3, 2,  5, 2,  1, 10}, // #373
  {DBGFIELD("EXTSWSLI_32_64_rec_EXTSWSLI_rec") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #374
  {DBGFIELD("SLD_rec_SRD_rec")    1, false, false, false,  3, 2,  5, 2,  1, 10}, // #375
  {DBGFIELD("SLW8_rec_SLW_rec_SRW8_rec_SRW_rec") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #376
  {DBGFIELD("VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #377
  {DBGFIELD("VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #378
  {DBGFIELD("VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #379
  {DBGFIELD("VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #380
  {DBGFIELD("XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP") 1, false, false, false,  3, 2,  5, 2,  1, 10}, // #381
  {DBGFIELD("RLDIC_rec")          1, false, false, false,  3, 2,  5, 2, 11, 15}, // #382
  {DBGFIELD("RLDICL_32_rec_RLDICL_rec_RLDICR_rec") 1, false, false, false,  3, 2,  5, 2, 11, 15}, // #383
  {DBGFIELD("VSHASIGMAD_VSHASIGMAW") 1, false, false, false,  3, 2,  5, 2, 11, 15}, // #384
  {DBGFIELD("VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ") 2, false, false, false, 131, 4, 188, 4,  0, 0}, // #385
  {DBGFIELD("VRLQMI")             2, false, false, false, 131, 4, 188, 4,  0, 0}, // #386
  {DBGFIELD("CR6SET_CREQV_CRSET") 1, false, false, false,  3, 2,  3, 2,  0, 0}, // #387
  {DBGFIELD("DSS_DSSALL")         1, false, false, false,  3, 2,  3, 2,  0, 0}, // #388
  {DBGFIELD("MFCTR_MFCTR8_MFLR_MFLR8") 1, false, false, false,  3, 2,  3, 2,  0, 0}, // #389
  {DBGFIELD("NOP_ORI_ORI8")       1, false, false, false,  3, 2,  3, 2,  0, 0}, // #390
  {DBGFIELD("VXOR_V_SET0_V_SET0B_V_SET0H") 1, false, false, false,  3, 2,  3, 2,  0, 0}, // #391
  {DBGFIELD("XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz") 1, false, false, false,  3, 2,  3, 2,  0, 0}, // #392
  {DBGFIELD("ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #393
  {DBGFIELD("ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #394
  {DBGFIELD("ADDItocL_ADDIStocHA_ADDIStocHA8") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #395
  {DBGFIELD("ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #396
  {DBGFIELD("FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #397
  {DBGFIELD("SETB_SETB8")         1, false, false, false,  3, 2,  3, 2,  1, 5}, // #398
  {DBGFIELD("SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #399
  {DBGFIELD("VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #400
  {DBGFIELD("VEXTSD2Q")           1, false, false, false,  3, 2,  3, 2,  1, 5}, // #401
  {DBGFIELD("XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #402
  {DBGFIELD("XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP") 1, false, false, false,  3, 2,  3, 2,  1, 5}, // #403
  {DBGFIELD("XVXSIGDP_XVXSIGSP")  1, false, false, false,  3, 2,  3, 2,  1, 5}, // #404
  {DBGFIELD("ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #405
  {DBGFIELD("ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #406
  {DBGFIELD("CMPB_CMPB8")         1, false, false, false,  3, 2,  3, 2,  1, 10}, // #407
  {DBGFIELD("CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #408
  {DBGFIELD("EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #409
  {DBGFIELD("SLW_SLW8_SRW_SRW8")  1, false, false, false,  3, 2,  3, 2,  1, 10}, // #410
  {DBGFIELD("VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #411
  {DBGFIELD("VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #412
  {DBGFIELD("VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW") 1, false, false, false,  3, 2,  3, 2,  1, 10}, // #413
  {DBGFIELD("ADDEX_ADDEX8")       1, false, false, false,  3, 2,  3, 2, 11, 15}, // #414
  {DBGFIELD("DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64") 1, false, false, false,  3, 2,  3, 2, 11, 15}, // #415
  {DBGFIELD("RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32") 1, false, false, false,  3, 2,  3, 2, 11, 15}, // #416
  {DBGFIELD("MFFS_MFFS_rec_MFFSL") 1, false, false, false,  5, 3, 12, 3,  0, 0}, // #417
  {DBGFIELD("TRECHKPT")           1, false, false, false,  5, 3, 12, 3,  0, 0}, // #418
  {DBGFIELD("ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec") 1, false, false, false,  5, 3, 12, 3,  1, 5}, // #419
  {DBGFIELD("MTFSB0")             1, false, false, false,  5, 3, 12, 3,  1, 5}, // #420
  {DBGFIELD("NEG8O_rec_NEGO_rec") 1, false, false, false,  5, 3, 12, 3,  1, 5}, // #421
  {DBGFIELD("ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec") 1, false, false, false,  5, 3, 12, 3,  1, 10}, // #422
  {DBGFIELD("ADDG6S_ADDG6S8")     2, false, false, false,  8, 3,  3, 4,  0, 0}, // #423
  {DBGFIELD("HRFID")              2, false, false, false,  8, 3,  8, 4,  0, 0}, // #424
  {DBGFIELD("FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec") 2, false, false, false,  8, 3,  8, 4,  1, 5}, // #425
  {DBGFIELD("SC")                 2, false, false, false,  8, 3,  8, 4,  1, 5}, // #426
  {DBGFIELD("ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO") 2, false, false, false,  8, 3,  8, 4,  1, 10}, // #427
  {DBGFIELD("ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec") 2, false, false, false,  8, 3,  8, 4,  1, 10}, // #428
  {DBGFIELD("MTFSF_MTFSFI_MTFSFIb") 2, false, false, false,  8, 3,  8, 4,  1, 10}, // #429
  {DBGFIELD("MTFSFI_rec")         2, false, false, false,  8, 3,  8, 4, 11, 15}, // #430
  {DBGFIELD("VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec") 2, false, false, false, 131, 4, 192, 4,  0, 0}, // #431
  {DBGFIELD("LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #432
  {DBGFIELD("LD")                 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #433
  {DBGFIELD("LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #434
  {DBGFIELD("LXVRBX_LXVRDX_LXVRHX_LXVRWX") 1, false, false, false, 33, 2, 43, 2, 81, 4}, // #435
  {DBGFIELD("DCBT_DCBTST")        1, false, false, false, 33, 2, 43, 2, 81, 8}, // #436
  {DBGFIELD("ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32") 1, false, false, false, 33, 2, 43, 2, 81, 8}, // #437
  {DBGFIELD("LDX_LDXTLS_LDXTLS_") 1, false, false, false, 33, 2, 43, 2, 81, 8}, // #438
  {DBGFIELD("SPILLTOVSR_LDX")     1, false, false, false, 33, 2, 43, 2, 81, 8}, // #439
  {DBGFIELD("LBZCIX_LDCIX_LHZCIX_LWZCIX") 1, false, false, false, 37, 3, 47, 3, 81, 8}, // #440
  {DBGFIELD("MTSR")               1, false, false, false, 37, 3, 47, 3, 81, 8}, // #441
  {DBGFIELD("MTVRSAVE_MTVRSAVEv") 1, false, false, false, 37, 3, 47, 3, 81, 8}, // #442
  {DBGFIELD("LSWI")               4, false, false, false, 47, 3, 57, 8, 81, 8}, // #443
  {DBGFIELD("PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc") 1, false, false, false, 135, 4, 43, 2, 81, 4}, // #444
  {DBGFIELD("LXVP_LXVPX")         2, false, false, false, 139, 5, 65, 3,  0, 0}, // #445
  {DBGFIELD("MFSR")               1, false, false, false, 66, 3, 82, 3,  0, 0}, // #446
  {DBGFIELD("MFTB8")              1, false, false, false, 66, 3, 82, 3,  0, 0}, // #447
  {DBGFIELD("XXSETACCZ")          1, false, false, false, 144, 2, 196, 2,  0, 0}, // #448
  {DBGFIELD("XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #449
  {DBGFIELD("XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #450
  {DBGFIELD("XVI8GER4SPP")        8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #451
  {DBGFIELD("PMXVF32GER_PMXVF64GER") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #452
  {DBGFIELD("PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #453
  {DBGFIELD("PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP") 8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #454
  {DBGFIELD("PMXVI8GER4SPP")      8190, false, false, false,  0, 0,  0, 0,  0, 0}, // #455
  {DBGFIELD("XXMTACC")            2, false, false, false, 146, 5, 198, 3,  0, 0}, // #456
  {DBGFIELD("XXMFACC")            4, false, false, false, 151, 5, 201, 6,  0, 0}, // #457
  {DBGFIELD("MULLD_MULLDO")       1, false, false, false, 13, 2, 19, 2, 72, 6}, // #458
  {DBGFIELD("VMULHSD_VMULHUD_VMULLD") 1, false, false, false, 13, 2, 19, 2, 72, 6}, // #459
  {DBGFIELD("VSPLTISW")           1, false, false, false,  1, 2,  1, 2,  0, 0}, // #460
  {DBGFIELD("V_SETALLONES_V_SETALLONESB_V_SETALLONESH") 1, false, false, false,  1, 2,  1, 2,  0, 0}, // #461
  {DBGFIELD("BRD_BRH_BRH8_BRW_BRW8") 1, false, false, false,  1, 2,  1, 2,  1, 5}, // #462
  {DBGFIELD("LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR") 1, false, false, false,  1, 2,  1, 2,  1, 5}, // #463
  {DBGFIELD("MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ") 1, false, false, false,  1, 2,  1, 2,  1, 5}, // #464
  {DBGFIELD("VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW") 1, false, false, false,  1, 2,  1, 2,  1, 5}, // #465
  {DBGFIELD("VSPLTISB_VSPLTISH_XXSPLTIB") 1, false, false, false,  1, 2,  1, 2,  1, 5}, // #466
  {DBGFIELD("XVCVBF16SPN")        1, false, false, false,  1, 2,  1, 2,  1, 5}, // #467
  {DBGFIELD("VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #468
  {DBGFIELD("VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #469
  {DBGFIELD("VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #470
  {DBGFIELD("VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs") 1, false, false, false,  1, 2,  1, 2,  1, 10}, // #471
  {DBGFIELD("VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI") 1, false, false, false,  1, 2,  1, 2, 11, 15}, // #472
  {DBGFIELD("VSUMSWS")            2, false, false, false, 156, 4, 207, 4,  0, 0}, // #473
  {DBGFIELD("XXSPLTIDP_XXSPLTIW") 1, false, false, false, 160, 4,  1, 2,  1, 5}, // #474
  {DBGFIELD("XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX") 1, false, false, false, 160, 4,  1, 2, 11, 15}, // #475
  {DBGFIELD("XXEVAL")             1, false, false, false, 160, 4,  1, 2, 26, 20}, // #476
  {DBGFIELD("XXPERMX")            1, false, false, false, 160, 4,  1, 2, 26, 20}, // #477
  {DBGFIELD("DCBST_DCBZ")         1, false, false, false, 35, 2, 45, 2,  1, 5}, // #478
  {DBGFIELD("ICBI")               1, false, false, false, 35, 2, 45, 2,  1, 5}, // #479
  {DBGFIELD("DCBF")               1, false, false, false, 35, 2, 45, 2,  1, 10}, // #480
  {DBGFIELD("PSTXVP_PSTXVPpc")    1, false, false, false, 35, 2, 45, 2,  1, 10}, // #481
  {DBGFIELD("STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #482
  {DBGFIELD("SPILLTOVSR_ST")      1, false, false, false, 35, 2, 45, 2,  1, 10}, // #483
  {DBGFIELD("STD")                1, false, false, false, 35, 2, 45, 2,  1, 10}, // #484
  {DBGFIELD("DFSTOREf32_DFSTOREf64_STIWX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #485
  {DBGFIELD("STXVRBX_STXVRDX_STXVRHX_STXVRWX") 1, false, false, false, 35, 2, 45, 2,  1, 10}, // #486
  {DBGFIELD("SPILLTOVSR_STX")     1, false, false, false, 35, 2, 45, 2, 11, 15}, // #487
  {DBGFIELD("EnforceIEIO")        1, false, false, false, 44, 3, 54, 3,  0, 0}, // #488
  {DBGFIELD("STBCIX_STDCIX_STHCIX_STWCIX") 1, false, false, false, 44, 3, 54, 3, 11, 15}, // #489
  {DBGFIELD("PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc") 1, false, false, false, 164, 4, 45, 2,  1, 10}, // #490
  {DBGFIELD("STXVP_STXVPX")       2, false, false, false, 168, 4, 72, 3,  1, 10}, // #491
  {DBGFIELD("ATTN_NAP")           1, false, false, false, 11, 2, 15, 2,  0, 0}, // #492
  {DBGFIELD("DCBZL")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #493
  {DBGFIELD("DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2") 1, false, false, false, 11, 2, 15, 2,  0, 0}, // #494
  {DBGFIELD("ICBLC")              1, false, false, false, 11, 2, 15, 2,  0, 0}, // #495
  {DBGFIELD("CLRBHRB")            1, false, false, false, 66, 3, 85, 3,  0, 0}, // #496
  {DBGFIELD("MFBHRBE")            1, false, false, false, 66, 3, 85, 3, 95, 12}, // #497
  {DBGFIELD("PADDI_PADDI8_PADDI8pc_PADDIpc") 1, false, false, false, 172, 4, 67, 2, 89, 6}, // #498
  {DBGFIELD("PLI_PLI8")           1, false, false, false, 172, 4, 67, 2, 89, 6}, // #499
  {DBGFIELD("VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS") 1, false, false, false, 13, 2, 17, 2, 51, 14}, // #500
  {DBGFIELD("VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD") 1, false, false, false, 13, 2, 17, 2, 51, 14}, // #501
  {DBGFIELD("VMSUMCUD")           1, false, false, false, 13, 2, 17, 2, 51, 21}, // #502
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C") 1, false, false, false, 13, 2, 21, 2, 115, 3}, // #503
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C") 1, false, false, false, 13, 2, 21, 2, 118, 18}, // #504
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 1, false, false, false, 13, 2, 21, 2, 115, 2}, // #505
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 1, false, false, false, 13, 2, 21, 2, 118, 12}, // #506
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 1, false, false, false, 176, 2, 90, 2, 115, 2}, // #507
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 1, false, false, false, 176, 2, 90, 2, 118, 12}, // #508
  {DBGFIELD("P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C") 1, false, false, false, 178, 2, 121, 2, 115, 1}, // #509
  {DBGFIELD("P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C") 1, false, false, false, 178, 2, 121, 2, 52, 6}, // #510
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C") 1, false, false, false, 176, 2, 90, 2, 115, 1}, // #511
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C") 1, false, false, false, 176, 2, 90, 2, 52, 6}, // #512
  {DBGFIELD("P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C") 1, false, false, false, 180, 2, 125, 2, 115, 1}, // #513
  {DBGFIELD("P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C") 1, false, false, false, 180, 2, 125, 2, 52, 6}, // #514
  {DBGFIELD("P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 1, false, false, false, 180, 2, 129, 2, 115, 2}, // #515
  {DBGFIELD("P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 1, false, false, false, 180, 2, 129, 2, 118, 12}, // #516
  {DBGFIELD("P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 1, false, false, false, 182, 2, 33, 2, 115, 2}, // #517
  {DBGFIELD("P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 1, false, false, false, 182, 2, 33, 2, 118, 12}, // #518
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C") 1, false, false, false, 184, 2, 211, 2, 136, 2}, // #519
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C") 1, false, false, false, 184, 2, 211, 2, 138, 12}, // #520
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C") 1, false, false, false, 13, 2, 21, 2, 115, 1}, // #521
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C") 1, false, false, false, 13, 2, 21, 2, 52, 6}, // #522
  {DBGFIELD("P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C") 2, false, false, false, 186, 3, 213, 4, 115, 1}, // #523
  {DBGFIELD("P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C") 2, false, false, false, 186, 3, 213, 4, 52, 6}, // #524
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C") 1, false, false, false, 184, 2, 211, 2, 136, 1}, // #525
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C") 1, false, false, false, 184, 2, 211, 2, 138, 6}, // #526
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C") 1, false, false, false, 144, 2, 196, 2, 150, 2}, // #527
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C") 1, false, false, false, 144, 2, 196, 2, 152, 12}, // #528
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 1, false, false, false, 144, 2, 196, 2, 164, 3}, // #529
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 1, false, false, false, 144, 2, 196, 2, 167, 18}, // #530
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 1, false, false, false, 189, 4, 196, 2, 185, 4}, // #531
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 1, false, false, false, 189, 4, 196, 2, 189, 24}, // #532
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 1, false, false, false, 189, 4, 196, 2, 213, 5}, // #533
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 1, false, false, false, 189, 4, 196, 2, 218, 30}, // #534
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 1, false, false, false, 189, 4, 196, 2, 248, 6}, // #535
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 1, false, false, false, 189, 4, 196, 2, 254, 36}, // #536
}; // P10ModelSchedClasses

// {Name, NumMicroOps, BeginGroup, EndGroup, RetireOOO, WriteProcResIdx,#, WriteLatencyIdx,#, ReadAdvanceIdx,#}
static const llvm::MCSchedClassDesc P9ModelSchedClasses[] = {
  {DBGFIELD("InvalidSchedClass")  8191, false, false, false, 0, 0,  0, 0,  0, 0},
  {DBGFIELD("IIC_LdStSync")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #1
  {DBGFIELD("IIC_IntSimple")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #2
  {DBGFIELD("IIC_IntGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #3
  {DBGFIELD("IIC_BrB")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #4
  {DBGFIELD("IIC_VecFP")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #5
  {DBGFIELD("IIC_IntRotate")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #6
  {DBGFIELD("IIC_IntCompare")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #7
  {DBGFIELD("IIC_SprABORT")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #8
  {DBGFIELD("IIC_LdStCOPY")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #9
  {DBGFIELD("IIC_LdStPASTE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #10
  {DBGFIELD("IIC_BrCR")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #11
  {DBGFIELD("IIC_LdStLD")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #12
  {DBGFIELD("IIC_LdStDCBF")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #13
  {DBGFIELD("IIC_LdStLoad")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #14
  {DBGFIELD("IIC_IntDivD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #15
  {DBGFIELD("IIC_IntDivW")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #16
  {DBGFIELD("IIC_FPDGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #17
  {DBGFIELD("IIC_FPAddSub")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #18
  {DBGFIELD("IIC_FPDivD")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #19
  {DBGFIELD("IIC_FPSGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #20
  {DBGFIELD("IIC_FPCompare")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #21
  {DBGFIELD("IIC_FPGeneral")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #22
  {DBGFIELD("IIC_VecGeneral")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #23
  {DBGFIELD("IIC_VecComplex")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #24
  {DBGFIELD("IIC_LdStStore")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #25
  {DBGFIELD("IIC_IntRotateDI")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #26
  {DBGFIELD("IIC_FPDivS")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #27
  {DBGFIELD("IIC_FPFused")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #28
  {DBGFIELD("IIC_FPSqrtD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #29
  {DBGFIELD("IIC_FPSqrtS")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #30
  {DBGFIELD("IIC_LdStICBI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #31
  {DBGFIELD("IIC_IntISEL")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #32
  {DBGFIELD("IIC_SprISYNC")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #33
  {DBGFIELD("IIC_LdStLWARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #34
  {DBGFIELD("IIC_LdStLoadUpd")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #35
  {DBGFIELD("IIC_LdStLoadUpdX")   8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #36
  {DBGFIELD("IIC_LdStLDARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #37
  {DBGFIELD("IIC_LdStLDU")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #38
  {DBGFIELD("IIC_LdStLDUX")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #39
  {DBGFIELD("IIC_LdStLFD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #40
  {DBGFIELD("IIC_LdStLFDU")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #41
  {DBGFIELD("IIC_LdStLFDUX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #42
  {DBGFIELD("IIC_LdStLHA")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #43
  {DBGFIELD("IIC_LdStLHAU")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #44
  {DBGFIELD("IIC_LdStLHAUX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #45
  {DBGFIELD("IIC_LdStLMW")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #46
  {DBGFIELD("IIC_LdStLQ")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #47
  {DBGFIELD("IIC_LdStLQARX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #48
  {DBGFIELD("IIC_LdStLWA")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #49
  {DBGFIELD("IIC_IntMulHD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #50
  {DBGFIELD("IIC_BrMCR")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #51
  {DBGFIELD("IIC_BrMCRX")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #52
  {DBGFIELD("IIC_SprMFCR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #53
  {DBGFIELD("IIC_SprMFSPR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #54
  {DBGFIELD("IIC_IntMFFS")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #55
  {DBGFIELD("IIC_SprMFMSR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #56
  {DBGFIELD("IIC_SprMFCRF")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #57
  {DBGFIELD("IIC_SprMFPMR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #58
  {DBGFIELD("IIC_SprMFSR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #59
  {DBGFIELD("IIC_SprMFTB")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #60
  {DBGFIELD("IIC_SprMSGSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #61
  {DBGFIELD("IIC_SprMTSPR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #62
  {DBGFIELD("IIC_IntMTFSB0")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #63
  {DBGFIELD("IIC_SprMTMSR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #64
  {DBGFIELD("IIC_SprMTMSRD")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #65
  {DBGFIELD("IIC_SprMTPMR")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #66
  {DBGFIELD("IIC_SprMTSR")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #67
  {DBGFIELD("IIC_IntMulHW")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #68
  {DBGFIELD("IIC_IntMulHWU")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #69
  {DBGFIELD("IIC_IntMulLI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #70
  {DBGFIELD("IIC_SprRFI")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #71
  {DBGFIELD("IIC_IntRFID")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #72
  {DBGFIELD("IIC_IntRotateD")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #73
  {DBGFIELD("IIC_SprSLBFEE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #74
  {DBGFIELD("IIC_SprSLBIA")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #75
  {DBGFIELD("IIC_SprSLBIE")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #76
  {DBGFIELD("IIC_SprSLBIEG")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #77
  {DBGFIELD("IIC_SprSLBMFEE")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #78
  {DBGFIELD("IIC_SprSLBMFEV")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #79
  {DBGFIELD("IIC_SprSLBMTE")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #80
  {DBGFIELD("IIC_SprSLBSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #81
  {DBGFIELD("IIC_IntShift")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #82
  {DBGFIELD("IIC_LdStSTWCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #83
  {DBGFIELD("IIC_LdStSTU")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #84
  {DBGFIELD("IIC_LdStSTUX")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #85
  {DBGFIELD("IIC_LdStSTD")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #86
  {DBGFIELD("IIC_LdStSTDCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #87
  {DBGFIELD("IIC_LdStSTFD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #88
  {DBGFIELD("IIC_LdStSTFDU")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #89
  {DBGFIELD("IIC_SprSTOP")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #90
  {DBGFIELD("IIC_LdStSTQ")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #91
  {DBGFIELD("IIC_LdStSTQCX")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #92
  {DBGFIELD("IIC_IntTrapD")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #93
  {DBGFIELD("IIC_SprTLBIA")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #94
  {DBGFIELD("IIC_SprTLBIE")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #95
  {DBGFIELD("IIC_SprTLBIEL")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #96
  {DBGFIELD("IIC_SprTLBSYNC")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #97
  {DBGFIELD("IIC_IntTrapW")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #98
  {DBGFIELD("IIC_VecFPCompare")   8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #99
  {DBGFIELD("IIC_VecPerm")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #100
  {DBGFIELD("VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VSLD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_VPOPCNTB_VPOPCNTH_VSRAD_MTVSRDD_VEQV_VNAND_VNEGD_VNEGW_VORC_XXLAND_XXLANDC_XXLEQV_XXLEQVOnes_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #101
  {DBGFIELD("VAND_VANDC_V_SET0_V_SET0B_V_SET0H_VSLB_VSLH_VSLW_VSRB_VSRH_VSRW_VRLB_VRLD_VRLH_VRLW_VSRAB_VSRAH_VSRAW_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP_XVXEXPDP_XVXEXPSP_VRLDMI_VRLDNM_VRLWMI_VRLWNM_VMRGEW_VMRGOW_VNOR_VOR_VSEL_VXOR_XVNEGDP_XVNEGSP_XSABSQP_XSCPSGNQP_XSIEXPQP_XSNABSQP_XSNEGQP_XSXEXPQP") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #102
  {DBGFIELD("XXSEL")              2, false, false, false, 193, 7, 217, 5,  0, 0}, // #103
  {DBGFIELD("TABORTDC_TABORTDCI_TABORTWC_TABORTWCI") 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #104
  {DBGFIELD("MTFSB0_MTFSB1")      1, false, false, false, 200, 7, 222, 3,  0, 0}, // #105
  {DBGFIELD("MFFSCDRN_MFFSCDRNI_MFFSCRN_MFFSCRNI") 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #106
  {DBGFIELD("CMPRB_CMPRB8_CMPEQB") 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #107
  {DBGFIELD("TD_TDI")             1, false, false, false, 200, 7, 222, 3,  0, 0}, // #108
  {DBGFIELD("TW_TWI")             1, false, false, false, 200, 7, 222, 3,  0, 0}, // #109
  {DBGFIELD("FCMPOD_FCMPOS_FCMPUD_FCMPUS_FTDIV_FTSQRT") 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #110
  {DBGFIELD("XSTSTDCDP_XSTSTDCSP") 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #111
  {DBGFIELD("XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP_XSXSIGDP_XSCVSPDPN") 1, false, false, false, 207, 3, 222, 3,  0, 0}, // #112
  {DBGFIELD("XSCMPEQDP_XSCMPEXPDP_XSCMPGEDP_XSCMPGTDP_XSCMPODP_XSCMPUDP_XSTDIVDP_XSTSQRTDP") 1, false, false, false, 207, 3, 222, 3,  0, 0}, // #113
  {DBGFIELD("CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW_CMPB_CMPB8_SETB_SETB8_BPERMD") 1, false, false, false, 207, 3, 222, 3,  0, 0}, // #114
  {DBGFIELD("SLD_SRD_SRAD")       1, false, false, false, 207, 3, 218, 3,  0, 0}, // #115
  {DBGFIELD("SRADI_EXTSWSLI_32_64_EXTSWSLI_SRADI_32_RLDIC") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #116
  {DBGFIELD("MFVRD_MFVSRD_MTVRD_MTVSRD_MTVRWA_MTVRWZ_MTVSRWA_MTVSRWZ_MFVSRWZ_MFVRWZ") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #117
  {DBGFIELD("CMPLW_CMPLWI_CMPW_CMPWI_CMPD_CMPDI_CMPLD_CMPLDI") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #118
  {DBGFIELD("SUBFC_SUBFC8_SUBFC8O_SUBFCO_SUBFIC_SUBFIC8_ANDI8_rec_ANDIS8_rec_ANDIS_rec_ANDI_rec_ADDC_ADDC8_ADDC8O_ADDCO_ADDIC_ADDIC8_ADDIC_rec_ADDE_ADDE8_ADDE8O_ADDE8O_rec_ADDE8_rec_ADDEO_ADDEO_rec_ADDE_rec_ADDME_ADDME8_ADDME8O_ADDME8O_rec_ADDME8_rec_ADDMEO_ADDMEO_rec_ADDME_rec_ADDZE_ADDZE8_ADDZE8O_ADDZE8O_rec_ADDZE8_rec_ADDZEO_ADDZEO_rec_ADDZE_rec_SUBF_SUBF8_SUBF8O_SUBF8O_rec_SUBF8_rec_SUBFE_SUBFE8_SUBFE8O_SUBFE8O_rec_SUBFE8_rec_SUBFEO_SUBFEO_rec_SUBFE_rec_SUBFME_SUBFME8_SUBFME8O_SUBFME8O_rec_SUBFME8_rec_SUBFMEO_SUBFMEO_rec_SUBFME_rec_SUBFO_SUBFO_rec_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZE8O_rec_SUBFZE8_rec_SUBFZEO_SUBFZEO_rec_SUBFZE_rec_SUBF_rec_POPCNTB_POPCNTB8_LA_LA8") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #119
  {DBGFIELD("ADD4_ADD4O_ADD4O_rec_ADD4_rec_ADD8_ADD8O_ADD8O_rec_ADD8_rec_NEG_NEG8_NEG8O_NEG8O_rec_NEG8_rec_NEGO_NEGO_rec_NEG_rec_ADDI_ADDI8_ADDIS_ADDIS8_LI_LI8_LIS_LIS8_OR_OR8_OR8_rec_ORI_ORI8_ORIS_ORIS8_OR_rec_XOR_XOR8_XOR8_rec_XORI_XORI8_XORIS_XORIS8_XOR_rec_NAND_NAND8_NAND8_rec_NAND_rec_AND_AND8_AND8_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_AND_rec_NOR_NOR8_NOR8_rec_NOR_rec_ORC_ORC8_ORC8_rec_ORC_rec_EQV_EQV8_EQV8_rec_EQV_rec_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_ADD4TLS_ADD8TLS_ADD8TLS__NOP") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #120
  {DBGFIELD("ADDIStocHA_ADDIStocHA8_ADDItocL_COPY") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #121
  {DBGFIELD("MCRF")               1, false, false, false, 207, 3, 218, 3,  0, 0}, // #122
  {DBGFIELD("MCRXRX")             1, false, false, false, 207, 3, 218, 3,  0, 0}, // #123
  {DBGFIELD("XSNABSDP_XSNABSDPs_XSXEXPDP_XSABSDP_XSNEGDP_XSCPSGNDP") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #124
  {DBGFIELD("RFEBB")              1, false, false, false, 207, 3, 218, 3,  0, 0}, // #125
  {DBGFIELD("TBEGIN_TRECHKPT")    1, false, false, false, 207, 3, 218, 3,  0, 0}, // #126
  {DBGFIELD("WAIT")               1, false, false, false, 207, 3, 218, 3,  0, 0}, // #127
  {DBGFIELD("RLDCL_RLDCR")        1, false, false, false, 200, 7, 218, 3,  0, 0}, // #128
  {DBGFIELD("RLWIMI_RLWIMI8")     1, false, false, false, 200, 7, 218, 3,  0, 0}, // #129
  {DBGFIELD("RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32_RLDIMI") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #130
  {DBGFIELD("MFOCRF_MFOCRF8")     1, false, false, false, 200, 7, 218, 3,  0, 0}, // #131
  {DBGFIELD("MTOCRF_MTOCRF8")     1, false, false, false, 200, 7, 218, 3,  0, 0}, // #132
  {DBGFIELD("CR6SET_CR6UNSET_CRSET_CRUNSET_CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CREQV_CRNOT_CRXOR") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #133
  {DBGFIELD("SLW_SLW8_SRW_SRW8_RLWINM_RLWINM8_RLWNM_RLWNM8") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #134
  {DBGFIELD("FABSD_FABSS_FNABSD_FNABSS_FNEGD_FNEGS_FCPSGND_FCPSGNS_FMR") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #135
  {DBGFIELD("SRAW_SRAWI")         1, false, false, false, 200, 7, 218, 3,  0, 0}, // #136
  {DBGFIELD("ISEL_ISEL8")         1, false, false, false, 200, 7, 218, 3,  0, 0}, // #137
  {DBGFIELD("XSIEXPDP")           1, false, false, false, 200, 7, 218, 3,  0, 0}, // #138
  {DBGFIELD("TRECLAIM_TSR_TABORT") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #139
  {DBGFIELD("MFVSCR")             2, false, false, false, 193, 7, 225, 5,  0, 0}, // #140
  {DBGFIELD("MTVSCR")             2, false, false, false, 193, 7, 225, 5,  0, 0}, // #141
  {DBGFIELD("VCMPNEZB_VCMPNEZH_VCMPNEZW_VCMPEQUB_VCMPEQUD_VCMPEQUH_VCMPEQUW_VCMPNEB_VCMPNEH_VCMPNEW_VCMPEQFP_VCMPEQFP_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPBFP_VCMPBFP_rec_VCMPGTSB_VCMPGTSB_rec_VCMPGTSD_VCMPGTSD_rec_VCMPGTSH_VCMPGTSH_rec_VCMPGTSW_VCMPGTSW_rec_VCMPGTUB_VCMPGTUB_rec_VCMPGTUD_VCMPGTUD_rec_VCMPGTUH_VCMPGTUH_rec_VCMPGTUW_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #142
  {DBGFIELD("VABSDUB_VABSDUH_VABSDUW_VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTW_VPOPCNTD_VPRTYBD_VPRTYBW") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #143
  {DBGFIELD("VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VADDSBS_VADDSHS_VADDSWS_VMAXFP_VMINFP_VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW_VBPERMD_VADDCUW_VSHASIGMAD_VSHASIGMAW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_VSUBCUW_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP_XVXSIGDP_XVXSIGSP") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #144
  {DBGFIELD("XVTDIVDP_XVTDIVSP_XVTSQRTDP_XVTSQRTSP") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #145
  {DBGFIELD("VADDFP_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VEXPTEFP_VLOGEFP_VMADDFP_VMHADDSHS_VNMSUBFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVADDDP_XVADDSP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVHPSP_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVMULDP_XVMULSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP_XVSUBDP_XVSUBSP_VCFSX_VCFSX_0_VCFUX_VCFUX_0_VMHRADDSHS_VMLADDUHM_VMSUMMBM_VMSUMSHM_VMSUMSHS_VMSUMUBM_VMSUMUHM_VMSUMUDM_VMSUMUHS_VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS_VSUMSWS") 2, false, false, false, 210, 7, 230, 5,  0, 0}, // #146
  {DBGFIELD("VSUBFP_VMULUWM")     2, false, false, false, 210, 7, 230, 5,  0, 0}, // #147
  {DBGFIELD("MADDHD_MADDHDU_MADDLD_MADDLD8_MULLD_MULLDO") 1, false, false, false, 217, 7, 235, 3,  0, 0}, // #148
  {DBGFIELD("MULHD_MULHW_MULLW_MULLWO") 1, false, false, false, 217, 7, 235, 3,  0, 0}, // #149
  {DBGFIELD("MULHDU_MULHWU")      1, false, false, false, 217, 7, 235, 3,  0, 0}, // #150
  {DBGFIELD("MULLI_MULLI8")       1, false, false, false, 217, 7, 235, 3,  0, 0}, // #151
  {DBGFIELD("FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS") 1, false, false, false, 217, 7, 231, 3,  0, 0}, // #152
  {DBGFIELD("FADD_FSUB")          1, false, false, false, 217, 7, 231, 3,  0, 0}, // #153
  {DBGFIELD("FMSUB_FMADD_FNMADD_FNMSUB_FMUL") 1, false, false, false, 217, 7, 231, 3,  0, 0}, // #154
  {DBGFIELD("XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP") 1, false, false, false, 217, 7, 231, 3,  0, 0}, // #155
  {DBGFIELD("FSELD_rec_FSELS_rec") 2, false, false, false, 224, 8, 238, 6,  0, 0}, // #156
  {DBGFIELD("MULHDU_rec_MULHWU_rec") 2, false, false, false, 224, 8, 244, 5,  0, 0}, // #157
  {DBGFIELD("MULHD_rec_MULHW_rec_MULLWO_rec_MULLW_rec") 2, false, false, false, 224, 8, 244, 5,  0, 0}, // #158
  {DBGFIELD("MULLDO_rec_MULLD_rec") 2, false, false, false, 224, 8, 244, 5,  0, 0}, // #159
  {DBGFIELD("FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRES_rec_FRE_rec_FADDS_rec_FSUBS_rec_FMSUBS_rec_FNMSUBS_rec_FMADDS_rec_FNMADDS_rec_FCFIDS_rec_FCFIDUS_rec_FCFIDU_rec_FCFID_rec_FCTIDUZ_rec_FCTIDU_rec_FCTIDZ_rec_FCTID_rec_FCTIWUZ_rec_FCTIWU_rec_FCTIWZ_rec_FCTIW_rec_FMULS_rec_FRSQRTES_rec_FRSQRTE_rec_FRSP_rec") 2, false, false, false, 224, 8, 249, 5,  0, 0}, // #160
  {DBGFIELD("FADD_rec_FSUB_rec")  2, false, false, false, 224, 8, 249, 5,  0, 0}, // #161
  {DBGFIELD("FMSUB_rec_FNMSUB_rec_FMADD_rec_FNMADD_rec_FMUL_rec") 2, false, false, false, 224, 8, 249, 5,  0, 0}, // #162
  {DBGFIELD("XSADDDP_XSADDSP_XSCVDPHP_XSCVDPSP_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPSXWSs_XSCVDPUXWSs_XSCVHPDP_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSQRTEDP_XSRSQRTESP_XSSUBDP_XSSUBSP_XSCVDPSPN_XSRSP") 1, false, false, false, 232, 3, 231, 3,  0, 0}, // #163
  {DBGFIELD("LVSL_LVSR")          1, false, false, false, 235, 5, 226, 4,  0, 0}, // #164
  {DBGFIELD("VSPLTISB_VSPLTISH_VSPLTISW_VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERM_XXPERMR_XXSLDWI_XXSLDWIs_XXSPLTIB_XXSPLTW_XXSPLTWs_XXPERMDI_XXPERMDIs") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #165
  {DBGFIELD("V_SETALLONES_V_SETALLONESB_V_SETALLONESH_VBPERMQ_VGBBD_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPERM_VPERMR_VPERMXOR_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLDOI_VSLO_VSLV_VSR_VSRO_VSRV_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW_XXEXTRACTUW_XXINSERTW_VADDCUQ_VADDECUQ_VADDEUQM_VMUL10CUQ_VMUL10ECUQ_VMUL10EUQ_VMUL10UQ_VSUBCUQ_VSUBECUQ_VSUBEUQM_XSTSTDCQP_XSXSIGQP_BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDS_rec_BCDTRUNC_rec_BCDUS_rec_BCDUTRUNC_rec_BCDADD_rec_BCDSUB_rec") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #166
  {DBGFIELD("VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VINSERTB_VINSERTD_VINSERTH_VINSERTW_MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VEXTRACTD_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VPRTYBQ_VADDUQM_VSUBUQM") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #167
  {DBGFIELD("XSCMPEXPQP_XSCMPOQP_XSCMPUQP") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #168
  {DBGFIELD("BCDSR_rec_XSADDQP_XSADDQPO_XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP_XSRQPI_XSRQPIX_XSRQPXP_XSSUBQP_XSSUBQPO") 1, false, false, false, 240, 5, 254, 4,  0, 0}, // #169
  {DBGFIELD("BCDCTSQ_rec")        1, false, false, false, 245, 5, 258, 4,  0, 0}, // #170
  {DBGFIELD("XSMADDQP_XSMADDQPO_XSMSUBQP_XSMSUBQPO_XSMULQP_XSMULQPO_XSNMADDQP_XSNMADDQPO_XSNMSUBQP_XSNMSUBQPO") 1, false, false, false, 250, 5, 262, 4,  0, 0}, // #171
  {DBGFIELD("BCDCFSQ_rec")        1, false, false, false, 255, 5, 266, 4,  0, 0}, // #172
  {DBGFIELD("XSDIVQP_XSDIVQPO")   1, false, false, false, 260, 5, 270, 4,  0, 0}, // #173
  {DBGFIELD("XSSQRTQP_XSSQRTQPO") 1, false, false, false, 265, 5, 274, 4,  0, 0}, // #174
  {DBGFIELD("LXVL_LXVLL")         1, false, false, false, 270, 3, 47, 3,  0, 0}, // #175
  {DBGFIELD("LVEBX_LVEHX_LVEWX_LVX_LVXL") 1, false, false, false, 270, 3, 235, 3,  0, 0}, // #176
  {DBGFIELD("LXSIBZX_LXSIHZX_LXSDX_LXVB16X_LXVD2X_LXVWSX_LXSIWZX_LXV_LXVX_LXSD") 1, false, false, false, 270, 3, 235, 3,  0, 0}, // #177
  {DBGFIELD("DFLOADf64_XFLOADf64_LIWZX") 1, false, false, false, 270, 3, 235, 3,  0, 0}, // #178
  {DBGFIELD("DCBF_DCBFEP_DCBST_DCBSTEP_DCBT_DCBTEP_DCBZ_DCBZEP_DCBZL_DCBZLEP_DCBTST_DCBTSTEP") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #179
  {DBGFIELD("CP_COPY_CP_COPY8")   1, false, false, false, 270, 3, 278, 3,  0, 0}, // #180
  {DBGFIELD("ICBI_ICBIEP")        1, false, false, false, 270, 3, 278, 3,  0, 0}, // #181
  {DBGFIELD("ICBT_ICBTLS_LBZ_LBZ8_LBZCIX_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LDBRX_LDCIX_LHBRX_LHBRX8_LHZ_LHZ8_LHZCIX_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWBRX_LWBRX8_LWZ_LWZ8_LWZCIX_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32_EnforceIEIO_LSWI") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #182
  {DBGFIELD("LBARX_LBARXL_LHARX_LHARXL_LWARX_LWARXL") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #183
  {DBGFIELD("LD_LDX_LDXTLS_LDXTLS__DARN") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #184
  {DBGFIELD("LDARX_LDARXL")       1, false, false, false, 270, 3, 278, 3,  0, 0}, // #185
  {DBGFIELD("CP_ABORT")           1, false, false, false, 270, 3, 278, 3,  0, 0}, // #186
  {DBGFIELD("ISYNC")              1, false, false, false, 270, 3, 278, 3,  0, 0}, // #187
  {DBGFIELD("MSGSYNC")            1, false, false, false, 270, 3, 278, 3,  0, 0}, // #188
  {DBGFIELD("TLBSYNC")            1, false, false, false, 270, 3, 278, 3,  0, 0}, // #189
  {DBGFIELD("SYNC")               1, false, false, false, 270, 3, 278, 3,  0, 0}, // #190
  {DBGFIELD("LMW")                1, false, false, false, 270, 3, 278, 3,  0, 0}, // #191
  {DBGFIELD("LFIWZX_LFDX_LFD")    1, false, false, false, 273, 7, 278, 3,  0, 0}, // #192
  {DBGFIELD("SLBIA")              2, false, false, false, 280, 4, 281, 5,  0, 0}, // #193
  {DBGFIELD("SLBIE")              2, false, false, false, 280, 4, 281, 5,  0, 0}, // #194
  {DBGFIELD("SLBMFEE")            2, false, false, false, 280, 4, 281, 5,  0, 0}, // #195
  {DBGFIELD("SLBMFEV")            2, false, false, false, 280, 4, 281, 5,  0, 0}, // #196
  {DBGFIELD("SLBMTE")             2, false, false, false, 280, 4, 281, 5,  0, 0}, // #197
  {DBGFIELD("TLBIEL")             2, false, false, false, 280, 4, 281, 5,  0, 0}, // #198
  {DBGFIELD("LHZU_LHZU8_LWZU_LWZU8") 2, false, false, false, 284, 6, 286, 6,  0, 0}, // #199
  {DBGFIELD("LHZUX_LHZUX8_LWZUX_LWZUX8") 2, false, false, false, 284, 6, 286, 6,  0, 0}, // #200
  {DBGFIELD("TEND")               2, false, false, false, 290, 5, 286, 6,  0, 0}, // #201
  {DBGFIELD("STBCX_STHCX_STWCX")  2, false, false, false, 295, 9, 292, 6,  0, 0}, // #202
  {DBGFIELD("STDCX")              2, false, false, false, 295, 9, 292, 6,  0, 0}, // #203
  {DBGFIELD("LHA_LHA8_LHAX_LHAX8_LWAX_LWAX_32") 2, false, false, false, 290, 5, 298, 5,  0, 0}, // #204
  {DBGFIELD("CP_PASTE8_rec_CP_PASTE_rec") 2, false, false, false, 290, 5, 298, 5,  0, 0}, // #205
  {DBGFIELD("LWA_LWA_32")         2, false, false, false, 290, 5, 298, 5,  0, 0}, // #206
  {DBGFIELD("TCHECK")             2, false, false, false, 290, 5, 298, 5,  0, 0}, // #207
  {DBGFIELD("LFIWAX")             2, false, false, false, 304, 9, 298, 5,  0, 0}, // #208
  {DBGFIELD("LXSIWAX")            2, false, false, false, 290, 5, 244, 5,  0, 0}, // #209
  {DBGFIELD("LIWAX")              2, false, false, false, 290, 5, 244, 5,  0, 0}, // #210
  {DBGFIELD("LFSX_LFS")           2, false, false, false, 304, 9, 244, 5,  0, 0}, // #211
  {DBGFIELD("LXSSP_LXSSPX")       2, false, false, false, 290, 5, 303, 5,  0, 0}, // #212
  {DBGFIELD("XFLOADf32_DFLOADf32") 2, false, false, false, 290, 5, 303, 5,  0, 0}, // #213
  {DBGFIELD("LHAU_LHAU8")         3, false, false, false, 313, 6, 308, 8,  0, 0}, // #214
  {DBGFIELD("LHAUX_LHAUX8_LWAUX") 3, false, false, false, 313, 6, 308, 8,  0, 0}, // #215
  {DBGFIELD("LXVH8X_LXVDSX_LXVW4X") 2, false, false, false, 319, 7, 316, 6,  0, 0}, // #216
  {DBGFIELD("STFD_STFDX_STFIWX_STFS_STFSX_STXSD_STXSDX_STXSIBX_STXSIBXv_STXSIHX_STXSIHXv_STXSIWX_STXSSP_STXSSPX") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #217
  {DBGFIELD("STW_STW8_STDBRX_STHBRX_STWBRX_STB_STB8_STH_STH8_STBX_STBX8_STBXTLS_STBXTLS__STBXTLS_32_STHX_STHX8_STHXTLS_STHXTLS__STHXTLS_32_STWX_STWX8_STWXTLS_STWXTLS__STWXTLS_32") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #218
  {DBGFIELD("DFSTOREf32_DFSTOREf64_XFSTOREf32_XFSTOREf64_STIWX") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #219
  {DBGFIELD("STD_STDX_STDXTLS_STDXTLS_") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #220
  {DBGFIELD("STBCIX_STDCIX_STHCIX_STWCIX_STSWI") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #221
  {DBGFIELD("SLBIEG")             1, false, false, false, 326, 8, 240, 4,  0, 0}, // #222
  {DBGFIELD("STMW")               1, false, false, false, 326, 8, 240, 4,  0, 0}, // #223
  {DBGFIELD("TLBIE")              1, false, false, false, 326, 8, 240, 4,  0, 0}, // #224
  {DBGFIELD("STVEBX_STVEHX_STVEWX_STVX_STVXL") 1, false, false, false, 334, 6, 293, 5,  0, 0}, // #225
  {DBGFIELD("STXV_STXVB16X_STXVD2X_STXVH8X_STXVW4X_STXVX") 1, false, false, false, 334, 6, 293, 5,  0, 0}, // #226
  {DBGFIELD("STXVL_STXVLL")       1, false, false, false, 334, 6, 293, 5,  0, 0}, // #227
  {DBGFIELD("MTCTR_MTCTR8_MTCTR8loop_MTCTRloop_MTLR_MTLR8") 1, false, false, false, 340, 8, 322, 4,  0, 0}, // #228
  {DBGFIELD("MFVRSAVE_MFVRSAVEv_MTVRSAVE_MTVRSAVEv") 1, false, false, false, 340, 8, 254, 4,  0, 0}, // #229
  {DBGFIELD("MFPMR")              1, false, false, false, 340, 8, 254, 4,  0, 0}, // #230
  {DBGFIELD("MTPMR")              1, false, false, false, 340, 8, 254, 4,  0, 0}, // #231
  {DBGFIELD("MFTB_MFTB8")         1, false, false, false, 340, 8, 254, 4,  0, 0}, // #232
  {DBGFIELD("MFCTR_MFCTR8_MFLR_MFLR8_MFSPR_MFSPR8_MFUDSCR") 1, false, false, false, 340, 8, 254, 4,  0, 0}, // #233
  {DBGFIELD("MFMSR")              1, false, false, false, 340, 8, 254, 4,  0, 0}, // #234
  {DBGFIELD("MTMSR")              1, false, false, false, 340, 8, 254, 4,  0, 0}, // #235
  {DBGFIELD("MTMSRD")             1, false, false, false, 340, 8, 254, 4,  0, 0}, // #236
  {DBGFIELD("MTUDSCR_MTSPR_MTSPR8") 1, false, false, false, 340, 8, 254, 4,  0, 0}, // #237
  {DBGFIELD("DIVW_DIVWO_DIVWU_DIVWUO_MODSW") 1, false, false, false, 348, 8, 326, 4,  0, 0}, // #238
  {DBGFIELD("DIVWE_DIVWEO_DIVWEU_DIVWEUO_MODSD_MODUD_MODUW") 1, false, false, false, 348, 8, 262, 4,  0, 0}, // #239
  {DBGFIELD("DIVD_DIVDO_DIVDU_DIVDUO") 1, false, false, false, 348, 8, 262, 4,  0, 0}, // #240
  {DBGFIELD("DIVDE_DIVDEO_DIVDEU_DIVDEUO") 1, false, false, false, 348, 8, 330, 4,  0, 0}, // #241
  {DBGFIELD("DIVWO_rec_DIVWUO_rec_DIVWU_rec_DIVW_rec") 2, false, false, false, 356, 9, 334, 6,  0, 0}, // #242
  {DBGFIELD("DIVD_rec_DIVDO_rec_DIVDU_rec_DIVDUO_rec") 2, false, false, false, 356, 9, 340, 6,  0, 0}, // #243
  {DBGFIELD("DIVWE_rec_DIVWEO_rec_DIVWEU_rec_DIVWEUO_rec") 2, false, false, false, 356, 9, 340, 6,  0, 0}, // #244
  {DBGFIELD("DIVDE_rec_DIVDEO_rec_DIVDEU_rec_DIVDEUO_rec") 2, false, false, false, 356, 9, 346, 6,  0, 0}, // #245
  {DBGFIELD("MTCRF_MTCRF8")       2, false, false, false, 365, 7, 352, 6,  0, 0}, // #246
  {DBGFIELD("ADDC8O_rec_ADDC8_rec_ADDCO_rec_ADDC_rec_SUBFC8O_rec_SUBFC8_rec_SUBFCO_rec_SUBFC_rec") 2, false, false, false, 372, 3, 352, 6,  0, 0}, // #247
  {DBGFIELD("FABSD_rec_FABSS_rec_FNABSD_rec_FNABSS_rec_FCPSGND_rec_FCPSGNS_rec_FNEGD_rec_FNEGS_rec_FMR_rec") 2, false, false, false, 375, 7, 358, 6,  0, 0}, // #248
  {DBGFIELD("MCRFS")              2, false, false, false, 372, 3, 364, 6,  0, 0}, // #249
  {DBGFIELD("MTFSF_MTFSF_rec_MTFSFI_MTFSFI_rec_MTFSFIb") 2, false, false, false, 365, 7, 364, 6,  0, 0}, // #250
  {DBGFIELD("MTFSFb")             2, false, false, false, 365, 7, 364, 6,  0, 0}, // #251
  {DBGFIELD("RLDCL_rec_RLDCR_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #252
  {DBGFIELD("RLDICL_rec_RLDICR_rec_RLDICL_32_rec_RLDIMI_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #253
  {DBGFIELD("RLWIMI8_rec_RLWIMI_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #254
  {DBGFIELD("RLWINM8_rec_RLWINM_rec_RLWNM8_rec_RLWNM_rec_SLW8_rec_SLW_rec_SRW8_rec_SRW_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #255
  {DBGFIELD("SRAWI_rec_SRAW_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #256
  {DBGFIELD("MFFS_MFFSCE_MFFSL_MFFS_rec") 2, false, false, false, 365, 7, 298, 5,  0, 0}, // #257
  {DBGFIELD("MFCR_MFCR8")         3, false, false, false, 382, 7, 375, 7,  0, 0}, // #258
  {DBGFIELD("EXTSWSLI_32_64_rec_SRADI_rec_EXTSWSLI_rec_RLDIC_rec") 2, false, false, false, 372, 3, 370, 5,  0, 0}, // #259
  {DBGFIELD("SRAD_rec_SLD_rec_SRD_rec") 2, false, false, false, 372, 3, 370, 5,  0, 0}, // #260
  {DBGFIELD("FDIV")               1, false, false, false, 389, 7, 382, 3,  0, 0}, // #261
  {DBGFIELD("FDIV_rec")           2, false, false, false, 396, 8, 385, 5,  0, 0}, // #262
  {DBGFIELD("XSSQRTDP")           1, false, false, false, 404, 3, 385, 3,  0, 0}, // #263
  {DBGFIELD("FSQRT")              1, false, false, false, 407, 7, 385, 3,  0, 0}, // #264
  {DBGFIELD("XVSQRTDP")           2, false, false, false, 414, 5, 390, 5,  0, 0}, // #265
  {DBGFIELD("XVSQRTSP")           2, false, false, false, 414, 5, 395, 5,  0, 0}, // #266
  {DBGFIELD("FSQRT_rec")          2, false, false, false, 419, 8, 400, 5,  0, 0}, // #267
  {DBGFIELD("XSSQRTSP")           1, false, false, false, 427, 3, 405, 3,  0, 0}, // #268
  {DBGFIELD("FSQRTS")             1, false, false, false, 430, 7, 405, 3,  0, 0}, // #269
  {DBGFIELD("FSQRTS_rec")         2, false, false, false, 437, 8, 408, 5,  0, 0}, // #270
  {DBGFIELD("XSDIVDP")            1, false, false, false, 445, 3, 382, 3,  0, 0}, // #271
  {DBGFIELD("FDIVS")              1, false, false, false, 430, 7, 405, 3,  0, 0}, // #272
  {DBGFIELD("FDIVS_rec")          2, false, false, false, 437, 8, 408, 5,  0, 0}, // #273
  {DBGFIELD("XSDIVSP")            1, false, false, false, 427, 3, 405, 3,  0, 0}, // #274
  {DBGFIELD("XVDIVSP")            2, false, false, false, 448, 7, 413, 5,  0, 0}, // #275
  {DBGFIELD("XVDIVDP")            2, false, false, false, 448, 7, 418, 5,  0, 0}, // #276
  {DBGFIELD("LFSU")               3, false, false, false, 455, 9, 423, 8,  0, 0}, // #277
  {DBGFIELD("LFSUX")              3, false, false, false, 455, 9, 423, 8,  0, 0}, // #278
  {DBGFIELD("STFDU_STFDUX_STFSU_STFSUX") 2, false, false, false, 295, 9, 431, 7,  0, 0}, // #279
  {DBGFIELD("STBU_STBU8_STDU_STHU_STHU8_STWU_STWU8") 2, false, false, false, 295, 9, 431, 7,  0, 0}, // #280
  {DBGFIELD("STBUX_STBUX8_STDUX_STHUX_STHUX8_STWUX_STWUX8") 2, false, false, false, 295, 9, 431, 7,  0, 0}, // #281
  {DBGFIELD("LBZU_LBZU8")         2, false, false, false, 284, 6, 286, 6,  0, 0}, // #282
  {DBGFIELD("LBZUX_LBZUX8")       2, false, false, false, 284, 6, 286, 6,  0, 0}, // #283
  {DBGFIELD("LDU")                2, false, false, false, 284, 6, 286, 6,  0, 0}, // #284
  {DBGFIELD("LDUX")               2, false, false, false, 284, 6, 286, 6,  0, 0}, // #285
  {DBGFIELD("LFDU")               2, false, false, false, 464, 9, 286, 6,  0, 0}, // #286
  {DBGFIELD("LFDUX")              2, false, false, false, 464, 9, 286, 6,  0, 0}, // #287
  {DBGFIELD("VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX") 1, false, false, false, 473, 5, 298, 4,  0, 0}, // #288
  {DBGFIELD("BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_BCCTR_BCCTR8_BCCTR8n_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_BCCTRn_BDNZ_BDNZ8_BDNZA_BDNZAm_BDNZAp_BDNZm_BDNZp_BDZ_BDZ8_BDZA_BDZAm_BDZAp_BDZm_BDZp_BDNZL_BDNZLA_BDNZLAm_BDNZLAp_BDNZLR_BDNZLR8_BDNZLRL_BDNZLRLm_BDNZLRLp_BDNZLRm_BDNZLRp_BDNZLm_BDNZLp_BDZL_BDZLA_BDZLAm_BDZLAp_BDZLR_BDZLR8_BDZLRL_BDZLRLm_BDZLRLp_BDZLRm_BDZLRp_BDZLm_BDZLp_BL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM_BLR_BLR8_BLRL_TAILB_TAILB8_TAILBA_TAILBA8_TAILBCTR_TAILBCTR8_gBC_gBCA_gBCAat_gBCCTR_gBCCTRL_gBCL_gBCLA_gBCLAat_gBCLR_gBCLRL_gBCLat_gBCat_BCLR_BCLRL_BCLRLn_BCLRn_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_RM_BCTRL_RM_B_BA_BC_BCC_BCCA_BCL_BCLalways_BCLn_BCTRL8_LDinto_toc_BCTRL_LWZinto_toc_BCTRL8_LDinto_toc_RM_BCTRL_LWZinto_toc_RM_BCn_CTRL_DEP") 1, false, false, false, 478, 3, 80, 2,  0, 0}, // #289
  {DBGFIELD("ADDPCIS")            2, false, false, false, 481, 5, 231, 4,  0, 0}, // #290
  {DBGFIELD("LDAT_LWAT")          5, false, false, false, 486, 8, 438, 18,  0, 0}, // #291
  {DBGFIELD("STDAT_STWAT")        3, false, false, false, 494, 8, 456, 10,  0, 0}, // #292
  {DBGFIELD("BRINC")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #293
  {DBGFIELD("EVABS_EVEQV_EVNAND_EVNEG_EVADDIW_EVADDW_EVAND_EVANDC_EVCMPEQ_EVCMPGTS_EVCMPGTU_EVCMPLTS_EVCMPLTU_EVCNTLSW_EVCNTLZW_EVEXTSB_EVEXTSH_EVMERGEHI_EVMERGEHILO_EVMERGELO_EVMERGELOHI_EVNOR_EVOR_EVORC_EVXOR_EVRLW_EVRLWI_EVRNDW_EVSLW_EVSLWI_EVSPLATFI_EVSPLATI_EVSRWIS_EVSRWIU_EVSRWS_EVSRWU_EVSUBFW_EVSUBIFW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #294
  {DBGFIELD("EVMRA_EVADDSMIAAW_EVADDSSIAAW_EVADDUMIAAW_EVADDUSIAAW_EVDIVWS_EVDIVWU_EVMHEGSMFAA_EVMHEGSMFAN_EVMHEGSMIAA_EVMHEGSMIAN_EVMHEGUMIAA_EVMHEGUMIAN_EVMHESMF_EVMHESMFA_EVMHESMFAAW_EVMHESMFANW_EVMHESMI_EVMHESMIA_EVMHESMIAAW_EVMHESMIANW_EVMHESSF_EVMHESSFA_EVMHESSFAAW_EVMHESSFANW_EVMHESSIAAW_EVMHESSIANW_EVMHEUMI_EVMHEUMIA_EVMHEUMIAAW_EVMHEUMIANW_EVMHEUSIAAW_EVMHEUSIANW_EVMHOGSMFAA_EVMHOGSMFAN_EVMHOGSMIAA_EVMHOGSMIAN_EVMHOGUMIAA_EVMHOGUMIAN_EVMHOSMF_EVMHOSMFA_EVMHOSMFAAW_EVMHOSMFANW_EVMHOSMI_EVMHOSMIA_EVMHOSMIAAW_EVMHOSMIANW_EVMHOSSF_EVMHOSSFA_EVMHOSSFAAW_EVMHOSSFANW_EVMHOSSIAAW_EVMHOSSIANW_EVMHOUMI_EVMHOUMIA_EVMHOUMIAAW_EVMHOUMIANW_EVMHOUSIAAW_EVMHOUSIANW_EVMWHSMF_EVMWHSMFA_EVMWHSMI_EVMWHSMIA_EVMWHSSF_EVMWHSSFA_EVMWHUMI_EVMWHUMIA_EVMWLSMIAAW_EVMWLSMIANW_EVMWLSSIAAW_EVMWLSSIANW_EVMWLUMI_EVMWLUMIA_EVMWLUMIAAW_EVMWLUMIANW_EVMWLUSIAAW_EVMWLUSIANW_EVMWSMF_EVMWSMFA_EVMWSMFAA_EVMWSMFAN_EVMWSMI_EVMWSMIA_EVMWSMIAA_EVMWSMIAN_EVMWSSF_EVMWSSFA_EVMWSSFAA_EVMWSSFAN_EVMWUMI_EVMWUMIA_EVMWUMIAA_EVMWUMIAN_EVSUBFSMIAAW_EVSUBFSSIAAW_EVSUBFUMIAAW_EVSUBFUSIAAW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #295
  {DBGFIELD("EVLDD_EVLDDX_EVLDH_EVLDHX_EVLDW_EVLDWX_EVLHHESPLAT_EVLHHESPLATX_EVLHHOSSPLAT_EVLHHOSSPLATX_EVLHHOUSPLAT_EVLHHOUSPLATX_EVLWHE_EVLWHEX_EVLWHOS_EVLWHOSX_EVLWHOU_EVLWHOUX_EVLWHSPLAT_EVLWHSPLATX_EVLWWSPLAT_EVLWWSPLATX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #296
  {DBGFIELD("EVSTDD_EVSTDDX_EVSTDH_EVSTDHX_EVSTDW_EVSTDWX_EVSTWHE_EVSTWHEX_EVSTWHO_EVSTWHOX_EVSTWWE_EVSTWWEX_EVSTWWO_EVSTWWOX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #297
  {DBGFIELD("HRFID_ATTN_CLRBHRB_MFBHRBE_NAP_RFCI_RFDI_RFMCI_SC") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #298
  {DBGFIELD("RFI")                8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #299
  {DBGFIELD("RFID")               8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #300
  {DBGFIELD("DSS_DSSALL_DST_DST64_DSTST_DSTST64_DSTSTT_DSTSTT64_DSTT_DSTT64_ICBLQ_LBEPX_LHEPX_LWEPX_TLBIVAX_TLBLD_TLBLI_TLBRE_TLBRE2_TLBSX_TLBSX2_TLBSX2D_TLBWE_TLBWE2_MBAR_TRAP_DCCCI_ICCCI") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #301
  {DBGFIELD("ICBLC_STBEPX_STHEPX_STWEPX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #302
  {DBGFIELD("LFDEPX")             8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #303
  {DBGFIELD("STFDEPX")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #304
  {DBGFIELD("MFSR_MFSRIN")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #305
  {DBGFIELD("MTSR_MTSRIN")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #306
  {DBGFIELD("MFDCR")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #307
  {DBGFIELD("MTDCR")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #308
  {DBGFIELD("NOP_GT_PWR6_NOP_GT_PWR7") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #309
  {DBGFIELD("TLBIA")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #310
  {DBGFIELD("WRTEE_WRTEEI")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #311
  {DBGFIELD("HASHCHK_HASHCHK8_HASHCHKP_HASHCHKP8_HASHST_HASHST8_HASHSTP_HASHSTP8_ADDEX_ADDEX8_CDTBCD_CDTBCD8_CBCDTD_CBCDTD8_ADDG6S_ADDG6S8") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #312
  {DBGFIELD("MSYNC")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #313
  {DBGFIELD("SLBSYNC")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #314
  {DBGFIELD("SLBFEE_rec")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #315
  {DBGFIELD("STOP")               8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #316
  {DBGFIELD("DCBA_DCBI")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #317
  {DBGFIELD("FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES") 1, false, false, false, 217, 7, 231, 3,  0, 0}, // #318
  {DBGFIELD("VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP") 2, false, false, false, 210, 7, 230, 5,  0, 0}, // #319
  {DBGFIELD("XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP") 1, false, false, false, 232, 3, 231, 3,  0, 0}, // #320
  {DBGFIELD("XVCVSPBF16")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #321
  {DBGFIELD("FADDS_FMULS_FSUBS")  1, false, false, false, 217, 7, 231, 3,  0, 0}, // #322
  {DBGFIELD("FMUL")               1, false, false, false, 217, 7, 231, 3,  0, 0}, // #323
  {DBGFIELD("VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP") 2, false, false, false, 210, 7, 230, 5,  0, 0}, // #324
  {DBGFIELD("VSUBFP")             2, false, false, false, 210, 7, 230, 5,  0, 0}, // #325
  {DBGFIELD("XSADDDP_XSADDSP_XSSUBDP_XSSUBSP") 1, false, false, false, 232, 3, 231, 3,  0, 0}, // #326
  {DBGFIELD("XSMULDP_XSMULSP")    1, false, false, false, 217, 7, 231, 3,  0, 0}, // #327
  {DBGFIELD("VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP") 2, false, false, false, 210, 7, 230, 5,  0, 0}, // #328
  {DBGFIELD("VEXPTEFP")           2, false, false, false, 210, 7, 230, 5,  0, 0}, // #329
  {DBGFIELD("FADDS_rec_FMULS_rec_FSUBS_rec") 2, false, false, false, 224, 8, 249, 5,  0, 0}, // #330
  {DBGFIELD("FMUL_rec")           2, false, false, false, 224, 8, 249, 5,  0, 0}, // #331
  {DBGFIELD("FCFID_rec_FCFIDS_rec_FCFIDU_rec_FCFIDUS_rec_FCTID_rec_FCTIDU_rec_FCTIDUZ_rec_FCTIDZ_rec_FCTIW_rec_FCTIWU_rec_FCTIWUZ_rec_FCTIWZ_rec_FRE_rec_FRES_rec_FRIMD_rec_FRIMS_rec_FRIND_rec_FRINS_rec_FRIPD_rec_FRIPS_rec_FRIZD_rec_FRIZS_rec_FRSP_rec_FRSQRTE_rec_FRSQRTES_rec") 2, false, false, false, 224, 8, 249, 5,  0, 0}, // #332
  {DBGFIELD("BCLR_BCLRn_BDNZLR_BDNZLR8_BDNZLRm_BDNZLRp_BDZLR_BDZLR8_BDZLRm_BDZLRp_gBCLR_BCLRL_BCLRLn_BDNZLRL_BDNZLRLm_BDNZLRLp_BDZLRL_BDZLRLm_BDZLRLp_gBCLRL_BL_BL8_BL8_NOP_BL8_NOP_RM_BL8_NOP_TLS_BL8_RM_BL8_TLS_BL8_TLS__BLR_BLR8_BLRL_BL_NOP_BL_NOP_RM_BL_RM_BL_TLS") 1, false, false, false, 478, 3, 80, 2,  0, 0}, // #333
  {DBGFIELD("BL8_NOTOC_BL8_NOTOC_RM_BL8_NOTOC_TLS") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #334
  {DBGFIELD("B_BCC_BCCA_BCCCTR_BCCCTR8_BCCCTRL_BCCCTRL8_BCCL_BCCLA_BCCLR_BCCLRL_CTRL_DEP_TAILB_TAILB8_BA_TAILBA_TAILBA8_BC_BCTR_BCTR8_BCTRL_BCTRL8_BCTRL8_LDinto_toc_BCTRL8_LDinto_toc_RM_BCTRL8_RM_BCTRL_LWZinto_toc_BCTRL_LWZinto_toc_RM_BCTRL_RM_BCn_BDNZ_BDNZ8_BDNZm_BDNZp_BDZ_BDZ8_BDZm_BDZp_TAILBCTR_TAILBCTR8_gBC_gBCat_BCL_BCLalways_BCLn_BDNZL_BDNZLm_BDNZLp_BDZL_BDZLm_BDZLp_gBCL_gBCLat_BLA_BLA8_BLA8_NOP_BLA8_NOP_RM_BLA8_RM_BLA_RM") 1, false, false, false, 478, 3, 80, 2,  0, 0}, // #335
  {DBGFIELD("BCCTR_BCCTR8_BCCTR8n_BCCTRn_gBCCTR_BCCTRL_BCCTRL8_BCCTRL8n_BCCTRLn_gBCCTRL") 1, false, false, false, 478, 3, 80, 2,  0, 0}, // #336
  {DBGFIELD("VSBOX")              1, false, false, false, 473, 5, 298, 4,  0, 0}, // #337
  {DBGFIELD("CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #338
  {DBGFIELD("VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #339
  {DBGFIELD("XSCVDPQP_XSCVQPDP_XSCVQPDPO_XSCVQPSDZ_XSCVQPSWZ_XSCVQPUDZ_XSCVQPUWZ_XSCVSDQP_XSCVUDQP") 1, false, false, false, 240, 5, 254, 4,  0, 0}, // #340
  {DBGFIELD("XSCVQPSQZ_XSCVQPUQZ_XSCVSQQP_XSCVUQQP") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #341
  {DBGFIELD("XSADDQP_XSADDQPO_XSSUBQP_XSSUBQPO") 1, false, false, false, 240, 5, 254, 4,  0, 0}, // #342
  {DBGFIELD("HASHST_HASHST8_HASHSTP_HASHSTP8") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #343
  {DBGFIELD("XSMULQP_XSMULQPO")   1, false, false, false, 250, 5, 262, 4,  0, 0}, // #344
  {DBGFIELD("VDIVESQ_VDIVEUQ_VDIVSQ_VDIVUQ") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #345
  {DBGFIELD("VMODSQ_VMODUQ")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #346
  {DBGFIELD("DIVWE_DIVWEO_DIVWEU_DIVWEUO") 1, false, false, false, 348, 8, 262, 4,  0, 0}, // #347
  {DBGFIELD("VDIVSD_VDIVUD")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #348
  {DBGFIELD("VMODSD_VMODUD")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #349
  {DBGFIELD("VDIVSW_VDIVUW")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #350
  {DBGFIELD("VMODSW_VMODUW")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #351
  {DBGFIELD("VDIVESD_VDIVEUD")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #352
  {DBGFIELD("VDIVESW_VDIVEUW")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #353
  {DBGFIELD("BCDCTN_rec_VMUL10CUQ_VMUL10UQ_XSXSIGQP") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #354
  {DBGFIELD("BCDCFN_rec_BCDCFZ_rec_BCDCPSGN_rec_BCDCTZ_rec_BCDSETSGN_rec_BCDUS_rec_BCDUTRUNC_rec_VADDCUQ_VMUL10ECUQ_VMUL10EUQ_VSUBCUQ_XSTSTDCQP") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #355
  {DBGFIELD("VADDUQM_VSUBUQM")    1, false, false, false, 235, 5, 226, 4,  0, 0}, // #356
  {DBGFIELD("XSCMPEQQP_XSCMPGEQP_XSCMPGTQP_XSMAXCQP_XSMINCQP") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #357
  {DBGFIELD("XXGENPCVBM")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #358
  {DBGFIELD("BCDADD_rec_BCDS_rec_BCDSUB_rec_BCDTRUNC_rec_VADDECUQ_VADDEUQM_VSUBECUQ_VSUBEUQM") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #359
  {DBGFIELD("TRAP")               8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #360
  {DBGFIELD("TW")                 1, false, false, false, 200, 7, 222, 3,  0, 0}, // #361
  {DBGFIELD("CBCDTD_CBCDTD8_CDTBCD_CDTBCD8") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #362
  {DBGFIELD("CNTLZD_CNTLZD_rec_CNTLZW_CNTLZW8_CNTLZW8_rec_CNTLZW_rec_CNTTZD_CNTTZD_rec_CNTTZW_CNTTZW8_CNTTZW8_rec_CNTTZW_rec_POPCNTD_POPCNTW") 1, false, false, false, 207, 3, 222, 3,  0, 0}, // #363
  {DBGFIELD("FTSQRT")             1, false, false, false, 200, 7, 222, 3,  0, 0}, // #364
  {DBGFIELD("MTVSRBM_MTVSRBMI_MTVSRDM_MTVSRHM_MTVSRQM_MTVSRWM_VEXPANDBM_VEXPANDDM_VEXPANDHM_VEXPANDQM_VEXPANDWM_VEXTRACTBM_VEXTRACTDM_VEXTRACTHM_VEXTRACTQM_VEXTRACTWM_XVTLSBB") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #365
  {DBGFIELD("POPCNTB_POPCNTB8")   1, false, false, false, 207, 3, 218, 3,  0, 0}, // #366
  {DBGFIELD("VCLZB_VCLZD_VCLZH_VCLZW_VCTZB_VCTZD_VCTZH_VCTZW_VPOPCNTD_VPOPCNTW_VPRTYBD_VPRTYBW") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #367
  {DBGFIELD("VPOPCNTB_VPOPCNTH")  2, false, false, false, 193, 7, 217, 5,  0, 0}, // #368
  {DBGFIELD("XSCVSPDPN")          1, false, false, false, 207, 3, 222, 3,  0, 0}, // #369
  {DBGFIELD("XSTSQRTDP")          1, false, false, false, 207, 3, 222, 3,  0, 0}, // #370
  {DBGFIELD("XVCVHPSP")           2, false, false, false, 210, 7, 230, 5,  0, 0}, // #371
  {DBGFIELD("XVTSQRTDP_XVTSQRTSP") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #372
  {DBGFIELD("CMPEQB")             1, false, false, false, 200, 7, 222, 3,  0, 0}, // #373
  {DBGFIELD("EXTSWSLI_32_64_rec_EXTSWSLI_rec") 2, false, false, false, 372, 3, 370, 5,  0, 0}, // #374
  {DBGFIELD("SLD_rec_SRD_rec")    2, false, false, false, 372, 3, 370, 5,  0, 0}, // #375
  {DBGFIELD("SLW8_rec_SLW_rec_SRW8_rec_SRW_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #376
  {DBGFIELD("VADDCUW_VADDSBS_VADDSHS_VADDSWS_VADDUBS_VADDUHS_VADDUWS_VAVGSB_VAVGSH_VAVGSW_VAVGUB_VAVGUH_VAVGUW_VMAXFP_VMINFP_VSUBCUW_VSUBSBS_VSUBSHS_VSUBSWS_VSUBUBS_VSUBUHS_VSUBUWS_XVMAXDP_XVMAXSP_XVMINDP_XVMINSP_XVTSTDCDP_XVTSTDCSP") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #377
  {DBGFIELD("VCMPBFP_VCMPBFP_rec_VCMPEQFP_VCMPEQFP_rec_VCMPEQUB_rec_VCMPEQUD_rec_VCMPEQUH_rec_VCMPEQUW_rec_VCMPGEFP_VCMPGEFP_rec_VCMPGTFP_VCMPGTFP_rec_VCMPGTSB_rec_VCMPGTSD_rec_VCMPGTSH_rec_VCMPGTSW_rec_VCMPGTUB_rec_VCMPGTUD_rec_VCMPGTUH_rec_VCMPGTUW_rec_VCMPNEB_rec_VCMPNEH_rec_VCMPNEW_rec_VCMPNEZB_rec_VCMPNEZH_rec_VCMPNEZW_rec_XVCMPEQDP_XVCMPEQDP_rec_XVCMPEQSP_XVCMPEQSP_rec_XVCMPGEDP_XVCMPGEDP_rec_XVCMPGESP_XVCMPGESP_rec_XVCMPGTDP_XVCMPGTDP_rec_XVCMPGTSP_XVCMPGTSP_rec") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #378
  {DBGFIELD("VCMPEQUQ_VCMPEQUQ_rec_VCMPGTSQ_VCMPGTSQ_rec_VCMPGTUQ_VCMPGTUQ_rec") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #379
  {DBGFIELD("VCMPSQ_VCMPUQ_VCNTMBB_VCNTMBD_VCNTMBH_VCNTMBW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #380
  {DBGFIELD("XSMAXCDP_XSMAXDP_XSMAXJDP_XSMINCDP_XSMINDP_XSMINJDP") 1, false, false, false, 207, 3, 222, 3,  0, 0}, // #381
  {DBGFIELD("RLDIC_rec")          2, false, false, false, 372, 3, 370, 5,  0, 0}, // #382
  {DBGFIELD("RLDICL_32_rec_RLDICL_rec_RLDICR_rec") 2, false, false, false, 375, 7, 370, 5,  0, 0}, // #383
  {DBGFIELD("VSHASIGMAD_VSHASIGMAW") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #384
  {DBGFIELD("VRLQ_VRLQNM_VSLQ_VSRAQ_VSRQ") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #385
  {DBGFIELD("VRLQMI")             8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #386
  {DBGFIELD("CR6SET_CREQV_CRSET") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #387
  {DBGFIELD("DSS_DSSALL")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #388
  {DBGFIELD("MFCTR_MFCTR8_MFLR_MFLR8") 1, false, false, false, 340, 8, 254, 4,  0, 0}, // #389
  {DBGFIELD("NOP_ORI_ORI8")       1, false, false, false, 207, 3, 218, 3,  0, 0}, // #390
  {DBGFIELD("VXOR_V_SET0_V_SET0B_V_SET0H") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #391
  {DBGFIELD("XXLEQV_XXLEQVOnes_XXLXOR_XXLXORdpz_XXLXORspz_XXLXORz") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #392
  {DBGFIELD("ADDI_ADDI8_LI_LI8_ADDIS_ADDIS8_LIS_LIS8_EXTSB_EXTSB8_EXTSB8_32_64_EXTSB8_rec_EXTSB_rec_EXTSH_EXTSH8_EXTSH8_32_64_EXTSH8_rec_EXTSH_rec_EXTSW_EXTSW_32_EXTSW_32_64_EXTSW_32_64_rec_EXTSW_rec_NEG_NEG8_NEG8_rec_NEG_rec_NEG8O_NEGO") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #393
  {DBGFIELD("ADDIdtprelL32_ADDItlsldLADDR32_ADDISdtprelHA32") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #394
  {DBGFIELD("ADDItocL_ADDIStocHA_ADDIStocHA8") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #395
  {DBGFIELD("ADDME_ADDME8_ADDME8O_ADDMEO_ADDZE_ADDZE8_ADDZE8O_ADDZEO_SUBFME_SUBFME8_SUBFME8O_SUBFMEO_SUBFZE_SUBFZE8_SUBFZE8O_SUBFZEO") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #396
  {DBGFIELD("FABSD_FABSS_FMR_FNABSD_FNABSS_FNEGD_FNEGS") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #397
  {DBGFIELD("SETB_SETB8")         1, false, false, false, 207, 3, 222, 3,  0, 0}, // #398
  {DBGFIELD("SETBC_SETBC8_SETBCR_SETBCR8_SETNBC_SETNBC8_SETNBCR_SETNBCR8") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #399
  {DBGFIELD("VEXTSB2D_VEXTSB2Ds_VEXTSB2W_VEXTSB2Ws_VEXTSH2D_VEXTSH2Ds_VEXTSH2W_VEXTSH2Ws_VEXTSW2D_VEXTSW2Ds_VNEGD_VNEGW") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #400
  {DBGFIELD("VEXTSD2Q")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #401
  {DBGFIELD("XSABSDP_XSNABSDP_XSNABSDPs_XSNEGDP_XSXEXPDP") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #402
  {DBGFIELD("XSABSQP_XSNABSQP_XSNEGQP_XSXEXPQP_XVABSDP_XVABSSP_XVNABSDP_XVNABSSP_XVNEGDP_XVNEGSP_XVXEXPDP_XVXEXPSP") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #403
  {DBGFIELD("XVXSIGDP_XVXSIGSP")  2, false, false, false, 193, 7, 225, 5,  0, 0}, // #404
  {DBGFIELD("ADD4_ADD4TLS_ADD8_ADD8TLS_ADD8TLS__ADD4_rec_ADD8_rec_ADD4O_ADD8O_AND_AND8_AND8_rec_AND_rec_ANDC_ANDC8_ANDC8_rec_ANDC_rec_EQV_EQV8_EQV8_rec_EQV_rec_NAND_NAND8_NAND8_rec_NAND_rec_NOR_NOR8_NOR8_rec_NOR_rec_OR_OR8_OR8_rec_OR_rec_ORC_ORC8_ORC8_rec_ORC_rec_ORIS_ORIS8_XOR_XOR8_XOR8_rec_XOR_rec_XORI_XORI8_XORIS_XORIS8") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #405
  {DBGFIELD("ADDE_ADDE8_ADDE8O_ADDEO_ADDIC_ADDIC8_ANDI8_rec_ANDI_rec_ANDIS8_rec_ANDIS_rec_SUBF_SUBF8_SUBF8_rec_SUBF_rec_SUBFE_SUBFE8_SUBFE8O_SUBFEO_SUBFIC_SUBFIC8_SUBF8O_SUBFO") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #406
  {DBGFIELD("CMPB_CMPB8")         1, false, false, false, 207, 3, 222, 3,  0, 0}, // #407
  {DBGFIELD("CRAND_CRANDC_CRNAND_CRNOR_CROR_CRORC_CR6UNSET_CRUNSET_CRXOR") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #408
  {DBGFIELD("EXTSWSLI_EXTSWSLI_32_64_SRADI_SRADI_32") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #409
  {DBGFIELD("SLW_SLW8_SRW_SRW8")  1, false, false, false, 200, 7, 218, 3,  0, 0}, // #410
  {DBGFIELD("VADDUBM_VADDUDM_VADDUHM_VADDUWM_VEQV_VNAND_VORC_VSLD_VSRAD_VSRD_VSUBUBM_VSUBUDM_VSUBUHM_VSUBUWM_XXLAND_XXLANDC_XXLNAND_XXLNOR_XXLOR_XXLORf_XXLORC") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #411
  {DBGFIELD("VAND_VANDC_VMRGEW_VMRGOW_VNOR_VOR_VRLB_VRLD_VRLDNM_VRLH_VRLW_VRLWNM_VSLB_VSLH_VSLW_VSRAB_VSRAH_VSRAW_VSRB_VSRH_VSRW_XSCPSGNQP_XSIEXPQP_XVCPSGNDP_XVCPSGNSP_XVIEXPDP_XVIEXPSP") 2, false, false, false, 193, 7, 217, 5,  0, 0}, // #412
  {DBGFIELD("VMAXSB_VMAXSD_VMAXSH_VMAXSW_VMAXUB_VMAXUD_VMAXUH_VMAXUW_VMINSB_VMINSD_VMINSH_VMINSW_VMINUB_VMINUD_VMINUH_VMINUW") 2, false, false, false, 193, 7, 225, 5,  0, 0}, // #413
  {DBGFIELD("ADDEX_ADDEX8")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #414
  {DBGFIELD("DST_DST64_DSTT_DSTT64_DSTST_DSTST64_DSTSTT_DSTSTT64") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #415
  {DBGFIELD("RLDICL_RLDICL_32_RLDICL_32_64_RLDICR_RLDICR_32") 1, false, false, false, 200, 7, 218, 3,  0, 0}, // #416
  {DBGFIELD("MFFS_MFFS_rec_MFFSL") 2, false, false, false, 365, 7, 298, 5,  0, 0}, // #417
  {DBGFIELD("TRECHKPT")           1, false, false, false, 207, 3, 218, 3,  0, 0}, // #418
  {DBGFIELD("ADDME8_rec_ADDME_rec_ADDME8O_rec_ADDMEO_rec_ADDZE8_rec_ADDZE_rec_ADDZE8O_rec_ADDZEO_rec_SUBFME8_rec_SUBFME_rec_SUBFME8O_rec_SUBFMEO_rec_SUBFZE8_rec_SUBFZE_rec_SUBFZE8O_rec_SUBFZEO_rec") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #419
  {DBGFIELD("MTFSB0")             1, false, false, false, 200, 7, 222, 3,  0, 0}, // #420
  {DBGFIELD("NEG8O_rec_NEGO_rec") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #421
  {DBGFIELD("ADDE8_rec_ADDE_rec_ADDE8O_rec_ADDEO_rec_ADDIC_rec_SUBFE8_rec_SUBFE_rec_SUBFE8O_rec_SUBFEO_rec_SUBF8O_rec_SUBFO_rec") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #422
  {DBGFIELD("ADDG6S_ADDG6S8")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #423
  {DBGFIELD("HRFID")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #424
  {DBGFIELD("FABSD_rec_FABSS_rec_FMR_rec_FNABSD_rec_FNABSS_rec_FNEGD_rec_FNEGS_rec") 2, false, false, false, 375, 7, 358, 6,  0, 0}, // #425
  {DBGFIELD("SC")                 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #426
  {DBGFIELD("ADDC_ADDC8_ADDC8O_ADDCO_SUBFC_SUBFC8_SUBFC8O_SUBFCO") 1, false, false, false, 207, 3, 218, 3,  0, 0}, // #427
  {DBGFIELD("ADDC8_rec_ADDC_rec_SUBFC8_rec_SUBFC_rec") 2, false, false, false, 372, 3, 352, 6,  0, 0}, // #428
  {DBGFIELD("MTFSF_MTFSFI_MTFSFIb") 2, false, false, false, 365, 7, 364, 6,  0, 0}, // #429
  {DBGFIELD("MTFSFI_rec")         2, false, false, false, 365, 7, 364, 6,  0, 0}, // #430
  {DBGFIELD("VSTRIBL_rec_VSTRIBR_rec_VSTRIHL_rec_VSTRIHR_rec") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #431
  {DBGFIELD("LBZ_LBZ8_LDBRX_LHBRX_LHBRX8_LHZ_LHZ8_LWBRX_LWBRX8_LWZ_LWZ8") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #432
  {DBGFIELD("LD")                 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #433
  {DBGFIELD("LDtoc_LDtocBA_LDtocCPT_LDtocJTI_LDtocL_SPILLTOVSR_LD_LWZtoc_LWZtocL") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #434
  {DBGFIELD("LXVRBX_LXVRDX_LXVRHX_LXVRWX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #435
  {DBGFIELD("DCBT_DCBTST")        1, false, false, false, 270, 3, 278, 3,  0, 0}, // #436
  {DBGFIELD("ICBT_LBZX_LBZX8_LBZXTLS_LBZXTLS__LBZXTLS_32_LHZX_LHZX8_LHZXTLS_LHZXTLS__LHZXTLS_32_LWZX_LWZX8_LWZXTLS_LWZXTLS__LWZXTLS_32") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #437
  {DBGFIELD("LDX_LDXTLS_LDXTLS_") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #438
  {DBGFIELD("SPILLTOVSR_LDX")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #439
  {DBGFIELD("LBZCIX_LDCIX_LHZCIX_LWZCIX") 1, false, false, false, 270, 3, 278, 3,  0, 0}, // #440
  {DBGFIELD("MTSR")               8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #441
  {DBGFIELD("MTVRSAVE_MTVRSAVEv") 1, false, false, false, 340, 8, 254, 4,  0, 0}, // #442
  {DBGFIELD("LSWI")               1, false, false, false, 270, 3, 278, 3,  0, 0}, // #443
  {DBGFIELD("PLBZ_PLBZ8_PLBZ8pc_PLBZpc_PLD_PLDpc_PLFD_PLFDpc_PLFS_PLFSpc_PLHA_PLHA8_PLHA8pc_PLHApc_PLHZ_PLHZ8_PLHZ8pc_PLHZpc_PLWA_PLWA8_PLWA8pc_PLWApc_PLWZ_PLWZ8_PLWZ8pc_PLWZpc_PLXSD_PLXSDpc_PLXSSP_PLXSSPpc_PLXV_PLXVpc_PLXVP_PLXVPpc") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #444
  {DBGFIELD("LXVP_LXVPX")         8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #445
  {DBGFIELD("MFSR")               8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #446
  {DBGFIELD("MFTB8")              1, false, false, false, 340, 8, 254, 4,  0, 0}, // #447
  {DBGFIELD("XXSETACCZ")          8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #448
  {DBGFIELD("XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #449
  {DBGFIELD("XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #450
  {DBGFIELD("XVI8GER4SPP")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #451
  {DBGFIELD("PMXVF32GER_PMXVF64GER") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #452
  {DBGFIELD("PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #453
  {DBGFIELD("PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #454
  {DBGFIELD("PMXVI8GER4SPP")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #455
  {DBGFIELD("XXMTACC")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #456
  {DBGFIELD("XXMFACC")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #457
  {DBGFIELD("MULLD_MULLDO")       1, false, false, false, 217, 7, 235, 3,  0, 0}, // #458
  {DBGFIELD("VMULHSD_VMULHUD_VMULLD") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #459
  {DBGFIELD("VSPLTISW")           1, false, false, false, 235, 5, 226, 4,  0, 0}, // #460
  {DBGFIELD("V_SETALLONES_V_SETALLONESB_V_SETALLONESH") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #461
  {DBGFIELD("BRD_BRH_BRH8_BRW_BRW8") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #462
  {DBGFIELD("LXVKQ_VSTRIBL_VSTRIBR_VSTRIHL_VSTRIHR") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #463
  {DBGFIELD("MFVSRLD_MTVSRWS_VCLZLSBB_VCTZLSBB_VPRTYBQ") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #464
  {DBGFIELD("VGBBD_VUPKHPX_VUPKHSB_VUPKHSH_VUPKHSW_VUPKLPX_VUPKLSB_VUPKLSH_VUPKLSW_XXBRD_XXBRH_XXBRQ_XXBRW") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #465
  {DBGFIELD("VSPLTISB_VSPLTISH_XXSPLTIB") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #466
  {DBGFIELD("XVCVBF16SPN")        8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #467
  {DBGFIELD("VBPERMQ_VMRGHB_VMRGHH_VMRGHW_VMRGLB_VMRGLH_VMRGLW_VPKPX_VPKSDSS_VPKSDUS_VPKSHSS_VPKSHUS_VPKSWSS_VPKSWUS_VPKUDUM_VPKUDUS_VPKUHUM_VPKUHUS_VPKUWUM_VPKUWUS_VSL_VSLO_VSLV_VSR_VSRO_VSRV_XXEXTRACTUW") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #468
  {DBGFIELD("VCLRLB_VCLRRB_XXGENPCVDM_XXGENPCVHM_XXGENPCVWM") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #469
  {DBGFIELD("VEXTRACTD_VEXTRACTUB_VEXTRACTUH_VEXTRACTUW_VEXTUBLX_VEXTUBRX_VEXTUHLX_VEXTUHRX_VEXTUWLX_VEXTUWRX_VINSERTD_VINSERTW") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #470
  {DBGFIELD("VSPLTB_VSPLTBs_VSPLTH_VSPLTHs_VSPLTW_XXMRGHW_XXMRGLW_XXPERMDI_XXPERMDIs_XXSLDWI_XXSLDWIs_XXSPLTW_XXSPLTWs") 1, false, false, false, 235, 5, 226, 4,  0, 0}, // #471
  {DBGFIELD("VEXTDDVLX_VEXTDDVRX_VEXTDUBVLX_VEXTDUBVRX_VEXTDUHVLX_VEXTDUHVRX_VEXTDUWVLX_VEXTDUWVRX_VINSBLX_VINSBRX_VINSBVLX_VINSBVRX_VINSD_VINSDLX_VINSDRX_VINSHLX_VINSHRX_VINSHVLX_VINSHVRX_VINSW_VINSWLX_VINSWRX_VINSWVLX_VINSWVRX_VSLDBI_VSRDBI") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #472
  {DBGFIELD("VSUMSWS")            2, false, false, false, 210, 7, 230, 5,  0, 0}, // #473
  {DBGFIELD("XXSPLTIDP_XXSPLTIW") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #474
  {DBGFIELD("XXBLENDVB_XXBLENDVD_XXBLENDVH_XXBLENDVW_XXSPLTI32DX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #475
  {DBGFIELD("XXEVAL")             8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #476
  {DBGFIELD("XXPERMX")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #477
  {DBGFIELD("DCBST_DCBZ")         1, false, false, false, 270, 3, 278, 3,  0, 0}, // #478
  {DBGFIELD("ICBI")               1, false, false, false, 270, 3, 278, 3,  0, 0}, // #479
  {DBGFIELD("DCBF")               1, false, false, false, 270, 3, 278, 3,  0, 0}, // #480
  {DBGFIELD("PSTXVP_PSTXVPpc")    8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #481
  {DBGFIELD("STB_STB8_STDBRX_STH_STH8_STHBRX_STW_STW8_STWBRX") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #482
  {DBGFIELD("SPILLTOVSR_ST")      8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #483
  {DBGFIELD("STD")                1, false, false, false, 326, 8, 240, 4,  0, 0}, // #484
  {DBGFIELD("DFSTOREf32_DFSTOREf64_STIWX") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #485
  {DBGFIELD("STXVRBX_STXVRDX_STXVRHX_STXVRWX") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #486
  {DBGFIELD("SPILLTOVSR_STX")     8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #487
  {DBGFIELD("EnforceIEIO")        1, false, false, false, 270, 3, 278, 3,  0, 0}, // #488
  {DBGFIELD("STBCIX_STDCIX_STHCIX_STWCIX") 1, false, false, false, 326, 8, 240, 4,  0, 0}, // #489
  {DBGFIELD("PSTB_PSTB8_PSTB8pc_PSTBpc_PSTD_PSTDpc_PSTFD_PSTFDpc_PSTFS_PSTFSpc_PSTH_PSTH8_PSTH8pc_PSTHpc_PSTW_PSTW8_PSTW8pc_PSTWpc_PSTXSD_PSTXSDpc_PSTXSSP_PSTXSSPpc_PSTXV_PSTXVpc") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #490
  {DBGFIELD("STXVP_STXVPX")       8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #491
  {DBGFIELD("ATTN_NAP")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #492
  {DBGFIELD("DCBZL")              1, false, false, false, 270, 3, 278, 3,  0, 0}, // #493
  {DBGFIELD("DCCCI_ICBLQ_ICCCI_TLBLD_TLBLI_TLBRE2_TLBSX2_TLBSX2D_TLBWE2") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #494
  {DBGFIELD("ICBLC")              8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #495
  {DBGFIELD("CLRBHRB")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #496
  {DBGFIELD("MFBHRBE")            8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #497
  {DBGFIELD("PADDI_PADDI8_PADDI8pc_PADDIpc") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #498
  {DBGFIELD("PLI_PLI8")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #499
  {DBGFIELD("VMULESB_VMULESH_VMULESW_VMULEUB_VMULEUH_VMULEUW_VMULOSB_VMULOSH_VMULOSW_VMULOUB_VMULOUH_VMULOUW_VSUM2SWS_VSUM4SBS_VSUM4SHS_VSUM4UBS") 2, false, false, false, 210, 7, 230, 5,  0, 0}, // #500
  {DBGFIELD("VMULESD_VMULEUD_VMULHSW_VMULHUW_VMULOSD_VMULOUD") 8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #501
  {DBGFIELD("VMSUMCUD")           8191, false, false, false,  0, 0,  0, 0,  0, 0}, // #502
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #503
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #504
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #505
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #506
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #507
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #508
  {DBGFIELD("P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #509
  {DBGFIELD("P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #510
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #511
  {DBGFIELD("P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #512
  {DBGFIELD("P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #513
  {DBGFIELD("P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #514
  {DBGFIELD("P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #515
  {DBGFIELD("P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #516
  {DBGFIELD("P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #517
  {DBGFIELD("P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #518
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #519
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #520
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #521
  {DBGFIELD("P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #522
  {DBGFIELD("P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #523
  {DBGFIELD("P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #524
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #525
  {DBGFIELD("P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #526
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #527
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #528
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #529
  {DBGFIELD("P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #530
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #531
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #532
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #533
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #534
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #535
  {DBGFIELD("P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C") 0, false, false, false,  0, 0,  0, 0,  0, 0}, // #536
}; // P9ModelSchedClasses

#undef DBGFIELD

static const llvm::MCSchedModel NoSchedModel = {
  MCSchedModel::DefaultIssueWidth,
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  MCSchedModel::DefaultLoadLatency,
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  0, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  nullptr, // No Itinerary
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel PPC440Model = {
  2, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  5, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  1, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  PPC440Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel G3ItinerariesModel = {
  MCSchedModel::DefaultIssueWidth,
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  MCSchedModel::DefaultLoadLatency,
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  2, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  G3Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel G4ItinerariesModel = {
  MCSchedModel::DefaultIssueWidth,
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  MCSchedModel::DefaultLoadLatency,
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  3, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  G4Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel G4PlusItinerariesModel = {
  MCSchedModel::DefaultIssueWidth,
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  MCSchedModel::DefaultLoadLatency,
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  4, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  G4PlusItineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel G5Model = {
  4, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  3, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  16, // MispredictPenalty
  false, // PostRAScheduler
  false, // CompleteModel
  5, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  G5Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel PPCA2Model = {
  1, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  6, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  13, // MispredictPenalty
  false, // PostRAScheduler
  false, // CompleteModel
  6, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  PPCA2Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel PPCE500Model = {
  2, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  5, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  7, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  PPCE500Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel PPCE500mcModel = {
  2, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  5, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  8, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  PPCE500mcItineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel PPCE5500Model = {
  2, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  MCSchedModel::DefaultLoopMicroOpBufferSize,
  6, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  false, // CompleteModel
  9, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  PPCE5500Itineraries,
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel P8Model = {
  8, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  60, // LoopMicroOpBufferSize
  3, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  16, // MispredictPenalty
  false, // PostRAScheduler
  false, // CompleteModel
  10, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  P8Itineraries,
  nullptr // No extra processor descriptor
};

static const unsigned P10ModelProcResourceSubUnits[] = {
  0,  // Invalid
};

// {Name, NumUnits, SuperIdx, BufferSize, SubUnitsIdxBegin}
static const llvm::MCProcResourceDesc P10ModelProcResources[] = {
  {"InvalidUnit", 0, 0, 0, 0},
  {"P10_ANY_SLOT",    8, 0, -1, nullptr}, // #1
  {"P10_BF",          4, 0, -1, nullptr}, // #2
  {"P10_BR",          2, 0, -1, nullptr}, // #3
  {"P10_CY",          4, 0, -1, nullptr}, // #4
  {"P10_DF",          1, 0, -1, nullptr}, // #5
  {"P10_DV",          2, 0, -1, nullptr}, // #6
  {"P10_DX",          2, 0, -1, nullptr}, // #7
  {"P10_EVEN_SLOT",   4, 1, -1, nullptr}, // #8, Super=P10_ANY_SLOT
  {"P10_FX",          4, 0, -1, nullptr}, // #9
  {"P10_LD",          2, 0, -1, nullptr}, // #10
  {"P10_MM",          2, 0, -1, nullptr}, // #11
  {"P10_ODD_SLOT",    4, 1, -1, nullptr}, // #12, Super=P10_ANY_SLOT
  {"P10_PM",          4, 0, -1, nullptr}, // #13
  {"P10_ST",          2, 0, -1, nullptr}, // #14
  {"P10_SX",          2, 0, -1, nullptr}, // #15
};

static const llvm::MCSchedModel P10Model = {
  8, // IssueWidth
  44, // MicroOpBufferSize
  60, // LoopMicroOpBufferSize
  MCSchedModel::DefaultLoadLatency,
  MCSchedModel::DefaultHighLatency,
  MCSchedModel::DefaultMispredictPenalty,
  false, // PostRAScheduler
  true, // CompleteModel
  11, // Processor ID
  P10ModelProcResources,
  P10ModelSchedClasses,
  16,
  537,
  nullptr, // No Itinerary
  nullptr // No extra processor descriptor
};

static const llvm::MCSchedModel P7Model = {
  6, // IssueWidth
  MCSchedModel::DefaultMicroOpBufferSize,
  40, // LoopMicroOpBufferSize
  3, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  16, // MispredictPenalty
  false, // PostRAScheduler
  false, // CompleteModel
  12, // Processor ID
  nullptr, nullptr, 0, 0, // No instruction-level machine model.
  P7Itineraries,
  nullptr // No extra processor descriptor
};

static const unsigned P9ModelProcResourceSubUnits[] = {
  0,  // Invalid
  10,   10,   11,   11,   12,   12,   // DISP_NBR
  10,   10,   11,   11,   // DISP_SS
};

// {Name, NumUnits, SuperIdx, BufferSize, SubUnitsIdxBegin}
static const llvm::MCProcResourceDesc P9ModelProcResources[] = {
  {"InvalidUnit", 0, 0, 0, 0},
  {"ALU",             4, 0, -1, nullptr}, // #1
  {"ALUE",            2, 1, -1, nullptr}, // #2, Super=ALU
  {"ALUO",            2, 1, -1, nullptr}, // #3, Super=ALU
  {"BR",              1, 0, 16, nullptr}, // #4
  {"CY",              1, 0, -1, nullptr}, // #5
  {"DFU",             1, 0, -1, nullptr}, // #6
  {"DISP_NBR",        6, 0, -1, P9ModelProcResourceSubUnits + 1}, // #7
  {"DISP_SS",         4, 0, -1, P9ModelProcResourceSubUnits + 7}, // #8
  {"DISPb01",         2, 0, -1, nullptr}, // #9
  {"DISPx02",         2, 0, -1, nullptr}, // #10
  {"DISPx13",         2, 0, -1, nullptr}, // #11
  {"DISPxab",         2, 0, -1, nullptr}, // #12
  {"DIV",             2, 0, -1, nullptr}, // #13
  {"DP",              4, 0, -1, nullptr}, // #14
  {"DPE",             2, 14, -1, nullptr}, // #15, Super=DP
  {"DPO",             2, 14, -1, nullptr}, // #16, Super=DP
  {"IP_AGEN",         4, 0, -1, nullptr}, // #17
  {"IP_EXEC",         4, 0, -1, nullptr}, // #18
  {"IP_EXECE",        2, 18, -1, nullptr}, // #19, Super=IP_EXEC
  {"IP_EXECO",        2, 18, -1, nullptr}, // #20, Super=IP_EXEC
  {"LS",              4, 0, -1, nullptr}, // #21
  {"PM",              2, 0, -1, nullptr}, // #22
};

static const llvm::MCSchedModel P9Model = {
  8, // IssueWidth
  44, // MicroOpBufferSize
  60, // LoopMicroOpBufferSize
  5, // LoadLatency
  MCSchedModel::DefaultHighLatency,
  16, // MispredictPenalty
  false, // PostRAScheduler
  true, // CompleteModel
  13, // Processor ID
  P9ModelProcResources,
  P9ModelSchedClasses,
  23,
  537,
  nullptr, // No Itinerary
  nullptr // No extra processor descriptor
};

// Sorted (by key) array of values for CPU subtype.
extern const llvm::SubtargetSubTypeKV PPCSubTypeKV[] = {
 { "440", { { { 0x80c002000000010ULL, 0xa02ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPC440Model },
 { "450", { { { 0x80c002000000010ULL, 0xa02ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPC440Model },
 { "601", { { { 0x1000000000020ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "602", { { { 0x1000000000040ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "603", { { { 0xc000000000080ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "603e", { { { 0xc000000000080ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "603ev", { { { 0xc000000000080ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "604", { { { 0xc000000000100ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "604e", { { { 0xc000000000100ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "620", { { { 0xc000000000200ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "7400", { { { 0xc000200001000ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G4ItinerariesModel },
 { "7450", { { { 0xc000200001000ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G4PlusItinerariesModel },
 { "750", { { { 0xc000000000400ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G4ItinerariesModel },
 { "970", { { { 0x2c000210000800ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "a2", { { { 0x183ee06010002000ULL, 0x250000031aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPCA2Model },
 { "e500", { { { 0x800002000004000ULL, 0x200000a02ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPCE500Model },
 { "e500mc", { { { 0x800002000008000ULL, 0x400000202ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPCE500mcModel },
 { "e5500", { { { 0x800002010010000ULL, 0x400000302ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &PPCE5500Model },
 { "future", { { { 0xfa7ef2ce57800002ULL, 0x3d55f9fe77bULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &NoSchedModel },
 { "g3", { { { 0xc000000000400ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "g4", { { { 0xc000200001000ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G4ItinerariesModel },
 { "g4+", { { { 0xc000200001000ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G4PlusItinerariesModel },
 { "g5", { { { 0x2c000210000802ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "generic", { { { 0x400000000000004ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "ppc", { { { 0x400000000000004ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "ppc32", { { { 0x400000000000004ULL, 0x200ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G3ItinerariesModel },
 { "ppc64", { { { 0x2c000210000008ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "ppc64le", { { { 0x3a3ef2cb91800002ULL, 0x3854c10e31aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &P8Model },
 { "pwr10", { { { 0xfa7ef2ce57800002ULL, 0x3d55f9fe77aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &P10Model },
 { "pwr3", { { { 0xc000210020000ULL, 0x400000100ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr4", { { { 0x2c000210040000ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr5", { { { 0x3e000210080002ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr5x", { { { 0x3e800210100002ULL, 0x400000300ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr6", { { { 0x3ea04210200002ULL, 0x500000310ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr6x", { { { 0x3ea04210100002ULL, 0x500000310ULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &G5Model },
 { "pwr7", { { { 0x103ef04a10800002ULL, 0x3850010031aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &P7Model },
 { "pwr8", { { { 0x3a3ef2cb91800002ULL, 0x3854c10e31aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &P8Model },
 { "pwr9", { { { 0x7a3ef2ca13800002ULL, 0x7854d93e31aULL, 0x0ULL, 0x0ULL, } } }, { { { 0x0ULL, 0x0ULL, 0x0ULL, 0x0ULL, } } }, &P9Model },
};

namespace PPC_MC {
unsigned resolveVariantSchedClassImpl(unsigned SchedClass,
    const MCInst *MI, const MCInstrInfo *MCII, unsigned CPUID) {
  switch (SchedClass) {
  case 152: // FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 153: // FADD_FSUB
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 154: // FMSUB_FMADD_FNMADD_FNMSUB_FMUL
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 155: // XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 261: // FDIV
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 263: // XSSQRTDP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 264: // FSQRT
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 265: // XVSQRTDP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 266: // XVSQRTSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 511; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C
      return 512; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 268: // XSSQRTSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 513; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C
      return 514; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 269: // FSQRTS
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 513; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C
      return 514; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 271: // XSDIVDP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 272: // FDIVS
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 515; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 516; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 274: // XSDIVSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 515; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 516; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 275: // XVDIVSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 517; // P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 518; // P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 276: // XVDIVDP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 288: // VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 318: // FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 319: // VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 320: // XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 321: // XVCVSPBF16
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 322: // FADDS_FMULS_FSUBS
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 323: // FMUL
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 324: // VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 325: // VSUBFP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 326: // XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 327: // XSMULDP_XSMULSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 328: // VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 329: // VEXPTEFP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 523; // P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 524; // P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 337: // VSBOX
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 525; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C
      return 526; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C
    }
    break;
  case 338: // CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 339: // VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 449: // XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 527; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C
      return 528; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 450: // XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 529; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 530; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 451: // XVI8GER4SPP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 529; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 530; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 452: // PMXVF32GER_PMXVF64GER
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 531; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 532; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 453: // PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 533; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 534; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 454: // PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 535; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 536; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 455: // PMXVI8GER4SPP
    if (CPUID == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 535; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 536; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  };
  // Don't know how to resolve this scheduling class.
  return 0;
}
} // end namespace PPC_MC

struct PPCGenMCSubtargetInfo : public MCSubtargetInfo {
  PPCGenMCSubtargetInfo(const Triple &TT,
    StringRef CPU, StringRef TuneCPU, StringRef FS,
    ArrayRef<SubtargetFeatureKV> PF,
    ArrayRef<SubtargetSubTypeKV> PD,
    const MCWriteProcResEntry *WPR,
    const MCWriteLatencyEntry *WL,
    const MCReadAdvanceEntry *RA, const InstrStage *IS,
    const unsigned *OC, const unsigned *FP) :
      MCSubtargetInfo(TT, CPU, TuneCPU, FS, PF, PD,
                      WPR, WL, RA, IS, OC, FP) { }

  unsigned resolveVariantSchedClass(unsigned SchedClass,
      const MCInst *MI, const MCInstrInfo *MCII,
      unsigned CPUID) const override {
    return PPC_MC::resolveVariantSchedClassImpl(SchedClass, MI, MCII, CPUID);
  }
};

static inline MCSubtargetInfo *createPPCMCSubtargetInfoImpl(const Triple &TT, StringRef CPU, StringRef TuneCPU, StringRef FS) {
  return new PPCGenMCSubtargetInfo(TT, CPU, TuneCPU, FS, PPCFeatureKV, PPCSubTypeKV, 
                      PPCWriteProcResTable, PPCWriteLatencyTable, PPCReadAdvanceTable, 
                      PPCStages, PPCOperandCycles, PPCForwardingPaths);
}

} // end namespace llvm

#endif // GET_SUBTARGETINFO_MC_DESC


#ifdef GET_SUBTARGETINFO_TARGET_DESC
#undef GET_SUBTARGETINFO_TARGET_DESC

#include "llvm/Support/Debug.h"
#include "llvm/Support/raw_ostream.h"

// ParseSubtargetFeatures - Parses features string setting specified
// subtarget options.
void llvm::PPCSubtarget::ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS) {
  LLVM_DEBUG(dbgs() << "\nFeatures:" << FS);
  LLVM_DEBUG(dbgs() << "\nCPU:" << CPU);
  LLVM_DEBUG(dbgs() << "\nTuneCPU:" << TuneCPU << "\n\n");
  InitMCProcessorInfo(CPU, TuneCPU, FS);
  const FeatureBitset &Bits = getFeatureBits();
  if (Bits[PPC::AIXOS]) IsAIX = true;
  if (Bits[PPC::DeprecatedDST]) IsDeprecatedDST = true;
  if (Bits[PPC::Directive32] && CPUDirective < PPC::DIR_32) CPUDirective = PPC::DIR_32;
  if (Bits[PPC::Directive64] && CPUDirective < PPC::DIR_64) CPUDirective = PPC::DIR_64;
  if (Bits[PPC::Directive440] && CPUDirective < PPC::DIR_440) CPUDirective = PPC::DIR_440;
  if (Bits[PPC::Directive601] && CPUDirective < PPC::DIR_601) CPUDirective = PPC::DIR_601;
  if (Bits[PPC::Directive602] && CPUDirective < PPC::DIR_602) CPUDirective = PPC::DIR_602;
  if (Bits[PPC::Directive603] && CPUDirective < PPC::DIR_603) CPUDirective = PPC::DIR_603;
  if (Bits[PPC::Directive604] && CPUDirective < PPC::DIR_603) CPUDirective = PPC::DIR_603;
  if (Bits[PPC::Directive620] && CPUDirective < PPC::DIR_603) CPUDirective = PPC::DIR_603;
  if (Bits[PPC::Directive750] && CPUDirective < PPC::DIR_750) CPUDirective = PPC::DIR_750;
  if (Bits[PPC::Directive970] && CPUDirective < PPC::DIR_970) CPUDirective = PPC::DIR_970;
  if (Bits[PPC::Directive7400] && CPUDirective < PPC::DIR_7400) CPUDirective = PPC::DIR_7400;
  if (Bits[PPC::DirectiveA2] && CPUDirective < PPC::DIR_A2) CPUDirective = PPC::DIR_A2;
  if (Bits[PPC::DirectiveE500] && CPUDirective < PPC::DIR_E500) CPUDirective = PPC::DIR_E500;
  if (Bits[PPC::DirectiveE500mc] && CPUDirective < PPC::DIR_E500mc) CPUDirective = PPC::DIR_E500mc;
  if (Bits[PPC::DirectiveE5500] && CPUDirective < PPC::DIR_E5500) CPUDirective = PPC::DIR_E5500;
  if (Bits[PPC::DirectivePwr3] && CPUDirective < PPC::DIR_PWR3) CPUDirective = PPC::DIR_PWR3;
  if (Bits[PPC::DirectivePwr4] && CPUDirective < PPC::DIR_PWR4) CPUDirective = PPC::DIR_PWR4;
  if (Bits[PPC::DirectivePwr5] && CPUDirective < PPC::DIR_PWR5) CPUDirective = PPC::DIR_PWR5;
  if (Bits[PPC::DirectivePwr5x] && CPUDirective < PPC::DIR_PWR5X) CPUDirective = PPC::DIR_PWR5X;
  if (Bits[PPC::DirectivePwr6] && CPUDirective < PPC::DIR_PWR6) CPUDirective = PPC::DIR_PWR6;
  if (Bits[PPC::DirectivePwr6x] && CPUDirective < PPC::DIR_PWR6X) CPUDirective = PPC::DIR_PWR6X;
  if (Bits[PPC::DirectivePwr7] && CPUDirective < PPC::DIR_PWR7) CPUDirective = PPC::DIR_PWR7;
  if (Bits[PPC::DirectivePwr8] && CPUDirective < PPC::DIR_PWR8) CPUDirective = PPC::DIR_PWR8;
  if (Bits[PPC::DirectivePwr9] && CPUDirective < PPC::DIR_PWR9) CPUDirective = PPC::DIR_PWR9;
  if (Bits[PPC::DirectivePwr10] && CPUDirective < PPC::DIR_PWR10) CPUDirective = PPC::DIR_PWR10;
  if (Bits[PPC::DirectivePwrFuture] && CPUDirective < PPC::DIR_PWR_FUTURE) CPUDirective = PPC::DIR_PWR_FUTURE;
  if (Bits[PPC::Feature64Bit]) Has64BitSupport = true;
  if (Bits[PPC::Feature64BitRegs]) Use64BitRegs = true;
  if (Bits[PPC::FeatureAddLogicalFusion]) HasAddLogicalFusion = true;
  if (Bits[PPC::FeatureAddiLoadFusion]) HasAddiLoadFusion = true;
  if (Bits[PPC::FeatureAddisLoadFusion]) HasAddisLoadFusion = true;
  if (Bits[PPC::FeatureAltivec]) HasAltivec = true;
  if (Bits[PPC::FeatureArithAddFusion]) HasArithAddFusion = true;
  if (Bits[PPC::FeatureBPERMD]) HasBPERMD = true;
  if (Bits[PPC::FeatureBack2BackFusion]) HasBack2BackFusion = true;
  if (Bits[PPC::FeatureBookE]) IsBookE = true;
  if (Bits[PPC::FeatureCMPB]) HasCMPB = true;
  if (Bits[PPC::FeatureCRBits]) UseCRBits = true;
  if (Bits[PPC::FeatureCompareFusion]) HasCompareFusion = true;
  if (Bits[PPC::FeatureDirectMove]) HasDirectMove = true;
  if (Bits[PPC::FeatureE500]) IsE500 = true;
  if (Bits[PPC::FeatureEFPU2]) HasEFPU2 = true;
  if (Bits[PPC::FeatureExtDiv]) HasExtDiv = true;
  if (Bits[PPC::FeatureFCPSGN]) HasFCPSGN = true;
  if (Bits[PPC::FeatureFPCVT]) HasFPCVT = true;
  if (Bits[PPC::FeatureFPRND]) HasFPRND = true;
  if (Bits[PPC::FeatureFPU]) HasFPU = true;
  if (Bits[PPC::FeatureFRE]) HasFRE = true;
  if (Bits[PPC::FeatureFRES]) HasFRES = true;
  if (Bits[PPC::FeatureFRSQRTE]) HasFRSQRTE = true;
  if (Bits[PPC::FeatureFRSQRTES]) HasFRSQRTES = true;
  if (Bits[PPC::FeatureFSqrt]) HasFSQRT = true;
  if (Bits[PPC::FeatureFastMFLR]) HasFastMFLR = true;
  if (Bits[PPC::FeatureFloat128]) HasFloat128 = true;
  if (Bits[PPC::FeatureFusion]) HasFusion = true;
  if (Bits[PPC::FeatureHTM]) HasHTM = true;
  if (Bits[PPC::FeatureHardFloat]) HasHardFloat = true;
  if (Bits[PPC::FeatureICBT]) HasICBT = true;
  if (Bits[PPC::FeatureISA2_06]) IsISA2_06 = true;
  if (Bits[PPC::FeatureISA2_07]) IsISA2_07 = true;
  if (Bits[PPC::FeatureISA3_0]) IsISA3_0 = true;
  if (Bits[PPC::FeatureISA3_1]) IsISA3_1 = true;
  if (Bits[PPC::FeatureISAFuture]) IsISAFuture = true;
  if (Bits[PPC::FeatureISEL]) HasISEL = true;
  if (Bits[PPC::FeatureInvariantFunctionDescriptors]) HasInvariantFunctionDescriptors = true;
  if (Bits[PPC::FeatureLDBRX]) HasLDBRX = true;
  if (Bits[PPC::FeatureLFIWAX]) HasLFIWAX = true;
  if (Bits[PPC::FeatureLogicalAddFusion]) HasLogicalAddFusion = true;
  if (Bits[PPC::FeatureLogicalFusion]) HasLogicalFusion = true;
  if (Bits[PPC::FeatureLongCall]) UseLongCalls = true;
  if (Bits[PPC::FeatureMFOCRF]) HasMFOCRF = true;
  if (Bits[PPC::FeatureMFTB]) IsFeatureMFTB = true;
  if (Bits[PPC::FeatureMMA]) HasMMA = true;
  if (Bits[PPC::FeatureMSYNC]) HasOnlyMSYNC = true;
  if (Bits[PPC::FeatureModernAIXAs]) HasModernAIXAs = true;
  if (Bits[PPC::FeatureP8Altivec]) HasP8Altivec = true;
  if (Bits[PPC::FeatureP8Crypto]) HasP8Crypto = true;
  if (Bits[PPC::FeatureP8Vector]) HasP8Vector = true;
  if (Bits[PPC::FeatureP9Altivec]) HasP9Altivec = true;
  if (Bits[PPC::FeatureP9Vector]) HasP9Vector = true;
  if (Bits[PPC::FeatureP10Vector]) HasP10Vector = true;
  if (Bits[PPC::FeaturePCRelativeMemops]) HasPCRelativeMemops = true;
  if (Bits[PPC::FeaturePOPCNTD] && HasPOPCNTD < POPCNTD_Fast) HasPOPCNTD = POPCNTD_Fast;
  if (Bits[PPC::FeaturePPC4xx]) IsPPC4xx = true;
  if (Bits[PPC::FeaturePPC6xx]) IsPPC6xx = true;
  if (Bits[PPC::FeaturePPCPostRASched]) UsePPCPostRASchedStrategy = true;
  if (Bits[PPC::FeaturePPCPreRASched]) UsePPCPreRASchedStrategy = true;
  if (Bits[PPC::FeaturePairedVectorMemops]) PairedVectorMemops = true;
  if (Bits[PPC::FeaturePartwordAtomic]) HasPartwordAtomics = true;
  if (Bits[PPC::FeaturePredictableSelectIsExpensive]) PredictableSelectIsExpensive = true;
  if (Bits[PPC::FeaturePrefixInstrs]) HasPrefixInstrs = true;
  if (Bits[PPC::FeaturePrivileged]) HasPrivileged = true;
  if (Bits[PPC::FeatureQuadwordAtomic]) HasQuadwordAtomics = true;
  if (Bits[PPC::FeatureROPProtect]) HasROPProtect = true;
  if (Bits[PPC::FeatureRecipPrec]) HasRecipPrec = true;
  if (Bits[PPC::FeatureSPE]) HasSPE = true;
  if (Bits[PPC::FeatureSTFIWX]) HasSTFIWX = true;
  if (Bits[PPC::FeatureSecurePlt]) IsSecurePlt = true;
  if (Bits[PPC::FeatureSha3Fusion]) HasSha3Fusion = true;
  if (Bits[PPC::FeatureSlowPOPCNTD] && HasPOPCNTD < POPCNTD_Slow) HasPOPCNTD = POPCNTD_Slow;
  if (Bits[PPC::FeatureStoreFusion]) HasStoreFusion = true;
  if (Bits[PPC::FeatureTwoConstNR]) NeedsTwoConstNR = true;
  if (Bits[PPC::FeatureUnalignedFloats]) AllowsUnalignedFPAccess = true;
  if (Bits[PPC::FeatureVSX]) HasVSX = true;
  if (Bits[PPC::FeatureVectorsUseTwoUnits]) VectorsUseTwoUnits = true;
  if (Bits[PPC::FeatureWideImmFusion]) HasWideImmFusion = true;
  if (Bits[PPC::FeatureZeroMoveFusion]) HasZeroMoveFusion = true;
}
#endif // GET_SUBTARGETINFO_TARGET_DESC


#ifdef GET_SUBTARGETINFO_HEADER
#undef GET_SUBTARGETINFO_HEADER

namespace llvm {
class DFAPacketizer;
namespace PPC_MC {
unsigned resolveVariantSchedClassImpl(unsigned SchedClass, const MCInst *MI, const MCInstrInfo *MCII, unsigned CPUID);
} // end namespace PPC_MC

struct PPCGenSubtargetInfo : public TargetSubtargetInfo {
  explicit PPCGenSubtargetInfo(const Triple &TT, StringRef CPU, StringRef TuneCPU, StringRef FS);
public:
  unsigned resolveSchedClass(unsigned SchedClass,  const MachineInstr *DefMI, const TargetSchedModel *SchedModel) const override;
  unsigned resolveVariantSchedClass(unsigned SchedClass, const MCInst *MI, const MCInstrInfo *MCII, unsigned CPUID) const override;
  DFAPacketizer *createDFAPacketizer(const InstrItineraryData *IID) const;
};
} // end namespace llvm

#endif // GET_SUBTARGETINFO_HEADER


#ifdef GET_SUBTARGETINFO_CTOR
#undef GET_SUBTARGETINFO_CTOR

#include "llvm/CodeGen/TargetSchedule.h"

namespace llvm {
extern const llvm::SubtargetFeatureKV PPCFeatureKV[];
extern const llvm::SubtargetSubTypeKV PPCSubTypeKV[];
extern const llvm::MCWriteProcResEntry PPCWriteProcResTable[];
extern const llvm::MCWriteLatencyEntry PPCWriteLatencyTable[];
extern const llvm::MCReadAdvanceEntry PPCReadAdvanceTable[];
extern const llvm::InstrStage PPCStages[];
extern const unsigned PPCOperandCycles[];
extern const unsigned PPCForwardingPaths[];
PPCGenSubtargetInfo::PPCGenSubtargetInfo(const Triple &TT, StringRef CPU, StringRef TuneCPU, StringRef FS)
  : TargetSubtargetInfo(TT, CPU, TuneCPU, FS, ArrayRef(PPCFeatureKV, 81), ArrayRef(PPCSubTypeKV, 38), 
                        PPCWriteProcResTable, PPCWriteLatencyTable, PPCReadAdvanceTable, 
                        PPCStages, PPCOperandCycles, PPCForwardingPaths) {}

unsigned PPCGenSubtargetInfo
::resolveSchedClass(unsigned SchedClass, const MachineInstr *MI, const TargetSchedModel *SchedModel) const {
  switch (SchedClass) {
  case 152: // FRSP_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRE_FRES_FADDS_FMSUBS_FMADDS_FSUBS_FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRSQRTE_FRSQRTES_FNMADDS_FNMSUBS_FSELD_FSELS_FMULS
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 153: // FADD_FSUB
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 154: // FMSUB_FMADD_FNMADD_FNMSUB_FMUL
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 155: // XSMADDADP_XSMADDASP_XSMADDMDP_XSMADDMSP_XSMSUBADP_XSMSUBASP_XSMSUBMDP_XSMSUBMSP_XSMULDP_XSMULSP_XSNMADDADP_XSNMADDASP_XSNMADDMDP_XSNMADDMSP_XSNMSUBADP_XSNMSUBASP_XSNMSUBMDP_XSNMSUBMSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 261: // FDIV
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 263: // XSSQRTDP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 264: // FSQRT
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 265: // XVSQRTDP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 509; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_2C
      return 510; // P10W_BF_36C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 266: // XVSQRTSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 511; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C
      return 512; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 268: // XSSQRTSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 513; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C
      return 514; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 269: // FSQRTS
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 513; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_2C
      return 514; // P10W_BF_26C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 271: // XSDIVDP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 272: // FDIVS
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 515; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 516; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 274: // XSDIVSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 515; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 516; // P10W_BF_22C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 275: // XVDIVSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 517; // P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 518; // P10W_BF_24C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 276: // XVDIVDP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 507; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 508; // P10W_BF_27C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 288: // VPMSUMB_VPMSUMD_VPMSUMH_VPMSUMW_VCIPHER_VCIPHERLAST_VNCIPHER_VNCIPHERLAST_VSBOX
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 318: // FCFID_FCFIDS_FCFIDU_FCFIDUS_FCTID_FCTIDU_FCTIDUZ_FCTIDZ_FCTIW_FCTIWU_FCTIWUZ_FCTIWZ_FRE_FRES_FRIMD_FRIMS_FRIND_FRINS_FRIPD_FRIPS_FRIZD_FRIZS_FRSP_FRSQRTE_FRSQRTES
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 319: // VCFSX_VCFSX_0_VCFUX_VCFUX_0_VCTSXS_VCTSXS_0_VCTUXS_VCTUXS_0_VLOGEFP_VREFP_VRFIM_VRFIN_VRFIP_VRFIZ_VRSQRTEFP_XVCVDPSP_XVCVDPSXDS_XVCVDPSXWS_XVCVDPUXDS_XVCVDPUXWS_XVCVSPDP_XVCVSPHP_XVCVSPSXDS_XVCVSPSXWS_XVCVSPUXDS_XVCVSPUXWS_XVCVSXDDP_XVCVSXDSP_XVCVSXWDP_XVCVSXWSP_XVCVUXDDP_XVCVUXDSP_XVCVUXWDP_XVCVUXWSP_XVRDPI_XVRDPIC_XVRDPIM_XVRDPIP_XVRDPIZ_XVREDP_XVRESP_XVRSPI_XVRSPIC_XVRSPIM_XVRSPIP_XVRSPIZ_XVRSQRTEDP_XVRSQRTESP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 320: // XSCVDPHP_XSCVDPSP_XSCVDPSPN_XSCVDPSXDS_XSCVDPSXDSs_XSCVDPSXWS_XSCVDPSXWSs_XSCVDPUXDS_XSCVDPUXDSs_XSCVDPUXWS_XSCVDPUXWSs_XSCVSPDP_XSCVSXDDP_XSCVSXDSP_XSCVUXDDP_XSCVUXDSP_XSRDPI_XSRDPIC_XSRDPIM_XSRDPIP_XSRDPIZ_XSREDP_XSRESP_XSRSP_XSRSQRTEDP_XSRSQRTESP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 321: // XVCVSPBF16
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 521; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 522; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 322: // FADDS_FMULS_FSUBS
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 323: // FMUL
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 324: // VADDFP_XVADDDP_XVADDSP_XVMULDP_XVMULSP_XVSUBDP_XVSUBSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 325: // VSUBFP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 326: // XSADDDP_XSADDSP_XSSUBDP_XSSUBSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 327: // XSMULDP_XSMULSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 505; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C
      return 506; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 328: // VMADDFP_VNMSUBFP_XVMADDADP_XVMADDASP_XVMADDMDP_XVMADDMSP_XVMSUBADP_XVMSUBASP_XVMSUBMDP_XVMSUBMSP_XVNMADDADP_XVNMADDASP_XVNMADDMDP_XVNMADDMSP_XVNMSUBADP_XVNMSUBASP_XVNMSUBMDP_XVNMSUBMSP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 503; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C_P10BF_Read_2C_P10BF_Read_2C
      return 504; // P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C_P10BF_Read_1C_P10BF_Read_1C
    }
    break;
  case 329: // VEXPTEFP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::FADD
            || MI->getOpcode() == PPC::FADDS
            || MI->getOpcode() == PPC::FADDS_rec
            || MI->getOpcode() == PPC::FADD_rec
            || MI->getOpcode() == PPC::FCFID
            || MI->getOpcode() == PPC::FCFIDS
            || MI->getOpcode() == PPC::FCFIDS_rec
            || MI->getOpcode() == PPC::FCFIDU
            || MI->getOpcode() == PPC::FCFIDUS
            || MI->getOpcode() == PPC::FCFIDUS_rec
            || MI->getOpcode() == PPC::FCFIDU_rec
            || MI->getOpcode() == PPC::FCFID_rec
            || MI->getOpcode() == PPC::FCTID
            || MI->getOpcode() == PPC::FCTIDU
            || MI->getOpcode() == PPC::FCTIDUZ
            || MI->getOpcode() == PPC::FCTIDUZ_rec
            || MI->getOpcode() == PPC::FCTIDU_rec
            || MI->getOpcode() == PPC::FCTIDZ
            || MI->getOpcode() == PPC::FCTIDZ_rec
            || MI->getOpcode() == PPC::FCTID_rec
            || MI->getOpcode() == PPC::FCTIW
            || MI->getOpcode() == PPC::FCTIWU
            || MI->getOpcode() == PPC::FCTIWUZ
            || MI->getOpcode() == PPC::FCTIWUZ_rec
            || MI->getOpcode() == PPC::FCTIWU_rec
            || MI->getOpcode() == PPC::FCTIWZ
            || MI->getOpcode() == PPC::FCTIWZ_rec
            || MI->getOpcode() == PPC::FCTIW_rec
            || MI->getOpcode() == PPC::FMADD
            || MI->getOpcode() == PPC::FMADDS
            || MI->getOpcode() == PPC::FMADDS_rec
            || MI->getOpcode() == PPC::FMADD_rec
            || MI->getOpcode() == PPC::FMSUB
            || MI->getOpcode() == PPC::FMSUBS
            || MI->getOpcode() == PPC::FMSUBS_rec
            || MI->getOpcode() == PPC::FMSUB_rec
            || MI->getOpcode() == PPC::FMUL
            || MI->getOpcode() == PPC::FMULS
            || MI->getOpcode() == PPC::FMULS_rec
            || MI->getOpcode() == PPC::FMUL_rec
            || MI->getOpcode() == PPC::FNMADD
            || MI->getOpcode() == PPC::FNMADDS
            || MI->getOpcode() == PPC::FNMADDS_rec
            || MI->getOpcode() == PPC::FNMADD_rec
            || MI->getOpcode() == PPC::FNMSUB
            || MI->getOpcode() == PPC::FNMSUBS
            || MI->getOpcode() == PPC::FNMSUBS_rec
            || MI->getOpcode() == PPC::FNMSUB_rec
            || MI->getOpcode() == PPC::FRE
            || MI->getOpcode() == PPC::FRES
            || MI->getOpcode() == PPC::FRES_rec
            || MI->getOpcode() == PPC::FRE_rec
            || MI->getOpcode() == PPC::FRIMD
            || MI->getOpcode() == PPC::FRIMS
            || MI->getOpcode() == PPC::FRIMD_rec
            || MI->getOpcode() == PPC::FRIMS_rec
            || MI->getOpcode() == PPC::FRIND
            || MI->getOpcode() == PPC::FRINS
            || MI->getOpcode() == PPC::FRIND_rec
            || MI->getOpcode() == PPC::FRINS_rec
            || MI->getOpcode() == PPC::FRIPD
            || MI->getOpcode() == PPC::FRIPS
            || MI->getOpcode() == PPC::FRIPD_rec
            || MI->getOpcode() == PPC::FRIPS_rec
            || MI->getOpcode() == PPC::FRIZD
            || MI->getOpcode() == PPC::FRIZS
            || MI->getOpcode() == PPC::FRIZD_rec
            || MI->getOpcode() == PPC::FRIZS_rec
            || MI->getOpcode() == PPC::FRSP
            || MI->getOpcode() == PPC::FRSP_rec
            || MI->getOpcode() == PPC::FRSQRTE
            || MI->getOpcode() == PPC::FRSQRTES
            || MI->getOpcode() == PPC::FRSQRTES_rec
            || MI->getOpcode() == PPC::FRSQRTE_rec
            || MI->getOpcode() == PPC::FSELD
            || MI->getOpcode() == PPC::FSELS
            || MI->getOpcode() == PPC::FSELD_rec
            || MI->getOpcode() == PPC::FSELS_rec
            || MI->getOpcode() == PPC::FSUB
            || MI->getOpcode() == PPC::FSUBS
            || MI->getOpcode() == PPC::FSUBS_rec
            || MI->getOpcode() == PPC::FSUB_rec
            || MI->getOpcode() == PPC::VADDFP
            || MI->getOpcode() == PPC::VCFSX
            || MI->getOpcode() == PPC::VCFSX_0
            || MI->getOpcode() == PPC::VCFUX
            || MI->getOpcode() == PPC::VCFUX_0
            || MI->getOpcode() == PPC::VCTSXS
            || MI->getOpcode() == PPC::VCTSXS_0
            || MI->getOpcode() == PPC::VCTUXS
            || MI->getOpcode() == PPC::VCTUXS_0
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VEXPTEFP
            || MI->getOpcode() == PPC::VLOGEFP
            || MI->getOpcode() == PPC::VMADDFP
            || MI->getOpcode() == PPC::VNMSUBFP
            || MI->getOpcode() == PPC::VREFP
            || MI->getOpcode() == PPC::VRFIM
            || MI->getOpcode() == PPC::VRFIN
            || MI->getOpcode() == PPC::VRFIP
            || MI->getOpcode() == PPC::VRFIZ
            || MI->getOpcode() == PPC::VRSQRTEFP
            || MI->getOpcode() == PPC::VSUBFP
            || MI->getOpcode() == PPC::XSADDDP
            || MI->getOpcode() == PPC::XSADDSP
            || MI->getOpcode() == PPC::XSCVDPHP
            || MI->getOpcode() == PPC::XSCVDPSP
            || MI->getOpcode() == PPC::XSCVDPSPN
            || MI->getOpcode() == PPC::XSCVDPSXDS
            || MI->getOpcode() == PPC::XSCVDPSXDSs
            || MI->getOpcode() == PPC::XSCVDPSXWS
            || MI->getOpcode() == PPC::XSCVDPSXWSs
            || MI->getOpcode() == PPC::XSCVDPUXDS
            || MI->getOpcode() == PPC::XSCVDPUXDSs
            || MI->getOpcode() == PPC::XSCVDPUXWS
            || MI->getOpcode() == PPC::XSCVDPUXWSs
            || MI->getOpcode() == PPC::XSCVSPDP
            || MI->getOpcode() == PPC::XSCVSXDDP
            || MI->getOpcode() == PPC::XSCVSXDSP
            || MI->getOpcode() == PPC::XSCVUXDDP
            || MI->getOpcode() == PPC::XSCVUXDSP
            || MI->getOpcode() == PPC::XSMADDADP
            || MI->getOpcode() == PPC::XSMADDASP
            || MI->getOpcode() == PPC::XSMADDMDP
            || MI->getOpcode() == PPC::XSMADDMSP
            || MI->getOpcode() == PPC::XSMSUBADP
            || MI->getOpcode() == PPC::XSMSUBASP
            || MI->getOpcode() == PPC::XSMSUBMDP
            || MI->getOpcode() == PPC::XSMSUBMSP
            || MI->getOpcode() == PPC::XSMULDP
            || MI->getOpcode() == PPC::XSMULSP
            || MI->getOpcode() == PPC::XSNMADDADP
            || MI->getOpcode() == PPC::XSNMADDASP
            || MI->getOpcode() == PPC::XSNMADDMDP
            || MI->getOpcode() == PPC::XSNMADDMSP
            || MI->getOpcode() == PPC::XSNMSUBADP
            || MI->getOpcode() == PPC::XSNMSUBASP
            || MI->getOpcode() == PPC::XSNMSUBMDP
            || MI->getOpcode() == PPC::XSNMSUBMSP
            || MI->getOpcode() == PPC::XSRDPI
            || MI->getOpcode() == PPC::XSRDPIC
            || MI->getOpcode() == PPC::XSRDPIM
            || MI->getOpcode() == PPC::XSRDPIP
            || MI->getOpcode() == PPC::XSRDPIZ
            || MI->getOpcode() == PPC::XSREDP
            || MI->getOpcode() == PPC::XSRESP
            || MI->getOpcode() == PPC::XSRSP
            || MI->getOpcode() == PPC::XSRSQRTEDP
            || MI->getOpcode() == PPC::XSRSQRTESP
            || MI->getOpcode() == PPC::XSSUBDP
            || MI->getOpcode() == PPC::XSSUBSP
            || MI->getOpcode() == PPC::XVADDDP
            || MI->getOpcode() == PPC::XVADDSP
            || MI->getOpcode() == PPC::XVCVDPSP
            || MI->getOpcode() == PPC::XVCVDPSXDS
            || MI->getOpcode() == PPC::XVCVDPSXWS
            || MI->getOpcode() == PPC::XVCVDPUXDS
            || MI->getOpcode() == PPC::XVCVDPUXWS
            || MI->getOpcode() == PPC::XVCVSPBF16
            || MI->getOpcode() == PPC::XVCVSPDP
            || MI->getOpcode() == PPC::XVCVSPHP
            || MI->getOpcode() == PPC::XVCVSPSXDS
            || MI->getOpcode() == PPC::XVCVSPSXWS
            || MI->getOpcode() == PPC::XVCVSPUXDS
            || MI->getOpcode() == PPC::XVCVSPUXWS
            || MI->getOpcode() == PPC::XVCVSXDDP
            || MI->getOpcode() == PPC::XVCVSXDSP
            || MI->getOpcode() == PPC::XVCVSXWDP
            || MI->getOpcode() == PPC::XVCVSXWSP
            || MI->getOpcode() == PPC::XVCVUXDDP
            || MI->getOpcode() == PPC::XVCVUXDSP
            || MI->getOpcode() == PPC::XVCVUXWDP
            || MI->getOpcode() == PPC::XVCVUXWSP
            || MI->getOpcode() == PPC::XVMADDADP
            || MI->getOpcode() == PPC::XVMADDASP
            || MI->getOpcode() == PPC::XVMADDMDP
            || MI->getOpcode() == PPC::XVMADDMSP
            || MI->getOpcode() == PPC::XVMSUBADP
            || MI->getOpcode() == PPC::XVMSUBASP
            || MI->getOpcode() == PPC::XVMSUBMDP
            || MI->getOpcode() == PPC::XVMSUBMSP
            || MI->getOpcode() == PPC::XVMULDP
            || MI->getOpcode() == PPC::XVMULSP
            || MI->getOpcode() == PPC::XVNMADDADP
            || MI->getOpcode() == PPC::XVNMADDASP
            || MI->getOpcode() == PPC::XVNMADDMDP
            || MI->getOpcode() == PPC::XVNMADDMSP
            || MI->getOpcode() == PPC::XVNMSUBADP
            || MI->getOpcode() == PPC::XVNMSUBASP
            || MI->getOpcode() == PPC::XVNMSUBMDP
            || MI->getOpcode() == PPC::XVNMSUBMSP
            || MI->getOpcode() == PPC::XVRDPI
            || MI->getOpcode() == PPC::XVRDPIC
            || MI->getOpcode() == PPC::XVRDPIM
            || MI->getOpcode() == PPC::XVRDPIP
            || MI->getOpcode() == PPC::XVRDPIZ
            || MI->getOpcode() == PPC::XVREDP
            || MI->getOpcode() == PPC::XVRESP
            || MI->getOpcode() == PPC::XVRSPI
            || MI->getOpcode() == PPC::XVRSPIC
            || MI->getOpcode() == PPC::XVRSPIM
            || MI->getOpcode() == PPC::XVRSPIP
            || MI->getOpcode() == PPC::XVRSPIZ
            || MI->getOpcode() == PPC::XVRSQRTEDP
            || MI->getOpcode() == PPC::XVRSQRTESP
            || MI->getOpcode() == PPC::XVSUBDP
            || MI->getOpcode() == PPC::XVSUBSP
          ))
        return 523; // P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_2C
      return 524; // P10W_BF_7C_P10W_DISP_EVEN_P10W_BF_7C_P10W_DISP_ANY_P10BF_Read_1C
    }
    break;
  case 337: // VSBOX
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 525; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C
      return 526; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C
    }
    break;
  case 338: // CFUGED_CNTLZDM_CNTTZDM_PDEPD_PEXTD
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 339: // VCFUGED_VCLZDM_VCTZDM_VGNB_VPDEPD_VPEXTD
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::CFUGED
            || MI->getOpcode() == PPC::CNTLZDM
            || MI->getOpcode() == PPC::CNTTZDM
            || MI->getOpcode() == PPC::PDEPD
            || MI->getOpcode() == PPC::PEXTD
            || MI->getOpcode() == PPC::VCFUGED
            || MI->getOpcode() == PPC::VCIPHER
            || MI->getOpcode() == PPC::VCIPHERLAST
            || MI->getOpcode() == PPC::VCLZDM
            || MI->getOpcode() == PPC::VCTZDM
            || MI->getOpcode() == PPC::VGNB
            || MI->getOpcode() == PPC::VNCIPHER
            || MI->getOpcode() == PPC::VNCIPHERLAST
            || MI->getOpcode() == PPC::VPDEPD
            || MI->getOpcode() == PPC::VPEXTD
            || MI->getOpcode() == PPC::VPMSUMB
            || MI->getOpcode() == PPC::VPMSUMD
            || MI->getOpcode() == PPC::VPMSUMH
            || MI->getOpcode() == PPC::VPMSUMW
            || MI->getOpcode() == PPC::VSBOX
          ))
        return 519; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_3C_P10CY_Read_3C
      return 520; // P10W_CY_7C_P10W_DISP_ANY_P10CY_Read_1C_P10CY_Read_1C
    }
    break;
  case 449: // XVBF16GER2_XVF16GER2_XVF32GER_XVF64GER_XVI16GER2_XVI16GER2S_XVI4GER8_XVI8GER4
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 527; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C
      return 528; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 450: // XVBF16GER2NN_XVBF16GER2NP_XVBF16GER2PN_XVBF16GER2PP_XVF16GER2NN_XVF16GER2NP_XVF16GER2PN_XVF16GER2PP_XVF32GERNN_XVF32GERNP_XVF32GERPN_XVF32GERPP_XVF64GERNN_XVF64GERNP_XVF64GERPN_XVF64GERPP_XVI16GER2PP_XVI16GER2SPP_XVI4GER8PP_XVI8GER4PP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 529; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 530; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 451: // XVI8GER4SPP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 529; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 530; // P10W_MM_10C_P10W_DISP_ANY_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 452: // PMXVF32GER_PMXVF64GER
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 531; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 532; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 453: // PMXVBF16GER2_PMXVF16GER2_PMXVF32GERNN_PMXVF32GERNP_PMXVF32GERPN_PMXVF32GERPP_PMXVF64GERNN_PMXVF64GERNP_PMXVF64GERPN_PMXVF64GERPP_PMXVI16GER2_PMXVI16GER2S_PMXVI4GER8_PMXVI8GER4
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 533; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 534; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 454: // PMXVBF16GER2NN_PMXVBF16GER2NP_PMXVBF16GER2PN_PMXVBF16GER2PP_PMXVF16GER2NN_PMXVF16GER2NP_PMXVF16GER2PN_PMXVF16GER2PP_PMXVI16GER2PP_PMXVI16GER2SPP_PMXVI4GER8PP_PMXVI8GER4PP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 535; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 536; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  case 455: // PMXVI8GER4SPP
    if (SchedModel->getProcessorID() == 11) { // P10Model
      if ((
            MI->getOpcode() == PPC::PMXVBF16GER2
            || MI->getOpcode() == PPC::PMXVBF16GER2NN
            || MI->getOpcode() == PPC::PMXVBF16GER2NP
            || MI->getOpcode() == PPC::PMXVBF16GER2PN
            || MI->getOpcode() == PPC::PMXVBF16GER2PP
            || MI->getOpcode() == PPC::PMXVF16GER2
            || MI->getOpcode() == PPC::PMXVF16GER2NN
            || MI->getOpcode() == PPC::PMXVF16GER2NP
            || MI->getOpcode() == PPC::PMXVF16GER2PN
            || MI->getOpcode() == PPC::PMXVF16GER2PP
            || MI->getOpcode() == PPC::PMXVF32GER
            || MI->getOpcode() == PPC::PMXVF32GERNN
            || MI->getOpcode() == PPC::PMXVF32GERNP
            || MI->getOpcode() == PPC::PMXVF32GERPN
            || MI->getOpcode() == PPC::PMXVF32GERPP
            || MI->getOpcode() == PPC::PMXVF64GER
            || MI->getOpcode() == PPC::PMXVF64GERNN
            || MI->getOpcode() == PPC::PMXVF64GERNP
            || MI->getOpcode() == PPC::PMXVF64GERPN
            || MI->getOpcode() == PPC::PMXVF64GERPP
            || MI->getOpcode() == PPC::PMXVI16GER2
            || MI->getOpcode() == PPC::PMXVI16GER2PP
            || MI->getOpcode() == PPC::PMXVI16GER2S
            || MI->getOpcode() == PPC::PMXVI16GER2SPP
            || MI->getOpcode() == PPC::PMXVI4GER8
            || MI->getOpcode() == PPC::PMXVI4GER8PP
            || MI->getOpcode() == PPC::PMXVI8GER4
            || MI->getOpcode() == PPC::PMXVI8GER4PP
            || MI->getOpcode() == PPC::PMXVI8GER4SPP
            || MI->getOpcode() == PPC::XVBF16GER2
            || MI->getOpcode() == PPC::XVBF16GER2NN
            || MI->getOpcode() == PPC::XVBF16GER2NP
            || MI->getOpcode() == PPC::XVBF16GER2PN
            || MI->getOpcode() == PPC::XVBF16GER2PP
            || MI->getOpcode() == PPC::XVF16GER2
            || MI->getOpcode() == PPC::XVF16GER2NN
            || MI->getOpcode() == PPC::XVF16GER2NP
            || MI->getOpcode() == PPC::XVF16GER2PN
            || MI->getOpcode() == PPC::XVF16GER2PP
            || MI->getOpcode() == PPC::XVF32GER
            || MI->getOpcode() == PPC::XVF32GERNN
            || MI->getOpcode() == PPC::XVF32GERNP
            || MI->getOpcode() == PPC::XVF32GERPN
            || MI->getOpcode() == PPC::XVF32GERPP
            || MI->getOpcode() == PPC::XVF64GER
            || MI->getOpcode() == PPC::XVF64GERNN
            || MI->getOpcode() == PPC::XVF64GERNP
            || MI->getOpcode() == PPC::XVF64GERPN
            || MI->getOpcode() == PPC::XVF64GERPP
            || MI->getOpcode() == PPC::XVI16GER2
            || MI->getOpcode() == PPC::XVI16GER2PP
            || MI->getOpcode() == PPC::XVI16GER2S
            || MI->getOpcode() == PPC::XVI16GER2SPP
            || MI->getOpcode() == PPC::XVI4GER8
            || MI->getOpcode() == PPC::XVI4GER8PP
            || MI->getOpcode() == PPC::XVI8GER4
            || MI->getOpcode() == PPC::XVI8GER4PP
            || MI->getOpcode() == PPC::XVI8GER4SPP
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMFACC
            || MI->getOpcode() == PPC::XXMTACC
            || MI->getOpcode() == PPC::XXSETACCZ
          ))
        return 535; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C_P10MM_Read_6C
      return 536; // P10W_MM_10C_P10W_DISP_PAIR_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C_P10MM_Read_1C
    }
    break;
  };
  report_fatal_error("Expected a variant SchedClass");
} // PPCGenSubtargetInfo::resolveSchedClass

unsigned PPCGenSubtargetInfo
::resolveVariantSchedClass(unsigned SchedClass, const MCInst *MI, const MCInstrInfo *MCII, unsigned CPUID) const {
  return PPC_MC::resolveVariantSchedClassImpl(SchedClass, MI, MCII, CPUID);
} // PPCGenSubtargetInfo::resolveVariantSchedClass

} // end namespace llvm

#endif // GET_SUBTARGETINFO_CTOR


#ifdef GET_STIPREDICATE_DECLS_FOR_MC_ANALYSIS
#undef GET_STIPREDICATE_DECLS_FOR_MC_ANALYSIS

#endif // GET_STIPREDICATE_DECLS_FOR_MC_ANALYSIS


#ifdef GET_STIPREDICATE_DEFS_FOR_MC_ANALYSIS
#undef GET_STIPREDICATE_DEFS_FOR_MC_ANALYSIS

#endif // GET_STIPREDICATE_DEFS_FOR_MC_ANALYSIS

