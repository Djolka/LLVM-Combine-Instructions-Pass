/*===- TableGen'erated file -------------------------------------*- C++ -*-===*\
|*                                                                            *|
|* Target Instruction Enum Values and Descriptors                             *|
|*                                                                            *|
|* Automatically generated file, do not edit!                                 *|
|*                                                                            *|
\*===----------------------------------------------------------------------===*/

#ifdef GET_INSTRINFO_ENUM
#undef GET_INSTRINFO_ENUM
namespace llvm {

namespace WebAssembly {
  enum {
    PHI	= 0,
    INLINEASM	= 1,
    INLINEASM_BR	= 2,
    CFI_INSTRUCTION	= 3,
    EH_LABEL	= 4,
    GC_LABEL	= 5,
    ANNOTATION_LABEL	= 6,
    KILL	= 7,
    EXTRACT_SUBREG	= 8,
    INSERT_SUBREG	= 9,
    IMPLICIT_DEF	= 10,
    SUBREG_TO_REG	= 11,
    COPY_TO_REGCLASS	= 12,
    DBG_VALUE	= 13,
    DBG_VALUE_LIST	= 14,
    DBG_INSTR_REF	= 15,
    DBG_PHI	= 16,
    DBG_LABEL	= 17,
    REG_SEQUENCE	= 18,
    COPY	= 19,
    BUNDLE	= 20,
    LIFETIME_START	= 21,
    LIFETIME_END	= 22,
    PSEUDO_PROBE	= 23,
    ARITH_FENCE	= 24,
    STACKMAP	= 25,
    FENTRY_CALL	= 26,
    PATCHPOINT	= 27,
    LOAD_STACK_GUARD	= 28,
    PREALLOCATED_SETUP	= 29,
    PREALLOCATED_ARG	= 30,
    STATEPOINT	= 31,
    LOCAL_ESCAPE	= 32,
    FAULTING_OP	= 33,
    PATCHABLE_OP	= 34,
    PATCHABLE_FUNCTION_ENTER	= 35,
    PATCHABLE_RET	= 36,
    PATCHABLE_FUNCTION_EXIT	= 37,
    PATCHABLE_TAIL_CALL	= 38,
    PATCHABLE_EVENT_CALL	= 39,
    PATCHABLE_TYPED_EVENT_CALL	= 40,
    ICALL_BRANCH_FUNNEL	= 41,
    MEMBARRIER	= 42,
    G_ASSERT_SEXT	= 43,
    G_ASSERT_ZEXT	= 44,
    G_ASSERT_ALIGN	= 45,
    G_ADD	= 46,
    G_SUB	= 47,
    G_MUL	= 48,
    G_SDIV	= 49,
    G_UDIV	= 50,
    G_SREM	= 51,
    G_UREM	= 52,
    G_SDIVREM	= 53,
    G_UDIVREM	= 54,
    G_AND	= 55,
    G_OR	= 56,
    G_XOR	= 57,
    G_IMPLICIT_DEF	= 58,
    G_PHI	= 59,
    G_FRAME_INDEX	= 60,
    G_GLOBAL_VALUE	= 61,
    G_CONSTANT_POOL	= 62,
    G_EXTRACT	= 63,
    G_UNMERGE_VALUES	= 64,
    G_INSERT	= 65,
    G_MERGE_VALUES	= 66,
    G_BUILD_VECTOR	= 67,
    G_BUILD_VECTOR_TRUNC	= 68,
    G_CONCAT_VECTORS	= 69,
    G_PTRTOINT	= 70,
    G_INTTOPTR	= 71,
    G_BITCAST	= 72,
    G_FREEZE	= 73,
    G_INTRINSIC_FPTRUNC_ROUND	= 74,
    G_INTRINSIC_TRUNC	= 75,
    G_INTRINSIC_ROUND	= 76,
    G_INTRINSIC_LRINT	= 77,
    G_INTRINSIC_ROUNDEVEN	= 78,
    G_READCYCLECOUNTER	= 79,
    G_LOAD	= 80,
    G_SEXTLOAD	= 81,
    G_ZEXTLOAD	= 82,
    G_INDEXED_LOAD	= 83,
    G_INDEXED_SEXTLOAD	= 84,
    G_INDEXED_ZEXTLOAD	= 85,
    G_STORE	= 86,
    G_INDEXED_STORE	= 87,
    G_ATOMIC_CMPXCHG_WITH_SUCCESS	= 88,
    G_ATOMIC_CMPXCHG	= 89,
    G_ATOMICRMW_XCHG	= 90,
    G_ATOMICRMW_ADD	= 91,
    G_ATOMICRMW_SUB	= 92,
    G_ATOMICRMW_AND	= 93,
    G_ATOMICRMW_NAND	= 94,
    G_ATOMICRMW_OR	= 95,
    G_ATOMICRMW_XOR	= 96,
    G_ATOMICRMW_MAX	= 97,
    G_ATOMICRMW_MIN	= 98,
    G_ATOMICRMW_UMAX	= 99,
    G_ATOMICRMW_UMIN	= 100,
    G_ATOMICRMW_FADD	= 101,
    G_ATOMICRMW_FSUB	= 102,
    G_ATOMICRMW_FMAX	= 103,
    G_ATOMICRMW_FMIN	= 104,
    G_ATOMICRMW_UINC_WRAP	= 105,
    G_ATOMICRMW_UDEC_WRAP	= 106,
    G_FENCE	= 107,
    G_BRCOND	= 108,
    G_BRINDIRECT	= 109,
    G_INVOKE_REGION_START	= 110,
    G_INTRINSIC	= 111,
    G_INTRINSIC_W_SIDE_EFFECTS	= 112,
    G_ANYEXT	= 113,
    G_TRUNC	= 114,
    G_CONSTANT	= 115,
    G_FCONSTANT	= 116,
    G_VASTART	= 117,
    G_VAARG	= 118,
    G_SEXT	= 119,
    G_SEXT_INREG	= 120,
    G_ZEXT	= 121,
    G_SHL	= 122,
    G_LSHR	= 123,
    G_ASHR	= 124,
    G_FSHL	= 125,
    G_FSHR	= 126,
    G_ROTR	= 127,
    G_ROTL	= 128,
    G_ICMP	= 129,
    G_FCMP	= 130,
    G_SELECT	= 131,
    G_UADDO	= 132,
    G_UADDE	= 133,
    G_USUBO	= 134,
    G_USUBE	= 135,
    G_SADDO	= 136,
    G_SADDE	= 137,
    G_SSUBO	= 138,
    G_SSUBE	= 139,
    G_UMULO	= 140,
    G_SMULO	= 141,
    G_UMULH	= 142,
    G_SMULH	= 143,
    G_UADDSAT	= 144,
    G_SADDSAT	= 145,
    G_USUBSAT	= 146,
    G_SSUBSAT	= 147,
    G_USHLSAT	= 148,
    G_SSHLSAT	= 149,
    G_SMULFIX	= 150,
    G_UMULFIX	= 151,
    G_SMULFIXSAT	= 152,
    G_UMULFIXSAT	= 153,
    G_SDIVFIX	= 154,
    G_UDIVFIX	= 155,
    G_SDIVFIXSAT	= 156,
    G_UDIVFIXSAT	= 157,
    G_FADD	= 158,
    G_FSUB	= 159,
    G_FMUL	= 160,
    G_FMA	= 161,
    G_FMAD	= 162,
    G_FDIV	= 163,
    G_FREM	= 164,
    G_FPOW	= 165,
    G_FPOWI	= 166,
    G_FEXP	= 167,
    G_FEXP2	= 168,
    G_FLOG	= 169,
    G_FLOG2	= 170,
    G_FLOG10	= 171,
    G_FNEG	= 172,
    G_FPEXT	= 173,
    G_FPTRUNC	= 174,
    G_FPTOSI	= 175,
    G_FPTOUI	= 176,
    G_SITOFP	= 177,
    G_UITOFP	= 178,
    G_FABS	= 179,
    G_FCOPYSIGN	= 180,
    G_IS_FPCLASS	= 181,
    G_FCANONICALIZE	= 182,
    G_FMINNUM	= 183,
    G_FMAXNUM	= 184,
    G_FMINNUM_IEEE	= 185,
    G_FMAXNUM_IEEE	= 186,
    G_FMINIMUM	= 187,
    G_FMAXIMUM	= 188,
    G_PTR_ADD	= 189,
    G_PTRMASK	= 190,
    G_SMIN	= 191,
    G_SMAX	= 192,
    G_UMIN	= 193,
    G_UMAX	= 194,
    G_ABS	= 195,
    G_LROUND	= 196,
    G_LLROUND	= 197,
    G_BR	= 198,
    G_BRJT	= 199,
    G_INSERT_VECTOR_ELT	= 200,
    G_EXTRACT_VECTOR_ELT	= 201,
    G_SHUFFLE_VECTOR	= 202,
    G_CTTZ	= 203,
    G_CTTZ_ZERO_UNDEF	= 204,
    G_CTLZ	= 205,
    G_CTLZ_ZERO_UNDEF	= 206,
    G_CTPOP	= 207,
    G_BSWAP	= 208,
    G_BITREVERSE	= 209,
    G_FCEIL	= 210,
    G_FCOS	= 211,
    G_FSIN	= 212,
    G_FSQRT	= 213,
    G_FFLOOR	= 214,
    G_FRINT	= 215,
    G_FNEARBYINT	= 216,
    G_ADDRSPACE_CAST	= 217,
    G_BLOCK_ADDR	= 218,
    G_JUMP_TABLE	= 219,
    G_DYN_STACKALLOC	= 220,
    G_STRICT_FADD	= 221,
    G_STRICT_FSUB	= 222,
    G_STRICT_FMUL	= 223,
    G_STRICT_FDIV	= 224,
    G_STRICT_FREM	= 225,
    G_STRICT_FMA	= 226,
    G_STRICT_FSQRT	= 227,
    G_READ_REGISTER	= 228,
    G_WRITE_REGISTER	= 229,
    G_MEMCPY	= 230,
    G_MEMCPY_INLINE	= 231,
    G_MEMMOVE	= 232,
    G_MEMSET	= 233,
    G_BZERO	= 234,
    G_VECREDUCE_SEQ_FADD	= 235,
    G_VECREDUCE_SEQ_FMUL	= 236,
    G_VECREDUCE_FADD	= 237,
    G_VECREDUCE_FMUL	= 238,
    G_VECREDUCE_FMAX	= 239,
    G_VECREDUCE_FMIN	= 240,
    G_VECREDUCE_ADD	= 241,
    G_VECREDUCE_MUL	= 242,
    G_VECREDUCE_AND	= 243,
    G_VECREDUCE_OR	= 244,
    G_VECREDUCE_XOR	= 245,
    G_VECREDUCE_SMAX	= 246,
    G_VECREDUCE_SMIN	= 247,
    G_VECREDUCE_UMAX	= 248,
    G_VECREDUCE_UMIN	= 249,
    G_SBFX	= 250,
    G_UBFX	= 251,
    CALL_PARAMS	= 252,
    CALL_PARAMS_S	= 253,
    CALL_RESULTS	= 254,
    CALL_RESULTS_S	= 255,
    CATCHRET	= 256,
    CATCHRET_S	= 257,
    CLEANUPRET	= 258,
    CLEANUPRET_S	= 259,
    COMPILER_FENCE	= 260,
    COMPILER_FENCE_S	= 261,
    RET_CALL_RESULTS	= 262,
    RET_CALL_RESULTS_S	= 263,
    ABS_F32	= 264,
    ABS_F32_S	= 265,
    ABS_F32x4	= 266,
    ABS_F32x4_S	= 267,
    ABS_F64	= 268,
    ABS_F64_S	= 269,
    ABS_F64x2	= 270,
    ABS_F64x2_S	= 271,
    ABS_I16x8	= 272,
    ABS_I16x8_S	= 273,
    ABS_I32x4	= 274,
    ABS_I32x4_S	= 275,
    ABS_I64x2	= 276,
    ABS_I64x2_S	= 277,
    ABS_I8x16	= 278,
    ABS_I8x16_S	= 279,
    ADD_F32	= 280,
    ADD_F32_S	= 281,
    ADD_F32x4	= 282,
    ADD_F32x4_S	= 283,
    ADD_F64	= 284,
    ADD_F64_S	= 285,
    ADD_F64x2	= 286,
    ADD_F64x2_S	= 287,
    ADD_I16x8	= 288,
    ADD_I16x8_S	= 289,
    ADD_I32	= 290,
    ADD_I32_S	= 291,
    ADD_I32x4	= 292,
    ADD_I32x4_S	= 293,
    ADD_I64	= 294,
    ADD_I64_S	= 295,
    ADD_I64x2	= 296,
    ADD_I64x2_S	= 297,
    ADD_I8x16	= 298,
    ADD_I8x16_S	= 299,
    ADD_SAT_S_I16x8	= 300,
    ADD_SAT_S_I16x8_S	= 301,
    ADD_SAT_S_I8x16	= 302,
    ADD_SAT_S_I8x16_S	= 303,
    ADD_SAT_U_I16x8	= 304,
    ADD_SAT_U_I16x8_S	= 305,
    ADD_SAT_U_I8x16	= 306,
    ADD_SAT_U_I8x16_S	= 307,
    ADJCALLSTACKDOWN	= 308,
    ADJCALLSTACKDOWN_S	= 309,
    ADJCALLSTACKUP	= 310,
    ADJCALLSTACKUP_S	= 311,
    ALLTRUE_I16x8	= 312,
    ALLTRUE_I16x8_S	= 313,
    ALLTRUE_I32x4	= 314,
    ALLTRUE_I32x4_S	= 315,
    ALLTRUE_I64x2	= 316,
    ALLTRUE_I64x2_S	= 317,
    ALLTRUE_I8x16	= 318,
    ALLTRUE_I8x16_S	= 319,
    AND	= 320,
    ANDNOT	= 321,
    ANDNOT_S	= 322,
    AND_I32	= 323,
    AND_I32_S	= 324,
    AND_I64	= 325,
    AND_I64_S	= 326,
    AND_S	= 327,
    ANYTRUE	= 328,
    ANYTRUE_S	= 329,
    ARGUMENT_externref	= 330,
    ARGUMENT_externref_S	= 331,
    ARGUMENT_f32	= 332,
    ARGUMENT_f32_S	= 333,
    ARGUMENT_f64	= 334,
    ARGUMENT_f64_S	= 335,
    ARGUMENT_funcref	= 336,
    ARGUMENT_funcref_S	= 337,
    ARGUMENT_i32	= 338,
    ARGUMENT_i32_S	= 339,
    ARGUMENT_i64	= 340,
    ARGUMENT_i64_S	= 341,
    ARGUMENT_v16i8	= 342,
    ARGUMENT_v16i8_S	= 343,
    ARGUMENT_v2f64	= 344,
    ARGUMENT_v2f64_S	= 345,
    ARGUMENT_v2i64	= 346,
    ARGUMENT_v2i64_S	= 347,
    ARGUMENT_v4f32	= 348,
    ARGUMENT_v4f32_S	= 349,
    ARGUMENT_v4i32	= 350,
    ARGUMENT_v4i32_S	= 351,
    ARGUMENT_v8i16	= 352,
    ARGUMENT_v8i16_S	= 353,
    ATOMIC_FENCE	= 354,
    ATOMIC_FENCE_S	= 355,
    ATOMIC_LOAD16_U_I32_A32	= 356,
    ATOMIC_LOAD16_U_I32_A32_S	= 357,
    ATOMIC_LOAD16_U_I32_A64	= 358,
    ATOMIC_LOAD16_U_I32_A64_S	= 359,
    ATOMIC_LOAD16_U_I64_A32	= 360,
    ATOMIC_LOAD16_U_I64_A32_S	= 361,
    ATOMIC_LOAD16_U_I64_A64	= 362,
    ATOMIC_LOAD16_U_I64_A64_S	= 363,
    ATOMIC_LOAD32_U_I64_A32	= 364,
    ATOMIC_LOAD32_U_I64_A32_S	= 365,
    ATOMIC_LOAD32_U_I64_A64	= 366,
    ATOMIC_LOAD32_U_I64_A64_S	= 367,
    ATOMIC_LOAD8_U_I32_A32	= 368,
    ATOMIC_LOAD8_U_I32_A32_S	= 369,
    ATOMIC_LOAD8_U_I32_A64	= 370,
    ATOMIC_LOAD8_U_I32_A64_S	= 371,
    ATOMIC_LOAD8_U_I64_A32	= 372,
    ATOMIC_LOAD8_U_I64_A32_S	= 373,
    ATOMIC_LOAD8_U_I64_A64	= 374,
    ATOMIC_LOAD8_U_I64_A64_S	= 375,
    ATOMIC_LOAD_I32_A32	= 376,
    ATOMIC_LOAD_I32_A32_S	= 377,
    ATOMIC_LOAD_I32_A64	= 378,
    ATOMIC_LOAD_I32_A64_S	= 379,
    ATOMIC_LOAD_I64_A32	= 380,
    ATOMIC_LOAD_I64_A32_S	= 381,
    ATOMIC_LOAD_I64_A64	= 382,
    ATOMIC_LOAD_I64_A64_S	= 383,
    ATOMIC_RMW16_U_ADD_I32_A32	= 384,
    ATOMIC_RMW16_U_ADD_I32_A32_S	= 385,
    ATOMIC_RMW16_U_ADD_I32_A64	= 386,
    ATOMIC_RMW16_U_ADD_I32_A64_S	= 387,
    ATOMIC_RMW16_U_ADD_I64_A32	= 388,
    ATOMIC_RMW16_U_ADD_I64_A32_S	= 389,
    ATOMIC_RMW16_U_ADD_I64_A64	= 390,
    ATOMIC_RMW16_U_ADD_I64_A64_S	= 391,
    ATOMIC_RMW16_U_AND_I32_A32	= 392,
    ATOMIC_RMW16_U_AND_I32_A32_S	= 393,
    ATOMIC_RMW16_U_AND_I32_A64	= 394,
    ATOMIC_RMW16_U_AND_I32_A64_S	= 395,
    ATOMIC_RMW16_U_AND_I64_A32	= 396,
    ATOMIC_RMW16_U_AND_I64_A32_S	= 397,
    ATOMIC_RMW16_U_AND_I64_A64	= 398,
    ATOMIC_RMW16_U_AND_I64_A64_S	= 399,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32	= 400,
    ATOMIC_RMW16_U_CMPXCHG_I32_A32_S	= 401,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64	= 402,
    ATOMIC_RMW16_U_CMPXCHG_I32_A64_S	= 403,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32	= 404,
    ATOMIC_RMW16_U_CMPXCHG_I64_A32_S	= 405,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64	= 406,
    ATOMIC_RMW16_U_CMPXCHG_I64_A64_S	= 407,
    ATOMIC_RMW16_U_OR_I32_A32	= 408,
    ATOMIC_RMW16_U_OR_I32_A32_S	= 409,
    ATOMIC_RMW16_U_OR_I32_A64	= 410,
    ATOMIC_RMW16_U_OR_I32_A64_S	= 411,
    ATOMIC_RMW16_U_OR_I64_A32	= 412,
    ATOMIC_RMW16_U_OR_I64_A32_S	= 413,
    ATOMIC_RMW16_U_OR_I64_A64	= 414,
    ATOMIC_RMW16_U_OR_I64_A64_S	= 415,
    ATOMIC_RMW16_U_SUB_I32_A32	= 416,
    ATOMIC_RMW16_U_SUB_I32_A32_S	= 417,
    ATOMIC_RMW16_U_SUB_I32_A64	= 418,
    ATOMIC_RMW16_U_SUB_I32_A64_S	= 419,
    ATOMIC_RMW16_U_SUB_I64_A32	= 420,
    ATOMIC_RMW16_U_SUB_I64_A32_S	= 421,
    ATOMIC_RMW16_U_SUB_I64_A64	= 422,
    ATOMIC_RMW16_U_SUB_I64_A64_S	= 423,
    ATOMIC_RMW16_U_XCHG_I32_A32	= 424,
    ATOMIC_RMW16_U_XCHG_I32_A32_S	= 425,
    ATOMIC_RMW16_U_XCHG_I32_A64	= 426,
    ATOMIC_RMW16_U_XCHG_I32_A64_S	= 427,
    ATOMIC_RMW16_U_XCHG_I64_A32	= 428,
    ATOMIC_RMW16_U_XCHG_I64_A32_S	= 429,
    ATOMIC_RMW16_U_XCHG_I64_A64	= 430,
    ATOMIC_RMW16_U_XCHG_I64_A64_S	= 431,
    ATOMIC_RMW16_U_XOR_I32_A32	= 432,
    ATOMIC_RMW16_U_XOR_I32_A32_S	= 433,
    ATOMIC_RMW16_U_XOR_I32_A64	= 434,
    ATOMIC_RMW16_U_XOR_I32_A64_S	= 435,
    ATOMIC_RMW16_U_XOR_I64_A32	= 436,
    ATOMIC_RMW16_U_XOR_I64_A32_S	= 437,
    ATOMIC_RMW16_U_XOR_I64_A64	= 438,
    ATOMIC_RMW16_U_XOR_I64_A64_S	= 439,
    ATOMIC_RMW32_U_ADD_I64_A32	= 440,
    ATOMIC_RMW32_U_ADD_I64_A32_S	= 441,
    ATOMIC_RMW32_U_ADD_I64_A64	= 442,
    ATOMIC_RMW32_U_ADD_I64_A64_S	= 443,
    ATOMIC_RMW32_U_AND_I64_A32	= 444,
    ATOMIC_RMW32_U_AND_I64_A32_S	= 445,
    ATOMIC_RMW32_U_AND_I64_A64	= 446,
    ATOMIC_RMW32_U_AND_I64_A64_S	= 447,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32	= 448,
    ATOMIC_RMW32_U_CMPXCHG_I64_A32_S	= 449,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64	= 450,
    ATOMIC_RMW32_U_CMPXCHG_I64_A64_S	= 451,
    ATOMIC_RMW32_U_OR_I64_A32	= 452,
    ATOMIC_RMW32_U_OR_I64_A32_S	= 453,
    ATOMIC_RMW32_U_OR_I64_A64	= 454,
    ATOMIC_RMW32_U_OR_I64_A64_S	= 455,
    ATOMIC_RMW32_U_SUB_I64_A32	= 456,
    ATOMIC_RMW32_U_SUB_I64_A32_S	= 457,
    ATOMIC_RMW32_U_SUB_I64_A64	= 458,
    ATOMIC_RMW32_U_SUB_I64_A64_S	= 459,
    ATOMIC_RMW32_U_XCHG_I64_A32	= 460,
    ATOMIC_RMW32_U_XCHG_I64_A32_S	= 461,
    ATOMIC_RMW32_U_XCHG_I64_A64	= 462,
    ATOMIC_RMW32_U_XCHG_I64_A64_S	= 463,
    ATOMIC_RMW32_U_XOR_I64_A32	= 464,
    ATOMIC_RMW32_U_XOR_I64_A32_S	= 465,
    ATOMIC_RMW32_U_XOR_I64_A64	= 466,
    ATOMIC_RMW32_U_XOR_I64_A64_S	= 467,
    ATOMIC_RMW8_U_ADD_I32_A32	= 468,
    ATOMIC_RMW8_U_ADD_I32_A32_S	= 469,
    ATOMIC_RMW8_U_ADD_I32_A64	= 470,
    ATOMIC_RMW8_U_ADD_I32_A64_S	= 471,
    ATOMIC_RMW8_U_ADD_I64_A32	= 472,
    ATOMIC_RMW8_U_ADD_I64_A32_S	= 473,
    ATOMIC_RMW8_U_ADD_I64_A64	= 474,
    ATOMIC_RMW8_U_ADD_I64_A64_S	= 475,
    ATOMIC_RMW8_U_AND_I32_A32	= 476,
    ATOMIC_RMW8_U_AND_I32_A32_S	= 477,
    ATOMIC_RMW8_U_AND_I32_A64	= 478,
    ATOMIC_RMW8_U_AND_I32_A64_S	= 479,
    ATOMIC_RMW8_U_AND_I64_A32	= 480,
    ATOMIC_RMW8_U_AND_I64_A32_S	= 481,
    ATOMIC_RMW8_U_AND_I64_A64	= 482,
    ATOMIC_RMW8_U_AND_I64_A64_S	= 483,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32	= 484,
    ATOMIC_RMW8_U_CMPXCHG_I32_A32_S	= 485,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64	= 486,
    ATOMIC_RMW8_U_CMPXCHG_I32_A64_S	= 487,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32	= 488,
    ATOMIC_RMW8_U_CMPXCHG_I64_A32_S	= 489,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64	= 490,
    ATOMIC_RMW8_U_CMPXCHG_I64_A64_S	= 491,
    ATOMIC_RMW8_U_OR_I32_A32	= 492,
    ATOMIC_RMW8_U_OR_I32_A32_S	= 493,
    ATOMIC_RMW8_U_OR_I32_A64	= 494,
    ATOMIC_RMW8_U_OR_I32_A64_S	= 495,
    ATOMIC_RMW8_U_OR_I64_A32	= 496,
    ATOMIC_RMW8_U_OR_I64_A32_S	= 497,
    ATOMIC_RMW8_U_OR_I64_A64	= 498,
    ATOMIC_RMW8_U_OR_I64_A64_S	= 499,
    ATOMIC_RMW8_U_SUB_I32_A32	= 500,
    ATOMIC_RMW8_U_SUB_I32_A32_S	= 501,
    ATOMIC_RMW8_U_SUB_I32_A64	= 502,
    ATOMIC_RMW8_U_SUB_I32_A64_S	= 503,
    ATOMIC_RMW8_U_SUB_I64_A32	= 504,
    ATOMIC_RMW8_U_SUB_I64_A32_S	= 505,
    ATOMIC_RMW8_U_SUB_I64_A64	= 506,
    ATOMIC_RMW8_U_SUB_I64_A64_S	= 507,
    ATOMIC_RMW8_U_XCHG_I32_A32	= 508,
    ATOMIC_RMW8_U_XCHG_I32_A32_S	= 509,
    ATOMIC_RMW8_U_XCHG_I32_A64	= 510,
    ATOMIC_RMW8_U_XCHG_I32_A64_S	= 511,
    ATOMIC_RMW8_U_XCHG_I64_A32	= 512,
    ATOMIC_RMW8_U_XCHG_I64_A32_S	= 513,
    ATOMIC_RMW8_U_XCHG_I64_A64	= 514,
    ATOMIC_RMW8_U_XCHG_I64_A64_S	= 515,
    ATOMIC_RMW8_U_XOR_I32_A32	= 516,
    ATOMIC_RMW8_U_XOR_I32_A32_S	= 517,
    ATOMIC_RMW8_U_XOR_I32_A64	= 518,
    ATOMIC_RMW8_U_XOR_I32_A64_S	= 519,
    ATOMIC_RMW8_U_XOR_I64_A32	= 520,
    ATOMIC_RMW8_U_XOR_I64_A32_S	= 521,
    ATOMIC_RMW8_U_XOR_I64_A64	= 522,
    ATOMIC_RMW8_U_XOR_I64_A64_S	= 523,
    ATOMIC_RMW_ADD_I32_A32	= 524,
    ATOMIC_RMW_ADD_I32_A32_S	= 525,
    ATOMIC_RMW_ADD_I32_A64	= 526,
    ATOMIC_RMW_ADD_I32_A64_S	= 527,
    ATOMIC_RMW_ADD_I64_A32	= 528,
    ATOMIC_RMW_ADD_I64_A32_S	= 529,
    ATOMIC_RMW_ADD_I64_A64	= 530,
    ATOMIC_RMW_ADD_I64_A64_S	= 531,
    ATOMIC_RMW_AND_I32_A32	= 532,
    ATOMIC_RMW_AND_I32_A32_S	= 533,
    ATOMIC_RMW_AND_I32_A64	= 534,
    ATOMIC_RMW_AND_I32_A64_S	= 535,
    ATOMIC_RMW_AND_I64_A32	= 536,
    ATOMIC_RMW_AND_I64_A32_S	= 537,
    ATOMIC_RMW_AND_I64_A64	= 538,
    ATOMIC_RMW_AND_I64_A64_S	= 539,
    ATOMIC_RMW_CMPXCHG_I32_A32	= 540,
    ATOMIC_RMW_CMPXCHG_I32_A32_S	= 541,
    ATOMIC_RMW_CMPXCHG_I32_A64	= 542,
    ATOMIC_RMW_CMPXCHG_I32_A64_S	= 543,
    ATOMIC_RMW_CMPXCHG_I64_A32	= 544,
    ATOMIC_RMW_CMPXCHG_I64_A32_S	= 545,
    ATOMIC_RMW_CMPXCHG_I64_A64	= 546,
    ATOMIC_RMW_CMPXCHG_I64_A64_S	= 547,
    ATOMIC_RMW_OR_I32_A32	= 548,
    ATOMIC_RMW_OR_I32_A32_S	= 549,
    ATOMIC_RMW_OR_I32_A64	= 550,
    ATOMIC_RMW_OR_I32_A64_S	= 551,
    ATOMIC_RMW_OR_I64_A32	= 552,
    ATOMIC_RMW_OR_I64_A32_S	= 553,
    ATOMIC_RMW_OR_I64_A64	= 554,
    ATOMIC_RMW_OR_I64_A64_S	= 555,
    ATOMIC_RMW_SUB_I32_A32	= 556,
    ATOMIC_RMW_SUB_I32_A32_S	= 557,
    ATOMIC_RMW_SUB_I32_A64	= 558,
    ATOMIC_RMW_SUB_I32_A64_S	= 559,
    ATOMIC_RMW_SUB_I64_A32	= 560,
    ATOMIC_RMW_SUB_I64_A32_S	= 561,
    ATOMIC_RMW_SUB_I64_A64	= 562,
    ATOMIC_RMW_SUB_I64_A64_S	= 563,
    ATOMIC_RMW_XCHG_I32_A32	= 564,
    ATOMIC_RMW_XCHG_I32_A32_S	= 565,
    ATOMIC_RMW_XCHG_I32_A64	= 566,
    ATOMIC_RMW_XCHG_I32_A64_S	= 567,
    ATOMIC_RMW_XCHG_I64_A32	= 568,
    ATOMIC_RMW_XCHG_I64_A32_S	= 569,
    ATOMIC_RMW_XCHG_I64_A64	= 570,
    ATOMIC_RMW_XCHG_I64_A64_S	= 571,
    ATOMIC_RMW_XOR_I32_A32	= 572,
    ATOMIC_RMW_XOR_I32_A32_S	= 573,
    ATOMIC_RMW_XOR_I32_A64	= 574,
    ATOMIC_RMW_XOR_I32_A64_S	= 575,
    ATOMIC_RMW_XOR_I64_A32	= 576,
    ATOMIC_RMW_XOR_I64_A32_S	= 577,
    ATOMIC_RMW_XOR_I64_A64	= 578,
    ATOMIC_RMW_XOR_I64_A64_S	= 579,
    ATOMIC_STORE16_I32_A32	= 580,
    ATOMIC_STORE16_I32_A32_S	= 581,
    ATOMIC_STORE16_I32_A64	= 582,
    ATOMIC_STORE16_I32_A64_S	= 583,
    ATOMIC_STORE16_I64_A32	= 584,
    ATOMIC_STORE16_I64_A32_S	= 585,
    ATOMIC_STORE16_I64_A64	= 586,
    ATOMIC_STORE16_I64_A64_S	= 587,
    ATOMIC_STORE32_I64_A32	= 588,
    ATOMIC_STORE32_I64_A32_S	= 589,
    ATOMIC_STORE32_I64_A64	= 590,
    ATOMIC_STORE32_I64_A64_S	= 591,
    ATOMIC_STORE8_I32_A32	= 592,
    ATOMIC_STORE8_I32_A32_S	= 593,
    ATOMIC_STORE8_I32_A64	= 594,
    ATOMIC_STORE8_I32_A64_S	= 595,
    ATOMIC_STORE8_I64_A32	= 596,
    ATOMIC_STORE8_I64_A32_S	= 597,
    ATOMIC_STORE8_I64_A64	= 598,
    ATOMIC_STORE8_I64_A64_S	= 599,
    ATOMIC_STORE_I32_A32	= 600,
    ATOMIC_STORE_I32_A32_S	= 601,
    ATOMIC_STORE_I32_A64	= 602,
    ATOMIC_STORE_I32_A64_S	= 603,
    ATOMIC_STORE_I64_A32	= 604,
    ATOMIC_STORE_I64_A32_S	= 605,
    ATOMIC_STORE_I64_A64	= 606,
    ATOMIC_STORE_I64_A64_S	= 607,
    AVGR_U_I16x8	= 608,
    AVGR_U_I16x8_S	= 609,
    AVGR_U_I8x16	= 610,
    AVGR_U_I8x16_S	= 611,
    BITMASK_I16x8	= 612,
    BITMASK_I16x8_S	= 613,
    BITMASK_I32x4	= 614,
    BITMASK_I32x4_S	= 615,
    BITMASK_I64x2	= 616,
    BITMASK_I64x2_S	= 617,
    BITMASK_I8x16	= 618,
    BITMASK_I8x16_S	= 619,
    BITSELECT	= 620,
    BITSELECT_S	= 621,
    BLOCK	= 622,
    BLOCK_S	= 623,
    BR	= 624,
    BR_IF	= 625,
    BR_IF_S	= 626,
    BR_S	= 627,
    BR_TABLE_I32	= 628,
    BR_TABLE_I32_S	= 629,
    BR_TABLE_I64	= 630,
    BR_TABLE_I64_S	= 631,
    BR_UNLESS	= 632,
    BR_UNLESS_S	= 633,
    CALL	= 634,
    CALL_INDIRECT	= 635,
    CALL_INDIRECT_S	= 636,
    CALL_S	= 637,
    CATCH	= 638,
    CATCH_ALL	= 639,
    CATCH_ALL_S	= 640,
    CATCH_S	= 641,
    CEIL_F32	= 642,
    CEIL_F32_S	= 643,
    CEIL_F32x4	= 644,
    CEIL_F32x4_S	= 645,
    CEIL_F64	= 646,
    CEIL_F64_S	= 647,
    CEIL_F64x2	= 648,
    CEIL_F64x2_S	= 649,
    CLZ_I32	= 650,
    CLZ_I32_S	= 651,
    CLZ_I64	= 652,
    CLZ_I64_S	= 653,
    CONST_F32	= 654,
    CONST_F32_S	= 655,
    CONST_F64	= 656,
    CONST_F64_S	= 657,
    CONST_I32	= 658,
    CONST_I32_S	= 659,
    CONST_I64	= 660,
    CONST_I64_S	= 661,
    CONST_V128_F32x4	= 662,
    CONST_V128_F32x4_S	= 663,
    CONST_V128_F64x2	= 664,
    CONST_V128_F64x2_S	= 665,
    CONST_V128_I16x8	= 666,
    CONST_V128_I16x8_S	= 667,
    CONST_V128_I32x4	= 668,
    CONST_V128_I32x4_S	= 669,
    CONST_V128_I64x2	= 670,
    CONST_V128_I64x2_S	= 671,
    CONST_V128_I8x16	= 672,
    CONST_V128_I8x16_S	= 673,
    COPYSIGN_F32	= 674,
    COPYSIGN_F32_S	= 675,
    COPYSIGN_F64	= 676,
    COPYSIGN_F64_S	= 677,
    COPY_EXTERNREF	= 678,
    COPY_EXTERNREF_S	= 679,
    COPY_F32	= 680,
    COPY_F32_S	= 681,
    COPY_F64	= 682,
    COPY_F64_S	= 683,
    COPY_FUNCREF	= 684,
    COPY_FUNCREF_S	= 685,
    COPY_I32	= 686,
    COPY_I32_S	= 687,
    COPY_I64	= 688,
    COPY_I64_S	= 689,
    COPY_V128	= 690,
    COPY_V128_S	= 691,
    CTZ_I32	= 692,
    CTZ_I32_S	= 693,
    CTZ_I64	= 694,
    CTZ_I64_S	= 695,
    DEBUG_UNREACHABLE	= 696,
    DEBUG_UNREACHABLE_S	= 697,
    DELEGATE	= 698,
    DELEGATE_S	= 699,
    DIV_F32	= 700,
    DIV_F32_S	= 701,
    DIV_F32x4	= 702,
    DIV_F32x4_S	= 703,
    DIV_F64	= 704,
    DIV_F64_S	= 705,
    DIV_F64x2	= 706,
    DIV_F64x2_S	= 707,
    DIV_S_I32	= 708,
    DIV_S_I32_S	= 709,
    DIV_S_I64	= 710,
    DIV_S_I64_S	= 711,
    DIV_U_I32	= 712,
    DIV_U_I32_S	= 713,
    DIV_U_I64	= 714,
    DIV_U_I64_S	= 715,
    DOT	= 716,
    DOT_S	= 717,
    DROP_EXTERNREF	= 718,
    DROP_EXTERNREF_S	= 719,
    DROP_F32	= 720,
    DROP_F32_S	= 721,
    DROP_F64	= 722,
    DROP_F64_S	= 723,
    DROP_FUNCREF	= 724,
    DROP_FUNCREF_S	= 725,
    DROP_I32	= 726,
    DROP_I32_S	= 727,
    DROP_I64	= 728,
    DROP_I64_S	= 729,
    DROP_V128	= 730,
    DROP_V128_S	= 731,
    ELSE	= 732,
    ELSE_S	= 733,
    END	= 734,
    END_BLOCK	= 735,
    END_BLOCK_S	= 736,
    END_FUNCTION	= 737,
    END_FUNCTION_S	= 738,
    END_IF	= 739,
    END_IF_S	= 740,
    END_LOOP	= 741,
    END_LOOP_S	= 742,
    END_S	= 743,
    END_TRY	= 744,
    END_TRY_S	= 745,
    EQZ_I32	= 746,
    EQZ_I32_S	= 747,
    EQZ_I64	= 748,
    EQZ_I64_S	= 749,
    EQ_F32	= 750,
    EQ_F32_S	= 751,
    EQ_F32x4	= 752,
    EQ_F32x4_S	= 753,
    EQ_F64	= 754,
    EQ_F64_S	= 755,
    EQ_F64x2	= 756,
    EQ_F64x2_S	= 757,
    EQ_I16x8	= 758,
    EQ_I16x8_S	= 759,
    EQ_I32	= 760,
    EQ_I32_S	= 761,
    EQ_I32x4	= 762,
    EQ_I32x4_S	= 763,
    EQ_I64	= 764,
    EQ_I64_S	= 765,
    EQ_I64x2	= 766,
    EQ_I64x2_S	= 767,
    EQ_I8x16	= 768,
    EQ_I8x16_S	= 769,
    EXTMUL_HIGH_S_I16x8	= 770,
    EXTMUL_HIGH_S_I16x8_S	= 771,
    EXTMUL_HIGH_S_I32x4	= 772,
    EXTMUL_HIGH_S_I32x4_S	= 773,
    EXTMUL_HIGH_S_I64x2	= 774,
    EXTMUL_HIGH_S_I64x2_S	= 775,
    EXTMUL_HIGH_U_I16x8	= 776,
    EXTMUL_HIGH_U_I16x8_S	= 777,
    EXTMUL_HIGH_U_I32x4	= 778,
    EXTMUL_HIGH_U_I32x4_S	= 779,
    EXTMUL_HIGH_U_I64x2	= 780,
    EXTMUL_HIGH_U_I64x2_S	= 781,
    EXTMUL_LOW_S_I16x8	= 782,
    EXTMUL_LOW_S_I16x8_S	= 783,
    EXTMUL_LOW_S_I32x4	= 784,
    EXTMUL_LOW_S_I32x4_S	= 785,
    EXTMUL_LOW_S_I64x2	= 786,
    EXTMUL_LOW_S_I64x2_S	= 787,
    EXTMUL_LOW_U_I16x8	= 788,
    EXTMUL_LOW_U_I16x8_S	= 789,
    EXTMUL_LOW_U_I32x4	= 790,
    EXTMUL_LOW_U_I32x4_S	= 791,
    EXTMUL_LOW_U_I64x2	= 792,
    EXTMUL_LOW_U_I64x2_S	= 793,
    EXTRACT_LANE_F32x4	= 794,
    EXTRACT_LANE_F32x4_S	= 795,
    EXTRACT_LANE_F64x2	= 796,
    EXTRACT_LANE_F64x2_S	= 797,
    EXTRACT_LANE_I16x8_s	= 798,
    EXTRACT_LANE_I16x8_s_S	= 799,
    EXTRACT_LANE_I16x8_u	= 800,
    EXTRACT_LANE_I16x8_u_S	= 801,
    EXTRACT_LANE_I32x4	= 802,
    EXTRACT_LANE_I32x4_S	= 803,
    EXTRACT_LANE_I64x2	= 804,
    EXTRACT_LANE_I64x2_S	= 805,
    EXTRACT_LANE_I8x16_s	= 806,
    EXTRACT_LANE_I8x16_s_S	= 807,
    EXTRACT_LANE_I8x16_u	= 808,
    EXTRACT_LANE_I8x16_u_S	= 809,
    F32_CONVERT_S_I32	= 810,
    F32_CONVERT_S_I32_S	= 811,
    F32_CONVERT_S_I64	= 812,
    F32_CONVERT_S_I64_S	= 813,
    F32_CONVERT_U_I32	= 814,
    F32_CONVERT_U_I32_S	= 815,
    F32_CONVERT_U_I64	= 816,
    F32_CONVERT_U_I64_S	= 817,
    F32_DEMOTE_F64	= 818,
    F32_DEMOTE_F64_S	= 819,
    F32_REINTERPRET_I32	= 820,
    F32_REINTERPRET_I32_S	= 821,
    F64_CONVERT_S_I32	= 822,
    F64_CONVERT_S_I32_S	= 823,
    F64_CONVERT_S_I64	= 824,
    F64_CONVERT_S_I64_S	= 825,
    F64_CONVERT_U_I32	= 826,
    F64_CONVERT_U_I32_S	= 827,
    F64_CONVERT_U_I64	= 828,
    F64_CONVERT_U_I64_S	= 829,
    F64_PROMOTE_F32	= 830,
    F64_PROMOTE_F32_S	= 831,
    F64_REINTERPRET_I64	= 832,
    F64_REINTERPRET_I64_S	= 833,
    FALLTHROUGH_RETURN	= 834,
    FALLTHROUGH_RETURN_S	= 835,
    FLOOR_F32	= 836,
    FLOOR_F32_S	= 837,
    FLOOR_F32x4	= 838,
    FLOOR_F32x4_S	= 839,
    FLOOR_F64	= 840,
    FLOOR_F64_S	= 841,
    FLOOR_F64x2	= 842,
    FLOOR_F64x2_S	= 843,
    FP_TO_SINT_I32_F32	= 844,
    FP_TO_SINT_I32_F32_S	= 845,
    FP_TO_SINT_I32_F64	= 846,
    FP_TO_SINT_I32_F64_S	= 847,
    FP_TO_SINT_I64_F32	= 848,
    FP_TO_SINT_I64_F32_S	= 849,
    FP_TO_SINT_I64_F64	= 850,
    FP_TO_SINT_I64_F64_S	= 851,
    FP_TO_UINT_I32_F32	= 852,
    FP_TO_UINT_I32_F32_S	= 853,
    FP_TO_UINT_I32_F64	= 854,
    FP_TO_UINT_I32_F64_S	= 855,
    FP_TO_UINT_I64_F32	= 856,
    FP_TO_UINT_I64_F32_S	= 857,
    FP_TO_UINT_I64_F64	= 858,
    FP_TO_UINT_I64_F64_S	= 859,
    GE_F32	= 860,
    GE_F32_S	= 861,
    GE_F32x4	= 862,
    GE_F32x4_S	= 863,
    GE_F64	= 864,
    GE_F64_S	= 865,
    GE_F64x2	= 866,
    GE_F64x2_S	= 867,
    GE_S_I16x8	= 868,
    GE_S_I16x8_S	= 869,
    GE_S_I32	= 870,
    GE_S_I32_S	= 871,
    GE_S_I32x4	= 872,
    GE_S_I32x4_S	= 873,
    GE_S_I64	= 874,
    GE_S_I64_S	= 875,
    GE_S_I64x2	= 876,
    GE_S_I64x2_S	= 877,
    GE_S_I8x16	= 878,
    GE_S_I8x16_S	= 879,
    GE_U_I16x8	= 880,
    GE_U_I16x8_S	= 881,
    GE_U_I32	= 882,
    GE_U_I32_S	= 883,
    GE_U_I32x4	= 884,
    GE_U_I32x4_S	= 885,
    GE_U_I64	= 886,
    GE_U_I64_S	= 887,
    GE_U_I8x16	= 888,
    GE_U_I8x16_S	= 889,
    GLOBAL_GET_EXTERNREF	= 890,
    GLOBAL_GET_EXTERNREF_S	= 891,
    GLOBAL_GET_F32	= 892,
    GLOBAL_GET_F32_S	= 893,
    GLOBAL_GET_F64	= 894,
    GLOBAL_GET_F64_S	= 895,
    GLOBAL_GET_FUNCREF	= 896,
    GLOBAL_GET_FUNCREF_S	= 897,
    GLOBAL_GET_I32	= 898,
    GLOBAL_GET_I32_S	= 899,
    GLOBAL_GET_I64	= 900,
    GLOBAL_GET_I64_S	= 901,
    GLOBAL_GET_V128	= 902,
    GLOBAL_GET_V128_S	= 903,
    GLOBAL_SET_EXTERNREF	= 904,
    GLOBAL_SET_EXTERNREF_S	= 905,
    GLOBAL_SET_F32	= 906,
    GLOBAL_SET_F32_S	= 907,
    GLOBAL_SET_F64	= 908,
    GLOBAL_SET_F64_S	= 909,
    GLOBAL_SET_FUNCREF	= 910,
    GLOBAL_SET_FUNCREF_S	= 911,
    GLOBAL_SET_I32	= 912,
    GLOBAL_SET_I32_S	= 913,
    GLOBAL_SET_I64	= 914,
    GLOBAL_SET_I64_S	= 915,
    GLOBAL_SET_V128	= 916,
    GLOBAL_SET_V128_S	= 917,
    GT_F32	= 918,
    GT_F32_S	= 919,
    GT_F32x4	= 920,
    GT_F32x4_S	= 921,
    GT_F64	= 922,
    GT_F64_S	= 923,
    GT_F64x2	= 924,
    GT_F64x2_S	= 925,
    GT_S_I16x8	= 926,
    GT_S_I16x8_S	= 927,
    GT_S_I32	= 928,
    GT_S_I32_S	= 929,
    GT_S_I32x4	= 930,
    GT_S_I32x4_S	= 931,
    GT_S_I64	= 932,
    GT_S_I64_S	= 933,
    GT_S_I64x2	= 934,
    GT_S_I64x2_S	= 935,
    GT_S_I8x16	= 936,
    GT_S_I8x16_S	= 937,
    GT_U_I16x8	= 938,
    GT_U_I16x8_S	= 939,
    GT_U_I32	= 940,
    GT_U_I32_S	= 941,
    GT_U_I32x4	= 942,
    GT_U_I32x4_S	= 943,
    GT_U_I64	= 944,
    GT_U_I64_S	= 945,
    GT_U_I8x16	= 946,
    GT_U_I8x16_S	= 947,
    I32_EXTEND16_S_I32	= 948,
    I32_EXTEND16_S_I32_S	= 949,
    I32_EXTEND8_S_I32	= 950,
    I32_EXTEND8_S_I32_S	= 951,
    I32_REINTERPRET_F32	= 952,
    I32_REINTERPRET_F32_S	= 953,
    I32_TRUNC_S_F32	= 954,
    I32_TRUNC_S_F32_S	= 955,
    I32_TRUNC_S_F64	= 956,
    I32_TRUNC_S_F64_S	= 957,
    I32_TRUNC_S_SAT_F32	= 958,
    I32_TRUNC_S_SAT_F32_S	= 959,
    I32_TRUNC_S_SAT_F64	= 960,
    I32_TRUNC_S_SAT_F64_S	= 961,
    I32_TRUNC_U_F32	= 962,
    I32_TRUNC_U_F32_S	= 963,
    I32_TRUNC_U_F64	= 964,
    I32_TRUNC_U_F64_S	= 965,
    I32_TRUNC_U_SAT_F32	= 966,
    I32_TRUNC_U_SAT_F32_S	= 967,
    I32_TRUNC_U_SAT_F64	= 968,
    I32_TRUNC_U_SAT_F64_S	= 969,
    I32_WRAP_I64	= 970,
    I32_WRAP_I64_S	= 971,
    I64_EXTEND16_S_I64	= 972,
    I64_EXTEND16_S_I64_S	= 973,
    I64_EXTEND32_S_I64	= 974,
    I64_EXTEND32_S_I64_S	= 975,
    I64_EXTEND8_S_I64	= 976,
    I64_EXTEND8_S_I64_S	= 977,
    I64_EXTEND_S_I32	= 978,
    I64_EXTEND_S_I32_S	= 979,
    I64_EXTEND_U_I32	= 980,
    I64_EXTEND_U_I32_S	= 981,
    I64_REINTERPRET_F64	= 982,
    I64_REINTERPRET_F64_S	= 983,
    I64_TRUNC_S_F32	= 984,
    I64_TRUNC_S_F32_S	= 985,
    I64_TRUNC_S_F64	= 986,
    I64_TRUNC_S_F64_S	= 987,
    I64_TRUNC_S_SAT_F32	= 988,
    I64_TRUNC_S_SAT_F32_S	= 989,
    I64_TRUNC_S_SAT_F64	= 990,
    I64_TRUNC_S_SAT_F64_S	= 991,
    I64_TRUNC_U_F32	= 992,
    I64_TRUNC_U_F32_S	= 993,
    I64_TRUNC_U_F64	= 994,
    I64_TRUNC_U_F64_S	= 995,
    I64_TRUNC_U_SAT_F32	= 996,
    I64_TRUNC_U_SAT_F32_S	= 997,
    I64_TRUNC_U_SAT_F64	= 998,
    I64_TRUNC_U_SAT_F64_S	= 999,
    IF	= 1000,
    IF_S	= 1001,
    LANESELECT_I16x8	= 1002,
    LANESELECT_I16x8_S	= 1003,
    LANESELECT_I32x4	= 1004,
    LANESELECT_I32x4_S	= 1005,
    LANESELECT_I64x2	= 1006,
    LANESELECT_I64x2_S	= 1007,
    LANESELECT_I8x16	= 1008,
    LANESELECT_I8x16_S	= 1009,
    LE_F32	= 1010,
    LE_F32_S	= 1011,
    LE_F32x4	= 1012,
    LE_F32x4_S	= 1013,
    LE_F64	= 1014,
    LE_F64_S	= 1015,
    LE_F64x2	= 1016,
    LE_F64x2_S	= 1017,
    LE_S_I16x8	= 1018,
    LE_S_I16x8_S	= 1019,
    LE_S_I32	= 1020,
    LE_S_I32_S	= 1021,
    LE_S_I32x4	= 1022,
    LE_S_I32x4_S	= 1023,
    LE_S_I64	= 1024,
    LE_S_I64_S	= 1025,
    LE_S_I64x2	= 1026,
    LE_S_I64x2_S	= 1027,
    LE_S_I8x16	= 1028,
    LE_S_I8x16_S	= 1029,
    LE_U_I16x8	= 1030,
    LE_U_I16x8_S	= 1031,
    LE_U_I32	= 1032,
    LE_U_I32_S	= 1033,
    LE_U_I32x4	= 1034,
    LE_U_I32x4_S	= 1035,
    LE_U_I64	= 1036,
    LE_U_I64_S	= 1037,
    LE_U_I8x16	= 1038,
    LE_U_I8x16_S	= 1039,
    LOAD16_SPLAT_A32	= 1040,
    LOAD16_SPLAT_A32_S	= 1041,
    LOAD16_SPLAT_A64	= 1042,
    LOAD16_SPLAT_A64_S	= 1043,
    LOAD16_S_I32_A32	= 1044,
    LOAD16_S_I32_A32_S	= 1045,
    LOAD16_S_I32_A64	= 1046,
    LOAD16_S_I32_A64_S	= 1047,
    LOAD16_S_I64_A32	= 1048,
    LOAD16_S_I64_A32_S	= 1049,
    LOAD16_S_I64_A64	= 1050,
    LOAD16_S_I64_A64_S	= 1051,
    LOAD16_U_I32_A32	= 1052,
    LOAD16_U_I32_A32_S	= 1053,
    LOAD16_U_I32_A64	= 1054,
    LOAD16_U_I32_A64_S	= 1055,
    LOAD16_U_I64_A32	= 1056,
    LOAD16_U_I64_A32_S	= 1057,
    LOAD16_U_I64_A64	= 1058,
    LOAD16_U_I64_A64_S	= 1059,
    LOAD32_SPLAT_A32	= 1060,
    LOAD32_SPLAT_A32_S	= 1061,
    LOAD32_SPLAT_A64	= 1062,
    LOAD32_SPLAT_A64_S	= 1063,
    LOAD32_S_I64_A32	= 1064,
    LOAD32_S_I64_A32_S	= 1065,
    LOAD32_S_I64_A64	= 1066,
    LOAD32_S_I64_A64_S	= 1067,
    LOAD32_U_I64_A32	= 1068,
    LOAD32_U_I64_A32_S	= 1069,
    LOAD32_U_I64_A64	= 1070,
    LOAD32_U_I64_A64_S	= 1071,
    LOAD64_SPLAT_A32	= 1072,
    LOAD64_SPLAT_A32_S	= 1073,
    LOAD64_SPLAT_A64	= 1074,
    LOAD64_SPLAT_A64_S	= 1075,
    LOAD8_SPLAT_A32	= 1076,
    LOAD8_SPLAT_A32_S	= 1077,
    LOAD8_SPLAT_A64	= 1078,
    LOAD8_SPLAT_A64_S	= 1079,
    LOAD8_S_I32_A32	= 1080,
    LOAD8_S_I32_A32_S	= 1081,
    LOAD8_S_I32_A64	= 1082,
    LOAD8_S_I32_A64_S	= 1083,
    LOAD8_S_I64_A32	= 1084,
    LOAD8_S_I64_A32_S	= 1085,
    LOAD8_S_I64_A64	= 1086,
    LOAD8_S_I64_A64_S	= 1087,
    LOAD8_U_I32_A32	= 1088,
    LOAD8_U_I32_A32_S	= 1089,
    LOAD8_U_I32_A64	= 1090,
    LOAD8_U_I32_A64_S	= 1091,
    LOAD8_U_I64_A32	= 1092,
    LOAD8_U_I64_A32_S	= 1093,
    LOAD8_U_I64_A64	= 1094,
    LOAD8_U_I64_A64_S	= 1095,
    LOAD_EXTEND_S_I16x8_A32	= 1096,
    LOAD_EXTEND_S_I16x8_A32_S	= 1097,
    LOAD_EXTEND_S_I16x8_A64	= 1098,
    LOAD_EXTEND_S_I16x8_A64_S	= 1099,
    LOAD_EXTEND_S_I32x4_A32	= 1100,
    LOAD_EXTEND_S_I32x4_A32_S	= 1101,
    LOAD_EXTEND_S_I32x4_A64	= 1102,
    LOAD_EXTEND_S_I32x4_A64_S	= 1103,
    LOAD_EXTEND_S_I64x2_A32	= 1104,
    LOAD_EXTEND_S_I64x2_A32_S	= 1105,
    LOAD_EXTEND_S_I64x2_A64	= 1106,
    LOAD_EXTEND_S_I64x2_A64_S	= 1107,
    LOAD_EXTEND_U_I16x8_A32	= 1108,
    LOAD_EXTEND_U_I16x8_A32_S	= 1109,
    LOAD_EXTEND_U_I16x8_A64	= 1110,
    LOAD_EXTEND_U_I16x8_A64_S	= 1111,
    LOAD_EXTEND_U_I32x4_A32	= 1112,
    LOAD_EXTEND_U_I32x4_A32_S	= 1113,
    LOAD_EXTEND_U_I32x4_A64	= 1114,
    LOAD_EXTEND_U_I32x4_A64_S	= 1115,
    LOAD_EXTEND_U_I64x2_A32	= 1116,
    LOAD_EXTEND_U_I64x2_A32_S	= 1117,
    LOAD_EXTEND_U_I64x2_A64	= 1118,
    LOAD_EXTEND_U_I64x2_A64_S	= 1119,
    LOAD_F32_A32	= 1120,
    LOAD_F32_A32_S	= 1121,
    LOAD_F32_A64	= 1122,
    LOAD_F32_A64_S	= 1123,
    LOAD_F64_A32	= 1124,
    LOAD_F64_A32_S	= 1125,
    LOAD_F64_A64	= 1126,
    LOAD_F64_A64_S	= 1127,
    LOAD_I32_A32	= 1128,
    LOAD_I32_A32_S	= 1129,
    LOAD_I32_A64	= 1130,
    LOAD_I32_A64_S	= 1131,
    LOAD_I64_A32	= 1132,
    LOAD_I64_A32_S	= 1133,
    LOAD_I64_A64	= 1134,
    LOAD_I64_A64_S	= 1135,
    LOAD_LANE_I16x8_A32	= 1136,
    LOAD_LANE_I16x8_A32_S	= 1137,
    LOAD_LANE_I16x8_A64	= 1138,
    LOAD_LANE_I16x8_A64_S	= 1139,
    LOAD_LANE_I32x4_A32	= 1140,
    LOAD_LANE_I32x4_A32_S	= 1141,
    LOAD_LANE_I32x4_A64	= 1142,
    LOAD_LANE_I32x4_A64_S	= 1143,
    LOAD_LANE_I64x2_A32	= 1144,
    LOAD_LANE_I64x2_A32_S	= 1145,
    LOAD_LANE_I64x2_A64	= 1146,
    LOAD_LANE_I64x2_A64_S	= 1147,
    LOAD_LANE_I8x16_A32	= 1148,
    LOAD_LANE_I8x16_A32_S	= 1149,
    LOAD_LANE_I8x16_A64	= 1150,
    LOAD_LANE_I8x16_A64_S	= 1151,
    LOAD_V128_A32	= 1152,
    LOAD_V128_A32_S	= 1153,
    LOAD_V128_A64	= 1154,
    LOAD_V128_A64_S	= 1155,
    LOAD_ZERO_I32x4_A32	= 1156,
    LOAD_ZERO_I32x4_A32_S	= 1157,
    LOAD_ZERO_I32x4_A64	= 1158,
    LOAD_ZERO_I32x4_A64_S	= 1159,
    LOAD_ZERO_I64x2_A32	= 1160,
    LOAD_ZERO_I64x2_A32_S	= 1161,
    LOAD_ZERO_I64x2_A64	= 1162,
    LOAD_ZERO_I64x2_A64_S	= 1163,
    LOCAL_GET_EXTERNREF	= 1164,
    LOCAL_GET_EXTERNREF_S	= 1165,
    LOCAL_GET_F32	= 1166,
    LOCAL_GET_F32_S	= 1167,
    LOCAL_GET_F64	= 1168,
    LOCAL_GET_F64_S	= 1169,
    LOCAL_GET_FUNCREF	= 1170,
    LOCAL_GET_FUNCREF_S	= 1171,
    LOCAL_GET_I32	= 1172,
    LOCAL_GET_I32_S	= 1173,
    LOCAL_GET_I64	= 1174,
    LOCAL_GET_I64_S	= 1175,
    LOCAL_GET_V128	= 1176,
    LOCAL_GET_V128_S	= 1177,
    LOCAL_SET_EXTERNREF	= 1178,
    LOCAL_SET_EXTERNREF_S	= 1179,
    LOCAL_SET_F32	= 1180,
    LOCAL_SET_F32_S	= 1181,
    LOCAL_SET_F64	= 1182,
    LOCAL_SET_F64_S	= 1183,
    LOCAL_SET_FUNCREF	= 1184,
    LOCAL_SET_FUNCREF_S	= 1185,
    LOCAL_SET_I32	= 1186,
    LOCAL_SET_I32_S	= 1187,
    LOCAL_SET_I64	= 1188,
    LOCAL_SET_I64_S	= 1189,
    LOCAL_SET_V128	= 1190,
    LOCAL_SET_V128_S	= 1191,
    LOCAL_TEE_EXTERNREF	= 1192,
    LOCAL_TEE_EXTERNREF_S	= 1193,
    LOCAL_TEE_F32	= 1194,
    LOCAL_TEE_F32_S	= 1195,
    LOCAL_TEE_F64	= 1196,
    LOCAL_TEE_F64_S	= 1197,
    LOCAL_TEE_FUNCREF	= 1198,
    LOCAL_TEE_FUNCREF_S	= 1199,
    LOCAL_TEE_I32	= 1200,
    LOCAL_TEE_I32_S	= 1201,
    LOCAL_TEE_I64	= 1202,
    LOCAL_TEE_I64_S	= 1203,
    LOCAL_TEE_V128	= 1204,
    LOCAL_TEE_V128_S	= 1205,
    LOOP	= 1206,
    LOOP_S	= 1207,
    LT_F32	= 1208,
    LT_F32_S	= 1209,
    LT_F32x4	= 1210,
    LT_F32x4_S	= 1211,
    LT_F64	= 1212,
    LT_F64_S	= 1213,
    LT_F64x2	= 1214,
    LT_F64x2_S	= 1215,
    LT_S_I16x8	= 1216,
    LT_S_I16x8_S	= 1217,
    LT_S_I32	= 1218,
    LT_S_I32_S	= 1219,
    LT_S_I32x4	= 1220,
    LT_S_I32x4_S	= 1221,
    LT_S_I64	= 1222,
    LT_S_I64_S	= 1223,
    LT_S_I64x2	= 1224,
    LT_S_I64x2_S	= 1225,
    LT_S_I8x16	= 1226,
    LT_S_I8x16_S	= 1227,
    LT_U_I16x8	= 1228,
    LT_U_I16x8_S	= 1229,
    LT_U_I32	= 1230,
    LT_U_I32_S	= 1231,
    LT_U_I32x4	= 1232,
    LT_U_I32x4_S	= 1233,
    LT_U_I64	= 1234,
    LT_U_I64_S	= 1235,
    LT_U_I8x16	= 1236,
    LT_U_I8x16_S	= 1237,
    MADD_F32x4	= 1238,
    MADD_F32x4_S	= 1239,
    MADD_F64x2	= 1240,
    MADD_F64x2_S	= 1241,
    MAX_F32	= 1242,
    MAX_F32_S	= 1243,
    MAX_F32x4	= 1244,
    MAX_F32x4_S	= 1245,
    MAX_F64	= 1246,
    MAX_F64_S	= 1247,
    MAX_F64x2	= 1248,
    MAX_F64x2_S	= 1249,
    MAX_S_I16x8	= 1250,
    MAX_S_I16x8_S	= 1251,
    MAX_S_I32x4	= 1252,
    MAX_S_I32x4_S	= 1253,
    MAX_S_I8x16	= 1254,
    MAX_S_I8x16_S	= 1255,
    MAX_U_I16x8	= 1256,
    MAX_U_I16x8_S	= 1257,
    MAX_U_I32x4	= 1258,
    MAX_U_I32x4_S	= 1259,
    MAX_U_I8x16	= 1260,
    MAX_U_I8x16_S	= 1261,
    MEMORY_ATOMIC_NOTIFY_A32	= 1262,
    MEMORY_ATOMIC_NOTIFY_A32_S	= 1263,
    MEMORY_ATOMIC_NOTIFY_A64	= 1264,
    MEMORY_ATOMIC_NOTIFY_A64_S	= 1265,
    MEMORY_ATOMIC_WAIT32_A32	= 1266,
    MEMORY_ATOMIC_WAIT32_A32_S	= 1267,
    MEMORY_ATOMIC_WAIT32_A64	= 1268,
    MEMORY_ATOMIC_WAIT32_A64_S	= 1269,
    MEMORY_ATOMIC_WAIT64_A32	= 1270,
    MEMORY_ATOMIC_WAIT64_A32_S	= 1271,
    MEMORY_ATOMIC_WAIT64_A64	= 1272,
    MEMORY_ATOMIC_WAIT64_A64_S	= 1273,
    MIN_F32	= 1274,
    MIN_F32_S	= 1275,
    MIN_F32x4	= 1276,
    MIN_F32x4_S	= 1277,
    MIN_F64	= 1278,
    MIN_F64_S	= 1279,
    MIN_F64x2	= 1280,
    MIN_F64x2_S	= 1281,
    MIN_S_I16x8	= 1282,
    MIN_S_I16x8_S	= 1283,
    MIN_S_I32x4	= 1284,
    MIN_S_I32x4_S	= 1285,
    MIN_S_I8x16	= 1286,
    MIN_S_I8x16_S	= 1287,
    MIN_U_I16x8	= 1288,
    MIN_U_I16x8_S	= 1289,
    MIN_U_I32x4	= 1290,
    MIN_U_I32x4_S	= 1291,
    MIN_U_I8x16	= 1292,
    MIN_U_I8x16_S	= 1293,
    MUL_F32	= 1294,
    MUL_F32_S	= 1295,
    MUL_F32x4	= 1296,
    MUL_F32x4_S	= 1297,
    MUL_F64	= 1298,
    MUL_F64_S	= 1299,
    MUL_F64x2	= 1300,
    MUL_F64x2_S	= 1301,
    MUL_I16x8	= 1302,
    MUL_I16x8_S	= 1303,
    MUL_I32	= 1304,
    MUL_I32_S	= 1305,
    MUL_I32x4	= 1306,
    MUL_I32x4_S	= 1307,
    MUL_I64	= 1308,
    MUL_I64_S	= 1309,
    MUL_I64x2	= 1310,
    MUL_I64x2_S	= 1311,
    NARROW_S_I16x8	= 1312,
    NARROW_S_I16x8_S	= 1313,
    NARROW_S_I8x16	= 1314,
    NARROW_S_I8x16_S	= 1315,
    NARROW_U_I16x8	= 1316,
    NARROW_U_I16x8_S	= 1317,
    NARROW_U_I8x16	= 1318,
    NARROW_U_I8x16_S	= 1319,
    NEAREST_F32	= 1320,
    NEAREST_F32_S	= 1321,
    NEAREST_F32x4	= 1322,
    NEAREST_F32x4_S	= 1323,
    NEAREST_F64	= 1324,
    NEAREST_F64_S	= 1325,
    NEAREST_F64x2	= 1326,
    NEAREST_F64x2_S	= 1327,
    NEG_F32	= 1328,
    NEG_F32_S	= 1329,
    NEG_F32x4	= 1330,
    NEG_F32x4_S	= 1331,
    NEG_F64	= 1332,
    NEG_F64_S	= 1333,
    NEG_F64x2	= 1334,
    NEG_F64x2_S	= 1335,
    NEG_I16x8	= 1336,
    NEG_I16x8_S	= 1337,
    NEG_I32x4	= 1338,
    NEG_I32x4_S	= 1339,
    NEG_I64x2	= 1340,
    NEG_I64x2_S	= 1341,
    NEG_I8x16	= 1342,
    NEG_I8x16_S	= 1343,
    NE_F32	= 1344,
    NE_F32_S	= 1345,
    NE_F32x4	= 1346,
    NE_F32x4_S	= 1347,
    NE_F64	= 1348,
    NE_F64_S	= 1349,
    NE_F64x2	= 1350,
    NE_F64x2_S	= 1351,
    NE_I16x8	= 1352,
    NE_I16x8_S	= 1353,
    NE_I32	= 1354,
    NE_I32_S	= 1355,
    NE_I32x4	= 1356,
    NE_I32x4_S	= 1357,
    NE_I64	= 1358,
    NE_I64_S	= 1359,
    NE_I64x2	= 1360,
    NE_I64x2_S	= 1361,
    NE_I8x16	= 1362,
    NE_I8x16_S	= 1363,
    NMADD_F32x4	= 1364,
    NMADD_F32x4_S	= 1365,
    NMADD_F64x2	= 1366,
    NMADD_F64x2_S	= 1367,
    NOP	= 1368,
    NOP_S	= 1369,
    NOT	= 1370,
    NOT_S	= 1371,
    OR	= 1372,
    OR_I32	= 1373,
    OR_I32_S	= 1374,
    OR_I64	= 1375,
    OR_I64_S	= 1376,
    OR_S	= 1377,
    PMAX_F32x4	= 1378,
    PMAX_F32x4_S	= 1379,
    PMAX_F64x2	= 1380,
    PMAX_F64x2_S	= 1381,
    PMIN_F32x4	= 1382,
    PMIN_F32x4_S	= 1383,
    PMIN_F64x2	= 1384,
    PMIN_F64x2_S	= 1385,
    POPCNT_I32	= 1386,
    POPCNT_I32_S	= 1387,
    POPCNT_I64	= 1388,
    POPCNT_I64_S	= 1389,
    POPCNT_I8x16	= 1390,
    POPCNT_I8x16_S	= 1391,
    Q15MULR_SAT_S_I16x8	= 1392,
    Q15MULR_SAT_S_I16x8_S	= 1393,
    REF_IS_NULL_EXTERNREF	= 1394,
    REF_IS_NULL_EXTERNREF_S	= 1395,
    REF_IS_NULL_FUNCREF	= 1396,
    REF_IS_NULL_FUNCREF_S	= 1397,
    REF_NULL_EXTERNREF	= 1398,
    REF_NULL_EXTERNREF_S	= 1399,
    REF_NULL_FUNCREF	= 1400,
    REF_NULL_FUNCREF_S	= 1401,
    RELAXED_DOT	= 1402,
    RELAXED_DOT_ADD	= 1403,
    RELAXED_DOT_ADD_S	= 1404,
    RELAXED_DOT_BFLOAT	= 1405,
    RELAXED_DOT_BFLOAT_S	= 1406,
    RELAXED_DOT_S	= 1407,
    RELAXED_Q15MULR_S_I16x8	= 1408,
    RELAXED_Q15MULR_S_I16x8_S	= 1409,
    RELAXED_SWIZZLE	= 1410,
    RELAXED_SWIZZLE_S	= 1411,
    REM_S_I32	= 1412,
    REM_S_I32_S	= 1413,
    REM_S_I64	= 1414,
    REM_S_I64_S	= 1415,
    REM_U_I32	= 1416,
    REM_U_I32_S	= 1417,
    REM_U_I64	= 1418,
    REM_U_I64_S	= 1419,
    REPLACE_LANE_F32x4	= 1420,
    REPLACE_LANE_F32x4_S	= 1421,
    REPLACE_LANE_F64x2	= 1422,
    REPLACE_LANE_F64x2_S	= 1423,
    REPLACE_LANE_I16x8	= 1424,
    REPLACE_LANE_I16x8_S	= 1425,
    REPLACE_LANE_I32x4	= 1426,
    REPLACE_LANE_I32x4_S	= 1427,
    REPLACE_LANE_I64x2	= 1428,
    REPLACE_LANE_I64x2_S	= 1429,
    REPLACE_LANE_I8x16	= 1430,
    REPLACE_LANE_I8x16_S	= 1431,
    RETHROW	= 1432,
    RETHROW_S	= 1433,
    RETURN	= 1434,
    RETURN_S	= 1435,
    RET_CALL	= 1436,
    RET_CALL_INDIRECT	= 1437,
    RET_CALL_INDIRECT_S	= 1438,
    RET_CALL_S	= 1439,
    ROTL_I32	= 1440,
    ROTL_I32_S	= 1441,
    ROTL_I64	= 1442,
    ROTL_I64_S	= 1443,
    ROTR_I32	= 1444,
    ROTR_I32_S	= 1445,
    ROTR_I64	= 1446,
    ROTR_I64_S	= 1447,
    SELECT_EXTERNREF	= 1448,
    SELECT_EXTERNREF_S	= 1449,
    SELECT_F32	= 1450,
    SELECT_F32_S	= 1451,
    SELECT_F64	= 1452,
    SELECT_F64_S	= 1453,
    SELECT_FUNCREF	= 1454,
    SELECT_FUNCREF_S	= 1455,
    SELECT_I32	= 1456,
    SELECT_I32_S	= 1457,
    SELECT_I64	= 1458,
    SELECT_I64_S	= 1459,
    SELECT_V128	= 1460,
    SELECT_V128_S	= 1461,
    SHL_I16x8	= 1462,
    SHL_I16x8_S	= 1463,
    SHL_I32	= 1464,
    SHL_I32_S	= 1465,
    SHL_I32x4	= 1466,
    SHL_I32x4_S	= 1467,
    SHL_I64	= 1468,
    SHL_I64_S	= 1469,
    SHL_I64x2	= 1470,
    SHL_I64x2_S	= 1471,
    SHL_I8x16	= 1472,
    SHL_I8x16_S	= 1473,
    SHR_S_I16x8	= 1474,
    SHR_S_I16x8_S	= 1475,
    SHR_S_I32	= 1476,
    SHR_S_I32_S	= 1477,
    SHR_S_I32x4	= 1478,
    SHR_S_I32x4_S	= 1479,
    SHR_S_I64	= 1480,
    SHR_S_I64_S	= 1481,
    SHR_S_I64x2	= 1482,
    SHR_S_I64x2_S	= 1483,
    SHR_S_I8x16	= 1484,
    SHR_S_I8x16_S	= 1485,
    SHR_U_I16x8	= 1486,
    SHR_U_I16x8_S	= 1487,
    SHR_U_I32	= 1488,
    SHR_U_I32_S	= 1489,
    SHR_U_I32x4	= 1490,
    SHR_U_I32x4_S	= 1491,
    SHR_U_I64	= 1492,
    SHR_U_I64_S	= 1493,
    SHR_U_I64x2	= 1494,
    SHR_U_I64x2_S	= 1495,
    SHR_U_I8x16	= 1496,
    SHR_U_I8x16_S	= 1497,
    SHUFFLE	= 1498,
    SHUFFLE_S	= 1499,
    SIMD_RELAXED_FMAX_F32x4	= 1500,
    SIMD_RELAXED_FMAX_F32x4_S	= 1501,
    SIMD_RELAXED_FMAX_F64x2	= 1502,
    SIMD_RELAXED_FMAX_F64x2_S	= 1503,
    SIMD_RELAXED_FMIN_F32x4	= 1504,
    SIMD_RELAXED_FMIN_F32x4_S	= 1505,
    SIMD_RELAXED_FMIN_F64x2	= 1506,
    SIMD_RELAXED_FMIN_F64x2_S	= 1507,
    SPLAT_F32x4	= 1508,
    SPLAT_F32x4_S	= 1509,
    SPLAT_F64x2	= 1510,
    SPLAT_F64x2_S	= 1511,
    SPLAT_I16x8	= 1512,
    SPLAT_I16x8_S	= 1513,
    SPLAT_I32x4	= 1514,
    SPLAT_I32x4_S	= 1515,
    SPLAT_I64x2	= 1516,
    SPLAT_I64x2_S	= 1517,
    SPLAT_I8x16	= 1518,
    SPLAT_I8x16_S	= 1519,
    SQRT_F32	= 1520,
    SQRT_F32_S	= 1521,
    SQRT_F32x4	= 1522,
    SQRT_F32x4_S	= 1523,
    SQRT_F64	= 1524,
    SQRT_F64_S	= 1525,
    SQRT_F64x2	= 1526,
    SQRT_F64x2_S	= 1527,
    STORE16_I32_A32	= 1528,
    STORE16_I32_A32_S	= 1529,
    STORE16_I32_A64	= 1530,
    STORE16_I32_A64_S	= 1531,
    STORE16_I64_A32	= 1532,
    STORE16_I64_A32_S	= 1533,
    STORE16_I64_A64	= 1534,
    STORE16_I64_A64_S	= 1535,
    STORE32_I64_A32	= 1536,
    STORE32_I64_A32_S	= 1537,
    STORE32_I64_A64	= 1538,
    STORE32_I64_A64_S	= 1539,
    STORE8_I32_A32	= 1540,
    STORE8_I32_A32_S	= 1541,
    STORE8_I32_A64	= 1542,
    STORE8_I32_A64_S	= 1543,
    STORE8_I64_A32	= 1544,
    STORE8_I64_A32_S	= 1545,
    STORE8_I64_A64	= 1546,
    STORE8_I64_A64_S	= 1547,
    STORE_F32_A32	= 1548,
    STORE_F32_A32_S	= 1549,
    STORE_F32_A64	= 1550,
    STORE_F32_A64_S	= 1551,
    STORE_F64_A32	= 1552,
    STORE_F64_A32_S	= 1553,
    STORE_F64_A64	= 1554,
    STORE_F64_A64_S	= 1555,
    STORE_I32_A32	= 1556,
    STORE_I32_A32_S	= 1557,
    STORE_I32_A64	= 1558,
    STORE_I32_A64_S	= 1559,
    STORE_I64_A32	= 1560,
    STORE_I64_A32_S	= 1561,
    STORE_I64_A64	= 1562,
    STORE_I64_A64_S	= 1563,
    STORE_LANE_I16x8_A32	= 1564,
    STORE_LANE_I16x8_A32_S	= 1565,
    STORE_LANE_I16x8_A64	= 1566,
    STORE_LANE_I16x8_A64_S	= 1567,
    STORE_LANE_I32x4_A32	= 1568,
    STORE_LANE_I32x4_A32_S	= 1569,
    STORE_LANE_I32x4_A64	= 1570,
    STORE_LANE_I32x4_A64_S	= 1571,
    STORE_LANE_I64x2_A32	= 1572,
    STORE_LANE_I64x2_A32_S	= 1573,
    STORE_LANE_I64x2_A64	= 1574,
    STORE_LANE_I64x2_A64_S	= 1575,
    STORE_LANE_I8x16_A32	= 1576,
    STORE_LANE_I8x16_A32_S	= 1577,
    STORE_LANE_I8x16_A64	= 1578,
    STORE_LANE_I8x16_A64_S	= 1579,
    STORE_V128_A32	= 1580,
    STORE_V128_A32_S	= 1581,
    STORE_V128_A64	= 1582,
    STORE_V128_A64_S	= 1583,
    SUB_F32	= 1584,
    SUB_F32_S	= 1585,
    SUB_F32x4	= 1586,
    SUB_F32x4_S	= 1587,
    SUB_F64	= 1588,
    SUB_F64_S	= 1589,
    SUB_F64x2	= 1590,
    SUB_F64x2_S	= 1591,
    SUB_I16x8	= 1592,
    SUB_I16x8_S	= 1593,
    SUB_I32	= 1594,
    SUB_I32_S	= 1595,
    SUB_I32x4	= 1596,
    SUB_I32x4_S	= 1597,
    SUB_I64	= 1598,
    SUB_I64_S	= 1599,
    SUB_I64x2	= 1600,
    SUB_I64x2_S	= 1601,
    SUB_I8x16	= 1602,
    SUB_I8x16_S	= 1603,
    SUB_SAT_S_I16x8	= 1604,
    SUB_SAT_S_I16x8_S	= 1605,
    SUB_SAT_S_I8x16	= 1606,
    SUB_SAT_S_I8x16_S	= 1607,
    SUB_SAT_U_I16x8	= 1608,
    SUB_SAT_U_I16x8_S	= 1609,
    SUB_SAT_U_I8x16	= 1610,
    SUB_SAT_U_I8x16_S	= 1611,
    SWIZZLE	= 1612,
    SWIZZLE_S	= 1613,
    TABLE_COPY	= 1614,
    TABLE_COPY_S	= 1615,
    TABLE_FILL_EXTERNREF	= 1616,
    TABLE_FILL_EXTERNREF_S	= 1617,
    TABLE_FILL_FUNCREF	= 1618,
    TABLE_FILL_FUNCREF_S	= 1619,
    TABLE_GET_EXTERNREF	= 1620,
    TABLE_GET_EXTERNREF_S	= 1621,
    TABLE_GET_FUNCREF	= 1622,
    TABLE_GET_FUNCREF_S	= 1623,
    TABLE_GROW_EXTERNREF	= 1624,
    TABLE_GROW_EXTERNREF_S	= 1625,
    TABLE_GROW_FUNCREF	= 1626,
    TABLE_GROW_FUNCREF_S	= 1627,
    TABLE_SET_EXTERNREF	= 1628,
    TABLE_SET_EXTERNREF_S	= 1629,
    TABLE_SET_FUNCREF	= 1630,
    TABLE_SET_FUNCREF_S	= 1631,
    TABLE_SIZE	= 1632,
    TABLE_SIZE_S	= 1633,
    TEE_EXTERNREF	= 1634,
    TEE_EXTERNREF_S	= 1635,
    TEE_F32	= 1636,
    TEE_F32_S	= 1637,
    TEE_F64	= 1638,
    TEE_F64_S	= 1639,
    TEE_FUNCREF	= 1640,
    TEE_FUNCREF_S	= 1641,
    TEE_I32	= 1642,
    TEE_I32_S	= 1643,
    TEE_I64	= 1644,
    TEE_I64_S	= 1645,
    TEE_V128	= 1646,
    TEE_V128_S	= 1647,
    THROW	= 1648,
    THROW_S	= 1649,
    TRUNC_F32	= 1650,
    TRUNC_F32_S	= 1651,
    TRUNC_F32x4	= 1652,
    TRUNC_F32x4_S	= 1653,
    TRUNC_F64	= 1654,
    TRUNC_F64_S	= 1655,
    TRUNC_F64x2	= 1656,
    TRUNC_F64x2_S	= 1657,
    TRY	= 1658,
    TRY_S	= 1659,
    UNREACHABLE	= 1660,
    UNREACHABLE_S	= 1661,
    XOR	= 1662,
    XOR_I32	= 1663,
    XOR_I32_S	= 1664,
    XOR_I64	= 1665,
    XOR_I64_S	= 1666,
    XOR_S	= 1667,
    anonymous_4063MEMORY_GROW_A32	= 1668,
    anonymous_4063MEMORY_GROW_A32_S	= 1669,
    anonymous_4063MEMORY_SIZE_A32	= 1670,
    anonymous_4063MEMORY_SIZE_A32_S	= 1671,
    anonymous_4064MEMORY_GROW_A64	= 1672,
    anonymous_4064MEMORY_GROW_A64_S	= 1673,
    anonymous_4064MEMORY_SIZE_A64	= 1674,
    anonymous_4064MEMORY_SIZE_A64_S	= 1675,
    anonymous_4733DATA_DROP	= 1676,
    anonymous_4733DATA_DROP_S	= 1677,
    anonymous_4733MEMORY_COPY_A32	= 1678,
    anonymous_4733MEMORY_COPY_A32_S	= 1679,
    anonymous_4733MEMORY_FILL_A32	= 1680,
    anonymous_4733MEMORY_FILL_A32_S	= 1681,
    anonymous_4733MEMORY_INIT_A32	= 1682,
    anonymous_4733MEMORY_INIT_A32_S	= 1683,
    anonymous_4734DATA_DROP	= 1684,
    anonymous_4734DATA_DROP_S	= 1685,
    anonymous_4734MEMORY_COPY_A64	= 1686,
    anonymous_4734MEMORY_COPY_A64_S	= 1687,
    anonymous_4734MEMORY_FILL_A64	= 1688,
    anonymous_4734MEMORY_FILL_A64_S	= 1689,
    anonymous_4734MEMORY_INIT_A64	= 1690,
    anonymous_4734MEMORY_INIT_A64_S	= 1691,
    convert_low_s_F64x2	= 1692,
    convert_low_s_F64x2_S	= 1693,
    convert_low_u_F64x2	= 1694,
    convert_low_u_F64x2_S	= 1695,
    demote_zero_F32x4	= 1696,
    demote_zero_F32x4_S	= 1697,
    extend_high_s_I16x8	= 1698,
    extend_high_s_I16x8_S	= 1699,
    extend_high_s_I32x4	= 1700,
    extend_high_s_I32x4_S	= 1701,
    extend_high_s_I64x2	= 1702,
    extend_high_s_I64x2_S	= 1703,
    extend_high_u_I16x8	= 1704,
    extend_high_u_I16x8_S	= 1705,
    extend_high_u_I32x4	= 1706,
    extend_high_u_I32x4_S	= 1707,
    extend_high_u_I64x2	= 1708,
    extend_high_u_I64x2_S	= 1709,
    extend_low_s_I16x8	= 1710,
    extend_low_s_I16x8_S	= 1711,
    extend_low_s_I32x4	= 1712,
    extend_low_s_I32x4_S	= 1713,
    extend_low_s_I64x2	= 1714,
    extend_low_s_I64x2_S	= 1715,
    extend_low_u_I16x8	= 1716,
    extend_low_u_I16x8_S	= 1717,
    extend_low_u_I32x4	= 1718,
    extend_low_u_I32x4_S	= 1719,
    extend_low_u_I64x2	= 1720,
    extend_low_u_I64x2_S	= 1721,
    fp_to_sint_I32x4	= 1722,
    fp_to_sint_I32x4_S	= 1723,
    fp_to_uint_I32x4	= 1724,
    fp_to_uint_I32x4_S	= 1725,
    int_wasm_extadd_pairwise_signed_I16x8	= 1726,
    int_wasm_extadd_pairwise_signed_I16x8_S	= 1727,
    int_wasm_extadd_pairwise_signed_I32x4	= 1728,
    int_wasm_extadd_pairwise_signed_I32x4_S	= 1729,
    int_wasm_extadd_pairwise_unsigned_I16x8	= 1730,
    int_wasm_extadd_pairwise_unsigned_I16x8_S	= 1731,
    int_wasm_extadd_pairwise_unsigned_I32x4	= 1732,
    int_wasm_extadd_pairwise_unsigned_I32x4_S	= 1733,
    int_wasm_relaxed_trunc_signed_I32x4	= 1734,
    int_wasm_relaxed_trunc_signed_I32x4_S	= 1735,
    int_wasm_relaxed_trunc_signed_zero_I32x4	= 1736,
    int_wasm_relaxed_trunc_signed_zero_I32x4_S	= 1737,
    int_wasm_relaxed_trunc_unsigned_I32x4	= 1738,
    int_wasm_relaxed_trunc_unsigned_I32x4_S	= 1739,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4	= 1740,
    int_wasm_relaxed_trunc_unsigned_zero_I32x4_S	= 1741,
    promote_low_F64x2	= 1742,
    promote_low_F64x2_S	= 1743,
    sint_to_fp_F32x4	= 1744,
    sint_to_fp_F32x4_S	= 1745,
    trunc_sat_zero_s_I32x4	= 1746,
    trunc_sat_zero_s_I32x4_S	= 1747,
    trunc_sat_zero_u_I32x4	= 1748,
    trunc_sat_zero_u_I32x4_S	= 1749,
    uint_to_fp_F32x4	= 1750,
    uint_to_fp_F32x4_S	= 1751,
    INSTRUCTION_LIST_END = 1752
  };

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_ENUM

#ifdef GET_INSTRINFO_SCHED_ENUM
#undef GET_INSTRINFO_SCHED_ENUM
namespace llvm {

namespace WebAssembly {
namespace Sched {
  enum {
    NoInstrModel	= 0,
    SCHED_LIST_END = 1
  };
} // end namespace Sched
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_SCHED_ENUM

#ifdef GET_INSTRINFO_MC_DESC
#undef GET_INSTRINFO_MC_DESC
namespace llvm {

static const MCPhysReg ImplicitList1[] = { WebAssembly::SP32, WebAssembly::SP64, WebAssembly::ARGUMENTS };
static const MCPhysReg ImplicitList2[] = { WebAssembly::ARGUMENTS };
static const MCPhysReg ImplicitList3[] = { WebAssembly::SP32, WebAssembly::SP64, WebAssembly::SP32, WebAssembly::SP64 };
static const MCPhysReg ImplicitList4[] = { WebAssembly::VALUE_STACK, WebAssembly::VALUE_STACK };

static const MCOperandInfo OperandInfo2[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo3[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo4[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo5[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo6[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo7[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo8[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo9[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, MCOI_TIED_TO(0) }, };
static const MCOperandInfo OperandInfo10[] = { { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo11[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo12[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo13[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo14[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo15[] = { { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo16[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { 0, 0|(1<<MCOI::LookupPtrRegClass), MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo17[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo18[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo19[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo20[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo21[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo22[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo23[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo24[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo25[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo26[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo27[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo28[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo29[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo30[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo31[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo32[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo33[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo34[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo35[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo36[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo37[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo38[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo39[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo40[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, };
static const MCOperandInfo OperandInfo41[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, };
static const MCOperandInfo OperandInfo42[] = { { -1, 0, MCOI::OPERAND_UNKNOWN, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, };
static const MCOperandInfo OperandInfo43[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_2, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_IMM_0, 0 }, };
static const MCOperandInfo OperandInfo44[] = { { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_0, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, { -1, 0, MCOI::OPERAND_GENERIC_1, 0 }, };
static const MCOperandInfo OperandInfo45[] = { { -1, 0, WebAssembly::OPERAND_FUNCTION32, 0 }, };
static const MCOperandInfo OperandInfo46[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo47[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo48[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo49[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo50[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo51[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo52[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo53[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo54[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo55[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo56[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo57[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo58[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo59[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo60[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo61[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo62[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, };
static const MCOperandInfo OperandInfo63[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo64[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, };
static const MCOperandInfo OperandInfo65[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo66[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, };
static const MCOperandInfo OperandInfo67[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo68[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo69[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo70[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo71[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo72[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo73[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo74[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo75[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo76[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo77[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo78[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo79[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo80[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo81[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo82[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, };
static const MCOperandInfo OperandInfo83[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, };
static const MCOperandInfo OperandInfo84[] = { { -1, 0, WebAssembly::OPERAND_BASIC_BLOCK, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo85[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo86[] = { { -1, 0, WebAssembly::OPERAND_BRLIST, 0 }, };
static const MCOperandInfo OperandInfo87[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo88[] = { { -1, 0, WebAssembly::OPERAND_TYPEINDEX, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo89[] = { { -1, 0, WebAssembly::OPERAND_TAG, 0 }, };
static const MCOperandInfo OperandInfo90[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo91[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo92[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo93[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo94[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo95[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo96[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo97[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo98[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo99[] = { { -1, 0, WebAssembly::OPERAND_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo100[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo101[] = { { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F32IMM, 0 }, };
static const MCOperandInfo OperandInfo102[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo103[] = { { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_F64IMM, 0 }, };
static const MCOperandInfo OperandInfo104[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo105[] = { { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I16IMM, 0 }, };
static const MCOperandInfo OperandInfo106[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo107[] = { { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo108[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo109[] = { { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I64IMM, 0 }, };
static const MCOperandInfo OperandInfo110[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo111[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo112[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo113[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo114[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo115[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo116[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo117[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo118[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo119[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo120[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo121[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo122[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo123[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo124[] = { { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo125[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo126[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo127[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo128[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo129[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo130[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo131[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo132[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo133[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo134[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo135[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo136[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo137[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo138[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo139[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo140[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo141[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo142[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo143[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo144[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo145[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, };
static const MCOperandInfo OperandInfo146[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo147[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo148[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo149[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo150[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo151[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo152[] = { { -1, 0, WebAssembly::OPERAND_GLOBAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo153[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo154[] = { { -1, 0, WebAssembly::OPERAND_SIGNATURE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo155[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo156[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo157[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo158[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo159[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo160[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo161[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo162[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo163[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo164[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo165[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo166[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo167[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo168[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo169[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo170[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo171[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo172[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, };
static const MCOperandInfo OperandInfo173[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo174[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo175[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo176[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo177[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo178[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo179[] = { { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo180[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo181[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo182[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo183[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo184[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo185[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo186[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_LOCAL, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo187[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo188[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo189[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo190[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo191[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo192[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo193[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo194[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo195[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo196[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo197[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo198[] = { { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo199[] = { { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo200[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo201[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo202[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo203[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo204[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo205[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, };
static const MCOperandInfo OperandInfo206[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo207[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo208[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo209[] = { { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo210[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo211[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo212[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo213[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::F64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo214[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { -1, 0, WebAssembly::OPERAND_VEC_I8IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo215[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET32, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo216[] = { { -1, 0, WebAssembly::OPERAND_P2ALIGN, 0 }, { -1, 0, WebAssembly::OPERAND_OFFSET64, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::V128RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo217[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo218[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo219[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo220[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo221[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo222[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo223[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo224[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo225[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo226[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo227[] = { { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo228[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, WebAssembly::OPERAND_TABLE, 0 }, };
static const MCOperandInfo OperandInfo229[] = { { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::EXTERNREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo230[] = { { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::FUNCREFRegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo231[] = { { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo232[] = { { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { -1, 0, MCOI::OPERAND_IMMEDIATE, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo233[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo234[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, };
static const MCOperandInfo OperandInfo235[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo236[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo237[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };
static const MCOperandInfo OperandInfo238[] = { { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { -1, 0, WebAssembly::OPERAND_I32IMM, 0 }, { WebAssembly::I64RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, { WebAssembly::I32RegClassID, 0, MCOI::OPERAND_REGISTER, 0 }, };

extern const MCInstrDesc WebAssemblyInsts[] = {
  { 1751,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1751 = uint_to_fp_F32x4_S
  { 1750,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1750 = uint_to_fp_F32x4
  { 1749,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1749 = trunc_sat_zero_u_I32x4_S
  { 1748,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1748 = trunc_sat_zero_u_I32x4
  { 1747,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1747 = trunc_sat_zero_s_I32x4_S
  { 1746,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1746 = trunc_sat_zero_s_I32x4
  { 1745,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1745 = sint_to_fp_F32x4_S
  { 1744,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1744 = sint_to_fp_F32x4
  { 1743,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1743 = promote_low_F64x2_S
  { 1742,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1742 = promote_low_F64x2
  { 1741,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1741 = int_wasm_relaxed_trunc_unsigned_zero_I32x4_S
  { 1740,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1740 = int_wasm_relaxed_trunc_unsigned_zero_I32x4
  { 1739,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1739 = int_wasm_relaxed_trunc_unsigned_I32x4_S
  { 1738,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1738 = int_wasm_relaxed_trunc_unsigned_I32x4
  { 1737,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1737 = int_wasm_relaxed_trunc_signed_zero_I32x4_S
  { 1736,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1736 = int_wasm_relaxed_trunc_signed_zero_I32x4
  { 1735,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1735 = int_wasm_relaxed_trunc_signed_I32x4_S
  { 1734,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1734 = int_wasm_relaxed_trunc_signed_I32x4
  { 1733,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1733 = int_wasm_extadd_pairwise_unsigned_I32x4_S
  { 1732,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1732 = int_wasm_extadd_pairwise_unsigned_I32x4
  { 1731,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1731 = int_wasm_extadd_pairwise_unsigned_I16x8_S
  { 1730,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1730 = int_wasm_extadd_pairwise_unsigned_I16x8
  { 1729,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1729 = int_wasm_extadd_pairwise_signed_I32x4_S
  { 1728,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1728 = int_wasm_extadd_pairwise_signed_I32x4
  { 1727,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1727 = int_wasm_extadd_pairwise_signed_I16x8_S
  { 1726,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1726 = int_wasm_extadd_pairwise_signed_I16x8
  { 1725,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1725 = fp_to_uint_I32x4_S
  { 1724,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1724 = fp_to_uint_I32x4
  { 1723,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1723 = fp_to_sint_I32x4_S
  { 1722,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1722 = fp_to_sint_I32x4
  { 1721,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1721 = extend_low_u_I64x2_S
  { 1720,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1720 = extend_low_u_I64x2
  { 1719,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1719 = extend_low_u_I32x4_S
  { 1718,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1718 = extend_low_u_I32x4
  { 1717,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1717 = extend_low_u_I16x8_S
  { 1716,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1716 = extend_low_u_I16x8
  { 1715,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1715 = extend_low_s_I64x2_S
  { 1714,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1714 = extend_low_s_I64x2
  { 1713,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1713 = extend_low_s_I32x4_S
  { 1712,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1712 = extend_low_s_I32x4
  { 1711,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1711 = extend_low_s_I16x8_S
  { 1710,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1710 = extend_low_s_I16x8
  { 1709,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1709 = extend_high_u_I64x2_S
  { 1708,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1708 = extend_high_u_I64x2
  { 1707,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1707 = extend_high_u_I32x4_S
  { 1706,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1706 = extend_high_u_I32x4
  { 1705,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1705 = extend_high_u_I16x8_S
  { 1704,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1704 = extend_high_u_I16x8
  { 1703,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1703 = extend_high_s_I64x2_S
  { 1702,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1702 = extend_high_s_I64x2
  { 1701,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1701 = extend_high_s_I32x4_S
  { 1700,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1700 = extend_high_s_I32x4
  { 1699,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1699 = extend_high_s_I16x8_S
  { 1698,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1698 = extend_high_s_I16x8
  { 1697,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1697 = demote_zero_F32x4_S
  { 1696,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1696 = demote_zero_F32x4
  { 1695,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1695 = convert_low_u_F64x2_S
  { 1694,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1694 = convert_low_u_F64x2
  { 1693,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1693 = convert_low_s_F64x2_S
  { 1692,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1692 = convert_low_s_F64x2
  { 1691,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo234 },  // Inst #1691 = anonymous_4734MEMORY_INIT_A64_S
  { 1690,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo238 },  // Inst #1690 = anonymous_4734MEMORY_INIT_A64
  { 1689,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1689 = anonymous_4734MEMORY_FILL_A64_S
  { 1688,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo237 },  // Inst #1688 = anonymous_4734MEMORY_FILL_A64
  { 1687,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo234 },  // Inst #1687 = anonymous_4734MEMORY_COPY_A64_S
  { 1686,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo236 },  // Inst #1686 = anonymous_4734MEMORY_COPY_A64
  { 1685,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1685 = anonymous_4734DATA_DROP_S
  { 1684,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1684 = anonymous_4734DATA_DROP
  { 1683,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo234 },  // Inst #1683 = anonymous_4733MEMORY_INIT_A32_S
  { 1682,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo233 },  // Inst #1682 = anonymous_4733MEMORY_INIT_A32
  { 1681,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1681 = anonymous_4733MEMORY_FILL_A32_S
  { 1680,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo235 },  // Inst #1680 = anonymous_4733MEMORY_FILL_A32
  { 1679,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo234 },  // Inst #1679 = anonymous_4733MEMORY_COPY_A32_S
  { 1678,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo233 },  // Inst #1678 = anonymous_4733MEMORY_COPY_A32
  { 1677,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1677 = anonymous_4733DATA_DROP_S
  { 1676,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #1676 = anonymous_4733DATA_DROP
  { 1675,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1675 = anonymous_4064MEMORY_SIZE_A64_S
  { 1674,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo61 },  // Inst #1674 = anonymous_4064MEMORY_SIZE_A64
  { 1673,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1673 = anonymous_4064MEMORY_GROW_A64_S
  { 1672,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo232 },  // Inst #1672 = anonymous_4064MEMORY_GROW_A64
  { 1671,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1671 = anonymous_4063MEMORY_SIZE_A32_S
  { 1670,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo60 },  // Inst #1670 = anonymous_4063MEMORY_SIZE_A32
  { 1669,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1669 = anonymous_4063MEMORY_GROW_A32_S
  { 1668,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo231 },  // Inst #1668 = anonymous_4063MEMORY_GROW_A32
  { 1667,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1667 = XOR_S
  { 1666,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1666 = XOR_I64_S
  { 1665,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1665 = XOR_I64
  { 1664,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1664 = XOR_I32_S
  { 1663,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1663 = XOR_I32
  { 1662,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1662 = XOR
  { 1661,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1661 = UNREACHABLE_S
  { 1660,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1660 = UNREACHABLE
  { 1659,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #1659 = TRY_S
  { 1658,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #1658 = TRY
  { 1657,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1657 = TRUNC_F64x2_S
  { 1656,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1656 = TRUNC_F64x2
  { 1655,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1655 = TRUNC_F64_S
  { 1654,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #1654 = TRUNC_F64
  { 1653,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1653 = TRUNC_F32x4_S
  { 1652,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1652 = TRUNC_F32x4
  { 1651,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1651 = TRUNC_F32_S
  { 1650,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #1650 = TRUNC_F32
  { 1649,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo89 },  // Inst #1649 = THROW_S
  { 1648,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo89 },  // Inst #1648 = THROW
  { 1647,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1647 = TEE_V128_S
  { 1646,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1646 = TEE_V128
  { 1645,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1645 = TEE_I64_S
  { 1644,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1644 = TEE_I64
  { 1643,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1643 = TEE_I32_S
  { 1642,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1642 = TEE_I32
  { 1641,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1641 = TEE_FUNCREF_S
  { 1640,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo230 },  // Inst #1640 = TEE_FUNCREF
  { 1639,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1639 = TEE_F64_S
  { 1638,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #1638 = TEE_F64
  { 1637,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1637 = TEE_F32_S
  { 1636,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #1636 = TEE_F32
  { 1635,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1635 = TEE_EXTERNREF_S
  { 1634,	3,	2,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo229 },  // Inst #1634 = TEE_EXTERNREF
  { 1633,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1633 = TABLE_SIZE_S
  { 1632,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo228 },  // Inst #1632 = TABLE_SIZE
  { 1631,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1631 = TABLE_SET_FUNCREF_S
  { 1630,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo227 },  // Inst #1630 = TABLE_SET_FUNCREF
  { 1629,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1629 = TABLE_SET_EXTERNREF_S
  { 1628,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo226 },  // Inst #1628 = TABLE_SET_EXTERNREF
  { 1627,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1627 = TABLE_GROW_FUNCREF_S
  { 1626,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo225 },  // Inst #1626 = TABLE_GROW_FUNCREF
  { 1625,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1625 = TABLE_GROW_EXTERNREF_S
  { 1624,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo224 },  // Inst #1624 = TABLE_GROW_EXTERNREF
  { 1623,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1623 = TABLE_GET_FUNCREF_S
  { 1622,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo223 },  // Inst #1622 = TABLE_GET_FUNCREF
  { 1621,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1621 = TABLE_GET_EXTERNREF_S
  { 1620,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo222 },  // Inst #1620 = TABLE_GET_EXTERNREF
  { 1619,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1619 = TABLE_FILL_FUNCREF_S
  { 1618,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo221 },  // Inst #1618 = TABLE_FILL_FUNCREF
  { 1617,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo220 },  // Inst #1617 = TABLE_FILL_EXTERNREF_S
  { 1616,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo219 },  // Inst #1616 = TABLE_FILL_EXTERNREF
  { 1615,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo218 },  // Inst #1615 = TABLE_COPY_S
  { 1614,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo217 },  // Inst #1614 = TABLE_COPY
  { 1613,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1613 = SWIZZLE_S
  { 1612,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1612 = SWIZZLE
  { 1611,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1611 = SUB_SAT_U_I8x16_S
  { 1610,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1610 = SUB_SAT_U_I8x16
  { 1609,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1609 = SUB_SAT_U_I16x8_S
  { 1608,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1608 = SUB_SAT_U_I16x8
  { 1607,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1607 = SUB_SAT_S_I8x16_S
  { 1606,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1606 = SUB_SAT_S_I8x16
  { 1605,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1605 = SUB_SAT_S_I16x8_S
  { 1604,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1604 = SUB_SAT_S_I16x8
  { 1603,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1603 = SUB_I8x16_S
  { 1602,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1602 = SUB_I8x16
  { 1601,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1601 = SUB_I64x2_S
  { 1600,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1600 = SUB_I64x2
  { 1599,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1599 = SUB_I64_S
  { 1598,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1598 = SUB_I64
  { 1597,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1597 = SUB_I32x4_S
  { 1596,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1596 = SUB_I32x4
  { 1595,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1595 = SUB_I32_S
  { 1594,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1594 = SUB_I32
  { 1593,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1593 = SUB_I16x8_S
  { 1592,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1592 = SUB_I16x8
  { 1591,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1591 = SUB_F64x2_S
  { 1590,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1590 = SUB_F64x2
  { 1589,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1589 = SUB_F64_S
  { 1588,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #1588 = SUB_F64
  { 1587,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1587 = SUB_F32x4_S
  { 1586,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1586 = SUB_F32x4
  { 1585,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1585 = SUB_F32_S
  { 1584,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #1584 = SUB_F32
  { 1583,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1583 = STORE_V128_A64_S
  { 1582,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo216 },  // Inst #1582 = STORE_V128_A64
  { 1581,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1581 = STORE_V128_A32_S
  { 1580,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo215 },  // Inst #1580 = STORE_V128_A32
  { 1579,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1579 = STORE_LANE_I8x16_A64_S
  { 1578,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1578 = STORE_LANE_I8x16_A64
  { 1577,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1577 = STORE_LANE_I8x16_A32_S
  { 1576,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo214 },  // Inst #1576 = STORE_LANE_I8x16_A32
  { 1575,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1575 = STORE_LANE_I64x2_A64_S
  { 1574,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1574 = STORE_LANE_I64x2_A64
  { 1573,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1573 = STORE_LANE_I64x2_A32_S
  { 1572,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo214 },  // Inst #1572 = STORE_LANE_I64x2_A32
  { 1571,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1571 = STORE_LANE_I32x4_A64_S
  { 1570,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1570 = STORE_LANE_I32x4_A64
  { 1569,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1569 = STORE_LANE_I32x4_A32_S
  { 1568,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo214 },  // Inst #1568 = STORE_LANE_I32x4_A32
  { 1567,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1567 = STORE_LANE_I16x8_A64_S
  { 1566,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1566 = STORE_LANE_I16x8_A64
  { 1565,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1565 = STORE_LANE_I16x8_A32_S
  { 1564,	5,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo214 },  // Inst #1564 = STORE_LANE_I16x8_A32
  { 1563,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1563 = STORE_I64_A64_S
  { 1562,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #1562 = STORE_I64_A64
  { 1561,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1561 = STORE_I64_A32_S
  { 1560,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #1560 = STORE_I64_A32
  { 1559,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1559 = STORE_I32_A64_S
  { 1558,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #1558 = STORE_I32_A64
  { 1557,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1557 = STORE_I32_A32_S
  { 1556,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #1556 = STORE_I32_A32
  { 1555,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1555 = STORE_F64_A64_S
  { 1554,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo213 },  // Inst #1554 = STORE_F64_A64
  { 1553,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1553 = STORE_F64_A32_S
  { 1552,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo212 },  // Inst #1552 = STORE_F64_A32
  { 1551,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1551 = STORE_F32_A64_S
  { 1550,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo211 },  // Inst #1550 = STORE_F32_A64
  { 1549,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1549 = STORE_F32_A32_S
  { 1548,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo210 },  // Inst #1548 = STORE_F32_A32
  { 1547,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1547 = STORE8_I64_A64_S
  { 1546,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #1546 = STORE8_I64_A64
  { 1545,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1545 = STORE8_I64_A32_S
  { 1544,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #1544 = STORE8_I64_A32
  { 1543,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1543 = STORE8_I32_A64_S
  { 1542,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #1542 = STORE8_I32_A64
  { 1541,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1541 = STORE8_I32_A32_S
  { 1540,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #1540 = STORE8_I32_A32
  { 1539,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1539 = STORE32_I64_A64_S
  { 1538,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #1538 = STORE32_I64_A64
  { 1537,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1537 = STORE32_I64_A32_S
  { 1536,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #1536 = STORE32_I64_A32
  { 1535,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1535 = STORE16_I64_A64_S
  { 1534,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #1534 = STORE16_I64_A64
  { 1533,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1533 = STORE16_I64_A32_S
  { 1532,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #1532 = STORE16_I64_A32
  { 1531,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1531 = STORE16_I32_A64_S
  { 1530,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #1530 = STORE16_I32_A64
  { 1529,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1529 = STORE16_I32_A32_S
  { 1528,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #1528 = STORE16_I32_A32
  { 1527,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1527 = SQRT_F64x2_S
  { 1526,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1526 = SQRT_F64x2
  { 1525,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1525 = SQRT_F64_S
  { 1524,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #1524 = SQRT_F64
  { 1523,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1523 = SQRT_F32x4_S
  { 1522,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1522 = SQRT_F32x4
  { 1521,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1521 = SQRT_F32_S
  { 1520,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #1520 = SQRT_F32
  { 1519,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1519 = SPLAT_I8x16_S
  { 1518,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo208 },  // Inst #1518 = SPLAT_I8x16
  { 1517,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1517 = SPLAT_I64x2_S
  { 1516,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo209 },  // Inst #1516 = SPLAT_I64x2
  { 1515,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1515 = SPLAT_I32x4_S
  { 1514,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo208 },  // Inst #1514 = SPLAT_I32x4
  { 1513,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1513 = SPLAT_I16x8_S
  { 1512,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo208 },  // Inst #1512 = SPLAT_I16x8
  { 1511,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1511 = SPLAT_F64x2_S
  { 1510,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo207 },  // Inst #1510 = SPLAT_F64x2
  { 1509,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1509 = SPLAT_F32x4_S
  { 1508,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo206 },  // Inst #1508 = SPLAT_F32x4
  { 1507,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1507 = SIMD_RELAXED_FMIN_F64x2_S
  { 1506,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1506 = SIMD_RELAXED_FMIN_F64x2
  { 1505,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1505 = SIMD_RELAXED_FMIN_F32x4_S
  { 1504,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1504 = SIMD_RELAXED_FMIN_F32x4
  { 1503,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1503 = SIMD_RELAXED_FMAX_F64x2_S
  { 1502,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1502 = SIMD_RELAXED_FMAX_F64x2
  { 1501,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1501 = SIMD_RELAXED_FMAX_F32x4_S
  { 1500,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1500 = SIMD_RELAXED_FMAX_F32x4
  { 1499,	16,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo111 },  // Inst #1499 = SHUFFLE_S
  { 1498,	19,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo205 },  // Inst #1498 = SHUFFLE
  { 1497,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1497 = SHR_U_I8x16_S
  { 1496,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1496 = SHR_U_I8x16
  { 1495,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1495 = SHR_U_I64x2_S
  { 1494,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1494 = SHR_U_I64x2
  { 1493,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1493 = SHR_U_I64_S
  { 1492,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1492 = SHR_U_I64
  { 1491,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1491 = SHR_U_I32x4_S
  { 1490,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1490 = SHR_U_I32x4
  { 1489,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1489 = SHR_U_I32_S
  { 1488,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1488 = SHR_U_I32
  { 1487,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1487 = SHR_U_I16x8_S
  { 1486,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1486 = SHR_U_I16x8
  { 1485,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1485 = SHR_S_I8x16_S
  { 1484,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1484 = SHR_S_I8x16
  { 1483,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1483 = SHR_S_I64x2_S
  { 1482,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1482 = SHR_S_I64x2
  { 1481,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1481 = SHR_S_I64_S
  { 1480,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1480 = SHR_S_I64
  { 1479,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1479 = SHR_S_I32x4_S
  { 1478,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1478 = SHR_S_I32x4
  { 1477,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1477 = SHR_S_I32_S
  { 1476,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1476 = SHR_S_I32
  { 1475,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1475 = SHR_S_I16x8_S
  { 1474,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1474 = SHR_S_I16x8
  { 1473,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1473 = SHL_I8x16_S
  { 1472,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1472 = SHL_I8x16
  { 1471,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1471 = SHL_I64x2_S
  { 1470,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1470 = SHL_I64x2
  { 1469,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1469 = SHL_I64_S
  { 1468,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1468 = SHL_I64
  { 1467,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1467 = SHL_I32x4_S
  { 1466,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1466 = SHL_I32x4
  { 1465,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1465 = SHL_I32_S
  { 1464,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1464 = SHL_I32
  { 1463,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1463 = SHL_I16x8_S
  { 1462,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo204 },  // Inst #1462 = SHL_I16x8
  { 1461,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1461 = SELECT_V128_S
  { 1460,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo203 },  // Inst #1460 = SELECT_V128
  { 1459,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1459 = SELECT_I64_S
  { 1458,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo202 },  // Inst #1458 = SELECT_I64
  { 1457,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1457 = SELECT_I32_S
  { 1456,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo201 },  // Inst #1456 = SELECT_I32
  { 1455,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1455 = SELECT_FUNCREF_S
  { 1454,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo200 },  // Inst #1454 = SELECT_FUNCREF
  { 1453,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1453 = SELECT_F64_S
  { 1452,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo199 },  // Inst #1452 = SELECT_F64
  { 1451,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1451 = SELECT_F32_S
  { 1450,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo198 },  // Inst #1450 = SELECT_F32
  { 1449,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1449 = SELECT_EXTERNREF_S
  { 1448,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo197 },  // Inst #1448 = SELECT_EXTERNREF
  { 1447,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1447 = ROTR_I64_S
  { 1446,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1446 = ROTR_I64
  { 1445,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1445 = ROTR_I32_S
  { 1444,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1444 = ROTR_I32
  { 1443,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1443 = ROTL_I64_S
  { 1442,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1442 = ROTL_I64
  { 1441,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1441 = ROTL_I32_S
  { 1440,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1440 = ROTL_I32
  { 1439,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #1439 = RET_CALL_S
  { 1438,	2,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo88 },  // Inst #1438 = RET_CALL_INDIRECT_S
  { 1437,	2,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo88 },  // Inst #1437 = RET_CALL_INDIRECT
  { 1436,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Call)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #1436 = RET_CALL
  { 1435,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1435 = RETURN_S
  { 1434,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1434 = RETURN
  { 1433,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1433 = RETHROW_S
  { 1432,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #1432 = RETHROW
  { 1431,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1431 = REPLACE_LANE_I8x16_S
  { 1430,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo195 },  // Inst #1430 = REPLACE_LANE_I8x16
  { 1429,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1429 = REPLACE_LANE_I64x2_S
  { 1428,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo196 },  // Inst #1428 = REPLACE_LANE_I64x2
  { 1427,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1427 = REPLACE_LANE_I32x4_S
  { 1426,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo195 },  // Inst #1426 = REPLACE_LANE_I32x4
  { 1425,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1425 = REPLACE_LANE_I16x8_S
  { 1424,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo195 },  // Inst #1424 = REPLACE_LANE_I16x8
  { 1423,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1423 = REPLACE_LANE_F64x2_S
  { 1422,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo194 },  // Inst #1422 = REPLACE_LANE_F64x2
  { 1421,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #1421 = REPLACE_LANE_F32x4_S
  { 1420,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo193 },  // Inst #1420 = REPLACE_LANE_F32x4
  { 1419,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1419 = REM_U_I64_S
  { 1418,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1418 = REM_U_I64
  { 1417,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1417 = REM_U_I32_S
  { 1416,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1416 = REM_U_I32
  { 1415,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1415 = REM_S_I64_S
  { 1414,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1414 = REM_S_I64
  { 1413,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1413 = REM_S_I32_S
  { 1412,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1412 = REM_S_I32
  { 1411,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1411 = RELAXED_SWIZZLE_S
  { 1410,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1410 = RELAXED_SWIZZLE
  { 1409,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1409 = RELAXED_Q15MULR_S_I16x8_S
  { 1408,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1408 = RELAXED_Q15MULR_S_I16x8
  { 1407,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1407 = RELAXED_DOT_S
  { 1406,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1406 = RELAXED_DOT_BFLOAT_S
  { 1405,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1405 = RELAXED_DOT_BFLOAT
  { 1404,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1404 = RELAXED_DOT_ADD_S
  { 1403,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1403 = RELAXED_DOT_ADD
  { 1402,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1402 = RELAXED_DOT
  { 1401,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1401 = REF_NULL_FUNCREF_S
  { 1400,	1,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo117 },  // Inst #1400 = REF_NULL_FUNCREF
  { 1399,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1399 = REF_NULL_EXTERNREF_S
  { 1398,	1,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo114 },  // Inst #1398 = REF_NULL_EXTERNREF
  { 1397,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1397 = REF_IS_NULL_FUNCREF_S
  { 1396,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo192 },  // Inst #1396 = REF_IS_NULL_FUNCREF
  { 1395,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1395 = REF_IS_NULL_EXTERNREF_S
  { 1394,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo191 },  // Inst #1394 = REF_IS_NULL_EXTERNREF
  { 1393,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1393 = Q15MULR_SAT_S_I16x8_S
  { 1392,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1392 = Q15MULR_SAT_S_I16x8
  { 1391,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1391 = POPCNT_I8x16_S
  { 1390,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1390 = POPCNT_I8x16
  { 1389,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1389 = POPCNT_I64_S
  { 1388,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #1388 = POPCNT_I64
  { 1387,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1387 = POPCNT_I32_S
  { 1386,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #1386 = POPCNT_I32
  { 1385,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1385 = PMIN_F64x2_S
  { 1384,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1384 = PMIN_F64x2
  { 1383,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1383 = PMIN_F32x4_S
  { 1382,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1382 = PMIN_F32x4
  { 1381,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1381 = PMAX_F64x2_S
  { 1380,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1380 = PMAX_F64x2
  { 1379,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1379 = PMAX_F32x4_S
  { 1378,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1378 = PMAX_F32x4
  { 1377,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1377 = OR_S
  { 1376,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1376 = OR_I64_S
  { 1375,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1375 = OR_I64
  { 1374,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1374 = OR_I32_S
  { 1373,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1373 = OR_I32
  { 1372,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1372 = OR
  { 1371,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1371 = NOT_S
  { 1370,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1370 = NOT
  { 1369,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1369 = NOP_S
  { 1368,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1368 = NOP
  { 1367,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1367 = NMADD_F64x2_S
  { 1366,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1366 = NMADD_F64x2
  { 1365,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1365 = NMADD_F32x4_S
  { 1364,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1364 = NMADD_F32x4
  { 1363,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1363 = NE_I8x16_S
  { 1362,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1362 = NE_I8x16
  { 1361,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1361 = NE_I64x2_S
  { 1360,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1360 = NE_I64x2
  { 1359,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1359 = NE_I64_S
  { 1358,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #1358 = NE_I64
  { 1357,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1357 = NE_I32x4_S
  { 1356,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1356 = NE_I32x4
  { 1355,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1355 = NE_I32_S
  { 1354,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1354 = NE_I32
  { 1353,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1353 = NE_I16x8_S
  { 1352,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1352 = NE_I16x8
  { 1351,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1351 = NE_F64x2_S
  { 1350,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1350 = NE_F64x2
  { 1349,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1349 = NE_F64_S
  { 1348,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #1348 = NE_F64
  { 1347,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1347 = NE_F32x4_S
  { 1346,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1346 = NE_F32x4
  { 1345,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1345 = NE_F32_S
  { 1344,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #1344 = NE_F32
  { 1343,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1343 = NEG_I8x16_S
  { 1342,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1342 = NEG_I8x16
  { 1341,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1341 = NEG_I64x2_S
  { 1340,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1340 = NEG_I64x2
  { 1339,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1339 = NEG_I32x4_S
  { 1338,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1338 = NEG_I32x4
  { 1337,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1337 = NEG_I16x8_S
  { 1336,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1336 = NEG_I16x8
  { 1335,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1335 = NEG_F64x2_S
  { 1334,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1334 = NEG_F64x2
  { 1333,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1333 = NEG_F64_S
  { 1332,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #1332 = NEG_F64
  { 1331,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1331 = NEG_F32x4_S
  { 1330,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1330 = NEG_F32x4
  { 1329,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1329 = NEG_F32_S
  { 1328,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #1328 = NEG_F32
  { 1327,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1327 = NEAREST_F64x2_S
  { 1326,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1326 = NEAREST_F64x2
  { 1325,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1325 = NEAREST_F64_S
  { 1324,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #1324 = NEAREST_F64
  { 1323,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1323 = NEAREST_F32x4_S
  { 1322,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #1322 = NEAREST_F32x4
  { 1321,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1321 = NEAREST_F32_S
  { 1320,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #1320 = NEAREST_F32
  { 1319,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1319 = NARROW_U_I8x16_S
  { 1318,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1318 = NARROW_U_I8x16
  { 1317,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1317 = NARROW_U_I16x8_S
  { 1316,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1316 = NARROW_U_I16x8
  { 1315,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1315 = NARROW_S_I8x16_S
  { 1314,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1314 = NARROW_S_I8x16
  { 1313,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1313 = NARROW_S_I16x8_S
  { 1312,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1312 = NARROW_S_I16x8
  { 1311,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1311 = MUL_I64x2_S
  { 1310,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1310 = MUL_I64x2
  { 1309,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1309 = MUL_I64_S
  { 1308,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #1308 = MUL_I64
  { 1307,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1307 = MUL_I32x4_S
  { 1306,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1306 = MUL_I32x4
  { 1305,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1305 = MUL_I32_S
  { 1304,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1304 = MUL_I32
  { 1303,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1303 = MUL_I16x8_S
  { 1302,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1302 = MUL_I16x8
  { 1301,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1301 = MUL_F64x2_S
  { 1300,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1300 = MUL_F64x2
  { 1299,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1299 = MUL_F64_S
  { 1298,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #1298 = MUL_F64
  { 1297,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1297 = MUL_F32x4_S
  { 1296,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1296 = MUL_F32x4
  { 1295,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1295 = MUL_F32_S
  { 1294,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #1294 = MUL_F32
  { 1293,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1293 = MIN_U_I8x16_S
  { 1292,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1292 = MIN_U_I8x16
  { 1291,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1291 = MIN_U_I32x4_S
  { 1290,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1290 = MIN_U_I32x4
  { 1289,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1289 = MIN_U_I16x8_S
  { 1288,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1288 = MIN_U_I16x8
  { 1287,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1287 = MIN_S_I8x16_S
  { 1286,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1286 = MIN_S_I8x16
  { 1285,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1285 = MIN_S_I32x4_S
  { 1284,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1284 = MIN_S_I32x4
  { 1283,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1283 = MIN_S_I16x8_S
  { 1282,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1282 = MIN_S_I16x8
  { 1281,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1281 = MIN_F64x2_S
  { 1280,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1280 = MIN_F64x2
  { 1279,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1279 = MIN_F64_S
  { 1278,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #1278 = MIN_F64
  { 1277,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1277 = MIN_F32x4_S
  { 1276,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1276 = MIN_F32x4
  { 1275,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1275 = MIN_F32_S
  { 1274,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #1274 = MIN_F32
  { 1273,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1273 = MEMORY_ATOMIC_WAIT64_A64_S
  { 1272,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo190 },  // Inst #1272 = MEMORY_ATOMIC_WAIT64_A64
  { 1271,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1271 = MEMORY_ATOMIC_WAIT64_A32_S
  { 1270,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo189 },  // Inst #1270 = MEMORY_ATOMIC_WAIT64_A32
  { 1269,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1269 = MEMORY_ATOMIC_WAIT32_A64_S
  { 1268,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo188 },  // Inst #1268 = MEMORY_ATOMIC_WAIT32_A64
  { 1267,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1267 = MEMORY_ATOMIC_WAIT32_A32_S
  { 1266,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo187 },  // Inst #1266 = MEMORY_ATOMIC_WAIT32_A32
  { 1265,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1265 = MEMORY_ATOMIC_NOTIFY_A64_S
  { 1264,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #1264 = MEMORY_ATOMIC_NOTIFY_A64
  { 1263,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1263 = MEMORY_ATOMIC_NOTIFY_A32_S
  { 1262,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #1262 = MEMORY_ATOMIC_NOTIFY_A32
  { 1261,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1261 = MAX_U_I8x16_S
  { 1260,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1260 = MAX_U_I8x16
  { 1259,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1259 = MAX_U_I32x4_S
  { 1258,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1258 = MAX_U_I32x4
  { 1257,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1257 = MAX_U_I16x8_S
  { 1256,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1256 = MAX_U_I16x8
  { 1255,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1255 = MAX_S_I8x16_S
  { 1254,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1254 = MAX_S_I8x16
  { 1253,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1253 = MAX_S_I32x4_S
  { 1252,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1252 = MAX_S_I32x4
  { 1251,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1251 = MAX_S_I16x8_S
  { 1250,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1250 = MAX_S_I16x8
  { 1249,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1249 = MAX_F64x2_S
  { 1248,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1248 = MAX_F64x2
  { 1247,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1247 = MAX_F64_S
  { 1246,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #1246 = MAX_F64
  { 1245,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1245 = MAX_F32x4_S
  { 1244,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1244 = MAX_F32x4
  { 1243,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1243 = MAX_F32_S
  { 1242,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #1242 = MAX_F32
  { 1241,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1241 = MADD_F64x2_S
  { 1240,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1240 = MADD_F64x2
  { 1239,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1239 = MADD_F32x4_S
  { 1238,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1238 = MADD_F32x4
  { 1237,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1237 = LT_U_I8x16_S
  { 1236,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1236 = LT_U_I8x16
  { 1235,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1235 = LT_U_I64_S
  { 1234,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #1234 = LT_U_I64
  { 1233,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1233 = LT_U_I32x4_S
  { 1232,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1232 = LT_U_I32x4
  { 1231,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1231 = LT_U_I32_S
  { 1230,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1230 = LT_U_I32
  { 1229,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1229 = LT_U_I16x8_S
  { 1228,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1228 = LT_U_I16x8
  { 1227,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1227 = LT_S_I8x16_S
  { 1226,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1226 = LT_S_I8x16
  { 1225,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1225 = LT_S_I64x2_S
  { 1224,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1224 = LT_S_I64x2
  { 1223,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1223 = LT_S_I64_S
  { 1222,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #1222 = LT_S_I64
  { 1221,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1221 = LT_S_I32x4_S
  { 1220,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1220 = LT_S_I32x4
  { 1219,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1219 = LT_S_I32_S
  { 1218,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1218 = LT_S_I32
  { 1217,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1217 = LT_S_I16x8_S
  { 1216,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1216 = LT_S_I16x8
  { 1215,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1215 = LT_F64x2_S
  { 1214,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1214 = LT_F64x2
  { 1213,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1213 = LT_F64_S
  { 1212,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #1212 = LT_F64
  { 1211,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1211 = LT_F32x4_S
  { 1210,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1210 = LT_F32x4
  { 1209,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1209 = LT_F32_S
  { 1208,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #1208 = LT_F32
  { 1207,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #1207 = LOOP_S
  { 1206,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #1206 = LOOP
  { 1205,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1205 = LOCAL_TEE_V128_S
  { 1204,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo186 },  // Inst #1204 = LOCAL_TEE_V128
  { 1203,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1203 = LOCAL_TEE_I64_S
  { 1202,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo185 },  // Inst #1202 = LOCAL_TEE_I64
  { 1201,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1201 = LOCAL_TEE_I32_S
  { 1200,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo184 },  // Inst #1200 = LOCAL_TEE_I32
  { 1199,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1199 = LOCAL_TEE_FUNCREF_S
  { 1198,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo183 },  // Inst #1198 = LOCAL_TEE_FUNCREF
  { 1197,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1197 = LOCAL_TEE_F64_S
  { 1196,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo182 },  // Inst #1196 = LOCAL_TEE_F64
  { 1195,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1195 = LOCAL_TEE_F32_S
  { 1194,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo181 },  // Inst #1194 = LOCAL_TEE_F32
  { 1193,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1193 = LOCAL_TEE_EXTERNREF_S
  { 1192,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo180 },  // Inst #1192 = LOCAL_TEE_EXTERNREF
  { 1191,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1191 = LOCAL_SET_V128_S
  { 1190,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo179 },  // Inst #1190 = LOCAL_SET_V128
  { 1189,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1189 = LOCAL_SET_I64_S
  { 1188,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo178 },  // Inst #1188 = LOCAL_SET_I64
  { 1187,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1187 = LOCAL_SET_I32_S
  { 1186,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo177 },  // Inst #1186 = LOCAL_SET_I32
  { 1185,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1185 = LOCAL_SET_FUNCREF_S
  { 1184,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo176 },  // Inst #1184 = LOCAL_SET_FUNCREF
  { 1183,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1183 = LOCAL_SET_F64_S
  { 1182,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo175 },  // Inst #1182 = LOCAL_SET_F64
  { 1181,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1181 = LOCAL_SET_F32_S
  { 1180,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo174 },  // Inst #1180 = LOCAL_SET_F32
  { 1179,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1179 = LOCAL_SET_EXTERNREF_S
  { 1178,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo173 },  // Inst #1178 = LOCAL_SET_EXTERNREF
  { 1177,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1177 = LOCAL_GET_V128_S
  { 1176,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo172 },  // Inst #1176 = LOCAL_GET_V128
  { 1175,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1175 = LOCAL_GET_I64_S
  { 1174,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo171 },  // Inst #1174 = LOCAL_GET_I64
  { 1173,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1173 = LOCAL_GET_I32_S
  { 1172,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo170 },  // Inst #1172 = LOCAL_GET_I32
  { 1171,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1171 = LOCAL_GET_FUNCREF_S
  { 1170,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo169 },  // Inst #1170 = LOCAL_GET_FUNCREF
  { 1169,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1169 = LOCAL_GET_F64_S
  { 1168,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo168 },  // Inst #1168 = LOCAL_GET_F64
  { 1167,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1167 = LOCAL_GET_F32_S
  { 1166,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo167 },  // Inst #1166 = LOCAL_GET_F32
  { 1165,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo166 },  // Inst #1165 = LOCAL_GET_EXTERNREF_S
  { 1164,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo165 },  // Inst #1164 = LOCAL_GET_EXTERNREF
  { 1163,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1163 = LOAD_ZERO_I64x2_A64_S
  { 1162,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1162 = LOAD_ZERO_I64x2_A64
  { 1161,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1161 = LOAD_ZERO_I64x2_A32_S
  { 1160,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1160 = LOAD_ZERO_I64x2_A32
  { 1159,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1159 = LOAD_ZERO_I32x4_A64_S
  { 1158,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1158 = LOAD_ZERO_I32x4_A64
  { 1157,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1157 = LOAD_ZERO_I32x4_A32_S
  { 1156,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1156 = LOAD_ZERO_I32x4_A32
  { 1155,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1155 = LOAD_V128_A64_S
  { 1154,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1154 = LOAD_V128_A64
  { 1153,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1153 = LOAD_V128_A32_S
  { 1152,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1152 = LOAD_V128_A32
  { 1151,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1151 = LOAD_LANE_I8x16_A64_S
  { 1150,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1150 = LOAD_LANE_I8x16_A64
  { 1149,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1149 = LOAD_LANE_I8x16_A32_S
  { 1148,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo161 },  // Inst #1148 = LOAD_LANE_I8x16_A32
  { 1147,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1147 = LOAD_LANE_I64x2_A64_S
  { 1146,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1146 = LOAD_LANE_I64x2_A64
  { 1145,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1145 = LOAD_LANE_I64x2_A32_S
  { 1144,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo161 },  // Inst #1144 = LOAD_LANE_I64x2_A32
  { 1143,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1143 = LOAD_LANE_I32x4_A64_S
  { 1142,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1142 = LOAD_LANE_I32x4_A64
  { 1141,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1141 = LOAD_LANE_I32x4_A32_S
  { 1140,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo161 },  // Inst #1140 = LOAD_LANE_I32x4_A32
  { 1139,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo164 },  // Inst #1139 = LOAD_LANE_I16x8_A64_S
  { 1138,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo163 },  // Inst #1138 = LOAD_LANE_I16x8_A64
  { 1137,	3,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo162 },  // Inst #1137 = LOAD_LANE_I16x8_A32_S
  { 1136,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo161 },  // Inst #1136 = LOAD_LANE_I16x8_A32
  { 1135,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1135 = LOAD_I64_A64_S
  { 1134,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1134 = LOAD_I64_A64
  { 1133,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1133 = LOAD_I64_A32_S
  { 1132,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1132 = LOAD_I64_A32
  { 1131,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1131 = LOAD_I32_A64_S
  { 1130,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #1130 = LOAD_I32_A64
  { 1129,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1129 = LOAD_I32_A32_S
  { 1128,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #1128 = LOAD_I32_A32
  { 1127,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1127 = LOAD_F64_A64_S
  { 1126,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo160 },  // Inst #1126 = LOAD_F64_A64
  { 1125,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1125 = LOAD_F64_A32_S
  { 1124,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo159 },  // Inst #1124 = LOAD_F64_A32
  { 1123,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1123 = LOAD_F32_A64_S
  { 1122,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo158 },  // Inst #1122 = LOAD_F32_A64
  { 1121,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1121 = LOAD_F32_A32_S
  { 1120,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo157 },  // Inst #1120 = LOAD_F32_A32
  { 1119,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1119 = LOAD_EXTEND_U_I64x2_A64_S
  { 1118,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1118 = LOAD_EXTEND_U_I64x2_A64
  { 1117,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1117 = LOAD_EXTEND_U_I64x2_A32_S
  { 1116,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1116 = LOAD_EXTEND_U_I64x2_A32
  { 1115,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1115 = LOAD_EXTEND_U_I32x4_A64_S
  { 1114,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1114 = LOAD_EXTEND_U_I32x4_A64
  { 1113,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1113 = LOAD_EXTEND_U_I32x4_A32_S
  { 1112,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1112 = LOAD_EXTEND_U_I32x4_A32
  { 1111,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1111 = LOAD_EXTEND_U_I16x8_A64_S
  { 1110,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1110 = LOAD_EXTEND_U_I16x8_A64
  { 1109,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1109 = LOAD_EXTEND_U_I16x8_A32_S
  { 1108,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1108 = LOAD_EXTEND_U_I16x8_A32
  { 1107,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1107 = LOAD_EXTEND_S_I64x2_A64_S
  { 1106,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1106 = LOAD_EXTEND_S_I64x2_A64
  { 1105,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1105 = LOAD_EXTEND_S_I64x2_A32_S
  { 1104,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1104 = LOAD_EXTEND_S_I64x2_A32
  { 1103,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1103 = LOAD_EXTEND_S_I32x4_A64_S
  { 1102,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1102 = LOAD_EXTEND_S_I32x4_A64
  { 1101,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1101 = LOAD_EXTEND_S_I32x4_A32_S
  { 1100,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1100 = LOAD_EXTEND_S_I32x4_A32
  { 1099,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1099 = LOAD_EXTEND_S_I16x8_A64_S
  { 1098,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1098 = LOAD_EXTEND_S_I16x8_A64
  { 1097,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1097 = LOAD_EXTEND_S_I16x8_A32_S
  { 1096,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1096 = LOAD_EXTEND_S_I16x8_A32
  { 1095,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1095 = LOAD8_U_I64_A64_S
  { 1094,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1094 = LOAD8_U_I64_A64
  { 1093,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1093 = LOAD8_U_I64_A32_S
  { 1092,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1092 = LOAD8_U_I64_A32
  { 1091,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1091 = LOAD8_U_I32_A64_S
  { 1090,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #1090 = LOAD8_U_I32_A64
  { 1089,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1089 = LOAD8_U_I32_A32_S
  { 1088,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #1088 = LOAD8_U_I32_A32
  { 1087,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1087 = LOAD8_S_I64_A64_S
  { 1086,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1086 = LOAD8_S_I64_A64
  { 1085,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1085 = LOAD8_S_I64_A32_S
  { 1084,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1084 = LOAD8_S_I64_A32
  { 1083,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1083 = LOAD8_S_I32_A64_S
  { 1082,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #1082 = LOAD8_S_I32_A64
  { 1081,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1081 = LOAD8_S_I32_A32_S
  { 1080,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #1080 = LOAD8_S_I32_A32
  { 1079,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1079 = LOAD8_SPLAT_A64_S
  { 1078,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1078 = LOAD8_SPLAT_A64
  { 1077,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1077 = LOAD8_SPLAT_A32_S
  { 1076,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1076 = LOAD8_SPLAT_A32
  { 1075,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1075 = LOAD64_SPLAT_A64_S
  { 1074,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1074 = LOAD64_SPLAT_A64
  { 1073,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1073 = LOAD64_SPLAT_A32_S
  { 1072,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1072 = LOAD64_SPLAT_A32
  { 1071,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1071 = LOAD32_U_I64_A64_S
  { 1070,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1070 = LOAD32_U_I64_A64
  { 1069,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1069 = LOAD32_U_I64_A32_S
  { 1068,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1068 = LOAD32_U_I64_A32
  { 1067,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1067 = LOAD32_S_I64_A64_S
  { 1066,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1066 = LOAD32_S_I64_A64
  { 1065,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1065 = LOAD32_S_I64_A32_S
  { 1064,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1064 = LOAD32_S_I64_A32
  { 1063,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1063 = LOAD32_SPLAT_A64_S
  { 1062,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1062 = LOAD32_SPLAT_A64
  { 1061,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1061 = LOAD32_SPLAT_A32_S
  { 1060,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1060 = LOAD32_SPLAT_A32
  { 1059,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1059 = LOAD16_U_I64_A64_S
  { 1058,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1058 = LOAD16_U_I64_A64
  { 1057,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1057 = LOAD16_U_I64_A32_S
  { 1056,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1056 = LOAD16_U_I64_A32
  { 1055,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1055 = LOAD16_U_I32_A64_S
  { 1054,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #1054 = LOAD16_U_I32_A64
  { 1053,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1053 = LOAD16_U_I32_A32_S
  { 1052,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #1052 = LOAD16_U_I32_A32
  { 1051,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1051 = LOAD16_S_I64_A64_S
  { 1050,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #1050 = LOAD16_S_I64_A64
  { 1049,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1049 = LOAD16_S_I64_A32_S
  { 1048,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #1048 = LOAD16_S_I64_A32
  { 1047,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1047 = LOAD16_S_I32_A64_S
  { 1046,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #1046 = LOAD16_S_I32_A64
  { 1045,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1045 = LOAD16_S_I32_A32_S
  { 1044,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #1044 = LOAD16_S_I32_A32
  { 1043,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #1043 = LOAD16_SPLAT_A64_S
  { 1042,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo156 },  // Inst #1042 = LOAD16_SPLAT_A64
  { 1041,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #1041 = LOAD16_SPLAT_A32_S
  { 1040,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo155 },  // Inst #1040 = LOAD16_SPLAT_A32
  { 1039,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1039 = LE_U_I8x16_S
  { 1038,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1038 = LE_U_I8x16
  { 1037,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1037 = LE_U_I64_S
  { 1036,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #1036 = LE_U_I64
  { 1035,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1035 = LE_U_I32x4_S
  { 1034,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1034 = LE_U_I32x4
  { 1033,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1033 = LE_U_I32_S
  { 1032,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1032 = LE_U_I32
  { 1031,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1031 = LE_U_I16x8_S
  { 1030,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1030 = LE_U_I16x8
  { 1029,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1029 = LE_S_I8x16_S
  { 1028,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1028 = LE_S_I8x16
  { 1027,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1027 = LE_S_I64x2_S
  { 1026,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1026 = LE_S_I64x2
  { 1025,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1025 = LE_S_I64_S
  { 1024,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #1024 = LE_S_I64
  { 1023,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1023 = LE_S_I32x4_S
  { 1022,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1022 = LE_S_I32x4
  { 1021,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1021 = LE_S_I32_S
  { 1020,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #1020 = LE_S_I32
  { 1019,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1019 = LE_S_I16x8_S
  { 1018,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1018 = LE_S_I16x8
  { 1017,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1017 = LE_F64x2_S
  { 1016,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1016 = LE_F64x2
  { 1015,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1015 = LE_F64_S
  { 1014,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #1014 = LE_F64
  { 1013,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1013 = LE_F32x4_S
  { 1012,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #1012 = LE_F32x4
  { 1011,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1011 = LE_F32_S
  { 1010,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #1010 = LE_F32
  { 1009,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1009 = LANESELECT_I8x16_S
  { 1008,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1008 = LANESELECT_I8x16
  { 1007,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1007 = LANESELECT_I64x2_S
  { 1006,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1006 = LANESELECT_I64x2
  { 1005,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1005 = LANESELECT_I32x4_S
  { 1004,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1004 = LANESELECT_I32x4
  { 1003,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #1003 = LANESELECT_I16x8_S
  { 1002,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #1002 = LANESELECT_I16x8
  { 1001,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #1001 = IF_S
  { 1000,	2,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo154 },  // Inst #1000 = IF
  { 999,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #999 = I64_TRUNC_U_SAT_F64_S
  { 998,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #998 = I64_TRUNC_U_SAT_F64
  { 997,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #997 = I64_TRUNC_U_SAT_F32_S
  { 996,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #996 = I64_TRUNC_U_SAT_F32
  { 995,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #995 = I64_TRUNC_U_F64_S
  { 994,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #994 = I64_TRUNC_U_F64
  { 993,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #993 = I64_TRUNC_U_F32_S
  { 992,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #992 = I64_TRUNC_U_F32
  { 991,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #991 = I64_TRUNC_S_SAT_F64_S
  { 990,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #990 = I64_TRUNC_S_SAT_F64
  { 989,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #989 = I64_TRUNC_S_SAT_F32_S
  { 988,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #988 = I64_TRUNC_S_SAT_F32
  { 987,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #987 = I64_TRUNC_S_F64_S
  { 986,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #986 = I64_TRUNC_S_F64
  { 985,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #985 = I64_TRUNC_S_F32_S
  { 984,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #984 = I64_TRUNC_S_F32
  { 983,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #983 = I64_REINTERPRET_F64_S
  { 982,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #982 = I64_REINTERPRET_F64
  { 981,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #981 = I64_EXTEND_U_I32_S
  { 980,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo153 },  // Inst #980 = I64_EXTEND_U_I32
  { 979,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #979 = I64_EXTEND_S_I32_S
  { 978,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo153 },  // Inst #978 = I64_EXTEND_S_I32
  { 977,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #977 = I64_EXTEND8_S_I64_S
  { 976,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #976 = I64_EXTEND8_S_I64
  { 975,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #975 = I64_EXTEND32_S_I64_S
  { 974,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #974 = I64_EXTEND32_S_I64
  { 973,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #973 = I64_EXTEND16_S_I64_S
  { 972,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #972 = I64_EXTEND16_S_I64
  { 971,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #971 = I32_WRAP_I64_S
  { 970,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo119 },  // Inst #970 = I32_WRAP_I64
  { 969,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #969 = I32_TRUNC_U_SAT_F64_S
  { 968,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #968 = I32_TRUNC_U_SAT_F64
  { 967,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #967 = I32_TRUNC_U_SAT_F32_S
  { 966,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #966 = I32_TRUNC_U_SAT_F32
  { 965,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #965 = I32_TRUNC_U_F64_S
  { 964,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #964 = I32_TRUNC_U_F64
  { 963,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #963 = I32_TRUNC_U_F32_S
  { 962,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #962 = I32_TRUNC_U_F32
  { 961,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #961 = I32_TRUNC_S_SAT_F64_S
  { 960,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #960 = I32_TRUNC_S_SAT_F64
  { 959,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #959 = I32_TRUNC_S_SAT_F32_S
  { 958,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #958 = I32_TRUNC_S_SAT_F32
  { 957,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #957 = I32_TRUNC_S_F64_S
  { 956,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #956 = I32_TRUNC_S_F64
  { 955,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #955 = I32_TRUNC_S_F32_S
  { 954,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #954 = I32_TRUNC_S_F32
  { 953,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #953 = I32_REINTERPRET_F32_S
  { 952,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #952 = I32_REINTERPRET_F32
  { 951,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #951 = I32_EXTEND8_S_I32_S
  { 950,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #950 = I32_EXTEND8_S_I32
  { 949,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #949 = I32_EXTEND16_S_I32_S
  { 948,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #948 = I32_EXTEND16_S_I32
  { 947,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #947 = GT_U_I8x16_S
  { 946,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #946 = GT_U_I8x16
  { 945,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #945 = GT_U_I64_S
  { 944,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #944 = GT_U_I64
  { 943,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #943 = GT_U_I32x4_S
  { 942,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #942 = GT_U_I32x4
  { 941,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #941 = GT_U_I32_S
  { 940,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #940 = GT_U_I32
  { 939,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #939 = GT_U_I16x8_S
  { 938,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #938 = GT_U_I16x8
  { 937,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #937 = GT_S_I8x16_S
  { 936,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #936 = GT_S_I8x16
  { 935,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #935 = GT_S_I64x2_S
  { 934,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #934 = GT_S_I64x2
  { 933,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #933 = GT_S_I64_S
  { 932,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #932 = GT_S_I64
  { 931,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #931 = GT_S_I32x4_S
  { 930,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #930 = GT_S_I32x4
  { 929,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #929 = GT_S_I32_S
  { 928,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #928 = GT_S_I32
  { 927,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #927 = GT_S_I16x8_S
  { 926,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #926 = GT_S_I16x8
  { 925,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #925 = GT_F64x2_S
  { 924,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #924 = GT_F64x2
  { 923,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #923 = GT_F64_S
  { 922,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #922 = GT_F64
  { 921,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #921 = GT_F32x4_S
  { 920,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #920 = GT_F32x4
  { 919,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #919 = GT_F32_S
  { 918,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #918 = GT_F32
  { 917,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #917 = GLOBAL_SET_V128_S
  { 916,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo152 },  // Inst #916 = GLOBAL_SET_V128
  { 915,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #915 = GLOBAL_SET_I64_S
  { 914,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo151 },  // Inst #914 = GLOBAL_SET_I64
  { 913,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #913 = GLOBAL_SET_I32_S
  { 912,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo150 },  // Inst #912 = GLOBAL_SET_I32
  { 911,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #911 = GLOBAL_SET_FUNCREF_S
  { 910,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo149 },  // Inst #910 = GLOBAL_SET_FUNCREF
  { 909,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #909 = GLOBAL_SET_F64_S
  { 908,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo148 },  // Inst #908 = GLOBAL_SET_F64
  { 907,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #907 = GLOBAL_SET_F32_S
  { 906,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo147 },  // Inst #906 = GLOBAL_SET_F32
  { 905,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #905 = GLOBAL_SET_EXTERNREF_S
  { 904,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo146 },  // Inst #904 = GLOBAL_SET_EXTERNREF
  { 903,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #903 = GLOBAL_GET_V128_S
  { 902,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo145 },  // Inst #902 = GLOBAL_GET_V128
  { 901,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #901 = GLOBAL_GET_I64_S
  { 900,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo144 },  // Inst #900 = GLOBAL_GET_I64
  { 899,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #899 = GLOBAL_GET_I32_S
  { 898,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo143 },  // Inst #898 = GLOBAL_GET_I32
  { 897,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #897 = GLOBAL_GET_FUNCREF_S
  { 896,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo142 },  // Inst #896 = GLOBAL_GET_FUNCREF
  { 895,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #895 = GLOBAL_GET_F64_S
  { 894,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo141 },  // Inst #894 = GLOBAL_GET_F64
  { 893,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #893 = GLOBAL_GET_F32_S
  { 892,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo140 },  // Inst #892 = GLOBAL_GET_F32
  { 891,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo139 },  // Inst #891 = GLOBAL_GET_EXTERNREF_S
  { 890,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo138 },  // Inst #890 = GLOBAL_GET_EXTERNREF
  { 889,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #889 = GE_U_I8x16_S
  { 888,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #888 = GE_U_I8x16
  { 887,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #887 = GE_U_I64_S
  { 886,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #886 = GE_U_I64
  { 885,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #885 = GE_U_I32x4_S
  { 884,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #884 = GE_U_I32x4
  { 883,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #883 = GE_U_I32_S
  { 882,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #882 = GE_U_I32
  { 881,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #881 = GE_U_I16x8_S
  { 880,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #880 = GE_U_I16x8
  { 879,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #879 = GE_S_I8x16_S
  { 878,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #878 = GE_S_I8x16
  { 877,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #877 = GE_S_I64x2_S
  { 876,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #876 = GE_S_I64x2
  { 875,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #875 = GE_S_I64_S
  { 874,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #874 = GE_S_I64
  { 873,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #873 = GE_S_I32x4_S
  { 872,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #872 = GE_S_I32x4
  { 871,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #871 = GE_S_I32_S
  { 870,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #870 = GE_S_I32
  { 869,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #869 = GE_S_I16x8_S
  { 868,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #868 = GE_S_I16x8
  { 867,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #867 = GE_F64x2_S
  { 866,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #866 = GE_F64x2
  { 865,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #865 = GE_F64_S
  { 864,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #864 = GE_F64
  { 863,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #863 = GE_F32x4_S
  { 862,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #862 = GE_F32x4
  { 861,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #861 = GE_F32_S
  { 860,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #860 = GE_F32
  { 859,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #859 = FP_TO_UINT_I64_F64_S
  { 858,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #858 = FP_TO_UINT_I64_F64
  { 857,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #857 = FP_TO_UINT_I64_F32_S
  { 856,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #856 = FP_TO_UINT_I64_F32
  { 855,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #855 = FP_TO_UINT_I32_F64_S
  { 854,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #854 = FP_TO_UINT_I32_F64
  { 853,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #853 = FP_TO_UINT_I32_F32_S
  { 852,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #852 = FP_TO_UINT_I32_F32
  { 851,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #851 = FP_TO_SINT_I64_F64_S
  { 850,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo137 },  // Inst #850 = FP_TO_SINT_I64_F64
  { 849,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #849 = FP_TO_SINT_I64_F32_S
  { 848,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo136 },  // Inst #848 = FP_TO_SINT_I64_F32
  { 847,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #847 = FP_TO_SINT_I32_F64_S
  { 846,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo135 },  // Inst #846 = FP_TO_SINT_I32_F64
  { 845,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #845 = FP_TO_SINT_I32_F32_S
  { 844,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo134 },  // Inst #844 = FP_TO_SINT_I32_F32
  { 843,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #843 = FLOOR_F64x2_S
  { 842,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #842 = FLOOR_F64x2
  { 841,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #841 = FLOOR_F64_S
  { 840,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #840 = FLOOR_F64
  { 839,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #839 = FLOOR_F32x4_S
  { 838,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #838 = FLOOR_F32x4
  { 837,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #837 = FLOOR_F32_S
  { 836,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #836 = FLOOR_F32
  { 835,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #835 = FALLTHROUGH_RETURN_S
  { 834,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Return)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #834 = FALLTHROUGH_RETURN
  { 833,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #833 = F64_REINTERPRET_I64_S
  { 832,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo132 },  // Inst #832 = F64_REINTERPRET_I64
  { 831,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #831 = F64_PROMOTE_F32_S
  { 830,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo133 },  // Inst #830 = F64_PROMOTE_F32
  { 829,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #829 = F64_CONVERT_U_I64_S
  { 828,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo132 },  // Inst #828 = F64_CONVERT_U_I64
  { 827,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #827 = F64_CONVERT_U_I32_S
  { 826,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo131 },  // Inst #826 = F64_CONVERT_U_I32
  { 825,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #825 = F64_CONVERT_S_I64_S
  { 824,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo132 },  // Inst #824 = F64_CONVERT_S_I64
  { 823,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #823 = F64_CONVERT_S_I32_S
  { 822,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo131 },  // Inst #822 = F64_CONVERT_S_I32
  { 821,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #821 = F32_REINTERPRET_I32_S
  { 820,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Bitcast)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo128 },  // Inst #820 = F32_REINTERPRET_I32
  { 819,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #819 = F32_DEMOTE_F64_S
  { 818,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo130 },  // Inst #818 = F32_DEMOTE_F64
  { 817,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #817 = F32_CONVERT_U_I64_S
  { 816,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo129 },  // Inst #816 = F32_CONVERT_U_I64
  { 815,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #815 = F32_CONVERT_U_I32_S
  { 814,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo128 },  // Inst #814 = F32_CONVERT_U_I32
  { 813,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #813 = F32_CONVERT_S_I64_S
  { 812,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo129 },  // Inst #812 = F32_CONVERT_S_I64
  { 811,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #811 = F32_CONVERT_S_I32_S
  { 810,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo128 },  // Inst #810 = F32_CONVERT_S_I32
  { 809,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #809 = EXTRACT_LANE_I8x16_u_S
  { 808,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo126 },  // Inst #808 = EXTRACT_LANE_I8x16_u
  { 807,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #807 = EXTRACT_LANE_I8x16_s_S
  { 806,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo126 },  // Inst #806 = EXTRACT_LANE_I8x16_s
  { 805,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #805 = EXTRACT_LANE_I64x2_S
  { 804,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo127 },  // Inst #804 = EXTRACT_LANE_I64x2
  { 803,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #803 = EXTRACT_LANE_I32x4_S
  { 802,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo126 },  // Inst #802 = EXTRACT_LANE_I32x4
  { 801,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #801 = EXTRACT_LANE_I16x8_u_S
  { 800,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo126 },  // Inst #800 = EXTRACT_LANE_I16x8_u
  { 799,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #799 = EXTRACT_LANE_I16x8_s_S
  { 798,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo126 },  // Inst #798 = EXTRACT_LANE_I16x8_s
  { 797,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #797 = EXTRACT_LANE_F64x2_S
  { 796,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo125 },  // Inst #796 = EXTRACT_LANE_F64x2
  { 795,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo124 },  // Inst #795 = EXTRACT_LANE_F32x4_S
  { 794,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo123 },  // Inst #794 = EXTRACT_LANE_F32x4
  { 793,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #793 = EXTMUL_LOW_U_I64x2_S
  { 792,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #792 = EXTMUL_LOW_U_I64x2
  { 791,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #791 = EXTMUL_LOW_U_I32x4_S
  { 790,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #790 = EXTMUL_LOW_U_I32x4
  { 789,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #789 = EXTMUL_LOW_U_I16x8_S
  { 788,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #788 = EXTMUL_LOW_U_I16x8
  { 787,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #787 = EXTMUL_LOW_S_I64x2_S
  { 786,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #786 = EXTMUL_LOW_S_I64x2
  { 785,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #785 = EXTMUL_LOW_S_I32x4_S
  { 784,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #784 = EXTMUL_LOW_S_I32x4
  { 783,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #783 = EXTMUL_LOW_S_I16x8_S
  { 782,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #782 = EXTMUL_LOW_S_I16x8
  { 781,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #781 = EXTMUL_HIGH_U_I64x2_S
  { 780,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #780 = EXTMUL_HIGH_U_I64x2
  { 779,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #779 = EXTMUL_HIGH_U_I32x4_S
  { 778,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #778 = EXTMUL_HIGH_U_I32x4
  { 777,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #777 = EXTMUL_HIGH_U_I16x8_S
  { 776,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #776 = EXTMUL_HIGH_U_I16x8
  { 775,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #775 = EXTMUL_HIGH_S_I64x2_S
  { 774,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #774 = EXTMUL_HIGH_S_I64x2
  { 773,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #773 = EXTMUL_HIGH_S_I32x4_S
  { 772,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #772 = EXTMUL_HIGH_S_I32x4
  { 771,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #771 = EXTMUL_HIGH_S_I16x8_S
  { 770,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #770 = EXTMUL_HIGH_S_I16x8
  { 769,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #769 = EQ_I8x16_S
  { 768,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #768 = EQ_I8x16
  { 767,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #767 = EQ_I64x2_S
  { 766,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #766 = EQ_I64x2
  { 765,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #765 = EQ_I64_S
  { 764,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo122 },  // Inst #764 = EQ_I64
  { 763,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #763 = EQ_I32x4_S
  { 762,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #762 = EQ_I32x4
  { 761,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #761 = EQ_I32_S
  { 760,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #760 = EQ_I32
  { 759,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #759 = EQ_I16x8_S
  { 758,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #758 = EQ_I16x8
  { 757,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #757 = EQ_F64x2_S
  { 756,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #756 = EQ_F64x2
  { 755,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #755 = EQ_F64_S
  { 754,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo121 },  // Inst #754 = EQ_F64
  { 753,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #753 = EQ_F32x4_S
  { 752,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #752 = EQ_F32x4
  { 751,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #751 = EQ_F32_S
  { 750,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo120 },  // Inst #750 = EQ_F32
  { 749,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #749 = EQZ_I64_S
  { 748,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo119 },  // Inst #748 = EQZ_I64
  { 747,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #747 = EQZ_I32_S
  { 746,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #746 = EQZ_I32
  { 745,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #745 = END_TRY_S
  { 744,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #744 = END_TRY
  { 743,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #743 = END_S
  { 742,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #742 = END_LOOP_S
  { 741,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #741 = END_LOOP
  { 740,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #740 = END_IF_S
  { 739,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #739 = END_IF
  { 738,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #738 = END_FUNCTION_S
  { 737,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #737 = END_FUNCTION
  { 736,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #736 = END_BLOCK_S
  { 735,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #735 = END_BLOCK
  { 734,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #734 = END
  { 733,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #733 = ELSE_S
  { 732,	0,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, nullptr },  // Inst #732 = ELSE
  { 731,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #731 = DROP_V128_S
  { 730,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo118 },  // Inst #730 = DROP_V128
  { 729,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #729 = DROP_I64_S
  { 728,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo87 },  // Inst #728 = DROP_I64
  { 727,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #727 = DROP_I32_S
  { 726,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo85 },  // Inst #726 = DROP_I32
  { 725,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #725 = DROP_FUNCREF_S
  { 724,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo117 },  // Inst #724 = DROP_FUNCREF
  { 723,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #723 = DROP_F64_S
  { 722,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo116 },  // Inst #722 = DROP_F64
  { 721,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #721 = DROP_F32_S
  { 720,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo115 },  // Inst #720 = DROP_F32
  { 719,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #719 = DROP_EXTERNREF_S
  { 718,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo114 },  // Inst #718 = DROP_EXTERNREF
  { 717,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #717 = DOT_S
  { 716,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #716 = DOT
  { 715,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #715 = DIV_U_I64_S
  { 714,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #714 = DIV_U_I64
  { 713,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #713 = DIV_U_I32_S
  { 712,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #712 = DIV_U_I32
  { 711,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #711 = DIV_S_I64_S
  { 710,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #710 = DIV_S_I64
  { 709,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #709 = DIV_S_I32_S
  { 708,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #708 = DIV_S_I32
  { 707,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #707 = DIV_F64x2_S
  { 706,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #706 = DIV_F64x2
  { 705,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #705 = DIV_F64_S
  { 704,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #704 = DIV_F64
  { 703,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #703 = DIV_F32x4_S
  { 702,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #702 = DIV_F32x4
  { 701,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #701 = DIV_F32_S
  { 700,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #700 = DIV_F32
  { 699,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #699 = DELEGATE_S
  { 698,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #698 = DELEGATE
  { 697,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #697 = DEBUG_UNREACHABLE_S
  { 696,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Trap)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #696 = DEBUG_UNREACHABLE
  { 695,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #695 = CTZ_I64_S
  { 694,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #694 = CTZ_I64
  { 693,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #693 = CTZ_I32_S
  { 692,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #692 = CTZ_I32
  { 691,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #691 = COPY_V128_S
  { 690,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #690 = COPY_V128
  { 689,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #689 = COPY_I64_S
  { 688,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #688 = COPY_I64
  { 687,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #687 = COPY_I32_S
  { 686,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #686 = COPY_I32
  { 685,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #685 = COPY_FUNCREF_S
  { 684,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo113 },  // Inst #684 = COPY_FUNCREF
  { 683,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #683 = COPY_F64_S
  { 682,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #682 = COPY_F64
  { 681,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #681 = COPY_F32_S
  { 680,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #680 = COPY_F32
  { 679,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #679 = COPY_EXTERNREF_S
  { 678,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo112 },  // Inst #678 = COPY_EXTERNREF
  { 677,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #677 = COPYSIGN_F64_S
  { 676,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #676 = COPYSIGN_F64
  { 675,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #675 = COPYSIGN_F32_S
  { 674,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #674 = COPYSIGN_F32
  { 673,	16,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo111 },  // Inst #673 = CONST_V128_I8x16_S
  { 672,	17,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo110 },  // Inst #672 = CONST_V128_I8x16
  { 671,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo109 },  // Inst #671 = CONST_V128_I64x2_S
  { 670,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo108 },  // Inst #670 = CONST_V128_I64x2
  { 669,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo107 },  // Inst #669 = CONST_V128_I32x4_S
  { 668,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo106 },  // Inst #668 = CONST_V128_I32x4
  { 667,	8,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo105 },  // Inst #667 = CONST_V128_I16x8_S
  { 666,	9,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo104 },  // Inst #666 = CONST_V128_I16x8
  { 665,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo103 },  // Inst #665 = CONST_V128_F64x2_S
  { 664,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo102 },  // Inst #664 = CONST_V128_F64x2
  { 663,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo101 },  // Inst #663 = CONST_V128_F32x4_S
  { 662,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo100 },  // Inst #662 = CONST_V128_F32x4
  { 661,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo99 },  // Inst #661 = CONST_I64_S
  { 660,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo98 },  // Inst #660 = CONST_I64
  { 659,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo97 },  // Inst #659 = CONST_I32_S
  { 658,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo96 },  // Inst #658 = CONST_I32
  { 657,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo95 },  // Inst #657 = CONST_F64_S
  { 656,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo94 },  // Inst #656 = CONST_F64
  { 655,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo93 },  // Inst #655 = CONST_F32_S
  { 654,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MoveImm)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo92 },  // Inst #654 = CONST_F32
  { 653,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #653 = CLZ_I64_S
  { 652,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo91 },  // Inst #652 = CLZ_I64
  { 651,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #651 = CLZ_I32_S
  { 650,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo90 },  // Inst #650 = CLZ_I32
  { 649,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #649 = CEIL_F64x2_S
  { 648,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #648 = CEIL_F64x2
  { 647,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #647 = CEIL_F64_S
  { 646,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #646 = CEIL_F64
  { 645,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #645 = CEIL_F32x4_S
  { 644,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #644 = CEIL_F32x4
  { 643,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #643 = CEIL_F32_S
  { 642,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #642 = CEIL_F32
  { 641,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList2, OperandInfo89 },  // Inst #641 = CATCH_S
  { 640,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #640 = CATCH_ALL_S
  { 639,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #639 = CATCH_ALL
  { 638,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList2, OperandInfo89 },  // Inst #638 = CATCH
  { 637,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #637 = CALL_S
  { 636,	2,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, OperandInfo88 },  // Inst #636 = CALL_INDIRECT_S
  { 635,	2,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, OperandInfo88 },  // Inst #635 = CALL_INDIRECT
  { 634,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #634 = CALL
  { 633,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #633 = BR_UNLESS_S
  { 632,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo84 },  // Inst #632 = BR_UNLESS
  { 631,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo86 },  // Inst #631 = BR_TABLE_I64_S
  { 630,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo87 },  // Inst #630 = BR_TABLE_I64
  { 629,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo86 },  // Inst #629 = BR_TABLE_I32_S
  { 628,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo85 },  // Inst #628 = BR_TABLE_I32
  { 627,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #627 = BR_S
  { 626,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #626 = BR_IF_S
  { 625,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo84 },  // Inst #625 = BR_IF
  { 624,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo83 },  // Inst #624 = BR
  { 623,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #623 = BLOCK_S
  { 622,	1,	0,	0,	0,	1,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList4, OperandInfo82 },  // Inst #622 = BLOCK
  { 621,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #621 = BITSELECT_S
  { 620,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo81 },  // Inst #620 = BITSELECT
  { 619,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #619 = BITMASK_I8x16_S
  { 618,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #618 = BITMASK_I8x16
  { 617,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #617 = BITMASK_I64x2_S
  { 616,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #616 = BITMASK_I64x2
  { 615,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #615 = BITMASK_I32x4_S
  { 614,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #614 = BITMASK_I32x4
  { 613,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #613 = BITMASK_I16x8_S
  { 612,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #612 = BITMASK_I16x8
  { 611,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #611 = AVGR_U_I8x16_S
  { 610,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #610 = AVGR_U_I8x16
  { 609,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #609 = AVGR_U_I16x8_S
  { 608,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #608 = AVGR_U_I16x8
  { 607,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #607 = ATOMIC_STORE_I64_A64_S
  { 606,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #606 = ATOMIC_STORE_I64_A64
  { 605,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #605 = ATOMIC_STORE_I64_A32_S
  { 604,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #604 = ATOMIC_STORE_I64_A32
  { 603,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #603 = ATOMIC_STORE_I32_A64_S
  { 602,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #602 = ATOMIC_STORE_I32_A64
  { 601,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #601 = ATOMIC_STORE_I32_A32_S
  { 600,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #600 = ATOMIC_STORE_I32_A32
  { 599,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #599 = ATOMIC_STORE8_I64_A64_S
  { 598,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #598 = ATOMIC_STORE8_I64_A64
  { 597,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #597 = ATOMIC_STORE8_I64_A32_S
  { 596,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #596 = ATOMIC_STORE8_I64_A32
  { 595,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #595 = ATOMIC_STORE8_I32_A64_S
  { 594,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #594 = ATOMIC_STORE8_I32_A64
  { 593,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #593 = ATOMIC_STORE8_I32_A32_S
  { 592,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #592 = ATOMIC_STORE8_I32_A32
  { 591,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #591 = ATOMIC_STORE32_I64_A64_S
  { 590,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #590 = ATOMIC_STORE32_I64_A64
  { 589,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #589 = ATOMIC_STORE32_I64_A32_S
  { 588,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #588 = ATOMIC_STORE32_I64_A32
  { 587,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #587 = ATOMIC_STORE16_I64_A64_S
  { 586,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo80 },  // Inst #586 = ATOMIC_STORE16_I64_A64
  { 585,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #585 = ATOMIC_STORE16_I64_A32_S
  { 584,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo79 },  // Inst #584 = ATOMIC_STORE16_I64_A32
  { 583,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #583 = ATOMIC_STORE16_I32_A64_S
  { 582,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo78 },  // Inst #582 = ATOMIC_STORE16_I32_A64
  { 581,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #581 = ATOMIC_STORE16_I32_A32_S
  { 580,	4,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo77 },  // Inst #580 = ATOMIC_STORE16_I32_A32
  { 579,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #579 = ATOMIC_RMW_XOR_I64_A64_S
  { 578,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #578 = ATOMIC_RMW_XOR_I64_A64
  { 577,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #577 = ATOMIC_RMW_XOR_I64_A32_S
  { 576,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #576 = ATOMIC_RMW_XOR_I64_A32
  { 575,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #575 = ATOMIC_RMW_XOR_I32_A64_S
  { 574,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #574 = ATOMIC_RMW_XOR_I32_A64
  { 573,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #573 = ATOMIC_RMW_XOR_I32_A32_S
  { 572,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #572 = ATOMIC_RMW_XOR_I32_A32
  { 571,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #571 = ATOMIC_RMW_XCHG_I64_A64_S
  { 570,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #570 = ATOMIC_RMW_XCHG_I64_A64
  { 569,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #569 = ATOMIC_RMW_XCHG_I64_A32_S
  { 568,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #568 = ATOMIC_RMW_XCHG_I64_A32
  { 567,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #567 = ATOMIC_RMW_XCHG_I32_A64_S
  { 566,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #566 = ATOMIC_RMW_XCHG_I32_A64
  { 565,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #565 = ATOMIC_RMW_XCHG_I32_A32_S
  { 564,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #564 = ATOMIC_RMW_XCHG_I32_A32
  { 563,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #563 = ATOMIC_RMW_SUB_I64_A64_S
  { 562,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #562 = ATOMIC_RMW_SUB_I64_A64
  { 561,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #561 = ATOMIC_RMW_SUB_I64_A32_S
  { 560,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #560 = ATOMIC_RMW_SUB_I64_A32
  { 559,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #559 = ATOMIC_RMW_SUB_I32_A64_S
  { 558,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #558 = ATOMIC_RMW_SUB_I32_A64
  { 557,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #557 = ATOMIC_RMW_SUB_I32_A32_S
  { 556,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #556 = ATOMIC_RMW_SUB_I32_A32
  { 555,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #555 = ATOMIC_RMW_OR_I64_A64_S
  { 554,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #554 = ATOMIC_RMW_OR_I64_A64
  { 553,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #553 = ATOMIC_RMW_OR_I64_A32_S
  { 552,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #552 = ATOMIC_RMW_OR_I64_A32
  { 551,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #551 = ATOMIC_RMW_OR_I32_A64_S
  { 550,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #550 = ATOMIC_RMW_OR_I32_A64
  { 549,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #549 = ATOMIC_RMW_OR_I32_A32_S
  { 548,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #548 = ATOMIC_RMW_OR_I32_A32
  { 547,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #547 = ATOMIC_RMW_CMPXCHG_I64_A64_S
  { 546,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo76 },  // Inst #546 = ATOMIC_RMW_CMPXCHG_I64_A64
  { 545,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #545 = ATOMIC_RMW_CMPXCHG_I64_A32_S
  { 544,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo75 },  // Inst #544 = ATOMIC_RMW_CMPXCHG_I64_A32
  { 543,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #543 = ATOMIC_RMW_CMPXCHG_I32_A64_S
  { 542,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo74 },  // Inst #542 = ATOMIC_RMW_CMPXCHG_I32_A64
  { 541,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #541 = ATOMIC_RMW_CMPXCHG_I32_A32_S
  { 540,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo73 },  // Inst #540 = ATOMIC_RMW_CMPXCHG_I32_A32
  { 539,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #539 = ATOMIC_RMW_AND_I64_A64_S
  { 538,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #538 = ATOMIC_RMW_AND_I64_A64
  { 537,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #537 = ATOMIC_RMW_AND_I64_A32_S
  { 536,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #536 = ATOMIC_RMW_AND_I64_A32
  { 535,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #535 = ATOMIC_RMW_AND_I32_A64_S
  { 534,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #534 = ATOMIC_RMW_AND_I32_A64
  { 533,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #533 = ATOMIC_RMW_AND_I32_A32_S
  { 532,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #532 = ATOMIC_RMW_AND_I32_A32
  { 531,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #531 = ATOMIC_RMW_ADD_I64_A64_S
  { 530,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #530 = ATOMIC_RMW_ADD_I64_A64
  { 529,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #529 = ATOMIC_RMW_ADD_I64_A32_S
  { 528,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #528 = ATOMIC_RMW_ADD_I64_A32
  { 527,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #527 = ATOMIC_RMW_ADD_I32_A64_S
  { 526,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #526 = ATOMIC_RMW_ADD_I32_A64
  { 525,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #525 = ATOMIC_RMW_ADD_I32_A32_S
  { 524,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #524 = ATOMIC_RMW_ADD_I32_A32
  { 523,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #523 = ATOMIC_RMW8_U_XOR_I64_A64_S
  { 522,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #522 = ATOMIC_RMW8_U_XOR_I64_A64
  { 521,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #521 = ATOMIC_RMW8_U_XOR_I64_A32_S
  { 520,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #520 = ATOMIC_RMW8_U_XOR_I64_A32
  { 519,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #519 = ATOMIC_RMW8_U_XOR_I32_A64_S
  { 518,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #518 = ATOMIC_RMW8_U_XOR_I32_A64
  { 517,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #517 = ATOMIC_RMW8_U_XOR_I32_A32_S
  { 516,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #516 = ATOMIC_RMW8_U_XOR_I32_A32
  { 515,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #515 = ATOMIC_RMW8_U_XCHG_I64_A64_S
  { 514,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #514 = ATOMIC_RMW8_U_XCHG_I64_A64
  { 513,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #513 = ATOMIC_RMW8_U_XCHG_I64_A32_S
  { 512,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #512 = ATOMIC_RMW8_U_XCHG_I64_A32
  { 511,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #511 = ATOMIC_RMW8_U_XCHG_I32_A64_S
  { 510,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #510 = ATOMIC_RMW8_U_XCHG_I32_A64
  { 509,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #509 = ATOMIC_RMW8_U_XCHG_I32_A32_S
  { 508,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #508 = ATOMIC_RMW8_U_XCHG_I32_A32
  { 507,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #507 = ATOMIC_RMW8_U_SUB_I64_A64_S
  { 506,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #506 = ATOMIC_RMW8_U_SUB_I64_A64
  { 505,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #505 = ATOMIC_RMW8_U_SUB_I64_A32_S
  { 504,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #504 = ATOMIC_RMW8_U_SUB_I64_A32
  { 503,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #503 = ATOMIC_RMW8_U_SUB_I32_A64_S
  { 502,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #502 = ATOMIC_RMW8_U_SUB_I32_A64
  { 501,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #501 = ATOMIC_RMW8_U_SUB_I32_A32_S
  { 500,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #500 = ATOMIC_RMW8_U_SUB_I32_A32
  { 499,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #499 = ATOMIC_RMW8_U_OR_I64_A64_S
  { 498,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #498 = ATOMIC_RMW8_U_OR_I64_A64
  { 497,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #497 = ATOMIC_RMW8_U_OR_I64_A32_S
  { 496,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #496 = ATOMIC_RMW8_U_OR_I64_A32
  { 495,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #495 = ATOMIC_RMW8_U_OR_I32_A64_S
  { 494,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #494 = ATOMIC_RMW8_U_OR_I32_A64
  { 493,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #493 = ATOMIC_RMW8_U_OR_I32_A32_S
  { 492,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #492 = ATOMIC_RMW8_U_OR_I32_A32
  { 491,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #491 = ATOMIC_RMW8_U_CMPXCHG_I64_A64_S
  { 490,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo76 },  // Inst #490 = ATOMIC_RMW8_U_CMPXCHG_I64_A64
  { 489,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #489 = ATOMIC_RMW8_U_CMPXCHG_I64_A32_S
  { 488,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo75 },  // Inst #488 = ATOMIC_RMW8_U_CMPXCHG_I64_A32
  { 487,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #487 = ATOMIC_RMW8_U_CMPXCHG_I32_A64_S
  { 486,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo74 },  // Inst #486 = ATOMIC_RMW8_U_CMPXCHG_I32_A64
  { 485,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #485 = ATOMIC_RMW8_U_CMPXCHG_I32_A32_S
  { 484,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo73 },  // Inst #484 = ATOMIC_RMW8_U_CMPXCHG_I32_A32
  { 483,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #483 = ATOMIC_RMW8_U_AND_I64_A64_S
  { 482,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #482 = ATOMIC_RMW8_U_AND_I64_A64
  { 481,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #481 = ATOMIC_RMW8_U_AND_I64_A32_S
  { 480,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #480 = ATOMIC_RMW8_U_AND_I64_A32
  { 479,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #479 = ATOMIC_RMW8_U_AND_I32_A64_S
  { 478,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #478 = ATOMIC_RMW8_U_AND_I32_A64
  { 477,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #477 = ATOMIC_RMW8_U_AND_I32_A32_S
  { 476,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #476 = ATOMIC_RMW8_U_AND_I32_A32
  { 475,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #475 = ATOMIC_RMW8_U_ADD_I64_A64_S
  { 474,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #474 = ATOMIC_RMW8_U_ADD_I64_A64
  { 473,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #473 = ATOMIC_RMW8_U_ADD_I64_A32_S
  { 472,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #472 = ATOMIC_RMW8_U_ADD_I64_A32
  { 471,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #471 = ATOMIC_RMW8_U_ADD_I32_A64_S
  { 470,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #470 = ATOMIC_RMW8_U_ADD_I32_A64
  { 469,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #469 = ATOMIC_RMW8_U_ADD_I32_A32_S
  { 468,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #468 = ATOMIC_RMW8_U_ADD_I32_A32
  { 467,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #467 = ATOMIC_RMW32_U_XOR_I64_A64_S
  { 466,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #466 = ATOMIC_RMW32_U_XOR_I64_A64
  { 465,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #465 = ATOMIC_RMW32_U_XOR_I64_A32_S
  { 464,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #464 = ATOMIC_RMW32_U_XOR_I64_A32
  { 463,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #463 = ATOMIC_RMW32_U_XCHG_I64_A64_S
  { 462,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #462 = ATOMIC_RMW32_U_XCHG_I64_A64
  { 461,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #461 = ATOMIC_RMW32_U_XCHG_I64_A32_S
  { 460,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #460 = ATOMIC_RMW32_U_XCHG_I64_A32
  { 459,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #459 = ATOMIC_RMW32_U_SUB_I64_A64_S
  { 458,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #458 = ATOMIC_RMW32_U_SUB_I64_A64
  { 457,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #457 = ATOMIC_RMW32_U_SUB_I64_A32_S
  { 456,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #456 = ATOMIC_RMW32_U_SUB_I64_A32
  { 455,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #455 = ATOMIC_RMW32_U_OR_I64_A64_S
  { 454,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #454 = ATOMIC_RMW32_U_OR_I64_A64
  { 453,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #453 = ATOMIC_RMW32_U_OR_I64_A32_S
  { 452,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #452 = ATOMIC_RMW32_U_OR_I64_A32
  { 451,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #451 = ATOMIC_RMW32_U_CMPXCHG_I64_A64_S
  { 450,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo76 },  // Inst #450 = ATOMIC_RMW32_U_CMPXCHG_I64_A64
  { 449,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #449 = ATOMIC_RMW32_U_CMPXCHG_I64_A32_S
  { 448,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo75 },  // Inst #448 = ATOMIC_RMW32_U_CMPXCHG_I64_A32
  { 447,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #447 = ATOMIC_RMW32_U_AND_I64_A64_S
  { 446,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #446 = ATOMIC_RMW32_U_AND_I64_A64
  { 445,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #445 = ATOMIC_RMW32_U_AND_I64_A32_S
  { 444,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #444 = ATOMIC_RMW32_U_AND_I64_A32
  { 443,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #443 = ATOMIC_RMW32_U_ADD_I64_A64_S
  { 442,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #442 = ATOMIC_RMW32_U_ADD_I64_A64
  { 441,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #441 = ATOMIC_RMW32_U_ADD_I64_A32_S
  { 440,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #440 = ATOMIC_RMW32_U_ADD_I64_A32
  { 439,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #439 = ATOMIC_RMW16_U_XOR_I64_A64_S
  { 438,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #438 = ATOMIC_RMW16_U_XOR_I64_A64
  { 437,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #437 = ATOMIC_RMW16_U_XOR_I64_A32_S
  { 436,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #436 = ATOMIC_RMW16_U_XOR_I64_A32
  { 435,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #435 = ATOMIC_RMW16_U_XOR_I32_A64_S
  { 434,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #434 = ATOMIC_RMW16_U_XOR_I32_A64
  { 433,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #433 = ATOMIC_RMW16_U_XOR_I32_A32_S
  { 432,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #432 = ATOMIC_RMW16_U_XOR_I32_A32
  { 431,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #431 = ATOMIC_RMW16_U_XCHG_I64_A64_S
  { 430,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #430 = ATOMIC_RMW16_U_XCHG_I64_A64
  { 429,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #429 = ATOMIC_RMW16_U_XCHG_I64_A32_S
  { 428,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #428 = ATOMIC_RMW16_U_XCHG_I64_A32
  { 427,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #427 = ATOMIC_RMW16_U_XCHG_I32_A64_S
  { 426,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #426 = ATOMIC_RMW16_U_XCHG_I32_A64
  { 425,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #425 = ATOMIC_RMW16_U_XCHG_I32_A32_S
  { 424,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #424 = ATOMIC_RMW16_U_XCHG_I32_A32
  { 423,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #423 = ATOMIC_RMW16_U_SUB_I64_A64_S
  { 422,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #422 = ATOMIC_RMW16_U_SUB_I64_A64
  { 421,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #421 = ATOMIC_RMW16_U_SUB_I64_A32_S
  { 420,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #420 = ATOMIC_RMW16_U_SUB_I64_A32
  { 419,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #419 = ATOMIC_RMW16_U_SUB_I32_A64_S
  { 418,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #418 = ATOMIC_RMW16_U_SUB_I32_A64
  { 417,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #417 = ATOMIC_RMW16_U_SUB_I32_A32_S
  { 416,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #416 = ATOMIC_RMW16_U_SUB_I32_A32
  { 415,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #415 = ATOMIC_RMW16_U_OR_I64_A64_S
  { 414,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #414 = ATOMIC_RMW16_U_OR_I64_A64
  { 413,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #413 = ATOMIC_RMW16_U_OR_I64_A32_S
  { 412,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #412 = ATOMIC_RMW16_U_OR_I64_A32
  { 411,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #411 = ATOMIC_RMW16_U_OR_I32_A64_S
  { 410,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #410 = ATOMIC_RMW16_U_OR_I32_A64
  { 409,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #409 = ATOMIC_RMW16_U_OR_I32_A32_S
  { 408,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #408 = ATOMIC_RMW16_U_OR_I32_A32
  { 407,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #407 = ATOMIC_RMW16_U_CMPXCHG_I64_A64_S
  { 406,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo76 },  // Inst #406 = ATOMIC_RMW16_U_CMPXCHG_I64_A64
  { 405,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #405 = ATOMIC_RMW16_U_CMPXCHG_I64_A32_S
  { 404,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo75 },  // Inst #404 = ATOMIC_RMW16_U_CMPXCHG_I64_A32
  { 403,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #403 = ATOMIC_RMW16_U_CMPXCHG_I32_A64_S
  { 402,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo74 },  // Inst #402 = ATOMIC_RMW16_U_CMPXCHG_I32_A64
  { 401,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #401 = ATOMIC_RMW16_U_CMPXCHG_I32_A32_S
  { 400,	6,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo73 },  // Inst #400 = ATOMIC_RMW16_U_CMPXCHG_I32_A32
  { 399,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #399 = ATOMIC_RMW16_U_AND_I64_A64_S
  { 398,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #398 = ATOMIC_RMW16_U_AND_I64_A64
  { 397,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #397 = ATOMIC_RMW16_U_AND_I64_A32_S
  { 396,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #396 = ATOMIC_RMW16_U_AND_I64_A32
  { 395,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #395 = ATOMIC_RMW16_U_AND_I32_A64_S
  { 394,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #394 = ATOMIC_RMW16_U_AND_I32_A64
  { 393,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #393 = ATOMIC_RMW16_U_AND_I32_A32_S
  { 392,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #392 = ATOMIC_RMW16_U_AND_I32_A32
  { 391,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #391 = ATOMIC_RMW16_U_ADD_I64_A64_S
  { 390,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo72 },  // Inst #390 = ATOMIC_RMW16_U_ADD_I64_A64
  { 389,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #389 = ATOMIC_RMW16_U_ADD_I64_A32_S
  { 388,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo71 },  // Inst #388 = ATOMIC_RMW16_U_ADD_I64_A32
  { 387,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #387 = ATOMIC_RMW16_U_ADD_I32_A64_S
  { 386,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo70 },  // Inst #386 = ATOMIC_RMW16_U_ADD_I32_A64
  { 385,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #385 = ATOMIC_RMW16_U_ADD_I32_A32_S
  { 384,	5,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo69 },  // Inst #384 = ATOMIC_RMW16_U_ADD_I32_A32
  { 383,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #383 = ATOMIC_LOAD_I64_A64_S
  { 382,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #382 = ATOMIC_LOAD_I64_A64
  { 381,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #381 = ATOMIC_LOAD_I64_A32_S
  { 380,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #380 = ATOMIC_LOAD_I64_A32
  { 379,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #379 = ATOMIC_LOAD_I32_A64_S
  { 378,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #378 = ATOMIC_LOAD_I32_A64
  { 377,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #377 = ATOMIC_LOAD_I32_A32_S
  { 376,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #376 = ATOMIC_LOAD_I32_A32
  { 375,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #375 = ATOMIC_LOAD8_U_I64_A64_S
  { 374,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #374 = ATOMIC_LOAD8_U_I64_A64
  { 373,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #373 = ATOMIC_LOAD8_U_I64_A32_S
  { 372,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #372 = ATOMIC_LOAD8_U_I64_A32
  { 371,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #371 = ATOMIC_LOAD8_U_I32_A64_S
  { 370,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #370 = ATOMIC_LOAD8_U_I32_A64
  { 369,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #369 = ATOMIC_LOAD8_U_I32_A32_S
  { 368,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #368 = ATOMIC_LOAD8_U_I32_A32
  { 367,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #367 = ATOMIC_LOAD32_U_I64_A64_S
  { 366,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #366 = ATOMIC_LOAD32_U_I64_A64
  { 365,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #365 = ATOMIC_LOAD32_U_I64_A32_S
  { 364,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #364 = ATOMIC_LOAD32_U_I64_A32
  { 363,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #363 = ATOMIC_LOAD16_U_I64_A64_S
  { 362,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo68 },  // Inst #362 = ATOMIC_LOAD16_U_I64_A64
  { 361,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #361 = ATOMIC_LOAD16_U_I64_A32_S
  { 360,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo67 },  // Inst #360 = ATOMIC_LOAD16_U_I64_A32
  { 359,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo66 },  // Inst #359 = ATOMIC_LOAD16_U_I32_A64_S
  { 358,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo65 },  // Inst #358 = ATOMIC_LOAD16_U_I32_A64
  { 357,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo64 },  // Inst #357 = ATOMIC_LOAD16_U_I32_A32_S
  { 356,	4,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo63 },  // Inst #356 = ATOMIC_LOAD16_U_I32_A32
  { 355,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #355 = ATOMIC_FENCE_S
  { 354,	1,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #354 = ATOMIC_FENCE
  { 353,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #353 = ARGUMENT_v8i16_S
  { 352,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #352 = ARGUMENT_v8i16
  { 351,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #351 = ARGUMENT_v4i32_S
  { 350,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #350 = ARGUMENT_v4i32
  { 349,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #349 = ARGUMENT_v4f32_S
  { 348,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #348 = ARGUMENT_v4f32
  { 347,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #347 = ARGUMENT_v2i64_S
  { 346,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #346 = ARGUMENT_v2i64
  { 345,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #345 = ARGUMENT_v2f64_S
  { 344,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #344 = ARGUMENT_v2f64
  { 343,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #343 = ARGUMENT_v16i8_S
  { 342,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo62 },  // Inst #342 = ARGUMENT_v16i8
  { 341,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #341 = ARGUMENT_i64_S
  { 340,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo61 },  // Inst #340 = ARGUMENT_i64
  { 339,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #339 = ARGUMENT_i32_S
  { 338,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo60 },  // Inst #338 = ARGUMENT_i32
  { 337,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #337 = ARGUMENT_funcref_S
  { 336,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo59 },  // Inst #336 = ARGUMENT_funcref
  { 335,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #335 = ARGUMENT_f64_S
  { 334,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo58 },  // Inst #334 = ARGUMENT_f64
  { 333,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #333 = ARGUMENT_f32_S
  { 332,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo57 },  // Inst #332 = ARGUMENT_f32
  { 331,	1,	0,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo3 },  // Inst #331 = ARGUMENT_externref_S
  { 330,	2,	1,	0,	0,	1,	0,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo56 },  // Inst #330 = ARGUMENT_externref
  { 329,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #329 = ANYTRUE_S
  { 328,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #328 = ANYTRUE
  { 327,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #327 = AND_S
  { 326,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #326 = AND_I64_S
  { 325,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #325 = AND_I64
  { 324,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #324 = AND_I32_S
  { 323,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #323 = AND_I32
  { 322,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #322 = ANDNOT_S
  { 321,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #321 = ANDNOT
  { 320,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #320 = AND
  { 319,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #319 = ALLTRUE_I8x16_S
  { 318,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #318 = ALLTRUE_I8x16
  { 317,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #317 = ALLTRUE_I64x2_S
  { 316,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #316 = ALLTRUE_I64x2
  { 315,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #315 = ALLTRUE_I32x4_S
  { 314,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #314 = ALLTRUE_I32x4
  { 313,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #313 = ALLTRUE_I16x8_S
  { 312,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo55 },  // Inst #312 = ALLTRUE_I16x8
  { 311,	2,	0,	0,	0,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, OperandInfo10 },  // Inst #311 = ADJCALLSTACKUP_S
  { 310,	2,	0,	0,	0,	2,	2,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, OperandInfo10 },  // Inst #310 = ADJCALLSTACKUP
  { 309,	2,	0,	0,	0,	2,	2,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, OperandInfo10 },  // Inst #309 = ADJCALLSTACKDOWN_S
  { 308,	2,	0,	0,	0,	2,	2,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList3, OperandInfo10 },  // Inst #308 = ADJCALLSTACKDOWN
  { 307,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #307 = ADD_SAT_U_I8x16_S
  { 306,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #306 = ADD_SAT_U_I8x16
  { 305,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #305 = ADD_SAT_U_I16x8_S
  { 304,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #304 = ADD_SAT_U_I16x8
  { 303,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #303 = ADD_SAT_S_I8x16_S
  { 302,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #302 = ADD_SAT_S_I8x16
  { 301,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #301 = ADD_SAT_S_I16x8_S
  { 300,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #300 = ADD_SAT_S_I16x8
  { 299,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #299 = ADD_I8x16_S
  { 298,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #298 = ADD_I8x16
  { 297,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #297 = ADD_I64x2_S
  { 296,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #296 = ADD_I64x2
  { 295,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #295 = ADD_I64_S
  { 294,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo54 },  // Inst #294 = ADD_I64
  { 293,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #293 = ADD_I32x4_S
  { 292,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #292 = ADD_I32x4
  { 291,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #291 = ADD_I32_S
  { 290,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo53 },  // Inst #290 = ADD_I32
  { 289,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #289 = ADD_I16x8_S
  { 288,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #288 = ADD_I16x8
  { 287,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #287 = ADD_F64x2_S
  { 286,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #286 = ADD_F64x2
  { 285,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #285 = ADD_F64_S
  { 284,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo52 },  // Inst #284 = ADD_F64
  { 283,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #283 = ADD_F32x4_S
  { 282,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo51 },  // Inst #282 = ADD_F32x4
  { 281,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #281 = ADD_F32_S
  { 280,	3,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo50 },  // Inst #280 = ADD_F32
  { 279,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #279 = ABS_I8x16_S
  { 278,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #278 = ABS_I8x16
  { 277,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #277 = ABS_I64x2_S
  { 276,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #276 = ABS_I64x2
  { 275,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #275 = ABS_I32x4_S
  { 274,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #274 = ABS_I32x4
  { 273,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #273 = ABS_I16x8_S
  { 272,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #272 = ABS_I16x8
  { 271,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #271 = ABS_F64x2_S
  { 270,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #270 = ABS_F64x2
  { 269,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #269 = ABS_F64_S
  { 268,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo49 },  // Inst #268 = ABS_F64
  { 267,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #267 = ABS_F32x4_S
  { 266,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo48 },  // Inst #266 = ABS_F32x4
  { 265,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #265 = ABS_F32_S
  { 264,	2,	1,	0,	0,	0,	1,	0|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo47 },  // Inst #264 = ABS_F32
  { 263,	0,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, nullptr },  // Inst #263 = RET_CALL_RESULTS_S
  { 262,	0,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, nullptr },  // Inst #262 = RET_CALL_RESULTS
  { 261,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #261 = COMPILER_FENCE_S
  { 260,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #260 = COMPILER_FENCE
  { 259,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #259 = CLEANUPRET_S
  { 258,	0,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, nullptr },  // Inst #258 = CLEANUPRET
  { 257,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo46 },  // Inst #257 = CATCHRET_S
  { 256,	2,	0,	0,	0,	0,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::EHScopeReturn)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList2, OperandInfo46 },  // Inst #256 = CATCHRET
  { 255,	0,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, nullptr },  // Inst #255 = CALL_RESULTS_S
  { 254,	0,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::VariadicOpsAreDefs), 0x0ULL, ImplicitList1, nullptr },  // Inst #254 = CALL_RESULTS
  { 253,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #253 = CALL_PARAMS_S
  { 252,	1,	0,	0,	0,	2,	1,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, ImplicitList1, OperandInfo45 },  // Inst #252 = CALL_PARAMS
  { 251,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo44 },  // Inst #251 = G_UBFX
  { 250,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo44 },  // Inst #250 = G_SBFX
  { 249,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #249 = G_VECREDUCE_UMIN
  { 248,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #248 = G_VECREDUCE_UMAX
  { 247,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #247 = G_VECREDUCE_SMIN
  { 246,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #246 = G_VECREDUCE_SMAX
  { 245,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #245 = G_VECREDUCE_XOR
  { 244,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #244 = G_VECREDUCE_OR
  { 243,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #243 = G_VECREDUCE_AND
  { 242,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #242 = G_VECREDUCE_MUL
  { 241,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #241 = G_VECREDUCE_ADD
  { 240,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #240 = G_VECREDUCE_FMIN
  { 239,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #239 = G_VECREDUCE_FMAX
  { 238,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #238 = G_VECREDUCE_FMUL
  { 237,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #237 = G_VECREDUCE_FADD
  { 236,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo40 },  // Inst #236 = G_VECREDUCE_SEQ_FMUL
  { 235,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo40 },  // Inst #235 = G_VECREDUCE_SEQ_FADD
  { 234,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo22 },  // Inst #234 = G_BZERO
  { 233,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo43 },  // Inst #233 = G_MEMSET
  { 232,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo43 },  // Inst #232 = G_MEMMOVE
  { 231,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo40 },  // Inst #231 = G_MEMCPY_INLINE
  { 230,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo43 },  // Inst #230 = G_MEMCPY
  { 229,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo42 },  // Inst #229 = G_WRITE_REGISTER
  { 228,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo21 },  // Inst #228 = G_READ_REGISTER
  { 227,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #227 = G_STRICT_FSQRT
  { 226,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo19 },  // Inst #226 = G_STRICT_FMA
  { 225,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #225 = G_STRICT_FREM
  { 224,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #224 = G_STRICT_FDIV
  { 223,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #223 = G_STRICT_FMUL
  { 222,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #222 = G_STRICT_FSUB
  { 221,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayRaiseFPException)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #221 = G_STRICT_FADD
  { 220,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo26 },  // Inst #220 = G_DYN_STACKALLOC
  { 219,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #219 = G_JUMP_TABLE
  { 218,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #218 = G_BLOCK_ADDR
  { 217,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #217 = G_ADDRSPACE_CAST
  { 216,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #216 = G_FNEARBYINT
  { 215,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #215 = G_FRINT
  { 214,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #214 = G_FFLOOR
  { 213,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #213 = G_FSQRT
  { 212,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #212 = G_FSIN
  { 211,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #211 = G_FCOS
  { 210,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #210 = G_FCEIL
  { 209,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #209 = G_BITREVERSE
  { 208,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #208 = G_BSWAP
  { 207,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #207 = G_CTPOP
  { 206,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #206 = G_CTLZ_ZERO_UNDEF
  { 205,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #205 = G_CTLZ
  { 204,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #204 = G_CTTZ_ZERO_UNDEF
  { 203,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #203 = G_CTTZ
  { 202,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo41 },  // Inst #202 = G_SHUFFLE_VECTOR
  { 201,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo40 },  // Inst #201 = G_EXTRACT_VECTOR_ELT
  { 200,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo39 },  // Inst #200 = G_INSERT_VECTOR_ELT
  { 199,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo38 },  // Inst #199 = G_BRJT
  { 198,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo2 },  // Inst #198 = G_BR
  { 197,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #197 = G_LLROUND
  { 196,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #196 = G_LROUND
  { 195,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #195 = G_ABS
  { 194,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #194 = G_UMAX
  { 193,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #193 = G_UMIN
  { 192,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #192 = G_SMAX
  { 191,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #191 = G_SMIN
  { 190,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #190 = G_PTRMASK
  { 189,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #189 = G_PTR_ADD
  { 188,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #188 = G_FMAXIMUM
  { 187,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #187 = G_FMINIMUM
  { 186,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #186 = G_FMAXNUM_IEEE
  { 185,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #185 = G_FMINNUM_IEEE
  { 184,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #184 = G_FMAXNUM
  { 183,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #183 = G_FMINNUM
  { 182,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #182 = G_FCANONICALIZE
  { 181,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo32 },  // Inst #181 = G_IS_FPCLASS
  { 180,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #180 = G_FCOPYSIGN
  { 179,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #179 = G_FABS
  { 178,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #178 = G_UITOFP
  { 177,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #177 = G_SITOFP
  { 176,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #176 = G_FPTOUI
  { 175,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #175 = G_FPTOSI
  { 174,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #174 = G_FPTRUNC
  { 173,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #173 = G_FPEXT
  { 172,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #172 = G_FNEG
  { 171,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #171 = G_FLOG10
  { 170,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #170 = G_FLOG2
  { 169,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #169 = G_FLOG
  { 168,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #168 = G_FEXP2
  { 167,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #167 = G_FEXP
  { 166,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #166 = G_FPOWI
  { 165,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #165 = G_FPOW
  { 164,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #164 = G_FREM
  { 163,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #163 = G_FDIV
  { 162,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo19 },  // Inst #162 = G_FMAD
  { 161,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo19 },  // Inst #161 = G_FMA
  { 160,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #160 = G_FMUL
  { 159,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #159 = G_FSUB
  { 158,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #158 = G_FADD
  { 157,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #157 = G_UDIVFIXSAT
  { 156,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #156 = G_SDIVFIXSAT
  { 155,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #155 = G_UDIVFIX
  { 154,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #154 = G_SDIVFIX
  { 153,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #153 = G_UMULFIXSAT
  { 152,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #152 = G_SMULFIXSAT
  { 151,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #151 = G_UMULFIX
  { 150,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo37 },  // Inst #150 = G_SMULFIX
  { 149,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #149 = G_SSHLSAT
  { 148,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #148 = G_USHLSAT
  { 147,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #147 = G_SSUBSAT
  { 146,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #146 = G_USUBSAT
  { 145,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #145 = G_SADDSAT
  { 144,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #144 = G_UADDSAT
  { 143,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #143 = G_SMULH
  { 142,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #142 = G_UMULH
  { 141,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #141 = G_SMULO
  { 140,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #140 = G_UMULO
  { 139,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo36 },  // Inst #139 = G_SSUBE
  { 138,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #138 = G_SSUBO
  { 137,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo36 },  // Inst #137 = G_SADDE
  { 136,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #136 = G_SADDO
  { 135,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo36 },  // Inst #135 = G_USUBE
  { 134,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #134 = G_USUBO
  { 133,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo36 },  // Inst #133 = G_UADDE
  { 132,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #132 = G_UADDO
  { 131,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #131 = G_SELECT
  { 130,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo35 },  // Inst #130 = G_FCMP
  { 129,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo35 },  // Inst #129 = G_ICMP
  { 128,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #128 = G_ROTL
  { 127,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #127 = G_ROTR
  { 126,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo34 },  // Inst #126 = G_FSHR
  { 125,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo34 },  // Inst #125 = G_FSHL
  { 124,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #124 = G_ASHR
  { 123,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #123 = G_LSHR
  { 122,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo33 },  // Inst #122 = G_SHL
  { 121,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #121 = G_ZEXT
  { 120,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo17 },  // Inst #120 = G_SEXT_INREG
  { 119,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #119 = G_SEXT
  { 118,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo32 },  // Inst #118 = G_VAARG
  { 117,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo20 },  // Inst #117 = G_VASTART
  { 116,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #116 = G_FCONSTANT
  { 115,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #115 = G_CONSTANT
  { 114,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #114 = G_TRUNC
  { 113,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #113 = G_ANYEXT
  { 112,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo2 },  // Inst #112 = G_INTRINSIC_W_SIDE_EFFECTS
  { 111,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq)|(1ULL<<MCID::Convergent), 0x0ULL, nullptr, OperandInfo2 },  // Inst #111 = G_INTRINSIC
  { 110,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #110 = G_INVOKE_REGION_START
  { 109,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::IndirectBranch)|(1ULL<<MCID::Barrier)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo20 },  // Inst #109 = G_BRINDIRECT
  { 108,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #108 = G_BRCOND
  { 107,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo10 },  // Inst #107 = G_FENCE
  { 106,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #106 = G_ATOMICRMW_UDEC_WRAP
  { 105,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #105 = G_ATOMICRMW_UINC_WRAP
  { 104,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #104 = G_ATOMICRMW_FMIN
  { 103,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #103 = G_ATOMICRMW_FMAX
  { 102,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #102 = G_ATOMICRMW_FSUB
  { 101,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #101 = G_ATOMICRMW_FADD
  { 100,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #100 = G_ATOMICRMW_UMIN
  { 99,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #99 = G_ATOMICRMW_UMAX
  { 98,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #98 = G_ATOMICRMW_MIN
  { 97,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #97 = G_ATOMICRMW_MAX
  { 96,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #96 = G_ATOMICRMW_XOR
  { 95,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #95 = G_ATOMICRMW_OR
  { 94,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #94 = G_ATOMICRMW_NAND
  { 93,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #93 = G_ATOMICRMW_AND
  { 92,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #92 = G_ATOMICRMW_SUB
  { 91,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #91 = G_ATOMICRMW_ADD
  { 90,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo31 },  // Inst #90 = G_ATOMICRMW_XCHG
  { 89,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo30 },  // Inst #89 = G_ATOMIC_CMPXCHG
  { 88,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo29 },  // Inst #88 = G_ATOMIC_CMPXCHG_WITH_SUCCESS
  { 87,	5,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo28 },  // Inst #87 = G_INDEXED_STORE
  { 86,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #86 = G_STORE
  { 85,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo27 },  // Inst #85 = G_INDEXED_ZEXTLOAD
  { 84,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo27 },  // Inst #84 = G_INDEXED_SEXTLOAD
  { 83,	5,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo27 },  // Inst #83 = G_INDEXED_LOAD
  { 82,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #82 = G_ZEXTLOAD
  { 81,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #81 = G_SEXTLOAD
  { 80,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #80 = G_LOAD
  { 79,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo20 },  // Inst #79 = G_READCYCLECOUNTER
  { 78,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #78 = G_INTRINSIC_ROUNDEVEN
  { 77,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #77 = G_INTRINSIC_LRINT
  { 76,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #76 = G_INTRINSIC_ROUND
  { 75,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #75 = G_INTRINSIC_TRUNC
  { 74,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo26 },  // Inst #74 = G_INTRINSIC_FPTRUNC_ROUND
  { 73,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo25 },  // Inst #73 = G_FREEZE
  { 72,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #72 = G_BITCAST
  { 71,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #71 = G_INTTOPTR
  { 70,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #70 = G_PTRTOINT
  { 69,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #69 = G_CONCAT_VECTORS
  { 68,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #68 = G_BUILD_VECTOR_TRUNC
  { 67,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #67 = G_BUILD_VECTOR
  { 66,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #66 = G_MERGE_VALUES
  { 65,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo24 },  // Inst #65 = G_INSERT
  { 64,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo23 },  // Inst #64 = G_UNMERGE_VALUES
  { 63,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo22 },  // Inst #63 = G_EXTRACT
  { 62,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #62 = G_CONSTANT_POOL
  { 61,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #61 = G_GLOBAL_VALUE
  { 60,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo21 },  // Inst #60 = G_FRAME_INDEX
  { 59,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo20 },  // Inst #59 = G_PHI
  { 58,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo20 },  // Inst #58 = G_IMPLICIT_DEF
  { 57,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #57 = G_XOR
  { 56,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #56 = G_OR
  { 55,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #55 = G_AND
  { 54,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo19 },  // Inst #54 = G_UDIVREM
  { 53,	4,	2,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo19 },  // Inst #53 = G_SDIVREM
  { 52,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #52 = G_UREM
  { 51,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #51 = G_SREM
  { 50,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #50 = G_UDIV
  { 49,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #49 = G_SDIV
  { 48,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #48 = G_MUL
  { 47,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #47 = G_SUB
  { 46,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Commutable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo18 },  // Inst #46 = G_ADD
  { 45,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo17 },  // Inst #45 = G_ASSERT_ALIGN
  { 44,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo17 },  // Inst #44 = G_ASSERT_ZEXT
  { 43,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::PreISelOpcode)|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo17 },  // Inst #43 = G_ASSERT_SEXT
  { 42,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #42 = MEMBARRIER
  { 41,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #41 = ICALL_BRANCH_FUNNEL
  { 40,	3,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo16 },  // Inst #40 = PATCHABLE_TYPED_EVENT_CALL
  { 39,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo15 },  // Inst #39 = PATCHABLE_EVENT_CALL
  { 38,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #38 = PATCHABLE_TAIL_CALL
  { 37,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #37 = PATCHABLE_FUNCTION_EXIT
  { 36,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Return)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #36 = PATCHABLE_RET
  { 35,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #35 = PATCHABLE_FUNCTION_ENTER
  { 34,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #34 = PATCHABLE_OP
  { 33,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Branch)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::Terminator)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo2 },  // Inst #33 = FAULTING_OP
  { 32,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo14 },  // Inst #32 = LOCAL_ESCAPE
  { 31,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #31 = STATEPOINT
  { 30,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo13 },  // Inst #30 = PREALLOCATED_ARG
  { 29,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #29 = PREALLOCATED_SETUP
  { 28,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo12 },  // Inst #28 = LOAD_STACK_GUARD
  { 27,	6,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo11 },  // Inst #27 = PATCHPOINT
  { 26,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::MayStore)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #26 = FENTRY_CALL
  { 25,	2,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Call)|(1ULL<<MCID::MayLoad)|(1ULL<<MCID::UsesCustomInserter)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo10 },  // Inst #25 = STACKMAP
  { 24,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo9 },  // Inst #24 = ARITH_FENCE
  { 23,	4,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo8 },  // Inst #23 = PSEUDO_PROBE
  { 22,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #22 = LIFETIME_END
  { 21,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #21 = LIFETIME_START
  { 20,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #20 = BUNDLE
  { 19,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo7 },  // Inst #19 = COPY
  { 18,	2,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo7 },  // Inst #18 = REG_SEQUENCE
  { 17,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo2 },  // Inst #17 = DBG_LABEL
  { 16,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #16 = DBG_PHI
  { 15,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #15 = DBG_INSTR_REF
  { 14,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #14 = DBG_VALUE_LIST
  { 13,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #13 = DBG_VALUE
  { 12,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo4 },  // Inst #12 = COPY_TO_REGCLASS
  { 11,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo6 },  // Inst #11 = SUBREG_TO_REG
  { 10,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Rematerializable)|(1ULL<<MCID::CheapAsAMove)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo2 },  // Inst #10 = IMPLICIT_DEF
  { 9,	4,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo5 },  // Inst #9 = INSERT_SUBREG
  { 8,	3,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo4 },  // Inst #8 = EXTRACT_SUBREG
  { 7,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #7 = KILL
  { 6,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #6 = ANNOTATION_LABEL
  { 5,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #5 = GC_LABEL
  { 4,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #4 = EH_LABEL
  { 3,	1,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Meta)|(1ULL<<MCID::NotDuplicable)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo3 },  // Inst #3 = CFI_INSTRUCTION
  { 2,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::UnmodeledSideEffects)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #2 = INLINEASM_BR
  { 1,	0,	0,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, nullptr },  // Inst #1 = INLINEASM
  { 0,	1,	1,	0,	0,	0,	0,	0|(1ULL<<MCID::Pseudo)|(1ULL<<MCID::Variadic)|(1ULL<<MCID::ExtraSrcRegAllocReq)|(1ULL<<MCID::ExtraDefRegAllocReq), 0x0ULL, nullptr, OperandInfo2 },  // Inst #0 = PHI
};


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Woverlength-strings"
#endif
extern const char WebAssemblyInstrNameData[] = {
  /* 0 */ "G_FLOG10\0"
  /* 9 */ "LOAD_F32_A32\0"
  /* 22 */ "STORE_F32_A32\0"
  /* 36 */ "ATOMIC_STORE16_I32_A32\0"
  /* 59 */ "ATOMIC_STORE8_I32_A32\0"
  /* 81 */ "ATOMIC_RMW16_U_SUB_I32_A32\0"
  /* 108 */ "ATOMIC_RMW8_U_SUB_I32_A32\0"
  /* 134 */ "ATOMIC_RMW_SUB_I32_A32\0"
  /* 157 */ "ATOMIC_LOAD_I32_A32\0"
  /* 177 */ "ATOMIC_RMW16_U_ADD_I32_A32\0"
  /* 204 */ "ATOMIC_RMW8_U_ADD_I32_A32\0"
  /* 230 */ "ATOMIC_RMW_ADD_I32_A32\0"
  /* 253 */ "ATOMIC_RMW16_U_AND_I32_A32\0"
  /* 280 */ "ATOMIC_RMW8_U_AND_I32_A32\0"
  /* 306 */ "ATOMIC_RMW_AND_I32_A32\0"
  /* 329 */ "ATOMIC_STORE_I32_A32\0"
  /* 350 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32\0"
  /* 381 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32\0"
  /* 411 */ "ATOMIC_RMW_CMPXCHG_I32_A32\0"
  /* 438 */ "ATOMIC_RMW16_U_XCHG_I32_A32\0"
  /* 466 */ "ATOMIC_RMW8_U_XCHG_I32_A32\0"
  /* 493 */ "ATOMIC_RMW_XCHG_I32_A32\0"
  /* 517 */ "ATOMIC_RMW16_U_XOR_I32_A32\0"
  /* 544 */ "ATOMIC_RMW8_U_XOR_I32_A32\0"
  /* 570 */ "ATOMIC_RMW_XOR_I32_A32\0"
  /* 593 */ "ATOMIC_RMW16_U_OR_I32_A32\0"
  /* 619 */ "ATOMIC_RMW8_U_OR_I32_A32\0"
  /* 644 */ "ATOMIC_RMW_OR_I32_A32\0"
  /* 666 */ "LOAD16_S_I32_A32\0"
  /* 683 */ "LOAD8_S_I32_A32\0"
  /* 699 */ "ATOMIC_LOAD16_U_I32_A32\0"
  /* 723 */ "ATOMIC_LOAD8_U_I32_A32\0"
  /* 746 */ "MEMORY_ATOMIC_WAIT32_A32\0"
  /* 771 */ "LOAD_LANE_I64x2_A32\0"
  /* 791 */ "STORE_LANE_I64x2_A32\0"
  /* 812 */ "LOAD_ZERO_I64x2_A32\0"
  /* 832 */ "LOAD_EXTEND_S_I64x2_A32\0"
  /* 856 */ "LOAD_EXTEND_U_I64x2_A32\0"
  /* 880 */ "LOAD_F64_A32\0"
  /* 893 */ "STORE_F64_A32\0"
  /* 907 */ "ATOMIC_STORE32_I64_A32\0"
  /* 930 */ "ATOMIC_STORE16_I64_A32\0"
  /* 953 */ "ATOMIC_STORE8_I64_A32\0"
  /* 975 */ "ATOMIC_RMW32_U_SUB_I64_A32\0"
  /* 1002 */ "ATOMIC_RMW16_U_SUB_I64_A32\0"
  /* 1029 */ "ATOMIC_RMW8_U_SUB_I64_A32\0"
  /* 1055 */ "ATOMIC_RMW_SUB_I64_A32\0"
  /* 1078 */ "ATOMIC_LOAD_I64_A32\0"
  /* 1098 */ "ATOMIC_RMW32_U_ADD_I64_A32\0"
  /* 1125 */ "ATOMIC_RMW16_U_ADD_I64_A32\0"
  /* 1152 */ "ATOMIC_RMW8_U_ADD_I64_A32\0"
  /* 1178 */ "ATOMIC_RMW_ADD_I64_A32\0"
  /* 1201 */ "ATOMIC_RMW32_U_AND_I64_A32\0"
  /* 1228 */ "ATOMIC_RMW16_U_AND_I64_A32\0"
  /* 1255 */ "ATOMIC_RMW8_U_AND_I64_A32\0"
  /* 1281 */ "ATOMIC_RMW_AND_I64_A32\0"
  /* 1304 */ "ATOMIC_STORE_I64_A32\0"
  /* 1325 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32\0"
  /* 1356 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32\0"
  /* 1387 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32\0"
  /* 1417 */ "ATOMIC_RMW_CMPXCHG_I64_A32\0"
  /* 1444 */ "ATOMIC_RMW32_U_XCHG_I64_A32\0"
  /* 1472 */ "ATOMIC_RMW16_U_XCHG_I64_A32\0"
  /* 1500 */ "ATOMIC_RMW8_U_XCHG_I64_A32\0"
  /* 1527 */ "ATOMIC_RMW_XCHG_I64_A32\0"
  /* 1551 */ "ATOMIC_RMW32_U_XOR_I64_A32\0"
  /* 1578 */ "ATOMIC_RMW16_U_XOR_I64_A32\0"
  /* 1605 */ "ATOMIC_RMW8_U_XOR_I64_A32\0"
  /* 1631 */ "ATOMIC_RMW_XOR_I64_A32\0"
  /* 1654 */ "ATOMIC_RMW32_U_OR_I64_A32\0"
  /* 1680 */ "ATOMIC_RMW16_U_OR_I64_A32\0"
  /* 1706 */ "ATOMIC_RMW8_U_OR_I64_A32\0"
  /* 1731 */ "ATOMIC_RMW_OR_I64_A32\0"
  /* 1753 */ "LOAD32_S_I64_A32\0"
  /* 1770 */ "LOAD16_S_I64_A32\0"
  /* 1787 */ "LOAD8_S_I64_A32\0"
  /* 1803 */ "ATOMIC_LOAD32_U_I64_A32\0"
  /* 1827 */ "ATOMIC_LOAD16_U_I64_A32\0"
  /* 1851 */ "ATOMIC_LOAD8_U_I64_A32\0"
  /* 1874 */ "MEMORY_ATOMIC_WAIT64_A32\0"
  /* 1899 */ "LOAD_LANE_I32x4_A32\0"
  /* 1919 */ "STORE_LANE_I32x4_A32\0"
  /* 1940 */ "LOAD_ZERO_I32x4_A32\0"
  /* 1960 */ "LOAD_EXTEND_S_I32x4_A32\0"
  /* 1984 */ "LOAD_EXTEND_U_I32x4_A32\0"
  /* 2008 */ "LOAD_LANE_I8x16_A32\0"
  /* 2028 */ "STORE_LANE_I8x16_A32\0"
  /* 2049 */ "LOAD_V128_A32\0"
  /* 2063 */ "STORE_V128_A32\0"
  /* 2078 */ "LOAD_LANE_I16x8_A32\0"
  /* 2098 */ "STORE_LANE_I16x8_A32\0"
  /* 2119 */ "LOAD_EXTEND_S_I16x8_A32\0"
  /* 2143 */ "LOAD_EXTEND_U_I16x8_A32\0"
  /* 2167 */ "anonymous_4063MEMORY_SIZE_A32\0"
  /* 2197 */ "anonymous_4733MEMORY_FILL_A32\0"
  /* 2227 */ "LOAD32_SPLAT_A32\0"
  /* 2244 */ "LOAD64_SPLAT_A32\0"
  /* 2261 */ "LOAD16_SPLAT_A32\0"
  /* 2278 */ "LOAD8_SPLAT_A32\0"
  /* 2294 */ "anonymous_4733MEMORY_INIT_A32\0"
  /* 2324 */ "anonymous_4063MEMORY_GROW_A32\0"
  /* 2354 */ "MEMORY_ATOMIC_NOTIFY_A32\0"
  /* 2379 */ "anonymous_4733MEMORY_COPY_A32\0"
  /* 2409 */ "FP_TO_SINT_I32_F32\0"
  /* 2428 */ "FP_TO_UINT_I32_F32\0"
  /* 2447 */ "FP_TO_SINT_I64_F32\0"
  /* 2466 */ "FP_TO_UINT_I64_F32\0"
  /* 2485 */ "SUB_F32\0"
  /* 2493 */ "TRUNC_F32\0"
  /* 2503 */ "ADD_F32\0"
  /* 2511 */ "LOCAL_TEE_F32\0"
  /* 2525 */ "GE_F32\0"
  /* 2532 */ "LE_F32\0"
  /* 2539 */ "NE_F32\0"
  /* 2546 */ "F64_PROMOTE_F32\0"
  /* 2562 */ "NEG_F32\0"
  /* 2570 */ "CEIL_F32\0"
  /* 2579 */ "MUL_F32\0"
  /* 2587 */ "COPYSIGN_F32\0"
  /* 2600 */ "MIN_F32\0"
  /* 2608 */ "DROP_F32\0"
  /* 2617 */ "EQ_F32\0"
  /* 2624 */ "FLOOR_F32\0"
  /* 2634 */ "ABS_F32\0"
  /* 2642 */ "I32_TRUNC_S_F32\0"
  /* 2658 */ "I64_TRUNC_S_F32\0"
  /* 2674 */ "I32_TRUNC_S_SAT_F32\0"
  /* 2694 */ "I64_TRUNC_S_SAT_F32\0"
  /* 2714 */ "I32_TRUNC_U_SAT_F32\0"
  /* 2734 */ "I64_TRUNC_U_SAT_F32\0"
  /* 2754 */ "SELECT_F32\0"
  /* 2765 */ "GLOBAL_GET_F32\0"
  /* 2780 */ "LOCAL_GET_F32\0"
  /* 2794 */ "I32_REINTERPRET_F32\0"
  /* 2814 */ "GLOBAL_SET_F32\0"
  /* 2829 */ "LOCAL_SET_F32\0"
  /* 2843 */ "GT_F32\0"
  /* 2850 */ "LT_F32\0"
  /* 2857 */ "SQRT_F32\0"
  /* 2866 */ "NEAREST_F32\0"
  /* 2878 */ "CONST_F32\0"
  /* 2888 */ "I32_TRUNC_U_F32\0"
  /* 2904 */ "I64_TRUNC_U_F32\0"
  /* 2920 */ "DIV_F32\0"
  /* 2928 */ "MAX_F32\0"
  /* 2936 */ "COPY_F32\0"
  /* 2945 */ "SUB_I32\0"
  /* 2953 */ "ADD_I32\0"
  /* 2961 */ "AND_I32\0"
  /* 2969 */ "LOCAL_TEE_I32\0"
  /* 2983 */ "BR_TABLE_I32\0"
  /* 2996 */ "NE_I32\0"
  /* 3003 */ "SHL_I32\0"
  /* 3011 */ "ROTL_I32\0"
  /* 3020 */ "MUL_I32\0"
  /* 3028 */ "DROP_I32\0"
  /* 3037 */ "EQ_I32\0"
  /* 3044 */ "XOR_I32\0"
  /* 3052 */ "ROTR_I32\0"
  /* 3061 */ "I32_EXTEND16_S_I32\0"
  /* 3080 */ "I32_EXTEND8_S_I32\0"
  /* 3098 */ "I64_EXTEND_S_I32\0"
  /* 3115 */ "GE_S_I32\0"
  /* 3124 */ "LE_S_I32\0"
  /* 3133 */ "REM_S_I32\0"
  /* 3143 */ "SHR_S_I32\0"
  /* 3153 */ "GT_S_I32\0"
  /* 3162 */ "LT_S_I32\0"
  /* 3171 */ "F32_CONVERT_S_I32\0"
  /* 3189 */ "F64_CONVERT_S_I32\0"
  /* 3207 */ "DIV_S_I32\0"
  /* 3217 */ "SELECT_I32\0"
  /* 3228 */ "GLOBAL_GET_I32\0"
  /* 3243 */ "LOCAL_GET_I32\0"
  /* 3257 */ "F32_REINTERPRET_I32\0"
  /* 3277 */ "GLOBAL_SET_I32\0"
  /* 3292 */ "LOCAL_SET_I32\0"
  /* 3306 */ "POPCNT_I32\0"
  /* 3317 */ "CONST_I32\0"
  /* 3327 */ "I64_EXTEND_U_I32\0"
  /* 3344 */ "GE_U_I32\0"
  /* 3353 */ "LE_U_I32\0"
  /* 3362 */ "REM_U_I32\0"
  /* 3372 */ "SHR_U_I32\0"
  /* 3382 */ "GT_U_I32\0"
  /* 3391 */ "LT_U_I32\0"
  /* 3400 */ "F32_CONVERT_U_I32\0"
  /* 3418 */ "F64_CONVERT_U_I32\0"
  /* 3436 */ "DIV_U_I32\0"
  /* 3446 */ "COPY_I32\0"
  /* 3455 */ "CLZ_I32\0"
  /* 3463 */ "EQZ_I32\0"
  /* 3471 */ "CTZ_I32\0"
  /* 3479 */ "ARGUMENT_v4f32\0"
  /* 3494 */ "ARGUMENT_f32\0"
  /* 3507 */ "ARGUMENT_v4i32\0"
  /* 3522 */ "ARGUMENT_i32\0"
  /* 3535 */ "G_FLOG2\0"
  /* 3543 */ "G_FEXP2\0"
  /* 3551 */ "CONST_V128_F64x2\0"
  /* 3568 */ "SUB_F64x2\0"
  /* 3578 */ "TRUNC_F64x2\0"
  /* 3590 */ "NMADD_F64x2\0"
  /* 3602 */ "GE_F64x2\0"
  /* 3611 */ "LE_F64x2\0"
  /* 3620 */ "REPLACE_LANE_F64x2\0"
  /* 3639 */ "EXTRACT_LANE_F64x2\0"
  /* 3658 */ "NEG_F64x2\0"
  /* 3668 */ "CEIL_F64x2\0"
  /* 3679 */ "MUL_F64x2\0"
  /* 3689 */ "SIMD_RELAXED_FMIN_F64x2\0"
  /* 3713 */ "PMIN_F64x2\0"
  /* 3724 */ "EQ_F64x2\0"
  /* 3733 */ "FLOOR_F64x2\0"
  /* 3745 */ "ABS_F64x2\0"
  /* 3755 */ "SPLAT_F64x2\0"
  /* 3767 */ "GT_F64x2\0"
  /* 3776 */ "LT_F64x2\0"
  /* 3785 */ "SQRT_F64x2\0"
  /* 3796 */ "NEAREST_F64x2\0"
  /* 3810 */ "DIV_F64x2\0"
  /* 3820 */ "SIMD_RELAXED_FMAX_F64x2\0"
  /* 3844 */ "PMAX_F64x2\0"
  /* 3855 */ "convert_low_s_F64x2\0"
  /* 3875 */ "convert_low_u_F64x2\0"
  /* 3895 */ "promote_low_F64x2\0"
  /* 3913 */ "CONST_V128_I64x2\0"
  /* 3930 */ "SUB_I64x2\0"
  /* 3940 */ "ADD_I64x2\0"
  /* 3950 */ "REPLACE_LANE_I64x2\0"
  /* 3969 */ "EXTRACT_LANE_I64x2\0"
  /* 3988 */ "ALLTRUE_I64x2\0"
  /* 4002 */ "NEG_I64x2\0"
  /* 4012 */ "BITMASK_I64x2\0"
  /* 4026 */ "SHL_I64x2\0"
  /* 4036 */ "MUL_I64x2\0"
  /* 4046 */ "EQ_I64x2\0"
  /* 4055 */ "ABS_I64x2\0"
  /* 4065 */ "GE_S_I64x2\0"
  /* 4076 */ "LE_S_I64x2\0"
  /* 4087 */ "EXTMUL_HIGH_S_I64x2\0"
  /* 4107 */ "SHR_S_I64x2\0"
  /* 4119 */ "GT_S_I64x2\0"
  /* 4130 */ "LT_S_I64x2\0"
  /* 4141 */ "EXTMUL_LOW_S_I64x2\0"
  /* 4160 */ "SPLAT_I64x2\0"
  /* 4172 */ "LANESELECT_I64x2\0"
  /* 4189 */ "EXTMUL_HIGH_U_I64x2\0"
  /* 4209 */ "SHR_U_I64x2\0"
  /* 4221 */ "EXTMUL_LOW_U_I64x2\0"
  /* 4240 */ "extend_high_s_I64x2\0"
  /* 4260 */ "extend_low_s_I64x2\0"
  /* 4279 */ "extend_high_u_I64x2\0"
  /* 4299 */ "extend_low_u_I64x2\0"
  /* 4318 */ "LOAD_F32_A64\0"
  /* 4331 */ "STORE_F32_A64\0"
  /* 4345 */ "ATOMIC_STORE16_I32_A64\0"
  /* 4368 */ "ATOMIC_STORE8_I32_A64\0"
  /* 4390 */ "ATOMIC_RMW16_U_SUB_I32_A64\0"
  /* 4417 */ "ATOMIC_RMW8_U_SUB_I32_A64\0"
  /* 4443 */ "ATOMIC_RMW_SUB_I32_A64\0"
  /* 4466 */ "ATOMIC_LOAD_I32_A64\0"
  /* 4486 */ "ATOMIC_RMW16_U_ADD_I32_A64\0"
  /* 4513 */ "ATOMIC_RMW8_U_ADD_I32_A64\0"
  /* 4539 */ "ATOMIC_RMW_ADD_I32_A64\0"
  /* 4562 */ "ATOMIC_RMW16_U_AND_I32_A64\0"
  /* 4589 */ "ATOMIC_RMW8_U_AND_I32_A64\0"
  /* 4615 */ "ATOMIC_RMW_AND_I32_A64\0"
  /* 4638 */ "ATOMIC_STORE_I32_A64\0"
  /* 4659 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64\0"
  /* 4690 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64\0"
  /* 4720 */ "ATOMIC_RMW_CMPXCHG_I32_A64\0"
  /* 4747 */ "ATOMIC_RMW16_U_XCHG_I32_A64\0"
  /* 4775 */ "ATOMIC_RMW8_U_XCHG_I32_A64\0"
  /* 4802 */ "ATOMIC_RMW_XCHG_I32_A64\0"
  /* 4826 */ "ATOMIC_RMW16_U_XOR_I32_A64\0"
  /* 4853 */ "ATOMIC_RMW8_U_XOR_I32_A64\0"
  /* 4879 */ "ATOMIC_RMW_XOR_I32_A64\0"
  /* 4902 */ "ATOMIC_RMW16_U_OR_I32_A64\0"
  /* 4928 */ "ATOMIC_RMW8_U_OR_I32_A64\0"
  /* 4953 */ "ATOMIC_RMW_OR_I32_A64\0"
  /* 4975 */ "LOAD16_S_I32_A64\0"
  /* 4992 */ "LOAD8_S_I32_A64\0"
  /* 5008 */ "ATOMIC_LOAD16_U_I32_A64\0"
  /* 5032 */ "ATOMIC_LOAD8_U_I32_A64\0"
  /* 5055 */ "MEMORY_ATOMIC_WAIT32_A64\0"
  /* 5080 */ "LOAD_LANE_I64x2_A64\0"
  /* 5100 */ "STORE_LANE_I64x2_A64\0"
  /* 5121 */ "LOAD_ZERO_I64x2_A64\0"
  /* 5141 */ "LOAD_EXTEND_S_I64x2_A64\0"
  /* 5165 */ "LOAD_EXTEND_U_I64x2_A64\0"
  /* 5189 */ "LOAD_F64_A64\0"
  /* 5202 */ "STORE_F64_A64\0"
  /* 5216 */ "ATOMIC_STORE32_I64_A64\0"
  /* 5239 */ "ATOMIC_STORE16_I64_A64\0"
  /* 5262 */ "ATOMIC_STORE8_I64_A64\0"
  /* 5284 */ "ATOMIC_RMW32_U_SUB_I64_A64\0"
  /* 5311 */ "ATOMIC_RMW16_U_SUB_I64_A64\0"
  /* 5338 */ "ATOMIC_RMW8_U_SUB_I64_A64\0"
  /* 5364 */ "ATOMIC_RMW_SUB_I64_A64\0"
  /* 5387 */ "ATOMIC_LOAD_I64_A64\0"
  /* 5407 */ "ATOMIC_RMW32_U_ADD_I64_A64\0"
  /* 5434 */ "ATOMIC_RMW16_U_ADD_I64_A64\0"
  /* 5461 */ "ATOMIC_RMW8_U_ADD_I64_A64\0"
  /* 5487 */ "ATOMIC_RMW_ADD_I64_A64\0"
  /* 5510 */ "ATOMIC_RMW32_U_AND_I64_A64\0"
  /* 5537 */ "ATOMIC_RMW16_U_AND_I64_A64\0"
  /* 5564 */ "ATOMIC_RMW8_U_AND_I64_A64\0"
  /* 5590 */ "ATOMIC_RMW_AND_I64_A64\0"
  /* 5613 */ "ATOMIC_STORE_I64_A64\0"
  /* 5634 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64\0"
  /* 5665 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64\0"
  /* 5696 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64\0"
  /* 5726 */ "ATOMIC_RMW_CMPXCHG_I64_A64\0"
  /* 5753 */ "ATOMIC_RMW32_U_XCHG_I64_A64\0"
  /* 5781 */ "ATOMIC_RMW16_U_XCHG_I64_A64\0"
  /* 5809 */ "ATOMIC_RMW8_U_XCHG_I64_A64\0"
  /* 5836 */ "ATOMIC_RMW_XCHG_I64_A64\0"
  /* 5860 */ "ATOMIC_RMW32_U_XOR_I64_A64\0"
  /* 5887 */ "ATOMIC_RMW16_U_XOR_I64_A64\0"
  /* 5914 */ "ATOMIC_RMW8_U_XOR_I64_A64\0"
  /* 5940 */ "ATOMIC_RMW_XOR_I64_A64\0"
  /* 5963 */ "ATOMIC_RMW32_U_OR_I64_A64\0"
  /* 5989 */ "ATOMIC_RMW16_U_OR_I64_A64\0"
  /* 6015 */ "ATOMIC_RMW8_U_OR_I64_A64\0"
  /* 6040 */ "ATOMIC_RMW_OR_I64_A64\0"
  /* 6062 */ "LOAD32_S_I64_A64\0"
  /* 6079 */ "LOAD16_S_I64_A64\0"
  /* 6096 */ "LOAD8_S_I64_A64\0"
  /* 6112 */ "ATOMIC_LOAD32_U_I64_A64\0"
  /* 6136 */ "ATOMIC_LOAD16_U_I64_A64\0"
  /* 6160 */ "ATOMIC_LOAD8_U_I64_A64\0"
  /* 6183 */ "MEMORY_ATOMIC_WAIT64_A64\0"
  /* 6208 */ "LOAD_LANE_I32x4_A64\0"
  /* 6228 */ "STORE_LANE_I32x4_A64\0"
  /* 6249 */ "LOAD_ZERO_I32x4_A64\0"
  /* 6269 */ "LOAD_EXTEND_S_I32x4_A64\0"
  /* 6293 */ "LOAD_EXTEND_U_I32x4_A64\0"
  /* 6317 */ "LOAD_LANE_I8x16_A64\0"
  /* 6337 */ "STORE_LANE_I8x16_A64\0"
  /* 6358 */ "LOAD_V128_A64\0"
  /* 6372 */ "STORE_V128_A64\0"
  /* 6387 */ "LOAD_LANE_I16x8_A64\0"
  /* 6407 */ "STORE_LANE_I16x8_A64\0"
  /* 6428 */ "LOAD_EXTEND_S_I16x8_A64\0"
  /* 6452 */ "LOAD_EXTEND_U_I16x8_A64\0"
  /* 6476 */ "anonymous_4064MEMORY_SIZE_A64\0"
  /* 6506 */ "anonymous_4734MEMORY_FILL_A64\0"
  /* 6536 */ "LOAD32_SPLAT_A64\0"
  /* 6553 */ "LOAD64_SPLAT_A64\0"
  /* 6570 */ "LOAD16_SPLAT_A64\0"
  /* 6587 */ "LOAD8_SPLAT_A64\0"
  /* 6603 */ "anonymous_4734MEMORY_INIT_A64\0"
  /* 6633 */ "anonymous_4064MEMORY_GROW_A64\0"
  /* 6663 */ "MEMORY_ATOMIC_NOTIFY_A64\0"
  /* 6688 */ "anonymous_4734MEMORY_COPY_A64\0"
  /* 6718 */ "FP_TO_SINT_I32_F64\0"
  /* 6737 */ "FP_TO_UINT_I32_F64\0"
  /* 6756 */ "FP_TO_SINT_I64_F64\0"
  /* 6775 */ "FP_TO_UINT_I64_F64\0"
  /* 6794 */ "SUB_F64\0"
  /* 6802 */ "TRUNC_F64\0"
  /* 6812 */ "ADD_F64\0"
  /* 6820 */ "LOCAL_TEE_F64\0"
  /* 6834 */ "GE_F64\0"
  /* 6841 */ "LE_F64\0"
  /* 6848 */ "NE_F64\0"
  /* 6855 */ "F32_DEMOTE_F64\0"
  /* 6870 */ "NEG_F64\0"
  /* 6878 */ "CEIL_F64\0"
  /* 6887 */ "MUL_F64\0"
  /* 6895 */ "COPYSIGN_F64\0"
  /* 6908 */ "MIN_F64\0"
  /* 6916 */ "DROP_F64\0"
  /* 6925 */ "EQ_F64\0"
  /* 6932 */ "FLOOR_F64\0"
  /* 6942 */ "ABS_F64\0"
  /* 6950 */ "I32_TRUNC_S_F64\0"
  /* 6966 */ "I64_TRUNC_S_F64\0"
  /* 6982 */ "I32_TRUNC_S_SAT_F64\0"
  /* 7002 */ "I64_TRUNC_S_SAT_F64\0"
  /* 7022 */ "I32_TRUNC_U_SAT_F64\0"
  /* 7042 */ "I64_TRUNC_U_SAT_F64\0"
  /* 7062 */ "SELECT_F64\0"
  /* 7073 */ "GLOBAL_GET_F64\0"
  /* 7088 */ "LOCAL_GET_F64\0"
  /* 7102 */ "I64_REINTERPRET_F64\0"
  /* 7122 */ "GLOBAL_SET_F64\0"
  /* 7137 */ "LOCAL_SET_F64\0"
  /* 7151 */ "GT_F64\0"
  /* 7158 */ "LT_F64\0"
  /* 7165 */ "SQRT_F64\0"
  /* 7174 */ "NEAREST_F64\0"
  /* 7186 */ "CONST_F64\0"
  /* 7196 */ "I32_TRUNC_U_F64\0"
  /* 7212 */ "I64_TRUNC_U_F64\0"
  /* 7228 */ "DIV_F64\0"
  /* 7236 */ "MAX_F64\0"
  /* 7244 */ "COPY_F64\0"
  /* 7253 */ "SUB_I64\0"
  /* 7261 */ "ADD_I64\0"
  /* 7269 */ "AND_I64\0"
  /* 7277 */ "LOCAL_TEE_I64\0"
  /* 7291 */ "BR_TABLE_I64\0"
  /* 7304 */ "NE_I64\0"
  /* 7311 */ "SHL_I64\0"
  /* 7319 */ "ROTL_I64\0"
  /* 7328 */ "MUL_I64\0"
  /* 7336 */ "I32_WRAP_I64\0"
  /* 7349 */ "DROP_I64\0"
  /* 7358 */ "EQ_I64\0"
  /* 7365 */ "XOR_I64\0"
  /* 7373 */ "ROTR_I64\0"
  /* 7382 */ "I64_EXTEND32_S_I64\0"
  /* 7401 */ "I64_EXTEND16_S_I64\0"
  /* 7420 */ "I64_EXTEND8_S_I64\0"
  /* 7438 */ "GE_S_I64\0"
  /* 7447 */ "LE_S_I64\0"
  /* 7456 */ "REM_S_I64\0"
  /* 7466 */ "SHR_S_I64\0"
  /* 7476 */ "GT_S_I64\0"
  /* 7485 */ "LT_S_I64\0"
  /* 7494 */ "F32_CONVERT_S_I64\0"
  /* 7512 */ "F64_CONVERT_S_I64\0"
  /* 7530 */ "DIV_S_I64\0"
  /* 7540 */ "SELECT_I64\0"
  /* 7551 */ "GLOBAL_GET_I64\0"
  /* 7566 */ "LOCAL_GET_I64\0"
  /* 7580 */ "F64_REINTERPRET_I64\0"
  /* 7600 */ "GLOBAL_SET_I64\0"
  /* 7615 */ "LOCAL_SET_I64\0"
  /* 7629 */ "POPCNT_I64\0"
  /* 7640 */ "CONST_I64\0"
  /* 7650 */ "GE_U_I64\0"
  /* 7659 */ "LE_U_I64\0"
  /* 7668 */ "REM_U_I64\0"
  /* 7678 */ "SHR_U_I64\0"
  /* 7688 */ "GT_U_I64\0"
  /* 7697 */ "LT_U_I64\0"
  /* 7706 */ "F32_CONVERT_U_I64\0"
  /* 7724 */ "F64_CONVERT_U_I64\0"
  /* 7742 */ "DIV_U_I64\0"
  /* 7752 */ "COPY_I64\0"
  /* 7761 */ "CLZ_I64\0"
  /* 7769 */ "EQZ_I64\0"
  /* 7777 */ "CTZ_I64\0"
  /* 7785 */ "ARGUMENT_v2f64\0"
  /* 7800 */ "ARGUMENT_f64\0"
  /* 7813 */ "ARGUMENT_v2i64\0"
  /* 7828 */ "ARGUMENT_i64\0"
  /* 7841 */ "CONST_V128_F32x4\0"
  /* 7858 */ "SUB_F32x4\0"
  /* 7868 */ "TRUNC_F32x4\0"
  /* 7880 */ "NMADD_F32x4\0"
  /* 7892 */ "GE_F32x4\0"
  /* 7901 */ "LE_F32x4\0"
  /* 7910 */ "REPLACE_LANE_F32x4\0"
  /* 7929 */ "EXTRACT_LANE_F32x4\0"
  /* 7948 */ "NEG_F32x4\0"
  /* 7958 */ "CEIL_F32x4\0"
  /* 7969 */ "MUL_F32x4\0"
  /* 7979 */ "SIMD_RELAXED_FMIN_F32x4\0"
  /* 8003 */ "PMIN_F32x4\0"
  /* 8014 */ "EQ_F32x4\0"
  /* 8023 */ "FLOOR_F32x4\0"
  /* 8035 */ "ABS_F32x4\0"
  /* 8045 */ "SPLAT_F32x4\0"
  /* 8057 */ "GT_F32x4\0"
  /* 8066 */ "LT_F32x4\0"
  /* 8075 */ "SQRT_F32x4\0"
  /* 8086 */ "NEAREST_F32x4\0"
  /* 8100 */ "DIV_F32x4\0"
  /* 8110 */ "SIMD_RELAXED_FMAX_F32x4\0"
  /* 8134 */ "PMAX_F32x4\0"
  /* 8145 */ "demote_zero_F32x4\0"
  /* 8163 */ "sint_to_fp_F32x4\0"
  /* 8180 */ "uint_to_fp_F32x4\0"
  /* 8197 */ "CONST_V128_I32x4\0"
  /* 8214 */ "SUB_I32x4\0"
  /* 8224 */ "ADD_I32x4\0"
  /* 8234 */ "REPLACE_LANE_I32x4\0"
  /* 8253 */ "EXTRACT_LANE_I32x4\0"
  /* 8272 */ "ALLTRUE_I32x4\0"
  /* 8286 */ "NEG_I32x4\0"
  /* 8296 */ "BITMASK_I32x4\0"
  /* 8310 */ "SHL_I32x4\0"
  /* 8320 */ "MUL_I32x4\0"
  /* 8330 */ "EQ_I32x4\0"
  /* 8339 */ "ABS_I32x4\0"
  /* 8349 */ "GE_S_I32x4\0"
  /* 8360 */ "LE_S_I32x4\0"
  /* 8371 */ "EXTMUL_HIGH_S_I32x4\0"
  /* 8391 */ "MIN_S_I32x4\0"
  /* 8403 */ "SHR_S_I32x4\0"
  /* 8415 */ "GT_S_I32x4\0"
  /* 8426 */ "LT_S_I32x4\0"
  /* 8437 */ "EXTMUL_LOW_S_I32x4\0"
  /* 8456 */ "MAX_S_I32x4\0"
  /* 8468 */ "SPLAT_I32x4\0"
  /* 8480 */ "LANESELECT_I32x4\0"
  /* 8497 */ "GE_U_I32x4\0"
  /* 8508 */ "LE_U_I32x4\0"
  /* 8519 */ "EXTMUL_HIGH_U_I32x4\0"
  /* 8539 */ "MIN_U_I32x4\0"
  /* 8551 */ "SHR_U_I32x4\0"
  /* 8563 */ "GT_U_I32x4\0"
  /* 8574 */ "LT_U_I32x4\0"
  /* 8585 */ "EXTMUL_LOW_U_I32x4\0"
  /* 8604 */ "MAX_U_I32x4\0"
  /* 8616 */ "int_wasm_relaxed_trunc_signed_I32x4\0"
  /* 8652 */ "int_wasm_extadd_pairwise_signed_I32x4\0"
  /* 8690 */ "int_wasm_relaxed_trunc_unsigned_I32x4\0"
  /* 8728 */ "int_wasm_extadd_pairwise_unsigned_I32x4\0"
  /* 8768 */ "int_wasm_relaxed_trunc_signed_zero_I32x4\0"
  /* 8809 */ "int_wasm_relaxed_trunc_unsigned_zero_I32x4\0"
  /* 8852 */ "extend_high_s_I32x4\0"
  /* 8872 */ "trunc_sat_zero_s_I32x4\0"
  /* 8895 */ "extend_low_s_I32x4\0"
  /* 8914 */ "fp_to_sint_I32x4\0"
  /* 8931 */ "fp_to_uint_I32x4\0"
  /* 8948 */ "extend_high_u_I32x4\0"
  /* 8968 */ "trunc_sat_zero_u_I32x4\0"
  /* 8991 */ "extend_low_u_I32x4\0"
  /* 9010 */ "ARGUMENT_v8i16\0"
  /* 9025 */ "CONST_V128_I8x16\0"
  /* 9042 */ "SUB_I8x16\0"
  /* 9052 */ "ADD_I8x16\0"
  /* 9062 */ "REPLACE_LANE_I8x16\0"
  /* 9081 */ "ALLTRUE_I8x16\0"
  /* 9095 */ "NEG_I8x16\0"
  /* 9105 */ "BITMASK_I8x16\0"
  /* 9119 */ "SHL_I8x16\0"
  /* 9129 */ "EQ_I8x16\0"
  /* 9138 */ "ABS_I8x16\0"
  /* 9148 */ "GE_S_I8x16\0"
  /* 9159 */ "LE_S_I8x16\0"
  /* 9170 */ "MIN_S_I8x16\0"
  /* 9182 */ "SHR_S_I8x16\0"
  /* 9194 */ "SUB_SAT_S_I8x16\0"
  /* 9210 */ "ADD_SAT_S_I8x16\0"
  /* 9226 */ "GT_S_I8x16\0"
  /* 9237 */ "LT_S_I8x16\0"
  /* 9248 */ "NARROW_S_I8x16\0"
  /* 9263 */ "MAX_S_I8x16\0"
  /* 9275 */ "SPLAT_I8x16\0"
  /* 9287 */ "LANESELECT_I8x16\0"
  /* 9304 */ "POPCNT_I8x16\0"
  /* 9317 */ "GE_U_I8x16\0"
  /* 9328 */ "LE_U_I8x16\0"
  /* 9339 */ "MIN_U_I8x16\0"
  /* 9351 */ "AVGR_U_I8x16\0"
  /* 9364 */ "SHR_U_I8x16\0"
  /* 9376 */ "SUB_SAT_U_I8x16\0"
  /* 9392 */ "ADD_SAT_U_I8x16\0"
  /* 9408 */ "GT_U_I8x16\0"
  /* 9419 */ "LT_U_I8x16\0"
  /* 9430 */ "NARROW_U_I8x16\0"
  /* 9445 */ "MAX_U_I8x16\0"
  /* 9457 */ "LOCAL_TEE_V128\0"
  /* 9472 */ "DROP_V128\0"
  /* 9482 */ "SELECT_V128\0"
  /* 9494 */ "GLOBAL_GET_V128\0"
  /* 9510 */ "LOCAL_GET_V128\0"
  /* 9525 */ "GLOBAL_SET_V128\0"
  /* 9541 */ "LOCAL_SET_V128\0"
  /* 9556 */ "COPY_V128\0"
  /* 9566 */ "ARGUMENT_v16i8\0"
  /* 9581 */ "CONST_V128_I16x8\0"
  /* 9598 */ "SUB_I16x8\0"
  /* 9608 */ "ADD_I16x8\0"
  /* 9618 */ "REPLACE_LANE_I16x8\0"
  /* 9637 */ "ALLTRUE_I16x8\0"
  /* 9651 */ "NEG_I16x8\0"
  /* 9661 */ "BITMASK_I16x8\0"
  /* 9675 */ "SHL_I16x8\0"
  /* 9685 */ "MUL_I16x8\0"
  /* 9695 */ "EQ_I16x8\0"
  /* 9704 */ "ABS_I16x8\0"
  /* 9714 */ "GE_S_I16x8\0"
  /* 9725 */ "LE_S_I16x8\0"
  /* 9736 */ "EXTMUL_HIGH_S_I16x8\0"
  /* 9756 */ "MIN_S_I16x8\0"
  /* 9768 */ "SHR_S_I16x8\0"
  /* 9780 */ "RELAXED_Q15MULR_S_I16x8\0"
  /* 9804 */ "SUB_SAT_S_I16x8\0"
  /* 9820 */ "ADD_SAT_S_I16x8\0"
  /* 9836 */ "Q15MULR_SAT_S_I16x8\0"
  /* 9856 */ "GT_S_I16x8\0"
  /* 9867 */ "LT_S_I16x8\0"
  /* 9878 */ "EXTMUL_LOW_S_I16x8\0"
  /* 9897 */ "NARROW_S_I16x8\0"
  /* 9912 */ "MAX_S_I16x8\0"
  /* 9924 */ "SPLAT_I16x8\0"
  /* 9936 */ "LANESELECT_I16x8\0"
  /* 9953 */ "GE_U_I16x8\0"
  /* 9964 */ "LE_U_I16x8\0"
  /* 9975 */ "EXTMUL_HIGH_U_I16x8\0"
  /* 9995 */ "MIN_U_I16x8\0"
  /* 10007 */ "AVGR_U_I16x8\0"
  /* 10020 */ "SHR_U_I16x8\0"
  /* 10032 */ "SUB_SAT_U_I16x8\0"
  /* 10048 */ "ADD_SAT_U_I16x8\0"
  /* 10064 */ "GT_U_I16x8\0"
  /* 10075 */ "LT_U_I16x8\0"
  /* 10086 */ "EXTMUL_LOW_U_I16x8\0"
  /* 10105 */ "NARROW_U_I16x8\0"
  /* 10120 */ "MAX_U_I16x8\0"
  /* 10132 */ "int_wasm_extadd_pairwise_signed_I16x8\0"
  /* 10170 */ "int_wasm_extadd_pairwise_unsigned_I16x8\0"
  /* 10210 */ "extend_high_s_I16x8\0"
  /* 10230 */ "extend_low_s_I16x8\0"
  /* 10249 */ "extend_high_u_I16x8\0"
  /* 10269 */ "extend_low_u_I16x8\0"
  /* 10288 */ "G_FMA\0"
  /* 10294 */ "G_STRICT_FMA\0"
  /* 10307 */ "G_FSUB\0"
  /* 10314 */ "G_STRICT_FSUB\0"
  /* 10328 */ "G_ATOMICRMW_FSUB\0"
  /* 10345 */ "G_SUB\0"
  /* 10351 */ "G_ATOMICRMW_SUB\0"
  /* 10367 */ "G_INTRINSIC\0"
  /* 10379 */ "G_FPTRUNC\0"
  /* 10389 */ "G_INTRINSIC_TRUNC\0"
  /* 10407 */ "G_TRUNC\0"
  /* 10415 */ "G_BUILD_VECTOR_TRUNC\0"
  /* 10436 */ "G_DYN_STACKALLOC\0"
  /* 10453 */ "G_FMAD\0"
  /* 10460 */ "G_INDEXED_SEXTLOAD\0"
  /* 10479 */ "G_SEXTLOAD\0"
  /* 10490 */ "G_INDEXED_ZEXTLOAD\0"
  /* 10509 */ "G_ZEXTLOAD\0"
  /* 10520 */ "G_INDEXED_LOAD\0"
  /* 10535 */ "G_LOAD\0"
  /* 10542 */ "G_VECREDUCE_FADD\0"
  /* 10559 */ "G_FADD\0"
  /* 10566 */ "G_VECREDUCE_SEQ_FADD\0"
  /* 10587 */ "G_STRICT_FADD\0"
  /* 10601 */ "G_ATOMICRMW_FADD\0"
  /* 10618 */ "G_VECREDUCE_ADD\0"
  /* 10634 */ "G_ADD\0"
  /* 10640 */ "G_PTR_ADD\0"
  /* 10650 */ "RELAXED_DOT_ADD\0"
  /* 10666 */ "G_ATOMICRMW_ADD\0"
  /* 10682 */ "G_ATOMICRMW_NAND\0"
  /* 10699 */ "G_VECREDUCE_AND\0"
  /* 10715 */ "G_AND\0"
  /* 10721 */ "G_ATOMICRMW_AND\0"
  /* 10737 */ "LIFETIME_END\0"
  /* 10750 */ "G_BRCOND\0"
  /* 10759 */ "G_LLROUND\0"
  /* 10769 */ "G_LROUND\0"
  /* 10778 */ "G_INTRINSIC_ROUND\0"
  /* 10796 */ "G_INTRINSIC_FPTRUNC_ROUND\0"
  /* 10822 */ "LOAD_STACK_GUARD\0"
  /* 10839 */ "PSEUDO_PROBE\0"
  /* 10852 */ "G_SSUBE\0"
  /* 10860 */ "G_USUBE\0"
  /* 10868 */ "ATOMIC_FENCE\0"
  /* 10881 */ "G_FENCE\0"
  /* 10889 */ "ARITH_FENCE\0"
  /* 10901 */ "COMPILER_FENCE\0"
  /* 10916 */ "REG_SEQUENCE\0"
  /* 10929 */ "G_SADDE\0"
  /* 10937 */ "G_UADDE\0"
  /* 10945 */ "G_FMINNUM_IEEE\0"
  /* 10960 */ "G_FMAXNUM_IEEE\0"
  /* 10975 */ "DEBUG_UNREACHABLE\0"
  /* 10993 */ "G_JUMP_TABLE\0"
  /* 11006 */ "BUNDLE\0"
  /* 11013 */ "SHUFFLE\0"
  /* 11021 */ "RELAXED_SWIZZLE\0"
  /* 11037 */ "G_MEMCPY_INLINE\0"
  /* 11053 */ "LOCAL_ESCAPE\0"
  /* 11066 */ "G_INDEXED_STORE\0"
  /* 11082 */ "G_STORE\0"
  /* 11090 */ "ELSE\0"
  /* 11095 */ "G_BITREVERSE\0"
  /* 11108 */ "DELEGATE\0"
  /* 11117 */ "DBG_VALUE\0"
  /* 11127 */ "G_GLOBAL_VALUE\0"
  /* 11142 */ "ANYTRUE\0"
  /* 11150 */ "G_MEMMOVE\0"
  /* 11160 */ "G_FREEZE\0"
  /* 11169 */ "G_FCANONICALIZE\0"
  /* 11185 */ "TABLE_SIZE\0"
  /* 11196 */ "G_CTLZ_ZERO_UNDEF\0"
  /* 11214 */ "G_CTTZ_ZERO_UNDEF\0"
  /* 11232 */ "G_IMPLICIT_DEF\0"
  /* 11247 */ "LOCAL_TEE_FUNCREF\0"
  /* 11265 */ "TABLE_FILL_FUNCREF\0"
  /* 11284 */ "REF_NULL_FUNCREF\0"
  /* 11301 */ "REF_IS_NULL_FUNCREF\0"
  /* 11321 */ "DROP_FUNCREF\0"
  /* 11334 */ "SELECT_FUNCREF\0"
  /* 11349 */ "TABLE_GET_FUNCREF\0"
  /* 11367 */ "GLOBAL_GET_FUNCREF\0"
  /* 11386 */ "LOCAL_GET_FUNCREF\0"
  /* 11404 */ "TABLE_SET_FUNCREF\0"
  /* 11422 */ "GLOBAL_SET_FUNCREF\0"
  /* 11441 */ "LOCAL_SET_FUNCREF\0"
  /* 11459 */ "TABLE_GROW_FUNCREF\0"
  /* 11478 */ "COPY_FUNCREF\0"
  /* 11491 */ "LOCAL_TEE_EXTERNREF\0"
  /* 11511 */ "TABLE_FILL_EXTERNREF\0"
  /* 11532 */ "REF_NULL_EXTERNREF\0"
  /* 11551 */ "REF_IS_NULL_EXTERNREF\0"
  /* 11573 */ "DROP_EXTERNREF\0"
  /* 11588 */ "SELECT_EXTERNREF\0"
  /* 11605 */ "TABLE_GET_EXTERNREF\0"
  /* 11625 */ "GLOBAL_GET_EXTERNREF\0"
  /* 11646 */ "LOCAL_GET_EXTERNREF\0"
  /* 11666 */ "TABLE_SET_EXTERNREF\0"
  /* 11686 */ "GLOBAL_SET_EXTERNREF\0"
  /* 11707 */ "LOCAL_SET_EXTERNREF\0"
  /* 11727 */ "TABLE_GROW_EXTERNREF\0"
  /* 11748 */ "COPY_EXTERNREF\0"
  /* 11763 */ "DBG_INSTR_REF\0"
  /* 11777 */ "END_IF\0"
  /* 11784 */ "BR_IF\0"
  /* 11790 */ "G_FNEG\0"
  /* 11797 */ "EXTRACT_SUBREG\0"
  /* 11812 */ "INSERT_SUBREG\0"
  /* 11826 */ "G_SEXT_INREG\0"
  /* 11839 */ "SUBREG_TO_REG\0"
  /* 11853 */ "G_ATOMIC_CMPXCHG\0"
  /* 11870 */ "G_ATOMICRMW_XCHG\0"
  /* 11887 */ "G_FLOG\0"
  /* 11894 */ "G_VAARG\0"
  /* 11902 */ "PREALLOCATED_ARG\0"
  /* 11919 */ "CATCH\0"
  /* 11925 */ "G_SMULH\0"
  /* 11933 */ "G_UMULH\0"
  /* 11941 */ "DBG_PHI\0"
  /* 11949 */ "G_FPTOSI\0"
  /* 11958 */ "G_FPTOUI\0"
  /* 11967 */ "G_FPOWI\0"
  /* 11975 */ "END_BLOCK\0"
  /* 11985 */ "G_PTRMASK\0"
  /* 11995 */ "GC_LABEL\0"
  /* 12004 */ "DBG_LABEL\0"
  /* 12014 */ "EH_LABEL\0"
  /* 12023 */ "ANNOTATION_LABEL\0"
  /* 12040 */ "ICALL_BRANCH_FUNNEL\0"
  /* 12060 */ "G_FSHL\0"
  /* 12067 */ "G_SHL\0"
  /* 12073 */ "G_FCEIL\0"
  /* 12081 */ "PATCHABLE_TAIL_CALL\0"
  /* 12101 */ "RET_CALL\0"
  /* 12110 */ "PATCHABLE_TYPED_EVENT_CALL\0"
  /* 12137 */ "PATCHABLE_EVENT_CALL\0"
  /* 12158 */ "FENTRY_CALL\0"
  /* 12170 */ "CATCH_ALL\0"
  /* 12180 */ "KILL\0"
  /* 12185 */ "G_CONSTANT_POOL\0"
  /* 12201 */ "G_ROTL\0"
  /* 12208 */ "G_VECREDUCE_FMUL\0"
  /* 12225 */ "G_FMUL\0"
  /* 12232 */ "G_VECREDUCE_SEQ_FMUL\0"
  /* 12253 */ "G_STRICT_FMUL\0"
  /* 12267 */ "G_VECREDUCE_MUL\0"
  /* 12283 */ "G_MUL\0"
  /* 12289 */ "G_FREM\0"
  /* 12296 */ "G_STRICT_FREM\0"
  /* 12310 */ "G_SREM\0"
  /* 12317 */ "G_UREM\0"
  /* 12324 */ "G_SDIVREM\0"
  /* 12334 */ "G_UDIVREM\0"
  /* 12344 */ "INLINEASM\0"
  /* 12354 */ "G_FMINIMUM\0"
  /* 12365 */ "G_FMAXIMUM\0"
  /* 12376 */ "G_FMINNUM\0"
  /* 12386 */ "G_FMAXNUM\0"
  /* 12396 */ "G_INTRINSIC_ROUNDEVEN\0"
  /* 12418 */ "G_ASSERT_ALIGN\0"
  /* 12433 */ "G_FCOPYSIGN\0"
  /* 12445 */ "G_VECREDUCE_FMIN\0"
  /* 12462 */ "G_ATOMICRMW_FMIN\0"
  /* 12479 */ "G_VECREDUCE_SMIN\0"
  /* 12496 */ "G_SMIN\0"
  /* 12503 */ "G_VECREDUCE_UMIN\0"
  /* 12520 */ "G_UMIN\0"
  /* 12527 */ "G_ATOMICRMW_UMIN\0"
  /* 12544 */ "G_ATOMICRMW_MIN\0"
  /* 12560 */ "G_FSIN\0"
  /* 12567 */ "END_FUNCTION\0"
  /* 12580 */ "CFI_INSTRUCTION\0"
  /* 12596 */ "FALLTHROUGH_RETURN\0"
  /* 12615 */ "ADJCALLSTACKDOWN\0"
  /* 12632 */ "G_SSUBO\0"
  /* 12640 */ "G_USUBO\0"
  /* 12648 */ "G_SADDO\0"
  /* 12656 */ "G_UADDO\0"
  /* 12664 */ "G_SMULO\0"
  /* 12672 */ "G_UMULO\0"
  /* 12680 */ "G_BZERO\0"
  /* 12688 */ "STACKMAP\0"
  /* 12697 */ "G_ATOMICRMW_UDEC_WRAP\0"
  /* 12719 */ "G_ATOMICRMW_UINC_WRAP\0"
  /* 12741 */ "G_BSWAP\0"
  /* 12749 */ "G_SITOFP\0"
  /* 12758 */ "G_UITOFP\0"
  /* 12767 */ "G_FCMP\0"
  /* 12774 */ "G_ICMP\0"
  /* 12781 */ "NOP\0"
  /* 12785 */ "END_LOOP\0"
  /* 12794 */ "G_CTPOP\0"
  /* 12802 */ "anonymous_4733DATA_DROP\0"
  /* 12826 */ "anonymous_4734DATA_DROP\0"
  /* 12850 */ "PATCHABLE_OP\0"
  /* 12863 */ "FAULTING_OP\0"
  /* 12875 */ "ADJCALLSTACKUP\0"
  /* 12890 */ "PREALLOCATED_SETUP\0"
  /* 12909 */ "G_FEXP\0"
  /* 12916 */ "G_BR\0"
  /* 12921 */ "INLINEASM_BR\0"
  /* 12934 */ "G_BLOCK_ADDR\0"
  /* 12947 */ "MEMBARRIER\0"
  /* 12958 */ "PATCHABLE_FUNCTION_ENTER\0"
  /* 12983 */ "G_READCYCLECOUNTER\0"
  /* 13002 */ "G_READ_REGISTER\0"
  /* 13018 */ "G_WRITE_REGISTER\0"
  /* 13035 */ "G_ASHR\0"
  /* 13042 */ "G_FSHR\0"
  /* 13049 */ "G_LSHR\0"
  /* 13056 */ "G_FFLOOR\0"
  /* 13065 */ "G_BUILD_VECTOR\0"
  /* 13080 */ "G_SHUFFLE_VECTOR\0"
  /* 13097 */ "G_VECREDUCE_XOR\0"
  /* 13113 */ "G_XOR\0"
  /* 13119 */ "G_ATOMICRMW_XOR\0"
  /* 13135 */ "G_VECREDUCE_OR\0"
  /* 13150 */ "G_OR\0"
  /* 13155 */ "G_ATOMICRMW_OR\0"
  /* 13170 */ "G_ROTR\0"
  /* 13177 */ "G_INTTOPTR\0"
  /* 13188 */ "G_FABS\0"
  /* 13195 */ "G_ABS\0"
  /* 13201 */ "G_UNMERGE_VALUES\0"
  /* 13218 */ "G_MERGE_VALUES\0"
  /* 13233 */ "CALL_PARAMS\0"
  /* 13245 */ "G_FCOS\0"
  /* 13252 */ "G_CONCAT_VECTORS\0"
  /* 13269 */ "COPY_TO_REGCLASS\0"
  /* 13286 */ "G_IS_FPCLASS\0"
  /* 13299 */ "G_ATOMIC_CMPXCHG_WITH_SUCCESS\0"
  /* 13329 */ "BR_UNLESS\0"
  /* 13339 */ "G_INTRINSIC_W_SIDE_EFFECTS\0"
  /* 13366 */ "RET_CALL_RESULTS\0"
  /* 13383 */ "LOAD_F32_A32_S\0"
  /* 13398 */ "STORE_F32_A32_S\0"
  /* 13414 */ "ATOMIC_STORE16_I32_A32_S\0"
  /* 13439 */ "ATOMIC_STORE8_I32_A32_S\0"
  /* 13463 */ "ATOMIC_RMW16_U_SUB_I32_A32_S\0"
  /* 13492 */ "ATOMIC_RMW8_U_SUB_I32_A32_S\0"
  /* 13520 */ "ATOMIC_RMW_SUB_I32_A32_S\0"
  /* 13545 */ "ATOMIC_LOAD_I32_A32_S\0"
  /* 13567 */ "ATOMIC_RMW16_U_ADD_I32_A32_S\0"
  /* 13596 */ "ATOMIC_RMW8_U_ADD_I32_A32_S\0"
  /* 13624 */ "ATOMIC_RMW_ADD_I32_A32_S\0"
  /* 13649 */ "ATOMIC_RMW16_U_AND_I32_A32_S\0"
  /* 13678 */ "ATOMIC_RMW8_U_AND_I32_A32_S\0"
  /* 13706 */ "ATOMIC_RMW_AND_I32_A32_S\0"
  /* 13731 */ "ATOMIC_STORE_I32_A32_S\0"
  /* 13754 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A32_S\0"
  /* 13787 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A32_S\0"
  /* 13819 */ "ATOMIC_RMW_CMPXCHG_I32_A32_S\0"
  /* 13848 */ "ATOMIC_RMW16_U_XCHG_I32_A32_S\0"
  /* 13878 */ "ATOMIC_RMW8_U_XCHG_I32_A32_S\0"
  /* 13907 */ "ATOMIC_RMW_XCHG_I32_A32_S\0"
  /* 13933 */ "ATOMIC_RMW16_U_XOR_I32_A32_S\0"
  /* 13962 */ "ATOMIC_RMW8_U_XOR_I32_A32_S\0"
  /* 13990 */ "ATOMIC_RMW_XOR_I32_A32_S\0"
  /* 14015 */ "ATOMIC_RMW16_U_OR_I32_A32_S\0"
  /* 14043 */ "ATOMIC_RMW8_U_OR_I32_A32_S\0"
  /* 14070 */ "ATOMIC_RMW_OR_I32_A32_S\0"
  /* 14094 */ "LOAD16_S_I32_A32_S\0"
  /* 14113 */ "LOAD8_S_I32_A32_S\0"
  /* 14131 */ "ATOMIC_LOAD16_U_I32_A32_S\0"
  /* 14157 */ "ATOMIC_LOAD8_U_I32_A32_S\0"
  /* 14182 */ "MEMORY_ATOMIC_WAIT32_A32_S\0"
  /* 14209 */ "LOAD_LANE_I64x2_A32_S\0"
  /* 14231 */ "STORE_LANE_I64x2_A32_S\0"
  /* 14254 */ "LOAD_ZERO_I64x2_A32_S\0"
  /* 14276 */ "LOAD_EXTEND_S_I64x2_A32_S\0"
  /* 14302 */ "LOAD_EXTEND_U_I64x2_A32_S\0"
  /* 14328 */ "LOAD_F64_A32_S\0"
  /* 14343 */ "STORE_F64_A32_S\0"
  /* 14359 */ "ATOMIC_STORE32_I64_A32_S\0"
  /* 14384 */ "ATOMIC_STORE16_I64_A32_S\0"
  /* 14409 */ "ATOMIC_STORE8_I64_A32_S\0"
  /* 14433 */ "ATOMIC_RMW32_U_SUB_I64_A32_S\0"
  /* 14462 */ "ATOMIC_RMW16_U_SUB_I64_A32_S\0"
  /* 14491 */ "ATOMIC_RMW8_U_SUB_I64_A32_S\0"
  /* 14519 */ "ATOMIC_RMW_SUB_I64_A32_S\0"
  /* 14544 */ "ATOMIC_LOAD_I64_A32_S\0"
  /* 14566 */ "ATOMIC_RMW32_U_ADD_I64_A32_S\0"
  /* 14595 */ "ATOMIC_RMW16_U_ADD_I64_A32_S\0"
  /* 14624 */ "ATOMIC_RMW8_U_ADD_I64_A32_S\0"
  /* 14652 */ "ATOMIC_RMW_ADD_I64_A32_S\0"
  /* 14677 */ "ATOMIC_RMW32_U_AND_I64_A32_S\0"
  /* 14706 */ "ATOMIC_RMW16_U_AND_I64_A32_S\0"
  /* 14735 */ "ATOMIC_RMW8_U_AND_I64_A32_S\0"
  /* 14763 */ "ATOMIC_RMW_AND_I64_A32_S\0"
  /* 14788 */ "ATOMIC_STORE_I64_A32_S\0"
  /* 14811 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A32_S\0"
  /* 14844 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A32_S\0"
  /* 14877 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A32_S\0"
  /* 14909 */ "ATOMIC_RMW_CMPXCHG_I64_A32_S\0"
  /* 14938 */ "ATOMIC_RMW32_U_XCHG_I64_A32_S\0"
  /* 14968 */ "ATOMIC_RMW16_U_XCHG_I64_A32_S\0"
  /* 14998 */ "ATOMIC_RMW8_U_XCHG_I64_A32_S\0"
  /* 15027 */ "ATOMIC_RMW_XCHG_I64_A32_S\0"
  /* 15053 */ "ATOMIC_RMW32_U_XOR_I64_A32_S\0"
  /* 15082 */ "ATOMIC_RMW16_U_XOR_I64_A32_S\0"
  /* 15111 */ "ATOMIC_RMW8_U_XOR_I64_A32_S\0"
  /* 15139 */ "ATOMIC_RMW_XOR_I64_A32_S\0"
  /* 15164 */ "ATOMIC_RMW32_U_OR_I64_A32_S\0"
  /* 15192 */ "ATOMIC_RMW16_U_OR_I64_A32_S\0"
  /* 15220 */ "ATOMIC_RMW8_U_OR_I64_A32_S\0"
  /* 15247 */ "ATOMIC_RMW_OR_I64_A32_S\0"
  /* 15271 */ "LOAD32_S_I64_A32_S\0"
  /* 15290 */ "LOAD16_S_I64_A32_S\0"
  /* 15309 */ "LOAD8_S_I64_A32_S\0"
  /* 15327 */ "ATOMIC_LOAD32_U_I64_A32_S\0"
  /* 15353 */ "ATOMIC_LOAD16_U_I64_A32_S\0"
  /* 15379 */ "ATOMIC_LOAD8_U_I64_A32_S\0"
  /* 15404 */ "MEMORY_ATOMIC_WAIT64_A32_S\0"
  /* 15431 */ "LOAD_LANE_I32x4_A32_S\0"
  /* 15453 */ "STORE_LANE_I32x4_A32_S\0"
  /* 15476 */ "LOAD_ZERO_I32x4_A32_S\0"
  /* 15498 */ "LOAD_EXTEND_S_I32x4_A32_S\0"
  /* 15524 */ "LOAD_EXTEND_U_I32x4_A32_S\0"
  /* 15550 */ "LOAD_LANE_I8x16_A32_S\0"
  /* 15572 */ "STORE_LANE_I8x16_A32_S\0"
  /* 15595 */ "LOAD_V128_A32_S\0"
  /* 15611 */ "STORE_V128_A32_S\0"
  /* 15628 */ "LOAD_LANE_I16x8_A32_S\0"
  /* 15650 */ "STORE_LANE_I16x8_A32_S\0"
  /* 15673 */ "LOAD_EXTEND_S_I16x8_A32_S\0"
  /* 15699 */ "LOAD_EXTEND_U_I16x8_A32_S\0"
  /* 15725 */ "anonymous_4063MEMORY_SIZE_A32_S\0"
  /* 15757 */ "anonymous_4733MEMORY_FILL_A32_S\0"
  /* 15789 */ "LOAD32_SPLAT_A32_S\0"
  /* 15808 */ "LOAD64_SPLAT_A32_S\0"
  /* 15827 */ "LOAD16_SPLAT_A32_S\0"
  /* 15846 */ "LOAD8_SPLAT_A32_S\0"
  /* 15864 */ "anonymous_4733MEMORY_INIT_A32_S\0"
  /* 15896 */ "anonymous_4063MEMORY_GROW_A32_S\0"
  /* 15928 */ "MEMORY_ATOMIC_NOTIFY_A32_S\0"
  /* 15955 */ "anonymous_4733MEMORY_COPY_A32_S\0"
  /* 15987 */ "FP_TO_SINT_I32_F32_S\0"
  /* 16008 */ "FP_TO_UINT_I32_F32_S\0"
  /* 16029 */ "FP_TO_SINT_I64_F32_S\0"
  /* 16050 */ "FP_TO_UINT_I64_F32_S\0"
  /* 16071 */ "SUB_F32_S\0"
  /* 16081 */ "TRUNC_F32_S\0"
  /* 16093 */ "ADD_F32_S\0"
  /* 16103 */ "LOCAL_TEE_F32_S\0"
  /* 16119 */ "GE_F32_S\0"
  /* 16128 */ "LE_F32_S\0"
  /* 16137 */ "NE_F32_S\0"
  /* 16146 */ "F64_PROMOTE_F32_S\0"
  /* 16164 */ "NEG_F32_S\0"
  /* 16174 */ "CEIL_F32_S\0"
  /* 16185 */ "MUL_F32_S\0"
  /* 16195 */ "COPYSIGN_F32_S\0"
  /* 16210 */ "MIN_F32_S\0"
  /* 16220 */ "DROP_F32_S\0"
  /* 16231 */ "EQ_F32_S\0"
  /* 16240 */ "FLOOR_F32_S\0"
  /* 16252 */ "ABS_F32_S\0"
  /* 16262 */ "I32_TRUNC_S_F32_S\0"
  /* 16280 */ "I64_TRUNC_S_F32_S\0"
  /* 16298 */ "I32_TRUNC_S_SAT_F32_S\0"
  /* 16320 */ "I64_TRUNC_S_SAT_F32_S\0"
  /* 16342 */ "I32_TRUNC_U_SAT_F32_S\0"
  /* 16364 */ "I64_TRUNC_U_SAT_F32_S\0"
  /* 16386 */ "SELECT_F32_S\0"
  /* 16399 */ "GLOBAL_GET_F32_S\0"
  /* 16416 */ "LOCAL_GET_F32_S\0"
  /* 16432 */ "I32_REINTERPRET_F32_S\0"
  /* 16454 */ "GLOBAL_SET_F32_S\0"
  /* 16471 */ "LOCAL_SET_F32_S\0"
  /* 16487 */ "GT_F32_S\0"
  /* 16496 */ "LT_F32_S\0"
  /* 16505 */ "SQRT_F32_S\0"
  /* 16516 */ "NEAREST_F32_S\0"
  /* 16530 */ "CONST_F32_S\0"
  /* 16542 */ "I32_TRUNC_U_F32_S\0"
  /* 16560 */ "I64_TRUNC_U_F32_S\0"
  /* 16578 */ "DIV_F32_S\0"
  /* 16588 */ "MAX_F32_S\0"
  /* 16598 */ "COPY_F32_S\0"
  /* 16609 */ "SUB_I32_S\0"
  /* 16619 */ "ADD_I32_S\0"
  /* 16629 */ "AND_I32_S\0"
  /* 16639 */ "LOCAL_TEE_I32_S\0"
  /* 16655 */ "BR_TABLE_I32_S\0"
  /* 16670 */ "NE_I32_S\0"
  /* 16679 */ "SHL_I32_S\0"
  /* 16689 */ "ROTL_I32_S\0"
  /* 16700 */ "MUL_I32_S\0"
  /* 16710 */ "DROP_I32_S\0"
  /* 16721 */ "EQ_I32_S\0"
  /* 16730 */ "XOR_I32_S\0"
  /* 16740 */ "ROTR_I32_S\0"
  /* 16751 */ "I32_EXTEND16_S_I32_S\0"
  /* 16772 */ "I32_EXTEND8_S_I32_S\0"
  /* 16792 */ "I64_EXTEND_S_I32_S\0"
  /* 16811 */ "GE_S_I32_S\0"
  /* 16822 */ "LE_S_I32_S\0"
  /* 16833 */ "REM_S_I32_S\0"
  /* 16845 */ "SHR_S_I32_S\0"
  /* 16857 */ "GT_S_I32_S\0"
  /* 16868 */ "LT_S_I32_S\0"
  /* 16879 */ "F32_CONVERT_S_I32_S\0"
  /* 16899 */ "F64_CONVERT_S_I32_S\0"
  /* 16919 */ "DIV_S_I32_S\0"
  /* 16931 */ "SELECT_I32_S\0"
  /* 16944 */ "GLOBAL_GET_I32_S\0"
  /* 16961 */ "LOCAL_GET_I32_S\0"
  /* 16977 */ "F32_REINTERPRET_I32_S\0"
  /* 16999 */ "GLOBAL_SET_I32_S\0"
  /* 17016 */ "LOCAL_SET_I32_S\0"
  /* 17032 */ "POPCNT_I32_S\0"
  /* 17045 */ "CONST_I32_S\0"
  /* 17057 */ "I64_EXTEND_U_I32_S\0"
  /* 17076 */ "GE_U_I32_S\0"
  /* 17087 */ "LE_U_I32_S\0"
  /* 17098 */ "REM_U_I32_S\0"
  /* 17110 */ "SHR_U_I32_S\0"
  /* 17122 */ "GT_U_I32_S\0"
  /* 17133 */ "LT_U_I32_S\0"
  /* 17144 */ "F32_CONVERT_U_I32_S\0"
  /* 17164 */ "F64_CONVERT_U_I32_S\0"
  /* 17184 */ "DIV_U_I32_S\0"
  /* 17196 */ "COPY_I32_S\0"
  /* 17207 */ "CLZ_I32_S\0"
  /* 17217 */ "EQZ_I32_S\0"
  /* 17227 */ "CTZ_I32_S\0"
  /* 17237 */ "ARGUMENT_v4f32_S\0"
  /* 17254 */ "ARGUMENT_f32_S\0"
  /* 17269 */ "ARGUMENT_v4i32_S\0"
  /* 17286 */ "ARGUMENT_i32_S\0"
  /* 17301 */ "CONST_V128_F64x2_S\0"
  /* 17320 */ "SUB_F64x2_S\0"
  /* 17332 */ "TRUNC_F64x2_S\0"
  /* 17346 */ "NMADD_F64x2_S\0"
  /* 17360 */ "GE_F64x2_S\0"
  /* 17371 */ "LE_F64x2_S\0"
  /* 17382 */ "REPLACE_LANE_F64x2_S\0"
  /* 17403 */ "EXTRACT_LANE_F64x2_S\0"
  /* 17424 */ "NEG_F64x2_S\0"
  /* 17436 */ "CEIL_F64x2_S\0"
  /* 17449 */ "MUL_F64x2_S\0"
  /* 17461 */ "SIMD_RELAXED_FMIN_F64x2_S\0"
  /* 17487 */ "PMIN_F64x2_S\0"
  /* 17500 */ "EQ_F64x2_S\0"
  /* 17511 */ "FLOOR_F64x2_S\0"
  /* 17525 */ "ABS_F64x2_S\0"
  /* 17537 */ "SPLAT_F64x2_S\0"
  /* 17551 */ "GT_F64x2_S\0"
  /* 17562 */ "LT_F64x2_S\0"
  /* 17573 */ "SQRT_F64x2_S\0"
  /* 17586 */ "NEAREST_F64x2_S\0"
  /* 17602 */ "DIV_F64x2_S\0"
  /* 17614 */ "SIMD_RELAXED_FMAX_F64x2_S\0"
  /* 17640 */ "PMAX_F64x2_S\0"
  /* 17653 */ "convert_low_s_F64x2_S\0"
  /* 17675 */ "convert_low_u_F64x2_S\0"
  /* 17697 */ "promote_low_F64x2_S\0"
  /* 17717 */ "CONST_V128_I64x2_S\0"
  /* 17736 */ "SUB_I64x2_S\0"
  /* 17748 */ "ADD_I64x2_S\0"
  /* 17760 */ "REPLACE_LANE_I64x2_S\0"
  /* 17781 */ "EXTRACT_LANE_I64x2_S\0"
  /* 17802 */ "ALLTRUE_I64x2_S\0"
  /* 17818 */ "NEG_I64x2_S\0"
  /* 17830 */ "BITMASK_I64x2_S\0"
  /* 17846 */ "SHL_I64x2_S\0"
  /* 17858 */ "MUL_I64x2_S\0"
  /* 17870 */ "EQ_I64x2_S\0"
  /* 17881 */ "ABS_I64x2_S\0"
  /* 17893 */ "GE_S_I64x2_S\0"
  /* 17906 */ "LE_S_I64x2_S\0"
  /* 17919 */ "EXTMUL_HIGH_S_I64x2_S\0"
  /* 17941 */ "SHR_S_I64x2_S\0"
  /* 17955 */ "GT_S_I64x2_S\0"
  /* 17968 */ "LT_S_I64x2_S\0"
  /* 17981 */ "EXTMUL_LOW_S_I64x2_S\0"
  /* 18002 */ "SPLAT_I64x2_S\0"
  /* 18016 */ "LANESELECT_I64x2_S\0"
  /* 18035 */ "EXTMUL_HIGH_U_I64x2_S\0"
  /* 18057 */ "SHR_U_I64x2_S\0"
  /* 18071 */ "EXTMUL_LOW_U_I64x2_S\0"
  /* 18092 */ "extend_high_s_I64x2_S\0"
  /* 18114 */ "extend_low_s_I64x2_S\0"
  /* 18135 */ "extend_high_u_I64x2_S\0"
  /* 18157 */ "extend_low_u_I64x2_S\0"
  /* 18178 */ "LOAD_F32_A64_S\0"
  /* 18193 */ "STORE_F32_A64_S\0"
  /* 18209 */ "ATOMIC_STORE16_I32_A64_S\0"
  /* 18234 */ "ATOMIC_STORE8_I32_A64_S\0"
  /* 18258 */ "ATOMIC_RMW16_U_SUB_I32_A64_S\0"
  /* 18287 */ "ATOMIC_RMW8_U_SUB_I32_A64_S\0"
  /* 18315 */ "ATOMIC_RMW_SUB_I32_A64_S\0"
  /* 18340 */ "ATOMIC_LOAD_I32_A64_S\0"
  /* 18362 */ "ATOMIC_RMW16_U_ADD_I32_A64_S\0"
  /* 18391 */ "ATOMIC_RMW8_U_ADD_I32_A64_S\0"
  /* 18419 */ "ATOMIC_RMW_ADD_I32_A64_S\0"
  /* 18444 */ "ATOMIC_RMW16_U_AND_I32_A64_S\0"
  /* 18473 */ "ATOMIC_RMW8_U_AND_I32_A64_S\0"
  /* 18501 */ "ATOMIC_RMW_AND_I32_A64_S\0"
  /* 18526 */ "ATOMIC_STORE_I32_A64_S\0"
  /* 18549 */ "ATOMIC_RMW16_U_CMPXCHG_I32_A64_S\0"
  /* 18582 */ "ATOMIC_RMW8_U_CMPXCHG_I32_A64_S\0"
  /* 18614 */ "ATOMIC_RMW_CMPXCHG_I32_A64_S\0"
  /* 18643 */ "ATOMIC_RMW16_U_XCHG_I32_A64_S\0"
  /* 18673 */ "ATOMIC_RMW8_U_XCHG_I32_A64_S\0"
  /* 18702 */ "ATOMIC_RMW_XCHG_I32_A64_S\0"
  /* 18728 */ "ATOMIC_RMW16_U_XOR_I32_A64_S\0"
  /* 18757 */ "ATOMIC_RMW8_U_XOR_I32_A64_S\0"
  /* 18785 */ "ATOMIC_RMW_XOR_I32_A64_S\0"
  /* 18810 */ "ATOMIC_RMW16_U_OR_I32_A64_S\0"
  /* 18838 */ "ATOMIC_RMW8_U_OR_I32_A64_S\0"
  /* 18865 */ "ATOMIC_RMW_OR_I32_A64_S\0"
  /* 18889 */ "LOAD16_S_I32_A64_S\0"
  /* 18908 */ "LOAD8_S_I32_A64_S\0"
  /* 18926 */ "ATOMIC_LOAD16_U_I32_A64_S\0"
  /* 18952 */ "ATOMIC_LOAD8_U_I32_A64_S\0"
  /* 18977 */ "MEMORY_ATOMIC_WAIT32_A64_S\0"
  /* 19004 */ "LOAD_LANE_I64x2_A64_S\0"
  /* 19026 */ "STORE_LANE_I64x2_A64_S\0"
  /* 19049 */ "LOAD_ZERO_I64x2_A64_S\0"
  /* 19071 */ "LOAD_EXTEND_S_I64x2_A64_S\0"
  /* 19097 */ "LOAD_EXTEND_U_I64x2_A64_S\0"
  /* 19123 */ "LOAD_F64_A64_S\0"
  /* 19138 */ "STORE_F64_A64_S\0"
  /* 19154 */ "ATOMIC_STORE32_I64_A64_S\0"
  /* 19179 */ "ATOMIC_STORE16_I64_A64_S\0"
  /* 19204 */ "ATOMIC_STORE8_I64_A64_S\0"
  /* 19228 */ "ATOMIC_RMW32_U_SUB_I64_A64_S\0"
  /* 19257 */ "ATOMIC_RMW16_U_SUB_I64_A64_S\0"
  /* 19286 */ "ATOMIC_RMW8_U_SUB_I64_A64_S\0"
  /* 19314 */ "ATOMIC_RMW_SUB_I64_A64_S\0"
  /* 19339 */ "ATOMIC_LOAD_I64_A64_S\0"
  /* 19361 */ "ATOMIC_RMW32_U_ADD_I64_A64_S\0"
  /* 19390 */ "ATOMIC_RMW16_U_ADD_I64_A64_S\0"
  /* 19419 */ "ATOMIC_RMW8_U_ADD_I64_A64_S\0"
  /* 19447 */ "ATOMIC_RMW_ADD_I64_A64_S\0"
  /* 19472 */ "ATOMIC_RMW32_U_AND_I64_A64_S\0"
  /* 19501 */ "ATOMIC_RMW16_U_AND_I64_A64_S\0"
  /* 19530 */ "ATOMIC_RMW8_U_AND_I64_A64_S\0"
  /* 19558 */ "ATOMIC_RMW_AND_I64_A64_S\0"
  /* 19583 */ "ATOMIC_STORE_I64_A64_S\0"
  /* 19606 */ "ATOMIC_RMW32_U_CMPXCHG_I64_A64_S\0"
  /* 19639 */ "ATOMIC_RMW16_U_CMPXCHG_I64_A64_S\0"
  /* 19672 */ "ATOMIC_RMW8_U_CMPXCHG_I64_A64_S\0"
  /* 19704 */ "ATOMIC_RMW_CMPXCHG_I64_A64_S\0"
  /* 19733 */ "ATOMIC_RMW32_U_XCHG_I64_A64_S\0"
  /* 19763 */ "ATOMIC_RMW16_U_XCHG_I64_A64_S\0"
  /* 19793 */ "ATOMIC_RMW8_U_XCHG_I64_A64_S\0"
  /* 19822 */ "ATOMIC_RMW_XCHG_I64_A64_S\0"
  /* 19848 */ "ATOMIC_RMW32_U_XOR_I64_A64_S\0"
  /* 19877 */ "ATOMIC_RMW16_U_XOR_I64_A64_S\0"
  /* 19906 */ "ATOMIC_RMW8_U_XOR_I64_A64_S\0"
  /* 19934 */ "ATOMIC_RMW_XOR_I64_A64_S\0"
  /* 19959 */ "ATOMIC_RMW32_U_OR_I64_A64_S\0"
  /* 19987 */ "ATOMIC_RMW16_U_OR_I64_A64_S\0"
  /* 20015 */ "ATOMIC_RMW8_U_OR_I64_A64_S\0"
  /* 20042 */ "ATOMIC_RMW_OR_I64_A64_S\0"
  /* 20066 */ "LOAD32_S_I64_A64_S\0"
  /* 20085 */ "LOAD16_S_I64_A64_S\0"
  /* 20104 */ "LOAD8_S_I64_A64_S\0"
  /* 20122 */ "ATOMIC_LOAD32_U_I64_A64_S\0"
  /* 20148 */ "ATOMIC_LOAD16_U_I64_A64_S\0"
  /* 20174 */ "ATOMIC_LOAD8_U_I64_A64_S\0"
  /* 20199 */ "MEMORY_ATOMIC_WAIT64_A64_S\0"
  /* 20226 */ "LOAD_LANE_I32x4_A64_S\0"
  /* 20248 */ "STORE_LANE_I32x4_A64_S\0"
  /* 20271 */ "LOAD_ZERO_I32x4_A64_S\0"
  /* 20293 */ "LOAD_EXTEND_S_I32x4_A64_S\0"
  /* 20319 */ "LOAD_EXTEND_U_I32x4_A64_S\0"
  /* 20345 */ "LOAD_LANE_I8x16_A64_S\0"
  /* 20367 */ "STORE_LANE_I8x16_A64_S\0"
  /* 20390 */ "LOAD_V128_A64_S\0"
  /* 20406 */ "STORE_V128_A64_S\0"
  /* 20423 */ "LOAD_LANE_I16x8_A64_S\0"
  /* 20445 */ "STORE_LANE_I16x8_A64_S\0"
  /* 20468 */ "LOAD_EXTEND_S_I16x8_A64_S\0"
  /* 20494 */ "LOAD_EXTEND_U_I16x8_A64_S\0"
  /* 20520 */ "anonymous_4064MEMORY_SIZE_A64_S\0"
  /* 20552 */ "anonymous_4734MEMORY_FILL_A64_S\0"
  /* 20584 */ "LOAD32_SPLAT_A64_S\0"
  /* 20603 */ "LOAD64_SPLAT_A64_S\0"
  /* 20622 */ "LOAD16_SPLAT_A64_S\0"
  /* 20641 */ "LOAD8_SPLAT_A64_S\0"
  /* 20659 */ "anonymous_4734MEMORY_INIT_A64_S\0"
  /* 20691 */ "anonymous_4064MEMORY_GROW_A64_S\0"
  /* 20723 */ "MEMORY_ATOMIC_NOTIFY_A64_S\0"
  /* 20750 */ "anonymous_4734MEMORY_COPY_A64_S\0"
  /* 20782 */ "FP_TO_SINT_I32_F64_S\0"
  /* 20803 */ "FP_TO_UINT_I32_F64_S\0"
  /* 20824 */ "FP_TO_SINT_I64_F64_S\0"
  /* 20845 */ "FP_TO_UINT_I64_F64_S\0"
  /* 20866 */ "SUB_F64_S\0"
  /* 20876 */ "TRUNC_F64_S\0"
  /* 20888 */ "ADD_F64_S\0"
  /* 20898 */ "LOCAL_TEE_F64_S\0"
  /* 20914 */ "GE_F64_S\0"
  /* 20923 */ "LE_F64_S\0"
  /* 20932 */ "NE_F64_S\0"
  /* 20941 */ "F32_DEMOTE_F64_S\0"
  /* 20958 */ "NEG_F64_S\0"
  /* 20968 */ "CEIL_F64_S\0"
  /* 20979 */ "MUL_F64_S\0"
  /* 20989 */ "COPYSIGN_F64_S\0"
  /* 21004 */ "MIN_F64_S\0"
  /* 21014 */ "DROP_F64_S\0"
  /* 21025 */ "EQ_F64_S\0"
  /* 21034 */ "FLOOR_F64_S\0"
  /* 21046 */ "ABS_F64_S\0"
  /* 21056 */ "I32_TRUNC_S_F64_S\0"
  /* 21074 */ "I64_TRUNC_S_F64_S\0"
  /* 21092 */ "I32_TRUNC_S_SAT_F64_S\0"
  /* 21114 */ "I64_TRUNC_S_SAT_F64_S\0"
  /* 21136 */ "I32_TRUNC_U_SAT_F64_S\0"
  /* 21158 */ "I64_TRUNC_U_SAT_F64_S\0"
  /* 21180 */ "SELECT_F64_S\0"
  /* 21193 */ "GLOBAL_GET_F64_S\0"
  /* 21210 */ "LOCAL_GET_F64_S\0"
  /* 21226 */ "I64_REINTERPRET_F64_S\0"
  /* 21248 */ "GLOBAL_SET_F64_S\0"
  /* 21265 */ "LOCAL_SET_F64_S\0"
  /* 21281 */ "GT_F64_S\0"
  /* 21290 */ "LT_F64_S\0"
  /* 21299 */ "SQRT_F64_S\0"
  /* 21310 */ "NEAREST_F64_S\0"
  /* 21324 */ "CONST_F64_S\0"
  /* 21336 */ "I32_TRUNC_U_F64_S\0"
  /* 21354 */ "I64_TRUNC_U_F64_S\0"
  /* 21372 */ "DIV_F64_S\0"
  /* 21382 */ "MAX_F64_S\0"
  /* 21392 */ "COPY_F64_S\0"
  /* 21403 */ "SUB_I64_S\0"
  /* 21413 */ "ADD_I64_S\0"
  /* 21423 */ "AND_I64_S\0"
  /* 21433 */ "LOCAL_TEE_I64_S\0"
  /* 21449 */ "BR_TABLE_I64_S\0"
  /* 21464 */ "NE_I64_S\0"
  /* 21473 */ "SHL_I64_S\0"
  /* 21483 */ "ROTL_I64_S\0"
  /* 21494 */ "MUL_I64_S\0"
  /* 21504 */ "I32_WRAP_I64_S\0"
  /* 21519 */ "DROP_I64_S\0"
  /* 21530 */ "EQ_I64_S\0"
  /* 21539 */ "XOR_I64_S\0"
  /* 21549 */ "ROTR_I64_S\0"
  /* 21560 */ "I64_EXTEND32_S_I64_S\0"
  /* 21581 */ "I64_EXTEND16_S_I64_S\0"
  /* 21602 */ "I64_EXTEND8_S_I64_S\0"
  /* 21622 */ "GE_S_I64_S\0"
  /* 21633 */ "LE_S_I64_S\0"
  /* 21644 */ "REM_S_I64_S\0"
  /* 21656 */ "SHR_S_I64_S\0"
  /* 21668 */ "GT_S_I64_S\0"
  /* 21679 */ "LT_S_I64_S\0"
  /* 21690 */ "F32_CONVERT_S_I64_S\0"
  /* 21710 */ "F64_CONVERT_S_I64_S\0"
  /* 21730 */ "DIV_S_I64_S\0"
  /* 21742 */ "SELECT_I64_S\0"
  /* 21755 */ "GLOBAL_GET_I64_S\0"
  /* 21772 */ "LOCAL_GET_I64_S\0"
  /* 21788 */ "F64_REINTERPRET_I64_S\0"
  /* 21810 */ "GLOBAL_SET_I64_S\0"
  /* 21827 */ "LOCAL_SET_I64_S\0"
  /* 21843 */ "POPCNT_I64_S\0"
  /* 21856 */ "CONST_I64_S\0"
  /* 21868 */ "GE_U_I64_S\0"
  /* 21879 */ "LE_U_I64_S\0"
  /* 21890 */ "REM_U_I64_S\0"
  /* 21902 */ "SHR_U_I64_S\0"
  /* 21914 */ "GT_U_I64_S\0"
  /* 21925 */ "LT_U_I64_S\0"
  /* 21936 */ "F32_CONVERT_U_I64_S\0"
  /* 21956 */ "F64_CONVERT_U_I64_S\0"
  /* 21976 */ "DIV_U_I64_S\0"
  /* 21988 */ "COPY_I64_S\0"
  /* 21999 */ "CLZ_I64_S\0"
  /* 22009 */ "EQZ_I64_S\0"
  /* 22019 */ "CTZ_I64_S\0"
  /* 22029 */ "ARGUMENT_v2f64_S\0"
  /* 22046 */ "ARGUMENT_f64_S\0"
  /* 22061 */ "ARGUMENT_v2i64_S\0"
  /* 22078 */ "ARGUMENT_i64_S\0"
  /* 22093 */ "CONST_V128_F32x4_S\0"
  /* 22112 */ "SUB_F32x4_S\0"
  /* 22124 */ "TRUNC_F32x4_S\0"
  /* 22138 */ "NMADD_F32x4_S\0"
  /* 22152 */ "GE_F32x4_S\0"
  /* 22163 */ "LE_F32x4_S\0"
  /* 22174 */ "REPLACE_LANE_F32x4_S\0"
  /* 22195 */ "EXTRACT_LANE_F32x4_S\0"
  /* 22216 */ "NEG_F32x4_S\0"
  /* 22228 */ "CEIL_F32x4_S\0"
  /* 22241 */ "MUL_F32x4_S\0"
  /* 22253 */ "SIMD_RELAXED_FMIN_F32x4_S\0"
  /* 22279 */ "PMIN_F32x4_S\0"
  /* 22292 */ "EQ_F32x4_S\0"
  /* 22303 */ "FLOOR_F32x4_S\0"
  /* 22317 */ "ABS_F32x4_S\0"
  /* 22329 */ "SPLAT_F32x4_S\0"
  /* 22343 */ "GT_F32x4_S\0"
  /* 22354 */ "LT_F32x4_S\0"
  /* 22365 */ "SQRT_F32x4_S\0"
  /* 22378 */ "NEAREST_F32x4_S\0"
  /* 22394 */ "DIV_F32x4_S\0"
  /* 22406 */ "SIMD_RELAXED_FMAX_F32x4_S\0"
  /* 22432 */ "PMAX_F32x4_S\0"
  /* 22445 */ "demote_zero_F32x4_S\0"
  /* 22465 */ "sint_to_fp_F32x4_S\0"
  /* 22484 */ "uint_to_fp_F32x4_S\0"
  /* 22503 */ "CONST_V128_I32x4_S\0"
  /* 22522 */ "SUB_I32x4_S\0"
  /* 22534 */ "ADD_I32x4_S\0"
  /* 22546 */ "REPLACE_LANE_I32x4_S\0"
  /* 22567 */ "EXTRACT_LANE_I32x4_S\0"
  /* 22588 */ "ALLTRUE_I32x4_S\0"
  /* 22604 */ "NEG_I32x4_S\0"
  /* 22616 */ "BITMASK_I32x4_S\0"
  /* 22632 */ "SHL_I32x4_S\0"
  /* 22644 */ "MUL_I32x4_S\0"
  /* 22656 */ "EQ_I32x4_S\0"
  /* 22667 */ "ABS_I32x4_S\0"
  /* 22679 */ "GE_S_I32x4_S\0"
  /* 22692 */ "LE_S_I32x4_S\0"
  /* 22705 */ "EXTMUL_HIGH_S_I32x4_S\0"
  /* 22727 */ "MIN_S_I32x4_S\0"
  /* 22741 */ "SHR_S_I32x4_S\0"
  /* 22755 */ "GT_S_I32x4_S\0"
  /* 22768 */ "LT_S_I32x4_S\0"
  /* 22781 */ "EXTMUL_LOW_S_I32x4_S\0"
  /* 22802 */ "MAX_S_I32x4_S\0"
  /* 22816 */ "SPLAT_I32x4_S\0"
  /* 22830 */ "LANESELECT_I32x4_S\0"
  /* 22849 */ "GE_U_I32x4_S\0"
  /* 22862 */ "LE_U_I32x4_S\0"
  /* 22875 */ "EXTMUL_HIGH_U_I32x4_S\0"
  /* 22897 */ "MIN_U_I32x4_S\0"
  /* 22911 */ "SHR_U_I32x4_S\0"
  /* 22925 */ "GT_U_I32x4_S\0"
  /* 22938 */ "LT_U_I32x4_S\0"
  /* 22951 */ "EXTMUL_LOW_U_I32x4_S\0"
  /* 22972 */ "MAX_U_I32x4_S\0"
  /* 22986 */ "int_wasm_relaxed_trunc_signed_I32x4_S\0"
  /* 23024 */ "int_wasm_extadd_pairwise_signed_I32x4_S\0"
  /* 23064 */ "int_wasm_relaxed_trunc_unsigned_I32x4_S\0"
  /* 23104 */ "int_wasm_extadd_pairwise_unsigned_I32x4_S\0"
  /* 23146 */ "int_wasm_relaxed_trunc_signed_zero_I32x4_S\0"
  /* 23189 */ "int_wasm_relaxed_trunc_unsigned_zero_I32x4_S\0"
  /* 23234 */ "extend_high_s_I32x4_S\0"
  /* 23256 */ "trunc_sat_zero_s_I32x4_S\0"
  /* 23281 */ "extend_low_s_I32x4_S\0"
  /* 23302 */ "fp_to_sint_I32x4_S\0"
  /* 23321 */ "fp_to_uint_I32x4_S\0"
  /* 23340 */ "extend_high_u_I32x4_S\0"
  /* 23362 */ "trunc_sat_zero_u_I32x4_S\0"
  /* 23387 */ "extend_low_u_I32x4_S\0"
  /* 23408 */ "ARGUMENT_v8i16_S\0"
  /* 23425 */ "CONST_V128_I8x16_S\0"
  /* 23444 */ "SUB_I8x16_S\0"
  /* 23456 */ "ADD_I8x16_S\0"
  /* 23468 */ "REPLACE_LANE_I8x16_S\0"
  /* 23489 */ "ALLTRUE_I8x16_S\0"
  /* 23505 */ "NEG_I8x16_S\0"
  /* 23517 */ "BITMASK_I8x16_S\0"
  /* 23533 */ "SHL_I8x16_S\0"
  /* 23545 */ "EQ_I8x16_S\0"
  /* 23556 */ "ABS_I8x16_S\0"
  /* 23568 */ "GE_S_I8x16_S\0"
  /* 23581 */ "LE_S_I8x16_S\0"
  /* 23594 */ "MIN_S_I8x16_S\0"
  /* 23608 */ "SHR_S_I8x16_S\0"
  /* 23622 */ "SUB_SAT_S_I8x16_S\0"
  /* 23640 */ "ADD_SAT_S_I8x16_S\0"
  /* 23658 */ "GT_S_I8x16_S\0"
  /* 23671 */ "LT_S_I8x16_S\0"
  /* 23684 */ "NARROW_S_I8x16_S\0"
  /* 23701 */ "MAX_S_I8x16_S\0"
  /* 23715 */ "SPLAT_I8x16_S\0"
  /* 23729 */ "LANESELECT_I8x16_S\0"
  /* 23748 */ "POPCNT_I8x16_S\0"
  /* 23763 */ "GE_U_I8x16_S\0"
  /* 23776 */ "LE_U_I8x16_S\0"
  /* 23789 */ "MIN_U_I8x16_S\0"
  /* 23803 */ "AVGR_U_I8x16_S\0"
  /* 23818 */ "SHR_U_I8x16_S\0"
  /* 23832 */ "SUB_SAT_U_I8x16_S\0"
  /* 23850 */ "ADD_SAT_U_I8x16_S\0"
  /* 23868 */ "GT_U_I8x16_S\0"
  /* 23881 */ "LT_U_I8x16_S\0"
  /* 23894 */ "NARROW_U_I8x16_S\0"
  /* 23911 */ "MAX_U_I8x16_S\0"
  /* 23925 */ "LOCAL_TEE_V128_S\0"
  /* 23942 */ "DROP_V128_S\0"
  /* 23954 */ "SELECT_V128_S\0"
  /* 23968 */ "GLOBAL_GET_V128_S\0"
  /* 23986 */ "LOCAL_GET_V128_S\0"
  /* 24003 */ "GLOBAL_SET_V128_S\0"
  /* 24021 */ "LOCAL_SET_V128_S\0"
  /* 24038 */ "COPY_V128_S\0"
  /* 24050 */ "ARGUMENT_v16i8_S\0"
  /* 24067 */ "CONST_V128_I16x8_S\0"
  /* 24086 */ "SUB_I16x8_S\0"
  /* 24098 */ "ADD_I16x8_S\0"
  /* 24110 */ "REPLACE_LANE_I16x8_S\0"
  /* 24131 */ "ALLTRUE_I16x8_S\0"
  /* 24147 */ "NEG_I16x8_S\0"
  /* 24159 */ "BITMASK_I16x8_S\0"
  /* 24175 */ "SHL_I16x8_S\0"
  /* 24187 */ "MUL_I16x8_S\0"
  /* 24199 */ "EQ_I16x8_S\0"
  /* 24210 */ "ABS_I16x8_S\0"
  /* 24222 */ "GE_S_I16x8_S\0"
  /* 24235 */ "LE_S_I16x8_S\0"
  /* 24248 */ "EXTMUL_HIGH_S_I16x8_S\0"
  /* 24270 */ "MIN_S_I16x8_S\0"
  /* 24284 */ "SHR_S_I16x8_S\0"
  /* 24298 */ "RELAXED_Q15MULR_S_I16x8_S\0"
  /* 24324 */ "SUB_SAT_S_I16x8_S\0"
  /* 24342 */ "ADD_SAT_S_I16x8_S\0"
  /* 24360 */ "Q15MULR_SAT_S_I16x8_S\0"
  /* 24382 */ "GT_S_I16x8_S\0"
  /* 24395 */ "LT_S_I16x8_S\0"
  /* 24408 */ "EXTMUL_LOW_S_I16x8_S\0"
  /* 24429 */ "NARROW_S_I16x8_S\0"
  /* 24446 */ "MAX_S_I16x8_S\0"
  /* 24460 */ "SPLAT_I16x8_S\0"
  /* 24474 */ "LANESELECT_I16x8_S\0"
  /* 24493 */ "GE_U_I16x8_S\0"
  /* 24506 */ "LE_U_I16x8_S\0"
  /* 24519 */ "EXTMUL_HIGH_U_I16x8_S\0"
  /* 24541 */ "MIN_U_I16x8_S\0"
  /* 24555 */ "AVGR_U_I16x8_S\0"
  /* 24570 */ "SHR_U_I16x8_S\0"
  /* 24584 */ "SUB_SAT_U_I16x8_S\0"
  /* 24602 */ "ADD_SAT_U_I16x8_S\0"
  /* 24620 */ "GT_U_I16x8_S\0"
  /* 24633 */ "LT_U_I16x8_S\0"
  /* 24646 */ "EXTMUL_LOW_U_I16x8_S\0"
  /* 24667 */ "NARROW_U_I16x8_S\0"
  /* 24684 */ "MAX_U_I16x8_S\0"
  /* 24698 */ "int_wasm_extadd_pairwise_signed_I16x8_S\0"
  /* 24738 */ "int_wasm_extadd_pairwise_unsigned_I16x8_S\0"
  /* 24780 */ "extend_high_s_I16x8_S\0"
  /* 24802 */ "extend_low_s_I16x8_S\0"
  /* 24823 */ "extend_high_u_I16x8_S\0"
  /* 24845 */ "extend_low_u_I16x8_S\0"
  /* 24866 */ "RELAXED_DOT_ADD_S\0"
  /* 24884 */ "AND_S\0"
  /* 24890 */ "END_S\0"
  /* 24896 */ "ATOMIC_FENCE_S\0"
  /* 24911 */ "COMPILER_FENCE_S\0"
  /* 24928 */ "DEBUG_UNREACHABLE_S\0"
  /* 24948 */ "SHUFFLE_S\0"
  /* 24958 */ "RELAXED_SWIZZLE_S\0"
  /* 24976 */ "ELSE_S\0"
  /* 24983 */ "DELEGATE_S\0"
  /* 24994 */ "ANYTRUE_S\0"
  /* 25004 */ "TABLE_SIZE_S\0"
  /* 25017 */ "LOCAL_TEE_FUNCREF_S\0"
  /* 25037 */ "TABLE_FILL_FUNCREF_S\0"
  /* 25058 */ "REF_NULL_FUNCREF_S\0"
  /* 25077 */ "REF_IS_NULL_FUNCREF_S\0"
  /* 25099 */ "DROP_FUNCREF_S\0"
  /* 25114 */ "SELECT_FUNCREF_S\0"
  /* 25131 */ "TABLE_GET_FUNCREF_S\0"
  /* 25151 */ "GLOBAL_GET_FUNCREF_S\0"
  /* 25172 */ "LOCAL_GET_FUNCREF_S\0"
  /* 25192 */ "TABLE_SET_FUNCREF_S\0"
  /* 25212 */ "GLOBAL_SET_FUNCREF_S\0"
  /* 25233 */ "LOCAL_SET_FUNCREF_S\0"
  /* 25253 */ "TABLE_GROW_FUNCREF_S\0"
  /* 25274 */ "COPY_FUNCREF_S\0"
  /* 25289 */ "LOCAL_TEE_EXTERNREF_S\0"
  /* 25311 */ "TABLE_FILL_EXTERNREF_S\0"
  /* 25334 */ "REF_NULL_EXTERNREF_S\0"
  /* 25355 */ "REF_IS_NULL_EXTERNREF_S\0"
  /* 25379 */ "DROP_EXTERNREF_S\0"
  /* 25396 */ "SELECT_EXTERNREF_S\0"
  /* 25415 */ "TABLE_GET_EXTERNREF_S\0"
  /* 25437 */ "GLOBAL_GET_EXTERNREF_S\0"
  /* 25460 */ "LOCAL_GET_EXTERNREF_S\0"
  /* 25482 */ "TABLE_SET_EXTERNREF_S\0"
  /* 25504 */ "GLOBAL_SET_EXTERNREF_S\0"
  /* 25527 */ "LOCAL_SET_EXTERNREF_S\0"
  /* 25549 */ "TABLE_GROW_EXTERNREF_S\0"
  /* 25572 */ "COPY_EXTERNREF_S\0"
  /* 25589 */ "END_IF_S\0"
  /* 25598 */ "BR_IF_S\0"
  /* 25606 */ "CATCH_S\0"
  /* 25614 */ "END_BLOCK_S\0"
  /* 25626 */ "RET_CALL_S\0"
  /* 25637 */ "CATCH_ALL_S\0"
  /* 25649 */ "END_FUNCTION_S\0"
  /* 25664 */ "FALLTHROUGH_RETURN_S\0"
  /* 25685 */ "ADJCALLSTACKDOWN_S\0"
  /* 25704 */ "NOP_S\0"
  /* 25710 */ "END_LOOP_S\0"
  /* 25721 */ "anonymous_4733DATA_DROP_S\0"
  /* 25747 */ "anonymous_4734DATA_DROP_S\0"
  /* 25773 */ "ADJCALLSTACKUP_S\0"
  /* 25790 */ "BR_S\0"
  /* 25795 */ "XOR_S\0"
  /* 25801 */ "CALL_PARAMS_S\0"
  /* 25815 */ "BR_UNLESS_S\0"
  /* 25827 */ "RET_CALL_RESULTS_S\0"
  /* 25846 */ "RELAXED_DOT_BFLOAT_S\0"
  /* 25867 */ "BITSELECT_S\0"
  /* 25879 */ "RET_CALL_INDIRECT_S\0"
  /* 25899 */ "CATCHRET_S\0"
  /* 25910 */ "CLEANUPRET_S\0"
  /* 25923 */ "RELAXED_DOT_S\0"
  /* 25937 */ "ANDNOT_S\0"
  /* 25946 */ "RETHROW_S\0"
  /* 25956 */ "TABLE_COPY_S\0"
  /* 25969 */ "END_TRY_S\0"
  /* 25979 */ "ARGUMENT_funcref_S\0"
  /* 25998 */ "ARGUMENT_externref_S\0"
  /* 26019 */ "EXTRACT_LANE_I8x16_s_S\0"
  /* 26042 */ "EXTRACT_LANE_I16x8_s_S\0"
  /* 26065 */ "EXTRACT_LANE_I8x16_u_S\0"
  /* 26088 */ "EXTRACT_LANE_I16x8_u_S\0"
  /* 26111 */ "RELAXED_DOT_BFLOAT\0"
  /* 26130 */ "G_SSUBSAT\0"
  /* 26140 */ "G_USUBSAT\0"
  /* 26150 */ "G_SADDSAT\0"
  /* 26160 */ "G_UADDSAT\0"
  /* 26170 */ "G_SSHLSAT\0"
  /* 26180 */ "G_USHLSAT\0"
  /* 26190 */ "G_SMULFIXSAT\0"
  /* 26203 */ "G_UMULFIXSAT\0"
  /* 26216 */ "G_SDIVFIXSAT\0"
  /* 26229 */ "G_UDIVFIXSAT\0"
  /* 26242 */ "G_EXTRACT\0"
  /* 26252 */ "BITSELECT\0"
  /* 26262 */ "G_SELECT\0"
  /* 26271 */ "G_BRINDIRECT\0"
  /* 26284 */ "RET_CALL_INDIRECT\0"
  /* 26302 */ "CATCHRET\0"
  /* 26311 */ "CLEANUPRET\0"
  /* 26322 */ "PATCHABLE_RET\0"
  /* 26336 */ "G_MEMSET\0"
  /* 26345 */ "PATCHABLE_FUNCTION_EXIT\0"
  /* 26369 */ "G_BRJT\0"
  /* 26376 */ "G_EXTRACT_VECTOR_ELT\0"
  /* 26397 */ "G_INSERT_VECTOR_ELT\0"
  /* 26417 */ "G_FCONSTANT\0"
  /* 26429 */ "G_CONSTANT\0"
  /* 26440 */ "STATEPOINT\0"
  /* 26451 */ "PATCHPOINT\0"
  /* 26462 */ "G_PTRTOINT\0"
  /* 26473 */ "G_FRINT\0"
  /* 26481 */ "G_INTRINSIC_LRINT\0"
  /* 26499 */ "G_FNEARBYINT\0"
  /* 26512 */ "RELAXED_DOT\0"
  /* 26524 */ "ANDNOT\0"
  /* 26531 */ "G_VASTART\0"
  /* 26541 */ "LIFETIME_START\0"
  /* 26556 */ "G_INVOKE_REGION_START\0"
  /* 26578 */ "G_INSERT\0"
  /* 26587 */ "G_FSQRT\0"
  /* 26595 */ "G_STRICT_FSQRT\0"
  /* 26610 */ "G_BITCAST\0"
  /* 26620 */ "G_ADDRSPACE_CAST\0"
  /* 26637 */ "DBG_VALUE_LIST\0"
  /* 26652 */ "G_FPEXT\0"
  /* 26660 */ "G_SEXT\0"
  /* 26667 */ "G_ASSERT_SEXT\0"
  /* 26681 */ "G_ANYEXT\0"
  /* 26690 */ "G_ZEXT\0"
  /* 26697 */ "G_ASSERT_ZEXT\0"
  /* 26711 */ "G_FDIV\0"
  /* 26718 */ "G_STRICT_FDIV\0"
  /* 26732 */ "G_SDIV\0"
  /* 26739 */ "G_UDIV\0"
  /* 26746 */ "G_FPOW\0"
  /* 26753 */ "RETHROW\0"
  /* 26761 */ "G_VECREDUCE_FMAX\0"
  /* 26778 */ "G_ATOMICRMW_FMAX\0"
  /* 26795 */ "G_VECREDUCE_SMAX\0"
  /* 26812 */ "G_SMAX\0"
  /* 26819 */ "G_VECREDUCE_UMAX\0"
  /* 26836 */ "G_UMAX\0"
  /* 26843 */ "G_ATOMICRMW_UMAX\0"
  /* 26860 */ "G_ATOMICRMW_MAX\0"
  /* 26876 */ "G_FRAME_INDEX\0"
  /* 26890 */ "G_SBFX\0"
  /* 26897 */ "G_UBFX\0"
  /* 26904 */ "G_SMULFIX\0"
  /* 26914 */ "G_UMULFIX\0"
  /* 26924 */ "G_SDIVFIX\0"
  /* 26934 */ "G_UDIVFIX\0"
  /* 26944 */ "G_MEMCPY\0"
  /* 26953 */ "TABLE_COPY\0"
  /* 26964 */ "END_TRY\0"
  /* 26972 */ "G_CTLZ\0"
  /* 26979 */ "G_CTTZ\0"
  /* 26986 */ "ARGUMENT_funcref\0"
  /* 27003 */ "ARGUMENT_externref\0"
  /* 27022 */ "EXTRACT_LANE_I8x16_s\0"
  /* 27043 */ "EXTRACT_LANE_I16x8_s\0"
  /* 27064 */ "EXTRACT_LANE_I8x16_u\0"
  /* 27085 */ "EXTRACT_LANE_I16x8_u\0"
};
#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif

extern const unsigned WebAssemblyInstrNameIndices[] = {
    11945U, 12344U, 12921U, 12580U, 12014U, 11995U, 12023U, 12180U, 
    11797U, 11812U, 11234U, 11839U, 13269U, 11117U, 26637U, 11763U, 
    11941U, 12004U, 10916U, 26959U, 11006U, 26541U, 10737U, 10839U, 
    10889U, 12688U, 12158U, 26451U, 10822U, 12890U, 11902U, 26440U, 
    11053U, 12863U, 12850U, 12958U, 26322U, 26345U, 12081U, 12137U, 
    12110U, 12040U, 12947U, 26667U, 26697U, 12418U, 10634U, 10345U, 
    12283U, 26732U, 26739U, 12310U, 12317U, 12324U, 12334U, 10715U, 
    13150U, 13113U, 11232U, 11943U, 26876U, 11127U, 12185U, 26242U, 
    13201U, 26578U, 13218U, 13065U, 10415U, 13252U, 26462U, 13177U, 
    26610U, 11160U, 10796U, 10389U, 10778U, 26481U, 12396U, 12983U, 
    10535U, 10479U, 10509U, 10520U, 10460U, 10490U, 11082U, 11066U, 
    13299U, 11853U, 11870U, 10666U, 10351U, 10721U, 10682U, 13155U, 
    13119U, 26860U, 12544U, 26843U, 12527U, 10601U, 10328U, 26778U, 
    12462U, 12719U, 12697U, 10881U, 10750U, 26271U, 26556U, 10367U, 
    13339U, 26681U, 10407U, 26429U, 26417U, 26531U, 11894U, 26660U, 
    11826U, 26690U, 12067U, 13049U, 13035U, 12060U, 13042U, 13170U, 
    12201U, 12774U, 12767U, 26262U, 12656U, 10937U, 12640U, 10860U, 
    12648U, 10929U, 12632U, 10852U, 12672U, 12664U, 11933U, 11925U, 
    26160U, 26150U, 26140U, 26130U, 26180U, 26170U, 26904U, 26914U, 
    26190U, 26203U, 26924U, 26934U, 26216U, 26229U, 10559U, 10307U, 
    12225U, 10288U, 10453U, 26711U, 12289U, 26746U, 11967U, 12909U, 
    3543U, 11887U, 3535U, 0U, 11790U, 26652U, 10379U, 11949U, 
    11958U, 12749U, 12758U, 13188U, 12433U, 13286U, 11169U, 12376U, 
    12386U, 10945U, 10960U, 12354U, 12365U, 10640U, 11985U, 12496U, 
    26812U, 12520U, 26836U, 13195U, 10769U, 10759U, 12916U, 26369U, 
    26397U, 26376U, 13080U, 26979U, 11214U, 26972U, 11196U, 12794U, 
    12741U, 11095U, 12073U, 13245U, 12560U, 26587U, 13056U, 26473U, 
    26499U, 26620U, 12934U, 10993U, 10436U, 10587U, 10314U, 12253U, 
    26718U, 12296U, 10294U, 26595U, 13002U, 13018U, 26944U, 11037U, 
    11150U, 26336U, 12680U, 10566U, 12232U, 10542U, 12208U, 26761U, 
    12445U, 10618U, 12267U, 10699U, 13135U, 13097U, 26795U, 12479U, 
    26819U, 12503U, 26890U, 26897U, 13233U, 25801U, 13370U, 25831U, 
    26302U, 25899U, 26311U, 25910U, 10901U, 24911U, 13366U, 25827U, 
    2634U, 16252U, 8035U, 22317U, 6942U, 21046U, 3745U, 17525U, 
    9704U, 24210U, 8339U, 22667U, 4055U, 17881U, 9138U, 23556U, 
    2503U, 16093U, 7882U, 22140U, 6812U, 20888U, 3592U, 17348U, 
    9608U, 24098U, 2953U, 16619U, 8224U, 22534U, 7261U, 21413U, 
    3940U, 17748U, 9052U, 23456U, 9820U, 24342U, 9210U, 23640U, 
    10048U, 24602U, 9392U, 23850U, 12615U, 25685U, 12875U, 25773U, 
    9637U, 24131U, 8272U, 22588U, 3988U, 17802U, 9081U, 23489U, 
    10695U, 26524U, 25937U, 2961U, 16629U, 7269U, 21423U, 24884U, 
    11142U, 24994U, 27003U, 25998U, 3494U, 17254U, 7800U, 22046U, 
    26986U, 25979U, 3522U, 17286U, 7828U, 22078U, 9566U, 24050U, 
    7785U, 22029U, 7813U, 22061U, 3479U, 17237U, 3507U, 17269U, 
    9010U, 23408U, 10868U, 24896U, 699U, 14131U, 5008U, 18926U, 
    1827U, 15353U, 6136U, 20148U, 1803U, 15327U, 6112U, 20122U, 
    723U, 14157U, 5032U, 18952U, 1851U, 15379U, 6160U, 20174U, 
    157U, 13545U, 4466U, 18340U, 1078U, 14544U, 5387U, 19339U, 
    177U, 13567U, 4486U, 18362U, 1125U, 14595U, 5434U, 19390U, 
    253U, 13649U, 4562U, 18444U, 1228U, 14706U, 5537U, 19501U, 
    350U, 13754U, 4659U, 18549U, 1356U, 14844U, 5665U, 19639U, 
    593U, 14015U, 4902U, 18810U, 1680U, 15192U, 5989U, 19987U, 
    81U, 13463U, 4390U, 18258U, 1002U, 14462U, 5311U, 19257U, 
    438U, 13848U, 4747U, 18643U, 1472U, 14968U, 5781U, 19763U, 
    517U, 13933U, 4826U, 18728U, 1578U, 15082U, 5887U, 19877U, 
    1098U, 14566U, 5407U, 19361U, 1201U, 14677U, 5510U, 19472U, 
    1325U, 14811U, 5634U, 19606U, 1654U, 15164U, 5963U, 19959U, 
    975U, 14433U, 5284U, 19228U, 1444U, 14938U, 5753U, 19733U, 
    1551U, 15053U, 5860U, 19848U, 204U, 13596U, 4513U, 18391U, 
    1152U, 14624U, 5461U, 19419U, 280U, 13678U, 4589U, 18473U, 
    1255U, 14735U, 5564U, 19530U, 381U, 13787U, 4690U, 18582U, 
    1387U, 14877U, 5696U, 19672U, 619U, 14043U, 4928U, 18838U, 
    1706U, 15220U, 6015U, 20015U, 108U, 13492U, 4417U, 18287U, 
    1029U, 14491U, 5338U, 19286U, 466U, 13878U, 4775U, 18673U, 
    1500U, 14998U, 5809U, 19793U, 544U, 13962U, 4853U, 18757U, 
    1605U, 15111U, 5914U, 19906U, 230U, 13624U, 4539U, 18419U, 
    1178U, 14652U, 5487U, 19447U, 306U, 13706U, 4615U, 18501U, 
    1281U, 14763U, 5590U, 19558U, 411U, 13819U, 4720U, 18614U, 
    1417U, 14909U, 5726U, 19704U, 644U, 14070U, 4953U, 18865U, 
    1731U, 15247U, 6040U, 20042U, 134U, 13520U, 4443U, 18315U, 
    1055U, 14519U, 5364U, 19314U, 493U, 13907U, 4802U, 18702U, 
    1527U, 15027U, 5836U, 19822U, 570U, 13990U, 4879U, 18785U, 
    1631U, 15139U, 5940U, 19934U, 36U, 13414U, 4345U, 18209U, 
    930U, 14384U, 5239U, 19179U, 907U, 14359U, 5216U, 19154U, 
    59U, 13439U, 4368U, 18234U, 953U, 14409U, 5262U, 19204U, 
    329U, 13731U, 4638U, 18526U, 1304U, 14788U, 5613U, 19583U, 
    10007U, 24555U, 9351U, 23803U, 9661U, 24159U, 8296U, 22616U, 
    4012U, 17830U, 9105U, 23517U, 26252U, 25867U, 11979U, 25618U, 
    12918U, 11784U, 25598U, 25790U, 2983U, 16655U, 7291U, 21449U, 
    13329U, 25815U, 12096U, 26288U, 25883U, 25630U, 11919U, 12170U, 
    25637U, 25606U, 2570U, 16174U, 7958U, 22228U, 6878U, 20968U, 
    3668U, 17436U, 3455U, 17207U, 7761U, 21999U, 2878U, 16530U, 
    7186U, 21324U, 3317U, 17045U, 7640U, 21856U, 7841U, 22093U, 
    3551U, 17301U, 9581U, 24067U, 8197U, 22503U, 3913U, 17717U, 
    9025U, 23425U, 2587U, 16195U, 6895U, 20989U, 11748U, 25572U, 
    2936U, 16598U, 7244U, 21392U, 11478U, 25274U, 3446U, 17196U, 
    7752U, 21988U, 9556U, 24038U, 3471U, 17227U, 7777U, 22019U, 
    10975U, 24928U, 11108U, 24983U, 2920U, 16578U, 8100U, 22394U, 
    7228U, 21372U, 3810U, 17602U, 3207U, 16919U, 7530U, 21730U, 
    3436U, 17184U, 7742U, 21976U, 26520U, 25931U, 11573U, 25379U, 
    2608U, 16220U, 6916U, 21014U, 11321U, 25099U, 3028U, 16710U, 
    7349U, 21519U, 9472U, 23942U, 11090U, 24976U, 10746U, 11975U, 
    25614U, 12567U, 25649U, 11777U, 25589U, 12785U, 25710U, 24890U, 
    26964U, 25969U, 3463U, 17217U, 7769U, 22009U, 2617U, 16231U, 
    8014U, 22292U, 6925U, 21025U, 3724U, 17500U, 9695U, 24199U, 
    3037U, 16721U, 8330U, 22656U, 7358U, 21530U, 4046U, 17870U, 
    9129U, 23545U, 9736U, 24248U, 8371U, 22705U, 4087U, 17919U, 
    9975U, 24519U, 8519U, 22875U, 4189U, 18035U, 9878U, 24408U, 
    8437U, 22781U, 4141U, 17981U, 10086U, 24646U, 8585U, 22951U, 
    4221U, 18071U, 7929U, 22195U, 3639U, 17403U, 27043U, 26042U, 
    27085U, 26088U, 8253U, 22567U, 3969U, 17781U, 27022U, 26019U, 
    27064U, 26065U, 3171U, 16879U, 7494U, 21690U, 3400U, 17144U, 
    7706U, 21936U, 6855U, 20941U, 3257U, 16977U, 3189U, 16899U, 
    7512U, 21710U, 3418U, 17164U, 7724U, 21956U, 2546U, 16146U, 
    7580U, 21788U, 12596U, 25664U, 2624U, 16240U, 8023U, 22303U, 
    6932U, 21034U, 3733U, 17511U, 2409U, 15987U, 6718U, 20782U, 
    2447U, 16029U, 6756U, 20824U, 2428U, 16008U, 6737U, 20803U, 
    2466U, 16050U, 6775U, 20845U, 2525U, 16119U, 7892U, 22152U, 
    6834U, 20914U, 3602U, 17360U, 9714U, 24222U, 3115U, 16811U, 
    8349U, 22679U, 7438U, 21622U, 4065U, 17893U, 9148U, 23568U, 
    9953U, 24493U, 3344U, 17076U, 8497U, 22849U, 7650U, 21868U, 
    9317U, 23763U, 11625U, 25437U, 2765U, 16399U, 7073U, 21193U, 
    11367U, 25151U, 3228U, 16944U, 7551U, 21755U, 9494U, 23968U, 
    11686U, 25504U, 2814U, 16454U, 7122U, 21248U, 11422U, 25212U, 
    3277U, 16999U, 7600U, 21810U, 9525U, 24003U, 2843U, 16487U, 
    8057U, 22343U, 7151U, 21281U, 3767U, 17551U, 9856U, 24382U, 
    3153U, 16857U, 8415U, 22755U, 7476U, 21668U, 4119U, 17955U, 
    9226U, 23658U, 10064U, 24620U, 3382U, 17122U, 8563U, 22925U, 
    7688U, 21914U, 9408U, 23868U, 3061U, 16751U, 3080U, 16772U, 
    2794U, 16432U, 2642U, 16262U, 6950U, 21056U, 2674U, 16298U, 
    6982U, 21092U, 2888U, 16542U, 7196U, 21336U, 2714U, 16342U, 
    7022U, 21136U, 7336U, 21504U, 7401U, 21581U, 7382U, 21560U, 
    7420U, 21602U, 3098U, 16792U, 3327U, 17057U, 7102U, 21226U, 
    2658U, 16280U, 6966U, 21074U, 2694U, 16320U, 7002U, 21114U, 
    2904U, 16560U, 7212U, 21354U, 2734U, 16364U, 7042U, 21158U, 
    11781U, 25593U, 9936U, 24474U, 8480U, 22830U, 4172U, 18016U, 
    9287U, 23729U, 2532U, 16128U, 7901U, 22163U, 6841U, 20923U, 
    3611U, 17371U, 9725U, 24235U, 3124U, 16822U, 8360U, 22692U, 
    7447U, 21633U, 4076U, 17906U, 9159U, 23581U, 9964U, 24506U, 
    3353U, 17087U, 8508U, 22862U, 7659U, 21879U, 9328U, 23776U, 
    2261U, 15827U, 6570U, 20622U, 666U, 14094U, 4975U, 18889U, 
    1770U, 15290U, 6079U, 20085U, 706U, 14138U, 5015U, 18933U, 
    1834U, 15360U, 6143U, 20155U, 2227U, 15789U, 6536U, 20584U, 
    1753U, 15271U, 6062U, 20066U, 1810U, 15334U, 6119U, 20129U, 
    2244U, 15808U, 6553U, 20603U, 2278U, 15846U, 6587U, 20641U, 
    683U, 14113U, 4992U, 18908U, 1787U, 15309U, 6096U, 20104U, 
    730U, 14164U, 5039U, 18959U, 1858U, 15386U, 6167U, 20181U, 
    2119U, 15673U, 6428U, 20468U, 1960U, 15498U, 6269U, 20293U, 
    832U, 14276U, 5141U, 19071U, 2143U, 15699U, 6452U, 20494U, 
    1984U, 15524U, 6293U, 20319U, 856U, 14302U, 5165U, 19097U, 
    9U, 13383U, 4318U, 18178U, 880U, 14328U, 5189U, 19123U, 
    164U, 13552U, 4473U, 18347U, 1085U, 14551U, 5394U, 19346U, 
    2078U, 15628U, 6387U, 20423U, 1899U, 15431U, 6208U, 20226U, 
    771U, 14209U, 5080U, 19004U, 2008U, 15550U, 6317U, 20345U, 
    2049U, 15595U, 6358U, 20390U, 1940U, 15476U, 6249U, 20271U, 
    812U, 14254U, 5121U, 19049U, 11646U, 25460U, 2780U, 16416U, 
    7088U, 21210U, 11386U, 25172U, 3243U, 16961U, 7566U, 21772U, 
    9510U, 23986U, 11707U, 25527U, 2829U, 16471U, 7137U, 21265U, 
    11441U, 25233U, 3292U, 17016U, 7615U, 21827U, 9541U, 24021U, 
    11491U, 25289U, 2511U, 16103U, 6820U, 20898U, 11247U, 25017U, 
    2969U, 16639U, 7277U, 21433U, 9457U, 23925U, 12789U, 25714U, 
    2850U, 16496U, 8066U, 22354U, 7158U, 21290U, 3776U, 17562U, 
    9867U, 24395U, 3162U, 16868U, 8426U, 22768U, 7485U, 21679U, 
    4130U, 17968U, 9237U, 23671U, 10075U, 24633U, 3391U, 17133U, 
    8574U, 22938U, 7697U, 21925U, 9419U, 23881U, 7881U, 22139U, 
    3591U, 17347U, 2928U, 16588U, 8124U, 22420U, 7236U, 21382U, 
    3834U, 17628U, 9912U, 24446U, 8456U, 22802U, 9263U, 23701U, 
    10120U, 24684U, 8604U, 22972U, 9445U, 23911U, 2354U, 15928U, 
    6663U, 20723U, 746U, 14182U, 5055U, 18977U, 1874U, 15404U, 
    6183U, 20199U, 2600U, 16210U, 7993U, 22267U, 6908U, 21004U, 
    3703U, 17475U, 9756U, 24270U, 8391U, 22727U, 9170U, 23594U, 
    9995U, 24541U, 8539U, 22897U, 9339U, 23789U, 2579U, 16185U, 
    7969U, 22241U, 6887U, 20979U, 3679U, 17449U, 9685U, 24187U, 
    3020U, 16700U, 8320U, 22644U, 7328U, 21494U, 4036U, 17858U, 
    9897U, 24429U, 9248U, 23684U, 10105U, 24667U, 9430U, 23894U, 
    2866U, 16516U, 8086U, 22378U, 7174U, 21310U, 3796U, 17586U, 
    2562U, 16164U, 7948U, 22216U, 6870U, 20958U, 3658U, 17424U, 
    9651U, 24147U, 8286U, 22604U, 4002U, 17818U, 9095U, 23505U, 
    2539U, 16137U, 7920U, 22184U, 6848U, 20932U, 3630U, 17392U, 
    9628U, 24120U, 2996U, 16670U, 8244U, 22556U, 7304U, 21464U, 
    3960U, 17770U, 9072U, 23478U, 7880U, 22138U, 3590U, 17346U, 
    12781U, 25704U, 26527U, 25940U, 13062U, 3045U, 16731U, 7366U, 
    21540U, 25796U, 8134U, 22432U, 3844U, 17640U, 8003U, 22279U, 
    3713U, 17487U, 3306U, 17032U, 7629U, 21843U, 9304U, 23748U, 
    9836U, 24360U, 11551U, 25355U, 11301U, 25077U, 11532U, 25334U, 
    11284U, 25058U, 26512U, 10650U, 24866U, 26111U, 25846U, 25923U, 
    9780U, 24298U, 11021U, 24958U, 3133U, 16833U, 7456U, 21644U, 
    3362U, 17098U, 7668U, 21890U, 7910U, 22174U, 3620U, 17382U, 
    9618U, 24110U, 8234U, 22546U, 3950U, 17760U, 9062U, 23468U, 
    26753U, 25946U, 12608U, 25676U, 12101U, 26284U, 25879U, 25626U, 
    3011U, 16689U, 7319U, 21483U, 3052U, 16740U, 7373U, 21549U, 
    11588U, 25396U, 2754U, 16386U, 7062U, 21180U, 11334U, 25114U, 
    3217U, 16931U, 7540U, 21742U, 9482U, 23954U, 9675U, 24175U, 
    3003U, 16679U, 8310U, 22632U, 7311U, 21473U, 4026U, 17846U, 
    9119U, 23533U, 9768U, 24284U, 3143U, 16845U, 8403U, 22741U, 
    7466U, 21656U, 4107U, 17941U, 9182U, 23608U, 10020U, 24570U, 
    3372U, 17110U, 8551U, 22911U, 7678U, 21902U, 4209U, 18057U, 
    9364U, 23818U, 11013U, 24948U, 8110U, 22406U, 3820U, 17614U, 
    7979U, 22253U, 3689U, 17461U, 8045U, 22329U, 3755U, 17537U, 
    9924U, 24460U, 8468U, 22816U, 4160U, 18002U, 9275U, 23715U, 
    2857U, 16505U, 8075U, 22365U, 7165U, 21299U, 3785U, 17573U, 
    43U, 13421U, 4352U, 18216U, 937U, 14391U, 5246U, 19186U, 
    914U, 14366U, 5223U, 19161U, 66U, 13446U, 4375U, 18241U, 
    960U, 14416U, 5269U, 19211U, 22U, 13398U, 4331U, 18193U, 
    893U, 14343U, 5202U, 19138U, 336U, 13738U, 4645U, 18533U, 
    1311U, 14795U, 5620U, 19590U, 2098U, 15650U, 6407U, 20445U, 
    1919U, 15453U, 6228U, 20248U, 791U, 14231U, 5100U, 19026U, 
    2028U, 15572U, 6337U, 20367U, 2063U, 15611U, 6372U, 20406U, 
    2485U, 16071U, 7858U, 22112U, 6794U, 20866U, 3568U, 17320U, 
    9598U, 24086U, 2945U, 16609U, 8214U, 22522U, 7253U, 21403U, 
    3930U, 17736U, 9042U, 23444U, 9804U, 24324U, 9194U, 23622U, 
    10032U, 24584U, 9376U, 23832U, 11029U, 24966U, 26953U, 25956U, 
    11511U, 25311U, 11265U, 25037U, 11605U, 25415U, 11349U, 25131U, 
    11727U, 25549U, 11459U, 25253U, 11666U, 25482U, 11404U, 25192U, 
    11185U, 25004U, 11497U, 25295U, 2517U, 16109U, 6826U, 20904U, 
    11253U, 25023U, 2975U, 16645U, 7283U, 21439U, 9463U, 23931U, 
    26755U, 25948U, 2493U, 16081U, 7868U, 22124U, 6802U, 20876U, 
    3578U, 17332U, 26968U, 25973U, 10981U, 24934U, 13109U, 3044U, 
    16730U, 7365U, 21539U, 25795U, 2324U, 15896U, 2167U, 15725U, 
    6633U, 20691U, 6476U, 20520U, 12802U, 25721U, 2379U, 15955U, 
    2197U, 15757U, 2294U, 15864U, 12826U, 25747U, 6688U, 20750U, 
    6506U, 20552U, 6603U, 20659U, 3855U, 17653U, 3875U, 17675U, 
    8145U, 22445U, 10210U, 24780U, 8852U, 23234U, 4240U, 18092U, 
    10249U, 24823U, 8948U, 23340U, 4279U, 18135U, 10230U, 24802U, 
    8895U, 23281U, 4260U, 18114U, 10269U, 24845U, 8991U, 23387U, 
    4299U, 18157U, 8914U, 23302U, 8931U, 23321U, 10132U, 24698U, 
    8652U, 23024U, 10170U, 24738U, 8728U, 23104U, 8616U, 22986U, 
    8768U, 23146U, 8690U, 23064U, 8809U, 23189U, 3895U, 17697U, 
    8163U, 22465U, 8872U, 23256U, 8968U, 23362U, 8180U, 22484U, 
};

static inline void InitWebAssemblyMCInstrInfo(MCInstrInfo *II) {
  II->InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1752);
}

} // end namespace llvm
#endif // GET_INSTRINFO_MC_DESC

#ifdef GET_INSTRINFO_HEADER
#undef GET_INSTRINFO_HEADER
namespace llvm {
struct WebAssemblyGenInstrInfo : public TargetInstrInfo {
  explicit WebAssemblyGenInstrInfo(unsigned CFSetupOpcode = ~0u, unsigned CFDestroyOpcode = ~0u, unsigned CatchRetOpcode = ~0u, unsigned ReturnOpcode = ~0u);
  ~WebAssemblyGenInstrInfo() override = default;

};
} // end namespace llvm
#endif // GET_INSTRINFO_HEADER

#ifdef GET_INSTRINFO_HELPER_DECLS
#undef GET_INSTRINFO_HELPER_DECLS


#endif // GET_INSTRINFO_HELPER_DECLS

#ifdef GET_INSTRINFO_HELPERS
#undef GET_INSTRINFO_HELPERS

#endif // GET_INSTRINFO_HELPERS

#ifdef GET_INSTRINFO_CTOR_DTOR
#undef GET_INSTRINFO_CTOR_DTOR
namespace llvm {
extern const MCInstrDesc WebAssemblyInsts[];
extern const unsigned WebAssemblyInstrNameIndices[];
extern const char WebAssemblyInstrNameData[];
WebAssemblyGenInstrInfo::WebAssemblyGenInstrInfo(unsigned CFSetupOpcode, unsigned CFDestroyOpcode, unsigned CatchRetOpcode, unsigned ReturnOpcode)
  : TargetInstrInfo(CFSetupOpcode, CFDestroyOpcode, CatchRetOpcode, ReturnOpcode) {
  InitMCInstrInfo(WebAssemblyInsts, WebAssemblyInstrNameIndices, WebAssemblyInstrNameData, nullptr, nullptr, 1752);
}
} // end namespace llvm
#endif // GET_INSTRINFO_CTOR_DTOR

#ifdef GET_INSTRINFO_OPERAND_ENUM
#undef GET_INSTRINFO_OPERAND_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpName {
enum {
  addr = 3,
  count = 9,
  dst = 0,
  exp = 5,
  idx = 7,
  new_ = 6,
  off = 2,
  p2align = 1,
  timeout = 10,
  val = 4,
  vec = 8,
  OPERAND_LAST
};
} // end namespace OpName
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_OPERAND_ENUM

#ifdef GET_INSTRINFO_NAMED_OPS
#undef GET_INSTRINFO_NAMED_OPS
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
int16_t getNamedOperandIdx(uint16_t Opcode, uint16_t NamedIdx) {
  static const int16_t OperandMap [][11] = {
{0, 1, 2, 3, -1, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, 4, -1, -1, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, 5, -1, -1, -1, -1, },
{0, 1, 2, 3, -1, 4, -1, -1, -1, -1, 5, },
{0, 1, 2, 3, -1, -1, -1, -1, -1, 4, -1, },
{0, 1, 2, 4, -1, -1, -1, 3, 5, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, 3, -1, -1, -1, -1, -1, -1, },
{-1, 0, 1, 2, -1, -1, -1, -1, 3, -1, -1, },
{-1, 0, 1, 3, -1, -1, -1, 2, 4, -1, -1, },
{-1, 0, 1, -1, -1, -1, -1, 2, -1, -1, -1, },
};
  switch(Opcode) {
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64:
  case WebAssembly::ATOMIC_LOAD_I32_A32:
  case WebAssembly::ATOMIC_LOAD_I32_A64:
  case WebAssembly::ATOMIC_LOAD_I64_A32:
  case WebAssembly::ATOMIC_LOAD_I64_A64:
  case WebAssembly::LOAD16_SPLAT_A32:
  case WebAssembly::LOAD16_SPLAT_A64:
  case WebAssembly::LOAD16_S_I32_A32:
  case WebAssembly::LOAD16_S_I32_A64:
  case WebAssembly::LOAD16_S_I64_A32:
  case WebAssembly::LOAD16_S_I64_A64:
  case WebAssembly::LOAD16_U_I32_A32:
  case WebAssembly::LOAD16_U_I32_A64:
  case WebAssembly::LOAD16_U_I64_A32:
  case WebAssembly::LOAD16_U_I64_A64:
  case WebAssembly::LOAD32_SPLAT_A32:
  case WebAssembly::LOAD32_SPLAT_A64:
  case WebAssembly::LOAD32_S_I64_A32:
  case WebAssembly::LOAD32_S_I64_A64:
  case WebAssembly::LOAD32_U_I64_A32:
  case WebAssembly::LOAD32_U_I64_A64:
  case WebAssembly::LOAD64_SPLAT_A32:
  case WebAssembly::LOAD64_SPLAT_A64:
  case WebAssembly::LOAD8_SPLAT_A32:
  case WebAssembly::LOAD8_SPLAT_A64:
  case WebAssembly::LOAD8_S_I32_A32:
  case WebAssembly::LOAD8_S_I32_A64:
  case WebAssembly::LOAD8_S_I64_A32:
  case WebAssembly::LOAD8_S_I64_A64:
  case WebAssembly::LOAD8_U_I32_A32:
  case WebAssembly::LOAD8_U_I32_A64:
  case WebAssembly::LOAD8_U_I64_A32:
  case WebAssembly::LOAD8_U_I64_A64:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64:
  case WebAssembly::LOAD_F32_A32:
  case WebAssembly::LOAD_F32_A64:
  case WebAssembly::LOAD_F64_A32:
  case WebAssembly::LOAD_F64_A64:
  case WebAssembly::LOAD_I32_A32:
  case WebAssembly::LOAD_I32_A64:
  case WebAssembly::LOAD_I64_A32:
  case WebAssembly::LOAD_I64_A64:
  case WebAssembly::LOAD_V128_A32:
  case WebAssembly::LOAD_V128_A64:
  case WebAssembly::LOAD_ZERO_I32x4_A32:
  case WebAssembly::LOAD_ZERO_I32x4_A64:
  case WebAssembly::LOAD_ZERO_I64x2_A32:
  case WebAssembly::LOAD_ZERO_I64x2_A64:
    return OperandMap[0][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64:
    return OperandMap[1][NamedIdx];
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64:
    return OperandMap[2][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64:
    return OperandMap[3][NamedIdx];
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64:
    return OperandMap[4][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32:
  case WebAssembly::LOAD_LANE_I16x8_A64:
  case WebAssembly::LOAD_LANE_I32x4_A32:
  case WebAssembly::LOAD_LANE_I32x4_A64:
  case WebAssembly::LOAD_LANE_I64x2_A32:
  case WebAssembly::LOAD_LANE_I64x2_A64:
  case WebAssembly::LOAD_LANE_I8x16_A32:
  case WebAssembly::LOAD_LANE_I8x16_A64:
  case WebAssembly::STORE_LANE_I16x8_A64:
  case WebAssembly::STORE_LANE_I32x4_A64:
  case WebAssembly::STORE_LANE_I64x2_A64:
  case WebAssembly::STORE_LANE_I8x16_A64:
    return OperandMap[5][NamedIdx];
  case WebAssembly::ATOMIC_LOAD16_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD16_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD32_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD8_U_I64_A64_S:
  case WebAssembly::ATOMIC_LOAD_I32_A32_S:
  case WebAssembly::ATOMIC_LOAD_I32_A64_S:
  case WebAssembly::ATOMIC_LOAD_I64_A32_S:
  case WebAssembly::ATOMIC_LOAD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_ADD_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_AND_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_OR_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_SUB_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I32_A64_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A32_S:
  case WebAssembly::ATOMIC_RMW_XOR_I64_A64_S:
  case WebAssembly::ATOMIC_STORE16_I32_A32_S:
  case WebAssembly::ATOMIC_STORE16_I32_A64_S:
  case WebAssembly::ATOMIC_STORE16_I64_A32_S:
  case WebAssembly::ATOMIC_STORE16_I64_A64_S:
  case WebAssembly::ATOMIC_STORE32_I64_A32_S:
  case WebAssembly::ATOMIC_STORE32_I64_A64_S:
  case WebAssembly::ATOMIC_STORE8_I32_A32_S:
  case WebAssembly::ATOMIC_STORE8_I32_A64_S:
  case WebAssembly::ATOMIC_STORE8_I64_A32_S:
  case WebAssembly::ATOMIC_STORE8_I64_A64_S:
  case WebAssembly::ATOMIC_STORE_I32_A32_S:
  case WebAssembly::ATOMIC_STORE_I32_A64_S:
  case WebAssembly::ATOMIC_STORE_I64_A32_S:
  case WebAssembly::ATOMIC_STORE_I64_A64_S:
  case WebAssembly::LOAD16_SPLAT_A32_S:
  case WebAssembly::LOAD16_SPLAT_A64_S:
  case WebAssembly::LOAD16_S_I32_A32_S:
  case WebAssembly::LOAD16_S_I32_A64_S:
  case WebAssembly::LOAD16_S_I64_A32_S:
  case WebAssembly::LOAD16_S_I64_A64_S:
  case WebAssembly::LOAD16_U_I32_A32_S:
  case WebAssembly::LOAD16_U_I32_A64_S:
  case WebAssembly::LOAD16_U_I64_A32_S:
  case WebAssembly::LOAD16_U_I64_A64_S:
  case WebAssembly::LOAD32_SPLAT_A32_S:
  case WebAssembly::LOAD32_SPLAT_A64_S:
  case WebAssembly::LOAD32_S_I64_A32_S:
  case WebAssembly::LOAD32_S_I64_A64_S:
  case WebAssembly::LOAD32_U_I64_A32_S:
  case WebAssembly::LOAD32_U_I64_A64_S:
  case WebAssembly::LOAD64_SPLAT_A32_S:
  case WebAssembly::LOAD64_SPLAT_A64_S:
  case WebAssembly::LOAD8_SPLAT_A32_S:
  case WebAssembly::LOAD8_SPLAT_A64_S:
  case WebAssembly::LOAD8_S_I32_A32_S:
  case WebAssembly::LOAD8_S_I32_A64_S:
  case WebAssembly::LOAD8_S_I64_A32_S:
  case WebAssembly::LOAD8_S_I64_A64_S:
  case WebAssembly::LOAD8_U_I32_A32_S:
  case WebAssembly::LOAD8_U_I32_A64_S:
  case WebAssembly::LOAD8_U_I64_A32_S:
  case WebAssembly::LOAD8_U_I64_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_S_I64x2_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I16x8_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I32x4_A64_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A32_S:
  case WebAssembly::LOAD_EXTEND_U_I64x2_A64_S:
  case WebAssembly::LOAD_F32_A32_S:
  case WebAssembly::LOAD_F32_A64_S:
  case WebAssembly::LOAD_F64_A32_S:
  case WebAssembly::LOAD_F64_A64_S:
  case WebAssembly::LOAD_I32_A32_S:
  case WebAssembly::LOAD_I32_A64_S:
  case WebAssembly::LOAD_I64_A32_S:
  case WebAssembly::LOAD_I64_A64_S:
  case WebAssembly::LOAD_V128_A32_S:
  case WebAssembly::LOAD_V128_A64_S:
  case WebAssembly::LOAD_ZERO_I32x4_A32_S:
  case WebAssembly::LOAD_ZERO_I32x4_A64_S:
  case WebAssembly::LOAD_ZERO_I64x2_A32_S:
  case WebAssembly::LOAD_ZERO_I64x2_A64_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S:
  case WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S:
  case WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S:
  case WebAssembly::STORE16_I32_A32_S:
  case WebAssembly::STORE16_I32_A64_S:
  case WebAssembly::STORE16_I64_A32_S:
  case WebAssembly::STORE16_I64_A64_S:
  case WebAssembly::STORE32_I64_A32_S:
  case WebAssembly::STORE32_I64_A64_S:
  case WebAssembly::STORE8_I32_A32_S:
  case WebAssembly::STORE8_I32_A64_S:
  case WebAssembly::STORE8_I64_A32_S:
  case WebAssembly::STORE8_I64_A64_S:
  case WebAssembly::STORE_F32_A32_S:
  case WebAssembly::STORE_F32_A64_S:
  case WebAssembly::STORE_F64_A32_S:
  case WebAssembly::STORE_F64_A64_S:
  case WebAssembly::STORE_I32_A32_S:
  case WebAssembly::STORE_I32_A64_S:
  case WebAssembly::STORE_I64_A32_S:
  case WebAssembly::STORE_I64_A64_S:
  case WebAssembly::STORE_V128_A32_S:
  case WebAssembly::STORE_V128_A64_S:
    return OperandMap[6][NamedIdx];
  case WebAssembly::ATOMIC_STORE16_I32_A32:
  case WebAssembly::ATOMIC_STORE16_I32_A64:
  case WebAssembly::ATOMIC_STORE16_I64_A32:
  case WebAssembly::ATOMIC_STORE16_I64_A64:
  case WebAssembly::ATOMIC_STORE32_I64_A32:
  case WebAssembly::ATOMIC_STORE32_I64_A64:
  case WebAssembly::ATOMIC_STORE8_I32_A32:
  case WebAssembly::ATOMIC_STORE8_I32_A64:
  case WebAssembly::ATOMIC_STORE8_I64_A32:
  case WebAssembly::ATOMIC_STORE8_I64_A64:
  case WebAssembly::ATOMIC_STORE_I32_A32:
  case WebAssembly::ATOMIC_STORE_I32_A64:
  case WebAssembly::ATOMIC_STORE_I64_A32:
  case WebAssembly::ATOMIC_STORE_I64_A64:
  case WebAssembly::STORE16_I32_A32:
  case WebAssembly::STORE16_I32_A64:
  case WebAssembly::STORE16_I64_A32:
  case WebAssembly::STORE16_I64_A64:
  case WebAssembly::STORE32_I64_A32:
  case WebAssembly::STORE32_I64_A64:
  case WebAssembly::STORE8_I32_A32:
  case WebAssembly::STORE8_I32_A64:
  case WebAssembly::STORE8_I64_A32:
  case WebAssembly::STORE8_I64_A64:
  case WebAssembly::STORE_F32_A32:
  case WebAssembly::STORE_F32_A64:
  case WebAssembly::STORE_F64_A32:
  case WebAssembly::STORE_F64_A64:
  case WebAssembly::STORE_I32_A32:
  case WebAssembly::STORE_I32_A64:
  case WebAssembly::STORE_I64_A32:
  case WebAssembly::STORE_I64_A64:
    return OperandMap[7][NamedIdx];
  case WebAssembly::STORE_V128_A32:
  case WebAssembly::STORE_V128_A64:
    return OperandMap[8][NamedIdx];
  case WebAssembly::STORE_LANE_I16x8_A32:
  case WebAssembly::STORE_LANE_I32x4_A32:
  case WebAssembly::STORE_LANE_I64x2_A32:
  case WebAssembly::STORE_LANE_I8x16_A32:
    return OperandMap[9][NamedIdx];
  case WebAssembly::LOAD_LANE_I16x8_A32_S:
  case WebAssembly::LOAD_LANE_I16x8_A64_S:
  case WebAssembly::LOAD_LANE_I32x4_A32_S:
  case WebAssembly::LOAD_LANE_I32x4_A64_S:
  case WebAssembly::LOAD_LANE_I64x2_A32_S:
  case WebAssembly::LOAD_LANE_I64x2_A64_S:
  case WebAssembly::LOAD_LANE_I8x16_A32_S:
  case WebAssembly::LOAD_LANE_I8x16_A64_S:
  case WebAssembly::STORE_LANE_I16x8_A32_S:
  case WebAssembly::STORE_LANE_I16x8_A64_S:
  case WebAssembly::STORE_LANE_I32x4_A32_S:
  case WebAssembly::STORE_LANE_I32x4_A64_S:
  case WebAssembly::STORE_LANE_I64x2_A32_S:
  case WebAssembly::STORE_LANE_I64x2_A64_S:
  case WebAssembly::STORE_LANE_I8x16_A32_S:
  case WebAssembly::STORE_LANE_I8x16_A64_S:
    return OperandMap[10][NamedIdx];
  default: return -1;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif //GET_INSTRINFO_NAMED_OPS

#ifdef GET_INSTRINFO_OPERAND_TYPES_ENUM
#undef GET_INSTRINFO_OPERAND_TYPES_ENUM
namespace llvm {
namespace WebAssembly {
namespace OpTypes {
enum OperandType {
  P2Align = 0,
  Signature = 1,
  TypeIndex = 2,
  bb_op = 3,
  brlist = 4,
  f32imm = 5,
  f32imm_op = 6,
  f64imm = 7,
  f64imm_op = 8,
  function32_op = 9,
  global_op32 = 10,
  global_op64 = 11,
  i16imm = 12,
  i1imm = 13,
  i32imm = 14,
  i32imm_op = 15,
  i64imm = 16,
  i64imm_op = 17,
  i8imm = 18,
  local_op = 19,
  offset32_op = 20,
  offset64_op = 21,
  ptype0 = 22,
  ptype1 = 23,
  ptype2 = 24,
  ptype3 = 25,
  ptype4 = 26,
  ptype5 = 27,
  table32_op = 28,
  tag_op = 29,
  type0 = 30,
  type1 = 31,
  type2 = 32,
  type3 = 33,
  type4 = 34,
  type5 = 35,
  untyped_imm_0 = 36,
  vec_i16imm_op = 37,
  vec_i32imm_op = 38,
  vec_i64imm_op = 39,
  vec_i8imm_op = 40,
  EXTERNREF = 41,
  F32 = 42,
  F64 = 43,
  FUNCREF = 44,
  I32 = 45,
  I64 = 46,
  V128 = 47,
  OPERAND_TYPE_LIST_END
};
} // end namespace OpTypes
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPES_ENUM

#ifdef GET_INSTRINFO_OPERAND_TYPE
#undef GET_INSTRINFO_OPERAND_TYPE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getOperandType(uint16_t Opcode, uint16_t OpIdx) {
  static const uint16_t Offsets[] = {
    /* PHI */
    0,
    /* INLINEASM */
    1,
    /* INLINEASM_BR */
    1,
    /* CFI_INSTRUCTION */
    1,
    /* EH_LABEL */
    2,
    /* GC_LABEL */
    3,
    /* ANNOTATION_LABEL */
    4,
    /* KILL */
    5,
    /* EXTRACT_SUBREG */
    5,
    /* INSERT_SUBREG */
    8,
    /* IMPLICIT_DEF */
    12,
    /* SUBREG_TO_REG */
    13,
    /* COPY_TO_REGCLASS */
    17,
    /* DBG_VALUE */
    20,
    /* DBG_VALUE_LIST */
    20,
    /* DBG_INSTR_REF */
    20,
    /* DBG_PHI */
    20,
    /* DBG_LABEL */
    20,
    /* REG_SEQUENCE */
    21,
    /* COPY */
    23,
    /* BUNDLE */
    25,
    /* LIFETIME_START */
    25,
    /* LIFETIME_END */
    26,
    /* PSEUDO_PROBE */
    27,
    /* ARITH_FENCE */
    31,
    /* STACKMAP */
    33,
    /* FENTRY_CALL */
    35,
    /* PATCHPOINT */
    35,
    /* LOAD_STACK_GUARD */
    41,
    /* PREALLOCATED_SETUP */
    42,
    /* PREALLOCATED_ARG */
    43,
    /* STATEPOINT */
    46,
    /* LOCAL_ESCAPE */
    46,
    /* FAULTING_OP */
    48,
    /* PATCHABLE_OP */
    49,
    /* PATCHABLE_FUNCTION_ENTER */
    49,
    /* PATCHABLE_RET */
    49,
    /* PATCHABLE_FUNCTION_EXIT */
    49,
    /* PATCHABLE_TAIL_CALL */
    49,
    /* PATCHABLE_EVENT_CALL */
    49,
    /* PATCHABLE_TYPED_EVENT_CALL */
    51,
    /* ICALL_BRANCH_FUNNEL */
    54,
    /* MEMBARRIER */
    54,
    /* G_ASSERT_SEXT */
    54,
    /* G_ASSERT_ZEXT */
    57,
    /* G_ASSERT_ALIGN */
    60,
    /* G_ADD */
    63,
    /* G_SUB */
    66,
    /* G_MUL */
    69,
    /* G_SDIV */
    72,
    /* G_UDIV */
    75,
    /* G_SREM */
    78,
    /* G_UREM */
    81,
    /* G_SDIVREM */
    84,
    /* G_UDIVREM */
    88,
    /* G_AND */
    92,
    /* G_OR */
    95,
    /* G_XOR */
    98,
    /* G_IMPLICIT_DEF */
    101,
    /* G_PHI */
    102,
    /* G_FRAME_INDEX */
    103,
    /* G_GLOBAL_VALUE */
    105,
    /* G_CONSTANT_POOL */
    107,
    /* G_EXTRACT */
    109,
    /* G_UNMERGE_VALUES */
    112,
    /* G_INSERT */
    114,
    /* G_MERGE_VALUES */
    118,
    /* G_BUILD_VECTOR */
    120,
    /* G_BUILD_VECTOR_TRUNC */
    122,
    /* G_CONCAT_VECTORS */
    124,
    /* G_PTRTOINT */
    126,
    /* G_INTTOPTR */
    128,
    /* G_BITCAST */
    130,
    /* G_FREEZE */
    132,
    /* G_INTRINSIC_FPTRUNC_ROUND */
    134,
    /* G_INTRINSIC_TRUNC */
    137,
    /* G_INTRINSIC_ROUND */
    139,
    /* G_INTRINSIC_LRINT */
    141,
    /* G_INTRINSIC_ROUNDEVEN */
    143,
    /* G_READCYCLECOUNTER */
    145,
    /* G_LOAD */
    146,
    /* G_SEXTLOAD */
    148,
    /* G_ZEXTLOAD */
    150,
    /* G_INDEXED_LOAD */
    152,
    /* G_INDEXED_SEXTLOAD */
    157,
    /* G_INDEXED_ZEXTLOAD */
    162,
    /* G_STORE */
    167,
    /* G_INDEXED_STORE */
    169,
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    174,
    /* G_ATOMIC_CMPXCHG */
    179,
    /* G_ATOMICRMW_XCHG */
    183,
    /* G_ATOMICRMW_ADD */
    186,
    /* G_ATOMICRMW_SUB */
    189,
    /* G_ATOMICRMW_AND */
    192,
    /* G_ATOMICRMW_NAND */
    195,
    /* G_ATOMICRMW_OR */
    198,
    /* G_ATOMICRMW_XOR */
    201,
    /* G_ATOMICRMW_MAX */
    204,
    /* G_ATOMICRMW_MIN */
    207,
    /* G_ATOMICRMW_UMAX */
    210,
    /* G_ATOMICRMW_UMIN */
    213,
    /* G_ATOMICRMW_FADD */
    216,
    /* G_ATOMICRMW_FSUB */
    219,
    /* G_ATOMICRMW_FMAX */
    222,
    /* G_ATOMICRMW_FMIN */
    225,
    /* G_ATOMICRMW_UINC_WRAP */
    228,
    /* G_ATOMICRMW_UDEC_WRAP */
    231,
    /* G_FENCE */
    234,
    /* G_BRCOND */
    236,
    /* G_BRINDIRECT */
    238,
    /* G_INVOKE_REGION_START */
    239,
    /* G_INTRINSIC */
    239,
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    240,
    /* G_ANYEXT */
    241,
    /* G_TRUNC */
    243,
    /* G_CONSTANT */
    245,
    /* G_FCONSTANT */
    247,
    /* G_VASTART */
    249,
    /* G_VAARG */
    250,
    /* G_SEXT */
    253,
    /* G_SEXT_INREG */
    255,
    /* G_ZEXT */
    258,
    /* G_SHL */
    260,
    /* G_LSHR */
    263,
    /* G_ASHR */
    266,
    /* G_FSHL */
    269,
    /* G_FSHR */
    273,
    /* G_ROTR */
    277,
    /* G_ROTL */
    280,
    /* G_ICMP */
    283,
    /* G_FCMP */
    287,
    /* G_SELECT */
    291,
    /* G_UADDO */
    295,
    /* G_UADDE */
    299,
    /* G_USUBO */
    304,
    /* G_USUBE */
    308,
    /* G_SADDO */
    313,
    /* G_SADDE */
    317,
    /* G_SSUBO */
    322,
    /* G_SSUBE */
    326,
    /* G_UMULO */
    331,
    /* G_SMULO */
    335,
    /* G_UMULH */
    339,
    /* G_SMULH */
    342,
    /* G_UADDSAT */
    345,
    /* G_SADDSAT */
    348,
    /* G_USUBSAT */
    351,
    /* G_SSUBSAT */
    354,
    /* G_USHLSAT */
    357,
    /* G_SSHLSAT */
    360,
    /* G_SMULFIX */
    363,
    /* G_UMULFIX */
    367,
    /* G_SMULFIXSAT */
    371,
    /* G_UMULFIXSAT */
    375,
    /* G_SDIVFIX */
    379,
    /* G_UDIVFIX */
    383,
    /* G_SDIVFIXSAT */
    387,
    /* G_UDIVFIXSAT */
    391,
    /* G_FADD */
    395,
    /* G_FSUB */
    398,
    /* G_FMUL */
    401,
    /* G_FMA */
    404,
    /* G_FMAD */
    408,
    /* G_FDIV */
    412,
    /* G_FREM */
    415,
    /* G_FPOW */
    418,
    /* G_FPOWI */
    421,
    /* G_FEXP */
    424,
    /* G_FEXP2 */
    426,
    /* G_FLOG */
    428,
    /* G_FLOG2 */
    430,
    /* G_FLOG10 */
    432,
    /* G_FNEG */
    434,
    /* G_FPEXT */
    436,
    /* G_FPTRUNC */
    438,
    /* G_FPTOSI */
    440,
    /* G_FPTOUI */
    442,
    /* G_SITOFP */
    444,
    /* G_UITOFP */
    446,
    /* G_FABS */
    448,
    /* G_FCOPYSIGN */
    450,
    /* G_IS_FPCLASS */
    453,
    /* G_FCANONICALIZE */
    456,
    /* G_FMINNUM */
    458,
    /* G_FMAXNUM */
    461,
    /* G_FMINNUM_IEEE */
    464,
    /* G_FMAXNUM_IEEE */
    467,
    /* G_FMINIMUM */
    470,
    /* G_FMAXIMUM */
    473,
    /* G_PTR_ADD */
    476,
    /* G_PTRMASK */
    479,
    /* G_SMIN */
    482,
    /* G_SMAX */
    485,
    /* G_UMIN */
    488,
    /* G_UMAX */
    491,
    /* G_ABS */
    494,
    /* G_LROUND */
    496,
    /* G_LLROUND */
    498,
    /* G_BR */
    500,
    /* G_BRJT */
    501,
    /* G_INSERT_VECTOR_ELT */
    504,
    /* G_EXTRACT_VECTOR_ELT */
    508,
    /* G_SHUFFLE_VECTOR */
    511,
    /* G_CTTZ */
    515,
    /* G_CTTZ_ZERO_UNDEF */
    517,
    /* G_CTLZ */
    519,
    /* G_CTLZ_ZERO_UNDEF */
    521,
    /* G_CTPOP */
    523,
    /* G_BSWAP */
    525,
    /* G_BITREVERSE */
    527,
    /* G_FCEIL */
    529,
    /* G_FCOS */
    531,
    /* G_FSIN */
    533,
    /* G_FSQRT */
    535,
    /* G_FFLOOR */
    537,
    /* G_FRINT */
    539,
    /* G_FNEARBYINT */
    541,
    /* G_ADDRSPACE_CAST */
    543,
    /* G_BLOCK_ADDR */
    545,
    /* G_JUMP_TABLE */
    547,
    /* G_DYN_STACKALLOC */
    549,
    /* G_STRICT_FADD */
    552,
    /* G_STRICT_FSUB */
    555,
    /* G_STRICT_FMUL */
    558,
    /* G_STRICT_FDIV */
    561,
    /* G_STRICT_FREM */
    564,
    /* G_STRICT_FMA */
    567,
    /* G_STRICT_FSQRT */
    571,
    /* G_READ_REGISTER */
    573,
    /* G_WRITE_REGISTER */
    575,
    /* G_MEMCPY */
    577,
    /* G_MEMCPY_INLINE */
    581,
    /* G_MEMMOVE */
    584,
    /* G_MEMSET */
    588,
    /* G_BZERO */
    592,
    /* G_VECREDUCE_SEQ_FADD */
    595,
    /* G_VECREDUCE_SEQ_FMUL */
    598,
    /* G_VECREDUCE_FADD */
    601,
    /* G_VECREDUCE_FMUL */
    603,
    /* G_VECREDUCE_FMAX */
    605,
    /* G_VECREDUCE_FMIN */
    607,
    /* G_VECREDUCE_ADD */
    609,
    /* G_VECREDUCE_MUL */
    611,
    /* G_VECREDUCE_AND */
    613,
    /* G_VECREDUCE_OR */
    615,
    /* G_VECREDUCE_XOR */
    617,
    /* G_VECREDUCE_SMAX */
    619,
    /* G_VECREDUCE_SMIN */
    621,
    /* G_VECREDUCE_UMAX */
    623,
    /* G_VECREDUCE_UMIN */
    625,
    /* G_SBFX */
    627,
    /* G_UBFX */
    631,
    /* CALL_PARAMS */
    635,
    /* CALL_PARAMS_S */
    636,
    /* CALL_RESULTS */
    637,
    /* CALL_RESULTS_S */
    637,
    /* CATCHRET */
    637,
    /* CATCHRET_S */
    639,
    /* CLEANUPRET */
    641,
    /* CLEANUPRET_S */
    641,
    /* COMPILER_FENCE */
    641,
    /* COMPILER_FENCE_S */
    641,
    /* RET_CALL_RESULTS */
    641,
    /* RET_CALL_RESULTS_S */
    641,
    /* ABS_F32 */
    641,
    /* ABS_F32_S */
    643,
    /* ABS_F32x4 */
    643,
    /* ABS_F32x4_S */
    645,
    /* ABS_F64 */
    645,
    /* ABS_F64_S */
    647,
    /* ABS_F64x2 */
    647,
    /* ABS_F64x2_S */
    649,
    /* ABS_I16x8 */
    649,
    /* ABS_I16x8_S */
    651,
    /* ABS_I32x4 */
    651,
    /* ABS_I32x4_S */
    653,
    /* ABS_I64x2 */
    653,
    /* ABS_I64x2_S */
    655,
    /* ABS_I8x16 */
    655,
    /* ABS_I8x16_S */
    657,
    /* ADD_F32 */
    657,
    /* ADD_F32_S */
    660,
    /* ADD_F32x4 */
    660,
    /* ADD_F32x4_S */
    663,
    /* ADD_F64 */
    663,
    /* ADD_F64_S */
    666,
    /* ADD_F64x2 */
    666,
    /* ADD_F64x2_S */
    669,
    /* ADD_I16x8 */
    669,
    /* ADD_I16x8_S */
    672,
    /* ADD_I32 */
    672,
    /* ADD_I32_S */
    675,
    /* ADD_I32x4 */
    675,
    /* ADD_I32x4_S */
    678,
    /* ADD_I64 */
    678,
    /* ADD_I64_S */
    681,
    /* ADD_I64x2 */
    681,
    /* ADD_I64x2_S */
    684,
    /* ADD_I8x16 */
    684,
    /* ADD_I8x16_S */
    687,
    /* ADD_SAT_S_I16x8 */
    687,
    /* ADD_SAT_S_I16x8_S */
    690,
    /* ADD_SAT_S_I8x16 */
    690,
    /* ADD_SAT_S_I8x16_S */
    693,
    /* ADD_SAT_U_I16x8 */
    693,
    /* ADD_SAT_U_I16x8_S */
    696,
    /* ADD_SAT_U_I8x16 */
    696,
    /* ADD_SAT_U_I8x16_S */
    699,
    /* ADJCALLSTACKDOWN */
    699,
    /* ADJCALLSTACKDOWN_S */
    701,
    /* ADJCALLSTACKUP */
    703,
    /* ADJCALLSTACKUP_S */
    705,
    /* ALLTRUE_I16x8 */
    707,
    /* ALLTRUE_I16x8_S */
    709,
    /* ALLTRUE_I32x4 */
    709,
    /* ALLTRUE_I32x4_S */
    711,
    /* ALLTRUE_I64x2 */
    711,
    /* ALLTRUE_I64x2_S */
    713,
    /* ALLTRUE_I8x16 */
    713,
    /* ALLTRUE_I8x16_S */
    715,
    /* AND */
    715,
    /* ANDNOT */
    718,
    /* ANDNOT_S */
    721,
    /* AND_I32 */
    721,
    /* AND_I32_S */
    724,
    /* AND_I64 */
    724,
    /* AND_I64_S */
    727,
    /* AND_S */
    727,
    /* ANYTRUE */
    727,
    /* ANYTRUE_S */
    729,
    /* ARGUMENT_externref */
    729,
    /* ARGUMENT_externref_S */
    731,
    /* ARGUMENT_f32 */
    732,
    /* ARGUMENT_f32_S */
    734,
    /* ARGUMENT_f64 */
    735,
    /* ARGUMENT_f64_S */
    737,
    /* ARGUMENT_funcref */
    738,
    /* ARGUMENT_funcref_S */
    740,
    /* ARGUMENT_i32 */
    741,
    /* ARGUMENT_i32_S */
    743,
    /* ARGUMENT_i64 */
    744,
    /* ARGUMENT_i64_S */
    746,
    /* ARGUMENT_v16i8 */
    747,
    /* ARGUMENT_v16i8_S */
    749,
    /* ARGUMENT_v2f64 */
    750,
    /* ARGUMENT_v2f64_S */
    752,
    /* ARGUMENT_v2i64 */
    753,
    /* ARGUMENT_v2i64_S */
    755,
    /* ARGUMENT_v4f32 */
    756,
    /* ARGUMENT_v4f32_S */
    758,
    /* ARGUMENT_v4i32 */
    759,
    /* ARGUMENT_v4i32_S */
    761,
    /* ARGUMENT_v8i16 */
    762,
    /* ARGUMENT_v8i16_S */
    764,
    /* ATOMIC_FENCE */
    765,
    /* ATOMIC_FENCE_S */
    766,
    /* ATOMIC_LOAD16_U_I32_A32 */
    767,
    /* ATOMIC_LOAD16_U_I32_A32_S */
    771,
    /* ATOMIC_LOAD16_U_I32_A64 */
    773,
    /* ATOMIC_LOAD16_U_I32_A64_S */
    777,
    /* ATOMIC_LOAD16_U_I64_A32 */
    779,
    /* ATOMIC_LOAD16_U_I64_A32_S */
    783,
    /* ATOMIC_LOAD16_U_I64_A64 */
    785,
    /* ATOMIC_LOAD16_U_I64_A64_S */
    789,
    /* ATOMIC_LOAD32_U_I64_A32 */
    791,
    /* ATOMIC_LOAD32_U_I64_A32_S */
    795,
    /* ATOMIC_LOAD32_U_I64_A64 */
    797,
    /* ATOMIC_LOAD32_U_I64_A64_S */
    801,
    /* ATOMIC_LOAD8_U_I32_A32 */
    803,
    /* ATOMIC_LOAD8_U_I32_A32_S */
    807,
    /* ATOMIC_LOAD8_U_I32_A64 */
    809,
    /* ATOMIC_LOAD8_U_I32_A64_S */
    813,
    /* ATOMIC_LOAD8_U_I64_A32 */
    815,
    /* ATOMIC_LOAD8_U_I64_A32_S */
    819,
    /* ATOMIC_LOAD8_U_I64_A64 */
    821,
    /* ATOMIC_LOAD8_U_I64_A64_S */
    825,
    /* ATOMIC_LOAD_I32_A32 */
    827,
    /* ATOMIC_LOAD_I32_A32_S */
    831,
    /* ATOMIC_LOAD_I32_A64 */
    833,
    /* ATOMIC_LOAD_I32_A64_S */
    837,
    /* ATOMIC_LOAD_I64_A32 */
    839,
    /* ATOMIC_LOAD_I64_A32_S */
    843,
    /* ATOMIC_LOAD_I64_A64 */
    845,
    /* ATOMIC_LOAD_I64_A64_S */
    849,
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    851,
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    856,
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    858,
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    863,
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    865,
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    870,
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    872,
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    877,
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    879,
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    884,
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    886,
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    891,
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    893,
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    898,
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    900,
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    905,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    907,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    913,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    915,
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    921,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    923,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    929,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    931,
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    937,
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    939,
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    944,
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    946,
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    951,
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    953,
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    958,
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    960,
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    965,
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    967,
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    972,
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    974,
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    979,
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    981,
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    986,
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    988,
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    993,
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    995,
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    1000,
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    1002,
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    1007,
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    1009,
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    1014,
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    1016,
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    1021,
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    1023,
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    1028,
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    1030,
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    1035,
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    1037,
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    1042,
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    1044,
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    1049,
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    1051,
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    1056,
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    1058,
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    1063,
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    1065,
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    1070,
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    1072,
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    1077,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    1079,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    1085,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    1087,
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    1093,
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    1095,
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    1100,
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    1102,
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    1107,
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    1109,
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    1114,
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    1116,
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    1121,
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    1123,
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    1128,
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    1130,
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    1135,
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    1137,
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    1142,
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    1144,
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    1149,
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    1151,
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    1156,
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    1158,
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    1163,
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    1165,
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    1170,
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    1172,
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    1177,
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    1179,
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    1184,
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    1186,
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    1191,
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    1193,
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    1198,
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    1200,
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    1205,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    1207,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    1213,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    1215,
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    1221,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    1223,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    1229,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    1231,
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    1237,
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    1239,
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    1244,
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    1246,
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    1251,
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    1253,
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    1258,
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    1260,
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    1265,
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    1267,
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    1272,
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    1274,
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    1279,
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    1281,
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    1286,
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    1288,
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    1293,
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    1295,
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    1300,
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    1302,
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    1307,
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    1309,
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    1314,
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    1316,
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    1321,
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    1323,
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    1328,
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    1330,
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    1335,
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    1337,
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    1342,
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    1344,
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    1349,
    /* ATOMIC_RMW_ADD_I32_A32 */
    1351,
    /* ATOMIC_RMW_ADD_I32_A32_S */
    1356,
    /* ATOMIC_RMW_ADD_I32_A64 */
    1358,
    /* ATOMIC_RMW_ADD_I32_A64_S */
    1363,
    /* ATOMIC_RMW_ADD_I64_A32 */
    1365,
    /* ATOMIC_RMW_ADD_I64_A32_S */
    1370,
    /* ATOMIC_RMW_ADD_I64_A64 */
    1372,
    /* ATOMIC_RMW_ADD_I64_A64_S */
    1377,
    /* ATOMIC_RMW_AND_I32_A32 */
    1379,
    /* ATOMIC_RMW_AND_I32_A32_S */
    1384,
    /* ATOMIC_RMW_AND_I32_A64 */
    1386,
    /* ATOMIC_RMW_AND_I32_A64_S */
    1391,
    /* ATOMIC_RMW_AND_I64_A32 */
    1393,
    /* ATOMIC_RMW_AND_I64_A32_S */
    1398,
    /* ATOMIC_RMW_AND_I64_A64 */
    1400,
    /* ATOMIC_RMW_AND_I64_A64_S */
    1405,
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    1407,
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    1413,
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    1415,
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    1421,
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    1423,
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    1429,
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    1431,
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    1437,
    /* ATOMIC_RMW_OR_I32_A32 */
    1439,
    /* ATOMIC_RMW_OR_I32_A32_S */
    1444,
    /* ATOMIC_RMW_OR_I32_A64 */
    1446,
    /* ATOMIC_RMW_OR_I32_A64_S */
    1451,
    /* ATOMIC_RMW_OR_I64_A32 */
    1453,
    /* ATOMIC_RMW_OR_I64_A32_S */
    1458,
    /* ATOMIC_RMW_OR_I64_A64 */
    1460,
    /* ATOMIC_RMW_OR_I64_A64_S */
    1465,
    /* ATOMIC_RMW_SUB_I32_A32 */
    1467,
    /* ATOMIC_RMW_SUB_I32_A32_S */
    1472,
    /* ATOMIC_RMW_SUB_I32_A64 */
    1474,
    /* ATOMIC_RMW_SUB_I32_A64_S */
    1479,
    /* ATOMIC_RMW_SUB_I64_A32 */
    1481,
    /* ATOMIC_RMW_SUB_I64_A32_S */
    1486,
    /* ATOMIC_RMW_SUB_I64_A64 */
    1488,
    /* ATOMIC_RMW_SUB_I64_A64_S */
    1493,
    /* ATOMIC_RMW_XCHG_I32_A32 */
    1495,
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    1500,
    /* ATOMIC_RMW_XCHG_I32_A64 */
    1502,
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    1507,
    /* ATOMIC_RMW_XCHG_I64_A32 */
    1509,
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    1514,
    /* ATOMIC_RMW_XCHG_I64_A64 */
    1516,
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    1521,
    /* ATOMIC_RMW_XOR_I32_A32 */
    1523,
    /* ATOMIC_RMW_XOR_I32_A32_S */
    1528,
    /* ATOMIC_RMW_XOR_I32_A64 */
    1530,
    /* ATOMIC_RMW_XOR_I32_A64_S */
    1535,
    /* ATOMIC_RMW_XOR_I64_A32 */
    1537,
    /* ATOMIC_RMW_XOR_I64_A32_S */
    1542,
    /* ATOMIC_RMW_XOR_I64_A64 */
    1544,
    /* ATOMIC_RMW_XOR_I64_A64_S */
    1549,
    /* ATOMIC_STORE16_I32_A32 */
    1551,
    /* ATOMIC_STORE16_I32_A32_S */
    1555,
    /* ATOMIC_STORE16_I32_A64 */
    1557,
    /* ATOMIC_STORE16_I32_A64_S */
    1561,
    /* ATOMIC_STORE16_I64_A32 */
    1563,
    /* ATOMIC_STORE16_I64_A32_S */
    1567,
    /* ATOMIC_STORE16_I64_A64 */
    1569,
    /* ATOMIC_STORE16_I64_A64_S */
    1573,
    /* ATOMIC_STORE32_I64_A32 */
    1575,
    /* ATOMIC_STORE32_I64_A32_S */
    1579,
    /* ATOMIC_STORE32_I64_A64 */
    1581,
    /* ATOMIC_STORE32_I64_A64_S */
    1585,
    /* ATOMIC_STORE8_I32_A32 */
    1587,
    /* ATOMIC_STORE8_I32_A32_S */
    1591,
    /* ATOMIC_STORE8_I32_A64 */
    1593,
    /* ATOMIC_STORE8_I32_A64_S */
    1597,
    /* ATOMIC_STORE8_I64_A32 */
    1599,
    /* ATOMIC_STORE8_I64_A32_S */
    1603,
    /* ATOMIC_STORE8_I64_A64 */
    1605,
    /* ATOMIC_STORE8_I64_A64_S */
    1609,
    /* ATOMIC_STORE_I32_A32 */
    1611,
    /* ATOMIC_STORE_I32_A32_S */
    1615,
    /* ATOMIC_STORE_I32_A64 */
    1617,
    /* ATOMIC_STORE_I32_A64_S */
    1621,
    /* ATOMIC_STORE_I64_A32 */
    1623,
    /* ATOMIC_STORE_I64_A32_S */
    1627,
    /* ATOMIC_STORE_I64_A64 */
    1629,
    /* ATOMIC_STORE_I64_A64_S */
    1633,
    /* AVGR_U_I16x8 */
    1635,
    /* AVGR_U_I16x8_S */
    1638,
    /* AVGR_U_I8x16 */
    1638,
    /* AVGR_U_I8x16_S */
    1641,
    /* BITMASK_I16x8 */
    1641,
    /* BITMASK_I16x8_S */
    1643,
    /* BITMASK_I32x4 */
    1643,
    /* BITMASK_I32x4_S */
    1645,
    /* BITMASK_I64x2 */
    1645,
    /* BITMASK_I64x2_S */
    1647,
    /* BITMASK_I8x16 */
    1647,
    /* BITMASK_I8x16_S */
    1649,
    /* BITSELECT */
    1649,
    /* BITSELECT_S */
    1653,
    /* BLOCK */
    1653,
    /* BLOCK_S */
    1654,
    /* BR */
    1655,
    /* BR_IF */
    1656,
    /* BR_IF_S */
    1658,
    /* BR_S */
    1659,
    /* BR_TABLE_I32 */
    1660,
    /* BR_TABLE_I32_S */
    1661,
    /* BR_TABLE_I64 */
    1662,
    /* BR_TABLE_I64_S */
    1663,
    /* BR_UNLESS */
    1664,
    /* BR_UNLESS_S */
    1666,
    /* CALL */
    1667,
    /* CALL_INDIRECT */
    1668,
    /* CALL_INDIRECT_S */
    1670,
    /* CALL_S */
    1672,
    /* CATCH */
    1673,
    /* CATCH_ALL */
    1674,
    /* CATCH_ALL_S */
    1674,
    /* CATCH_S */
    1674,
    /* CEIL_F32 */
    1675,
    /* CEIL_F32_S */
    1677,
    /* CEIL_F32x4 */
    1677,
    /* CEIL_F32x4_S */
    1679,
    /* CEIL_F64 */
    1679,
    /* CEIL_F64_S */
    1681,
    /* CEIL_F64x2 */
    1681,
    /* CEIL_F64x2_S */
    1683,
    /* CLZ_I32 */
    1683,
    /* CLZ_I32_S */
    1685,
    /* CLZ_I64 */
    1685,
    /* CLZ_I64_S */
    1687,
    /* CONST_F32 */
    1687,
    /* CONST_F32_S */
    1689,
    /* CONST_F64 */
    1690,
    /* CONST_F64_S */
    1692,
    /* CONST_I32 */
    1693,
    /* CONST_I32_S */
    1695,
    /* CONST_I64 */
    1696,
    /* CONST_I64_S */
    1698,
    /* CONST_V128_F32x4 */
    1699,
    /* CONST_V128_F32x4_S */
    1704,
    /* CONST_V128_F64x2 */
    1708,
    /* CONST_V128_F64x2_S */
    1711,
    /* CONST_V128_I16x8 */
    1713,
    /* CONST_V128_I16x8_S */
    1722,
    /* CONST_V128_I32x4 */
    1730,
    /* CONST_V128_I32x4_S */
    1735,
    /* CONST_V128_I64x2 */
    1739,
    /* CONST_V128_I64x2_S */
    1742,
    /* CONST_V128_I8x16 */
    1744,
    /* CONST_V128_I8x16_S */
    1761,
    /* COPYSIGN_F32 */
    1777,
    /* COPYSIGN_F32_S */
    1780,
    /* COPYSIGN_F64 */
    1780,
    /* COPYSIGN_F64_S */
    1783,
    /* COPY_EXTERNREF */
    1783,
    /* COPY_EXTERNREF_S */
    1785,
    /* COPY_F32 */
    1785,
    /* COPY_F32_S */
    1787,
    /* COPY_F64 */
    1787,
    /* COPY_F64_S */
    1789,
    /* COPY_FUNCREF */
    1789,
    /* COPY_FUNCREF_S */
    1791,
    /* COPY_I32 */
    1791,
    /* COPY_I32_S */
    1793,
    /* COPY_I64 */
    1793,
    /* COPY_I64_S */
    1795,
    /* COPY_V128 */
    1795,
    /* COPY_V128_S */
    1797,
    /* CTZ_I32 */
    1797,
    /* CTZ_I32_S */
    1799,
    /* CTZ_I64 */
    1799,
    /* CTZ_I64_S */
    1801,
    /* DEBUG_UNREACHABLE */
    1801,
    /* DEBUG_UNREACHABLE_S */
    1801,
    /* DELEGATE */
    1801,
    /* DELEGATE_S */
    1802,
    /* DIV_F32 */
    1803,
    /* DIV_F32_S */
    1806,
    /* DIV_F32x4 */
    1806,
    /* DIV_F32x4_S */
    1809,
    /* DIV_F64 */
    1809,
    /* DIV_F64_S */
    1812,
    /* DIV_F64x2 */
    1812,
    /* DIV_F64x2_S */
    1815,
    /* DIV_S_I32 */
    1815,
    /* DIV_S_I32_S */
    1818,
    /* DIV_S_I64 */
    1818,
    /* DIV_S_I64_S */
    1821,
    /* DIV_U_I32 */
    1821,
    /* DIV_U_I32_S */
    1824,
    /* DIV_U_I64 */
    1824,
    /* DIV_U_I64_S */
    1827,
    /* DOT */
    1827,
    /* DOT_S */
    1830,
    /* DROP_EXTERNREF */
    1830,
    /* DROP_EXTERNREF_S */
    1831,
    /* DROP_F32 */
    1831,
    /* DROP_F32_S */
    1832,
    /* DROP_F64 */
    1832,
    /* DROP_F64_S */
    1833,
    /* DROP_FUNCREF */
    1833,
    /* DROP_FUNCREF_S */
    1834,
    /* DROP_I32 */
    1834,
    /* DROP_I32_S */
    1835,
    /* DROP_I64 */
    1835,
    /* DROP_I64_S */
    1836,
    /* DROP_V128 */
    1836,
    /* DROP_V128_S */
    1837,
    /* ELSE */
    1837,
    /* ELSE_S */
    1837,
    /* END */
    1837,
    /* END_BLOCK */
    1837,
    /* END_BLOCK_S */
    1837,
    /* END_FUNCTION */
    1837,
    /* END_FUNCTION_S */
    1837,
    /* END_IF */
    1837,
    /* END_IF_S */
    1837,
    /* END_LOOP */
    1837,
    /* END_LOOP_S */
    1837,
    /* END_S */
    1837,
    /* END_TRY */
    1837,
    /* END_TRY_S */
    1837,
    /* EQZ_I32 */
    1837,
    /* EQZ_I32_S */
    1839,
    /* EQZ_I64 */
    1839,
    /* EQZ_I64_S */
    1841,
    /* EQ_F32 */
    1841,
    /* EQ_F32_S */
    1844,
    /* EQ_F32x4 */
    1844,
    /* EQ_F32x4_S */
    1847,
    /* EQ_F64 */
    1847,
    /* EQ_F64_S */
    1850,
    /* EQ_F64x2 */
    1850,
    /* EQ_F64x2_S */
    1853,
    /* EQ_I16x8 */
    1853,
    /* EQ_I16x8_S */
    1856,
    /* EQ_I32 */
    1856,
    /* EQ_I32_S */
    1859,
    /* EQ_I32x4 */
    1859,
    /* EQ_I32x4_S */
    1862,
    /* EQ_I64 */
    1862,
    /* EQ_I64_S */
    1865,
    /* EQ_I64x2 */
    1865,
    /* EQ_I64x2_S */
    1868,
    /* EQ_I8x16 */
    1868,
    /* EQ_I8x16_S */
    1871,
    /* EXTMUL_HIGH_S_I16x8 */
    1871,
    /* EXTMUL_HIGH_S_I16x8_S */
    1874,
    /* EXTMUL_HIGH_S_I32x4 */
    1874,
    /* EXTMUL_HIGH_S_I32x4_S */
    1877,
    /* EXTMUL_HIGH_S_I64x2 */
    1877,
    /* EXTMUL_HIGH_S_I64x2_S */
    1880,
    /* EXTMUL_HIGH_U_I16x8 */
    1880,
    /* EXTMUL_HIGH_U_I16x8_S */
    1883,
    /* EXTMUL_HIGH_U_I32x4 */
    1883,
    /* EXTMUL_HIGH_U_I32x4_S */
    1886,
    /* EXTMUL_HIGH_U_I64x2 */
    1886,
    /* EXTMUL_HIGH_U_I64x2_S */
    1889,
    /* EXTMUL_LOW_S_I16x8 */
    1889,
    /* EXTMUL_LOW_S_I16x8_S */
    1892,
    /* EXTMUL_LOW_S_I32x4 */
    1892,
    /* EXTMUL_LOW_S_I32x4_S */
    1895,
    /* EXTMUL_LOW_S_I64x2 */
    1895,
    /* EXTMUL_LOW_S_I64x2_S */
    1898,
    /* EXTMUL_LOW_U_I16x8 */
    1898,
    /* EXTMUL_LOW_U_I16x8_S */
    1901,
    /* EXTMUL_LOW_U_I32x4 */
    1901,
    /* EXTMUL_LOW_U_I32x4_S */
    1904,
    /* EXTMUL_LOW_U_I64x2 */
    1904,
    /* EXTMUL_LOW_U_I64x2_S */
    1907,
    /* EXTRACT_LANE_F32x4 */
    1907,
    /* EXTRACT_LANE_F32x4_S */
    1910,
    /* EXTRACT_LANE_F64x2 */
    1911,
    /* EXTRACT_LANE_F64x2_S */
    1914,
    /* EXTRACT_LANE_I16x8_s */
    1915,
    /* EXTRACT_LANE_I16x8_s_S */
    1918,
    /* EXTRACT_LANE_I16x8_u */
    1919,
    /* EXTRACT_LANE_I16x8_u_S */
    1922,
    /* EXTRACT_LANE_I32x4 */
    1923,
    /* EXTRACT_LANE_I32x4_S */
    1926,
    /* EXTRACT_LANE_I64x2 */
    1927,
    /* EXTRACT_LANE_I64x2_S */
    1930,
    /* EXTRACT_LANE_I8x16_s */
    1931,
    /* EXTRACT_LANE_I8x16_s_S */
    1934,
    /* EXTRACT_LANE_I8x16_u */
    1935,
    /* EXTRACT_LANE_I8x16_u_S */
    1938,
    /* F32_CONVERT_S_I32 */
    1939,
    /* F32_CONVERT_S_I32_S */
    1941,
    /* F32_CONVERT_S_I64 */
    1941,
    /* F32_CONVERT_S_I64_S */
    1943,
    /* F32_CONVERT_U_I32 */
    1943,
    /* F32_CONVERT_U_I32_S */
    1945,
    /* F32_CONVERT_U_I64 */
    1945,
    /* F32_CONVERT_U_I64_S */
    1947,
    /* F32_DEMOTE_F64 */
    1947,
    /* F32_DEMOTE_F64_S */
    1949,
    /* F32_REINTERPRET_I32 */
    1949,
    /* F32_REINTERPRET_I32_S */
    1951,
    /* F64_CONVERT_S_I32 */
    1951,
    /* F64_CONVERT_S_I32_S */
    1953,
    /* F64_CONVERT_S_I64 */
    1953,
    /* F64_CONVERT_S_I64_S */
    1955,
    /* F64_CONVERT_U_I32 */
    1955,
    /* F64_CONVERT_U_I32_S */
    1957,
    /* F64_CONVERT_U_I64 */
    1957,
    /* F64_CONVERT_U_I64_S */
    1959,
    /* F64_PROMOTE_F32 */
    1959,
    /* F64_PROMOTE_F32_S */
    1961,
    /* F64_REINTERPRET_I64 */
    1961,
    /* F64_REINTERPRET_I64_S */
    1963,
    /* FALLTHROUGH_RETURN */
    1963,
    /* FALLTHROUGH_RETURN_S */
    1963,
    /* FLOOR_F32 */
    1963,
    /* FLOOR_F32_S */
    1965,
    /* FLOOR_F32x4 */
    1965,
    /* FLOOR_F32x4_S */
    1967,
    /* FLOOR_F64 */
    1967,
    /* FLOOR_F64_S */
    1969,
    /* FLOOR_F64x2 */
    1969,
    /* FLOOR_F64x2_S */
    1971,
    /* FP_TO_SINT_I32_F32 */
    1971,
    /* FP_TO_SINT_I32_F32_S */
    1973,
    /* FP_TO_SINT_I32_F64 */
    1973,
    /* FP_TO_SINT_I32_F64_S */
    1975,
    /* FP_TO_SINT_I64_F32 */
    1975,
    /* FP_TO_SINT_I64_F32_S */
    1977,
    /* FP_TO_SINT_I64_F64 */
    1977,
    /* FP_TO_SINT_I64_F64_S */
    1979,
    /* FP_TO_UINT_I32_F32 */
    1979,
    /* FP_TO_UINT_I32_F32_S */
    1981,
    /* FP_TO_UINT_I32_F64 */
    1981,
    /* FP_TO_UINT_I32_F64_S */
    1983,
    /* FP_TO_UINT_I64_F32 */
    1983,
    /* FP_TO_UINT_I64_F32_S */
    1985,
    /* FP_TO_UINT_I64_F64 */
    1985,
    /* FP_TO_UINT_I64_F64_S */
    1987,
    /* GE_F32 */
    1987,
    /* GE_F32_S */
    1990,
    /* GE_F32x4 */
    1990,
    /* GE_F32x4_S */
    1993,
    /* GE_F64 */
    1993,
    /* GE_F64_S */
    1996,
    /* GE_F64x2 */
    1996,
    /* GE_F64x2_S */
    1999,
    /* GE_S_I16x8 */
    1999,
    /* GE_S_I16x8_S */
    2002,
    /* GE_S_I32 */
    2002,
    /* GE_S_I32_S */
    2005,
    /* GE_S_I32x4 */
    2005,
    /* GE_S_I32x4_S */
    2008,
    /* GE_S_I64 */
    2008,
    /* GE_S_I64_S */
    2011,
    /* GE_S_I64x2 */
    2011,
    /* GE_S_I64x2_S */
    2014,
    /* GE_S_I8x16 */
    2014,
    /* GE_S_I8x16_S */
    2017,
    /* GE_U_I16x8 */
    2017,
    /* GE_U_I16x8_S */
    2020,
    /* GE_U_I32 */
    2020,
    /* GE_U_I32_S */
    2023,
    /* GE_U_I32x4 */
    2023,
    /* GE_U_I32x4_S */
    2026,
    /* GE_U_I64 */
    2026,
    /* GE_U_I64_S */
    2029,
    /* GE_U_I8x16 */
    2029,
    /* GE_U_I8x16_S */
    2032,
    /* GLOBAL_GET_EXTERNREF */
    2032,
    /* GLOBAL_GET_EXTERNREF_S */
    2034,
    /* GLOBAL_GET_F32 */
    2035,
    /* GLOBAL_GET_F32_S */
    2037,
    /* GLOBAL_GET_F64 */
    2038,
    /* GLOBAL_GET_F64_S */
    2040,
    /* GLOBAL_GET_FUNCREF */
    2041,
    /* GLOBAL_GET_FUNCREF_S */
    2043,
    /* GLOBAL_GET_I32 */
    2044,
    /* GLOBAL_GET_I32_S */
    2046,
    /* GLOBAL_GET_I64 */
    2047,
    /* GLOBAL_GET_I64_S */
    2049,
    /* GLOBAL_GET_V128 */
    2050,
    /* GLOBAL_GET_V128_S */
    2052,
    /* GLOBAL_SET_EXTERNREF */
    2053,
    /* GLOBAL_SET_EXTERNREF_S */
    2055,
    /* GLOBAL_SET_F32 */
    2056,
    /* GLOBAL_SET_F32_S */
    2058,
    /* GLOBAL_SET_F64 */
    2059,
    /* GLOBAL_SET_F64_S */
    2061,
    /* GLOBAL_SET_FUNCREF */
    2062,
    /* GLOBAL_SET_FUNCREF_S */
    2064,
    /* GLOBAL_SET_I32 */
    2065,
    /* GLOBAL_SET_I32_S */
    2067,
    /* GLOBAL_SET_I64 */
    2068,
    /* GLOBAL_SET_I64_S */
    2070,
    /* GLOBAL_SET_V128 */
    2071,
    /* GLOBAL_SET_V128_S */
    2073,
    /* GT_F32 */
    2074,
    /* GT_F32_S */
    2077,
    /* GT_F32x4 */
    2077,
    /* GT_F32x4_S */
    2080,
    /* GT_F64 */
    2080,
    /* GT_F64_S */
    2083,
    /* GT_F64x2 */
    2083,
    /* GT_F64x2_S */
    2086,
    /* GT_S_I16x8 */
    2086,
    /* GT_S_I16x8_S */
    2089,
    /* GT_S_I32 */
    2089,
    /* GT_S_I32_S */
    2092,
    /* GT_S_I32x4 */
    2092,
    /* GT_S_I32x4_S */
    2095,
    /* GT_S_I64 */
    2095,
    /* GT_S_I64_S */
    2098,
    /* GT_S_I64x2 */
    2098,
    /* GT_S_I64x2_S */
    2101,
    /* GT_S_I8x16 */
    2101,
    /* GT_S_I8x16_S */
    2104,
    /* GT_U_I16x8 */
    2104,
    /* GT_U_I16x8_S */
    2107,
    /* GT_U_I32 */
    2107,
    /* GT_U_I32_S */
    2110,
    /* GT_U_I32x4 */
    2110,
    /* GT_U_I32x4_S */
    2113,
    /* GT_U_I64 */
    2113,
    /* GT_U_I64_S */
    2116,
    /* GT_U_I8x16 */
    2116,
    /* GT_U_I8x16_S */
    2119,
    /* I32_EXTEND16_S_I32 */
    2119,
    /* I32_EXTEND16_S_I32_S */
    2121,
    /* I32_EXTEND8_S_I32 */
    2121,
    /* I32_EXTEND8_S_I32_S */
    2123,
    /* I32_REINTERPRET_F32 */
    2123,
    /* I32_REINTERPRET_F32_S */
    2125,
    /* I32_TRUNC_S_F32 */
    2125,
    /* I32_TRUNC_S_F32_S */
    2127,
    /* I32_TRUNC_S_F64 */
    2127,
    /* I32_TRUNC_S_F64_S */
    2129,
    /* I32_TRUNC_S_SAT_F32 */
    2129,
    /* I32_TRUNC_S_SAT_F32_S */
    2131,
    /* I32_TRUNC_S_SAT_F64 */
    2131,
    /* I32_TRUNC_S_SAT_F64_S */
    2133,
    /* I32_TRUNC_U_F32 */
    2133,
    /* I32_TRUNC_U_F32_S */
    2135,
    /* I32_TRUNC_U_F64 */
    2135,
    /* I32_TRUNC_U_F64_S */
    2137,
    /* I32_TRUNC_U_SAT_F32 */
    2137,
    /* I32_TRUNC_U_SAT_F32_S */
    2139,
    /* I32_TRUNC_U_SAT_F64 */
    2139,
    /* I32_TRUNC_U_SAT_F64_S */
    2141,
    /* I32_WRAP_I64 */
    2141,
    /* I32_WRAP_I64_S */
    2143,
    /* I64_EXTEND16_S_I64 */
    2143,
    /* I64_EXTEND16_S_I64_S */
    2145,
    /* I64_EXTEND32_S_I64 */
    2145,
    /* I64_EXTEND32_S_I64_S */
    2147,
    /* I64_EXTEND8_S_I64 */
    2147,
    /* I64_EXTEND8_S_I64_S */
    2149,
    /* I64_EXTEND_S_I32 */
    2149,
    /* I64_EXTEND_S_I32_S */
    2151,
    /* I64_EXTEND_U_I32 */
    2151,
    /* I64_EXTEND_U_I32_S */
    2153,
    /* I64_REINTERPRET_F64 */
    2153,
    /* I64_REINTERPRET_F64_S */
    2155,
    /* I64_TRUNC_S_F32 */
    2155,
    /* I64_TRUNC_S_F32_S */
    2157,
    /* I64_TRUNC_S_F64 */
    2157,
    /* I64_TRUNC_S_F64_S */
    2159,
    /* I64_TRUNC_S_SAT_F32 */
    2159,
    /* I64_TRUNC_S_SAT_F32_S */
    2161,
    /* I64_TRUNC_S_SAT_F64 */
    2161,
    /* I64_TRUNC_S_SAT_F64_S */
    2163,
    /* I64_TRUNC_U_F32 */
    2163,
    /* I64_TRUNC_U_F32_S */
    2165,
    /* I64_TRUNC_U_F64 */
    2165,
    /* I64_TRUNC_U_F64_S */
    2167,
    /* I64_TRUNC_U_SAT_F32 */
    2167,
    /* I64_TRUNC_U_SAT_F32_S */
    2169,
    /* I64_TRUNC_U_SAT_F64 */
    2169,
    /* I64_TRUNC_U_SAT_F64_S */
    2171,
    /* IF */
    2171,
    /* IF_S */
    2173,
    /* LANESELECT_I16x8 */
    2174,
    /* LANESELECT_I16x8_S */
    2178,
    /* LANESELECT_I32x4 */
    2178,
    /* LANESELECT_I32x4_S */
    2182,
    /* LANESELECT_I64x2 */
    2182,
    /* LANESELECT_I64x2_S */
    2186,
    /* LANESELECT_I8x16 */
    2186,
    /* LANESELECT_I8x16_S */
    2190,
    /* LE_F32 */
    2190,
    /* LE_F32_S */
    2193,
    /* LE_F32x4 */
    2193,
    /* LE_F32x4_S */
    2196,
    /* LE_F64 */
    2196,
    /* LE_F64_S */
    2199,
    /* LE_F64x2 */
    2199,
    /* LE_F64x2_S */
    2202,
    /* LE_S_I16x8 */
    2202,
    /* LE_S_I16x8_S */
    2205,
    /* LE_S_I32 */
    2205,
    /* LE_S_I32_S */
    2208,
    /* LE_S_I32x4 */
    2208,
    /* LE_S_I32x4_S */
    2211,
    /* LE_S_I64 */
    2211,
    /* LE_S_I64_S */
    2214,
    /* LE_S_I64x2 */
    2214,
    /* LE_S_I64x2_S */
    2217,
    /* LE_S_I8x16 */
    2217,
    /* LE_S_I8x16_S */
    2220,
    /* LE_U_I16x8 */
    2220,
    /* LE_U_I16x8_S */
    2223,
    /* LE_U_I32 */
    2223,
    /* LE_U_I32_S */
    2226,
    /* LE_U_I32x4 */
    2226,
    /* LE_U_I32x4_S */
    2229,
    /* LE_U_I64 */
    2229,
    /* LE_U_I64_S */
    2232,
    /* LE_U_I8x16 */
    2232,
    /* LE_U_I8x16_S */
    2235,
    /* LOAD16_SPLAT_A32 */
    2235,
    /* LOAD16_SPLAT_A32_S */
    2239,
    /* LOAD16_SPLAT_A64 */
    2241,
    /* LOAD16_SPLAT_A64_S */
    2245,
    /* LOAD16_S_I32_A32 */
    2247,
    /* LOAD16_S_I32_A32_S */
    2251,
    /* LOAD16_S_I32_A64 */
    2253,
    /* LOAD16_S_I32_A64_S */
    2257,
    /* LOAD16_S_I64_A32 */
    2259,
    /* LOAD16_S_I64_A32_S */
    2263,
    /* LOAD16_S_I64_A64 */
    2265,
    /* LOAD16_S_I64_A64_S */
    2269,
    /* LOAD16_U_I32_A32 */
    2271,
    /* LOAD16_U_I32_A32_S */
    2275,
    /* LOAD16_U_I32_A64 */
    2277,
    /* LOAD16_U_I32_A64_S */
    2281,
    /* LOAD16_U_I64_A32 */
    2283,
    /* LOAD16_U_I64_A32_S */
    2287,
    /* LOAD16_U_I64_A64 */
    2289,
    /* LOAD16_U_I64_A64_S */
    2293,
    /* LOAD32_SPLAT_A32 */
    2295,
    /* LOAD32_SPLAT_A32_S */
    2299,
    /* LOAD32_SPLAT_A64 */
    2301,
    /* LOAD32_SPLAT_A64_S */
    2305,
    /* LOAD32_S_I64_A32 */
    2307,
    /* LOAD32_S_I64_A32_S */
    2311,
    /* LOAD32_S_I64_A64 */
    2313,
    /* LOAD32_S_I64_A64_S */
    2317,
    /* LOAD32_U_I64_A32 */
    2319,
    /* LOAD32_U_I64_A32_S */
    2323,
    /* LOAD32_U_I64_A64 */
    2325,
    /* LOAD32_U_I64_A64_S */
    2329,
    /* LOAD64_SPLAT_A32 */
    2331,
    /* LOAD64_SPLAT_A32_S */
    2335,
    /* LOAD64_SPLAT_A64 */
    2337,
    /* LOAD64_SPLAT_A64_S */
    2341,
    /* LOAD8_SPLAT_A32 */
    2343,
    /* LOAD8_SPLAT_A32_S */
    2347,
    /* LOAD8_SPLAT_A64 */
    2349,
    /* LOAD8_SPLAT_A64_S */
    2353,
    /* LOAD8_S_I32_A32 */
    2355,
    /* LOAD8_S_I32_A32_S */
    2359,
    /* LOAD8_S_I32_A64 */
    2361,
    /* LOAD8_S_I32_A64_S */
    2365,
    /* LOAD8_S_I64_A32 */
    2367,
    /* LOAD8_S_I64_A32_S */
    2371,
    /* LOAD8_S_I64_A64 */
    2373,
    /* LOAD8_S_I64_A64_S */
    2377,
    /* LOAD8_U_I32_A32 */
    2379,
    /* LOAD8_U_I32_A32_S */
    2383,
    /* LOAD8_U_I32_A64 */
    2385,
    /* LOAD8_U_I32_A64_S */
    2389,
    /* LOAD8_U_I64_A32 */
    2391,
    /* LOAD8_U_I64_A32_S */
    2395,
    /* LOAD8_U_I64_A64 */
    2397,
    /* LOAD8_U_I64_A64_S */
    2401,
    /* LOAD_EXTEND_S_I16x8_A32 */
    2403,
    /* LOAD_EXTEND_S_I16x8_A32_S */
    2407,
    /* LOAD_EXTEND_S_I16x8_A64 */
    2409,
    /* LOAD_EXTEND_S_I16x8_A64_S */
    2413,
    /* LOAD_EXTEND_S_I32x4_A32 */
    2415,
    /* LOAD_EXTEND_S_I32x4_A32_S */
    2419,
    /* LOAD_EXTEND_S_I32x4_A64 */
    2421,
    /* LOAD_EXTEND_S_I32x4_A64_S */
    2425,
    /* LOAD_EXTEND_S_I64x2_A32 */
    2427,
    /* LOAD_EXTEND_S_I64x2_A32_S */
    2431,
    /* LOAD_EXTEND_S_I64x2_A64 */
    2433,
    /* LOAD_EXTEND_S_I64x2_A64_S */
    2437,
    /* LOAD_EXTEND_U_I16x8_A32 */
    2439,
    /* LOAD_EXTEND_U_I16x8_A32_S */
    2443,
    /* LOAD_EXTEND_U_I16x8_A64 */
    2445,
    /* LOAD_EXTEND_U_I16x8_A64_S */
    2449,
    /* LOAD_EXTEND_U_I32x4_A32 */
    2451,
    /* LOAD_EXTEND_U_I32x4_A32_S */
    2455,
    /* LOAD_EXTEND_U_I32x4_A64 */
    2457,
    /* LOAD_EXTEND_U_I32x4_A64_S */
    2461,
    /* LOAD_EXTEND_U_I64x2_A32 */
    2463,
    /* LOAD_EXTEND_U_I64x2_A32_S */
    2467,
    /* LOAD_EXTEND_U_I64x2_A64 */
    2469,
    /* LOAD_EXTEND_U_I64x2_A64_S */
    2473,
    /* LOAD_F32_A32 */
    2475,
    /* LOAD_F32_A32_S */
    2479,
    /* LOAD_F32_A64 */
    2481,
    /* LOAD_F32_A64_S */
    2485,
    /* LOAD_F64_A32 */
    2487,
    /* LOAD_F64_A32_S */
    2491,
    /* LOAD_F64_A64 */
    2493,
    /* LOAD_F64_A64_S */
    2497,
    /* LOAD_I32_A32 */
    2499,
    /* LOAD_I32_A32_S */
    2503,
    /* LOAD_I32_A64 */
    2505,
    /* LOAD_I32_A64_S */
    2509,
    /* LOAD_I64_A32 */
    2511,
    /* LOAD_I64_A32_S */
    2515,
    /* LOAD_I64_A64 */
    2517,
    /* LOAD_I64_A64_S */
    2521,
    /* LOAD_LANE_I16x8_A32 */
    2523,
    /* LOAD_LANE_I16x8_A32_S */
    2529,
    /* LOAD_LANE_I16x8_A64 */
    2532,
    /* LOAD_LANE_I16x8_A64_S */
    2538,
    /* LOAD_LANE_I32x4_A32 */
    2541,
    /* LOAD_LANE_I32x4_A32_S */
    2547,
    /* LOAD_LANE_I32x4_A64 */
    2550,
    /* LOAD_LANE_I32x4_A64_S */
    2556,
    /* LOAD_LANE_I64x2_A32 */
    2559,
    /* LOAD_LANE_I64x2_A32_S */
    2565,
    /* LOAD_LANE_I64x2_A64 */
    2568,
    /* LOAD_LANE_I64x2_A64_S */
    2574,
    /* LOAD_LANE_I8x16_A32 */
    2577,
    /* LOAD_LANE_I8x16_A32_S */
    2583,
    /* LOAD_LANE_I8x16_A64 */
    2586,
    /* LOAD_LANE_I8x16_A64_S */
    2592,
    /* LOAD_V128_A32 */
    2595,
    /* LOAD_V128_A32_S */
    2599,
    /* LOAD_V128_A64 */
    2601,
    /* LOAD_V128_A64_S */
    2605,
    /* LOAD_ZERO_I32x4_A32 */
    2607,
    /* LOAD_ZERO_I32x4_A32_S */
    2611,
    /* LOAD_ZERO_I32x4_A64 */
    2613,
    /* LOAD_ZERO_I32x4_A64_S */
    2617,
    /* LOAD_ZERO_I64x2_A32 */
    2619,
    /* LOAD_ZERO_I64x2_A32_S */
    2623,
    /* LOAD_ZERO_I64x2_A64 */
    2625,
    /* LOAD_ZERO_I64x2_A64_S */
    2629,
    /* LOCAL_GET_EXTERNREF */
    2631,
    /* LOCAL_GET_EXTERNREF_S */
    2633,
    /* LOCAL_GET_F32 */
    2634,
    /* LOCAL_GET_F32_S */
    2636,
    /* LOCAL_GET_F64 */
    2637,
    /* LOCAL_GET_F64_S */
    2639,
    /* LOCAL_GET_FUNCREF */
    2640,
    /* LOCAL_GET_FUNCREF_S */
    2642,
    /* LOCAL_GET_I32 */
    2643,
    /* LOCAL_GET_I32_S */
    2645,
    /* LOCAL_GET_I64 */
    2646,
    /* LOCAL_GET_I64_S */
    2648,
    /* LOCAL_GET_V128 */
    2649,
    /* LOCAL_GET_V128_S */
    2651,
    /* LOCAL_SET_EXTERNREF */
    2652,
    /* LOCAL_SET_EXTERNREF_S */
    2654,
    /* LOCAL_SET_F32 */
    2655,
    /* LOCAL_SET_F32_S */
    2657,
    /* LOCAL_SET_F64 */
    2658,
    /* LOCAL_SET_F64_S */
    2660,
    /* LOCAL_SET_FUNCREF */
    2661,
    /* LOCAL_SET_FUNCREF_S */
    2663,
    /* LOCAL_SET_I32 */
    2664,
    /* LOCAL_SET_I32_S */
    2666,
    /* LOCAL_SET_I64 */
    2667,
    /* LOCAL_SET_I64_S */
    2669,
    /* LOCAL_SET_V128 */
    2670,
    /* LOCAL_SET_V128_S */
    2672,
    /* LOCAL_TEE_EXTERNREF */
    2673,
    /* LOCAL_TEE_EXTERNREF_S */
    2676,
    /* LOCAL_TEE_F32 */
    2677,
    /* LOCAL_TEE_F32_S */
    2680,
    /* LOCAL_TEE_F64 */
    2681,
    /* LOCAL_TEE_F64_S */
    2684,
    /* LOCAL_TEE_FUNCREF */
    2685,
    /* LOCAL_TEE_FUNCREF_S */
    2688,
    /* LOCAL_TEE_I32 */
    2689,
    /* LOCAL_TEE_I32_S */
    2692,
    /* LOCAL_TEE_I64 */
    2693,
    /* LOCAL_TEE_I64_S */
    2696,
    /* LOCAL_TEE_V128 */
    2697,
    /* LOCAL_TEE_V128_S */
    2700,
    /* LOOP */
    2701,
    /* LOOP_S */
    2702,
    /* LT_F32 */
    2703,
    /* LT_F32_S */
    2706,
    /* LT_F32x4 */
    2706,
    /* LT_F32x4_S */
    2709,
    /* LT_F64 */
    2709,
    /* LT_F64_S */
    2712,
    /* LT_F64x2 */
    2712,
    /* LT_F64x2_S */
    2715,
    /* LT_S_I16x8 */
    2715,
    /* LT_S_I16x8_S */
    2718,
    /* LT_S_I32 */
    2718,
    /* LT_S_I32_S */
    2721,
    /* LT_S_I32x4 */
    2721,
    /* LT_S_I32x4_S */
    2724,
    /* LT_S_I64 */
    2724,
    /* LT_S_I64_S */
    2727,
    /* LT_S_I64x2 */
    2727,
    /* LT_S_I64x2_S */
    2730,
    /* LT_S_I8x16 */
    2730,
    /* LT_S_I8x16_S */
    2733,
    /* LT_U_I16x8 */
    2733,
    /* LT_U_I16x8_S */
    2736,
    /* LT_U_I32 */
    2736,
    /* LT_U_I32_S */
    2739,
    /* LT_U_I32x4 */
    2739,
    /* LT_U_I32x4_S */
    2742,
    /* LT_U_I64 */
    2742,
    /* LT_U_I64_S */
    2745,
    /* LT_U_I8x16 */
    2745,
    /* LT_U_I8x16_S */
    2748,
    /* MADD_F32x4 */
    2748,
    /* MADD_F32x4_S */
    2752,
    /* MADD_F64x2 */
    2752,
    /* MADD_F64x2_S */
    2756,
    /* MAX_F32 */
    2756,
    /* MAX_F32_S */
    2759,
    /* MAX_F32x4 */
    2759,
    /* MAX_F32x4_S */
    2762,
    /* MAX_F64 */
    2762,
    /* MAX_F64_S */
    2765,
    /* MAX_F64x2 */
    2765,
    /* MAX_F64x2_S */
    2768,
    /* MAX_S_I16x8 */
    2768,
    /* MAX_S_I16x8_S */
    2771,
    /* MAX_S_I32x4 */
    2771,
    /* MAX_S_I32x4_S */
    2774,
    /* MAX_S_I8x16 */
    2774,
    /* MAX_S_I8x16_S */
    2777,
    /* MAX_U_I16x8 */
    2777,
    /* MAX_U_I16x8_S */
    2780,
    /* MAX_U_I32x4 */
    2780,
    /* MAX_U_I32x4_S */
    2783,
    /* MAX_U_I8x16 */
    2783,
    /* MAX_U_I8x16_S */
    2786,
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    2786,
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    2791,
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    2793,
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    2798,
    /* MEMORY_ATOMIC_WAIT32_A32 */
    2800,
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    2806,
    /* MEMORY_ATOMIC_WAIT32_A64 */
    2808,
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    2814,
    /* MEMORY_ATOMIC_WAIT64_A32 */
    2816,
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    2822,
    /* MEMORY_ATOMIC_WAIT64_A64 */
    2824,
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    2830,
    /* MIN_F32 */
    2832,
    /* MIN_F32_S */
    2835,
    /* MIN_F32x4 */
    2835,
    /* MIN_F32x4_S */
    2838,
    /* MIN_F64 */
    2838,
    /* MIN_F64_S */
    2841,
    /* MIN_F64x2 */
    2841,
    /* MIN_F64x2_S */
    2844,
    /* MIN_S_I16x8 */
    2844,
    /* MIN_S_I16x8_S */
    2847,
    /* MIN_S_I32x4 */
    2847,
    /* MIN_S_I32x4_S */
    2850,
    /* MIN_S_I8x16 */
    2850,
    /* MIN_S_I8x16_S */
    2853,
    /* MIN_U_I16x8 */
    2853,
    /* MIN_U_I16x8_S */
    2856,
    /* MIN_U_I32x4 */
    2856,
    /* MIN_U_I32x4_S */
    2859,
    /* MIN_U_I8x16 */
    2859,
    /* MIN_U_I8x16_S */
    2862,
    /* MUL_F32 */
    2862,
    /* MUL_F32_S */
    2865,
    /* MUL_F32x4 */
    2865,
    /* MUL_F32x4_S */
    2868,
    /* MUL_F64 */
    2868,
    /* MUL_F64_S */
    2871,
    /* MUL_F64x2 */
    2871,
    /* MUL_F64x2_S */
    2874,
    /* MUL_I16x8 */
    2874,
    /* MUL_I16x8_S */
    2877,
    /* MUL_I32 */
    2877,
    /* MUL_I32_S */
    2880,
    /* MUL_I32x4 */
    2880,
    /* MUL_I32x4_S */
    2883,
    /* MUL_I64 */
    2883,
    /* MUL_I64_S */
    2886,
    /* MUL_I64x2 */
    2886,
    /* MUL_I64x2_S */
    2889,
    /* NARROW_S_I16x8 */
    2889,
    /* NARROW_S_I16x8_S */
    2892,
    /* NARROW_S_I8x16 */
    2892,
    /* NARROW_S_I8x16_S */
    2895,
    /* NARROW_U_I16x8 */
    2895,
    /* NARROW_U_I16x8_S */
    2898,
    /* NARROW_U_I8x16 */
    2898,
    /* NARROW_U_I8x16_S */
    2901,
    /* NEAREST_F32 */
    2901,
    /* NEAREST_F32_S */
    2903,
    /* NEAREST_F32x4 */
    2903,
    /* NEAREST_F32x4_S */
    2905,
    /* NEAREST_F64 */
    2905,
    /* NEAREST_F64_S */
    2907,
    /* NEAREST_F64x2 */
    2907,
    /* NEAREST_F64x2_S */
    2909,
    /* NEG_F32 */
    2909,
    /* NEG_F32_S */
    2911,
    /* NEG_F32x4 */
    2911,
    /* NEG_F32x4_S */
    2913,
    /* NEG_F64 */
    2913,
    /* NEG_F64_S */
    2915,
    /* NEG_F64x2 */
    2915,
    /* NEG_F64x2_S */
    2917,
    /* NEG_I16x8 */
    2917,
    /* NEG_I16x8_S */
    2919,
    /* NEG_I32x4 */
    2919,
    /* NEG_I32x4_S */
    2921,
    /* NEG_I64x2 */
    2921,
    /* NEG_I64x2_S */
    2923,
    /* NEG_I8x16 */
    2923,
    /* NEG_I8x16_S */
    2925,
    /* NE_F32 */
    2925,
    /* NE_F32_S */
    2928,
    /* NE_F32x4 */
    2928,
    /* NE_F32x4_S */
    2931,
    /* NE_F64 */
    2931,
    /* NE_F64_S */
    2934,
    /* NE_F64x2 */
    2934,
    /* NE_F64x2_S */
    2937,
    /* NE_I16x8 */
    2937,
    /* NE_I16x8_S */
    2940,
    /* NE_I32 */
    2940,
    /* NE_I32_S */
    2943,
    /* NE_I32x4 */
    2943,
    /* NE_I32x4_S */
    2946,
    /* NE_I64 */
    2946,
    /* NE_I64_S */
    2949,
    /* NE_I64x2 */
    2949,
    /* NE_I64x2_S */
    2952,
    /* NE_I8x16 */
    2952,
    /* NE_I8x16_S */
    2955,
    /* NMADD_F32x4 */
    2955,
    /* NMADD_F32x4_S */
    2959,
    /* NMADD_F64x2 */
    2959,
    /* NMADD_F64x2_S */
    2963,
    /* NOP */
    2963,
    /* NOP_S */
    2963,
    /* NOT */
    2963,
    /* NOT_S */
    2965,
    /* OR */
    2965,
    /* OR_I32 */
    2968,
    /* OR_I32_S */
    2971,
    /* OR_I64 */
    2971,
    /* OR_I64_S */
    2974,
    /* OR_S */
    2974,
    /* PMAX_F32x4 */
    2974,
    /* PMAX_F32x4_S */
    2977,
    /* PMAX_F64x2 */
    2977,
    /* PMAX_F64x2_S */
    2980,
    /* PMIN_F32x4 */
    2980,
    /* PMIN_F32x4_S */
    2983,
    /* PMIN_F64x2 */
    2983,
    /* PMIN_F64x2_S */
    2986,
    /* POPCNT_I32 */
    2986,
    /* POPCNT_I32_S */
    2988,
    /* POPCNT_I64 */
    2988,
    /* POPCNT_I64_S */
    2990,
    /* POPCNT_I8x16 */
    2990,
    /* POPCNT_I8x16_S */
    2992,
    /* Q15MULR_SAT_S_I16x8 */
    2992,
    /* Q15MULR_SAT_S_I16x8_S */
    2995,
    /* REF_IS_NULL_EXTERNREF */
    2995,
    /* REF_IS_NULL_EXTERNREF_S */
    2997,
    /* REF_IS_NULL_FUNCREF */
    2997,
    /* REF_IS_NULL_FUNCREF_S */
    2999,
    /* REF_NULL_EXTERNREF */
    2999,
    /* REF_NULL_EXTERNREF_S */
    3000,
    /* REF_NULL_FUNCREF */
    3000,
    /* REF_NULL_FUNCREF_S */
    3001,
    /* RELAXED_DOT */
    3001,
    /* RELAXED_DOT_ADD */
    3004,
    /* RELAXED_DOT_ADD_S */
    3008,
    /* RELAXED_DOT_BFLOAT */
    3008,
    /* RELAXED_DOT_BFLOAT_S */
    3012,
    /* RELAXED_DOT_S */
    3012,
    /* RELAXED_Q15MULR_S_I16x8 */
    3012,
    /* RELAXED_Q15MULR_S_I16x8_S */
    3015,
    /* RELAXED_SWIZZLE */
    3015,
    /* RELAXED_SWIZZLE_S */
    3018,
    /* REM_S_I32 */
    3018,
    /* REM_S_I32_S */
    3021,
    /* REM_S_I64 */
    3021,
    /* REM_S_I64_S */
    3024,
    /* REM_U_I32 */
    3024,
    /* REM_U_I32_S */
    3027,
    /* REM_U_I64 */
    3027,
    /* REM_U_I64_S */
    3030,
    /* REPLACE_LANE_F32x4 */
    3030,
    /* REPLACE_LANE_F32x4_S */
    3034,
    /* REPLACE_LANE_F64x2 */
    3035,
    /* REPLACE_LANE_F64x2_S */
    3039,
    /* REPLACE_LANE_I16x8 */
    3040,
    /* REPLACE_LANE_I16x8_S */
    3044,
    /* REPLACE_LANE_I32x4 */
    3045,
    /* REPLACE_LANE_I32x4_S */
    3049,
    /* REPLACE_LANE_I64x2 */
    3050,
    /* REPLACE_LANE_I64x2_S */
    3054,
    /* REPLACE_LANE_I8x16 */
    3055,
    /* REPLACE_LANE_I8x16_S */
    3059,
    /* RETHROW */
    3060,
    /* RETHROW_S */
    3061,
    /* RETURN */
    3062,
    /* RETURN_S */
    3062,
    /* RET_CALL */
    3062,
    /* RET_CALL_INDIRECT */
    3063,
    /* RET_CALL_INDIRECT_S */
    3065,
    /* RET_CALL_S */
    3067,
    /* ROTL_I32 */
    3068,
    /* ROTL_I32_S */
    3071,
    /* ROTL_I64 */
    3071,
    /* ROTL_I64_S */
    3074,
    /* ROTR_I32 */
    3074,
    /* ROTR_I32_S */
    3077,
    /* ROTR_I64 */
    3077,
    /* ROTR_I64_S */
    3080,
    /* SELECT_EXTERNREF */
    3080,
    /* SELECT_EXTERNREF_S */
    3084,
    /* SELECT_F32 */
    3084,
    /* SELECT_F32_S */
    3088,
    /* SELECT_F64 */
    3088,
    /* SELECT_F64_S */
    3092,
    /* SELECT_FUNCREF */
    3092,
    /* SELECT_FUNCREF_S */
    3096,
    /* SELECT_I32 */
    3096,
    /* SELECT_I32_S */
    3100,
    /* SELECT_I64 */
    3100,
    /* SELECT_I64_S */
    3104,
    /* SELECT_V128 */
    3104,
    /* SELECT_V128_S */
    3108,
    /* SHL_I16x8 */
    3108,
    /* SHL_I16x8_S */
    3111,
    /* SHL_I32 */
    3111,
    /* SHL_I32_S */
    3114,
    /* SHL_I32x4 */
    3114,
    /* SHL_I32x4_S */
    3117,
    /* SHL_I64 */
    3117,
    /* SHL_I64_S */
    3120,
    /* SHL_I64x2 */
    3120,
    /* SHL_I64x2_S */
    3123,
    /* SHL_I8x16 */
    3123,
    /* SHL_I8x16_S */
    3126,
    /* SHR_S_I16x8 */
    3126,
    /* SHR_S_I16x8_S */
    3129,
    /* SHR_S_I32 */
    3129,
    /* SHR_S_I32_S */
    3132,
    /* SHR_S_I32x4 */
    3132,
    /* SHR_S_I32x4_S */
    3135,
    /* SHR_S_I64 */
    3135,
    /* SHR_S_I64_S */
    3138,
    /* SHR_S_I64x2 */
    3138,
    /* SHR_S_I64x2_S */
    3141,
    /* SHR_S_I8x16 */
    3141,
    /* SHR_S_I8x16_S */
    3144,
    /* SHR_U_I16x8 */
    3144,
    /* SHR_U_I16x8_S */
    3147,
    /* SHR_U_I32 */
    3147,
    /* SHR_U_I32_S */
    3150,
    /* SHR_U_I32x4 */
    3150,
    /* SHR_U_I32x4_S */
    3153,
    /* SHR_U_I64 */
    3153,
    /* SHR_U_I64_S */
    3156,
    /* SHR_U_I64x2 */
    3156,
    /* SHR_U_I64x2_S */
    3159,
    /* SHR_U_I8x16 */
    3159,
    /* SHR_U_I8x16_S */
    3162,
    /* SHUFFLE */
    3162,
    /* SHUFFLE_S */
    3181,
    /* SIMD_RELAXED_FMAX_F32x4 */
    3197,
    /* SIMD_RELAXED_FMAX_F32x4_S */
    3200,
    /* SIMD_RELAXED_FMAX_F64x2 */
    3200,
    /* SIMD_RELAXED_FMAX_F64x2_S */
    3203,
    /* SIMD_RELAXED_FMIN_F32x4 */
    3203,
    /* SIMD_RELAXED_FMIN_F32x4_S */
    3206,
    /* SIMD_RELAXED_FMIN_F64x2 */
    3206,
    /* SIMD_RELAXED_FMIN_F64x2_S */
    3209,
    /* SPLAT_F32x4 */
    3209,
    /* SPLAT_F32x4_S */
    3211,
    /* SPLAT_F64x2 */
    3211,
    /* SPLAT_F64x2_S */
    3213,
    /* SPLAT_I16x8 */
    3213,
    /* SPLAT_I16x8_S */
    3215,
    /* SPLAT_I32x4 */
    3215,
    /* SPLAT_I32x4_S */
    3217,
    /* SPLAT_I64x2 */
    3217,
    /* SPLAT_I64x2_S */
    3219,
    /* SPLAT_I8x16 */
    3219,
    /* SPLAT_I8x16_S */
    3221,
    /* SQRT_F32 */
    3221,
    /* SQRT_F32_S */
    3223,
    /* SQRT_F32x4 */
    3223,
    /* SQRT_F32x4_S */
    3225,
    /* SQRT_F64 */
    3225,
    /* SQRT_F64_S */
    3227,
    /* SQRT_F64x2 */
    3227,
    /* SQRT_F64x2_S */
    3229,
    /* STORE16_I32_A32 */
    3229,
    /* STORE16_I32_A32_S */
    3233,
    /* STORE16_I32_A64 */
    3235,
    /* STORE16_I32_A64_S */
    3239,
    /* STORE16_I64_A32 */
    3241,
    /* STORE16_I64_A32_S */
    3245,
    /* STORE16_I64_A64 */
    3247,
    /* STORE16_I64_A64_S */
    3251,
    /* STORE32_I64_A32 */
    3253,
    /* STORE32_I64_A32_S */
    3257,
    /* STORE32_I64_A64 */
    3259,
    /* STORE32_I64_A64_S */
    3263,
    /* STORE8_I32_A32 */
    3265,
    /* STORE8_I32_A32_S */
    3269,
    /* STORE8_I32_A64 */
    3271,
    /* STORE8_I32_A64_S */
    3275,
    /* STORE8_I64_A32 */
    3277,
    /* STORE8_I64_A32_S */
    3281,
    /* STORE8_I64_A64 */
    3283,
    /* STORE8_I64_A64_S */
    3287,
    /* STORE_F32_A32 */
    3289,
    /* STORE_F32_A32_S */
    3293,
    /* STORE_F32_A64 */
    3295,
    /* STORE_F32_A64_S */
    3299,
    /* STORE_F64_A32 */
    3301,
    /* STORE_F64_A32_S */
    3305,
    /* STORE_F64_A64 */
    3307,
    /* STORE_F64_A64_S */
    3311,
    /* STORE_I32_A32 */
    3313,
    /* STORE_I32_A32_S */
    3317,
    /* STORE_I32_A64 */
    3319,
    /* STORE_I32_A64_S */
    3323,
    /* STORE_I64_A32 */
    3325,
    /* STORE_I64_A32_S */
    3329,
    /* STORE_I64_A64 */
    3331,
    /* STORE_I64_A64_S */
    3335,
    /* STORE_LANE_I16x8_A32 */
    3337,
    /* STORE_LANE_I16x8_A32_S */
    3342,
    /* STORE_LANE_I16x8_A64 */
    3345,
    /* STORE_LANE_I16x8_A64_S */
    3351,
    /* STORE_LANE_I32x4_A32 */
    3354,
    /* STORE_LANE_I32x4_A32_S */
    3359,
    /* STORE_LANE_I32x4_A64 */
    3362,
    /* STORE_LANE_I32x4_A64_S */
    3368,
    /* STORE_LANE_I64x2_A32 */
    3371,
    /* STORE_LANE_I64x2_A32_S */
    3376,
    /* STORE_LANE_I64x2_A64 */
    3379,
    /* STORE_LANE_I64x2_A64_S */
    3385,
    /* STORE_LANE_I8x16_A32 */
    3388,
    /* STORE_LANE_I8x16_A32_S */
    3393,
    /* STORE_LANE_I8x16_A64 */
    3396,
    /* STORE_LANE_I8x16_A64_S */
    3402,
    /* STORE_V128_A32 */
    3405,
    /* STORE_V128_A32_S */
    3409,
    /* STORE_V128_A64 */
    3411,
    /* STORE_V128_A64_S */
    3415,
    /* SUB_F32 */
    3417,
    /* SUB_F32_S */
    3420,
    /* SUB_F32x4 */
    3420,
    /* SUB_F32x4_S */
    3423,
    /* SUB_F64 */
    3423,
    /* SUB_F64_S */
    3426,
    /* SUB_F64x2 */
    3426,
    /* SUB_F64x2_S */
    3429,
    /* SUB_I16x8 */
    3429,
    /* SUB_I16x8_S */
    3432,
    /* SUB_I32 */
    3432,
    /* SUB_I32_S */
    3435,
    /* SUB_I32x4 */
    3435,
    /* SUB_I32x4_S */
    3438,
    /* SUB_I64 */
    3438,
    /* SUB_I64_S */
    3441,
    /* SUB_I64x2 */
    3441,
    /* SUB_I64x2_S */
    3444,
    /* SUB_I8x16 */
    3444,
    /* SUB_I8x16_S */
    3447,
    /* SUB_SAT_S_I16x8 */
    3447,
    /* SUB_SAT_S_I16x8_S */
    3450,
    /* SUB_SAT_S_I8x16 */
    3450,
    /* SUB_SAT_S_I8x16_S */
    3453,
    /* SUB_SAT_U_I16x8 */
    3453,
    /* SUB_SAT_U_I16x8_S */
    3456,
    /* SUB_SAT_U_I8x16 */
    3456,
    /* SUB_SAT_U_I8x16_S */
    3459,
    /* SWIZZLE */
    3459,
    /* SWIZZLE_S */
    3462,
    /* TABLE_COPY */
    3462,
    /* TABLE_COPY_S */
    3467,
    /* TABLE_FILL_EXTERNREF */
    3469,
    /* TABLE_FILL_EXTERNREF_S */
    3473,
    /* TABLE_FILL_FUNCREF */
    3474,
    /* TABLE_FILL_FUNCREF_S */
    3478,
    /* TABLE_GET_EXTERNREF */
    3479,
    /* TABLE_GET_EXTERNREF_S */
    3482,
    /* TABLE_GET_FUNCREF */
    3483,
    /* TABLE_GET_FUNCREF_S */
    3486,
    /* TABLE_GROW_EXTERNREF */
    3487,
    /* TABLE_GROW_EXTERNREF_S */
    3491,
    /* TABLE_GROW_FUNCREF */
    3492,
    /* TABLE_GROW_FUNCREF_S */
    3496,
    /* TABLE_SET_EXTERNREF */
    3497,
    /* TABLE_SET_EXTERNREF_S */
    3500,
    /* TABLE_SET_FUNCREF */
    3501,
    /* TABLE_SET_FUNCREF_S */
    3504,
    /* TABLE_SIZE */
    3505,
    /* TABLE_SIZE_S */
    3507,
    /* TEE_EXTERNREF */
    3508,
    /* TEE_EXTERNREF_S */
    3511,
    /* TEE_F32 */
    3511,
    /* TEE_F32_S */
    3514,
    /* TEE_F64 */
    3514,
    /* TEE_F64_S */
    3517,
    /* TEE_FUNCREF */
    3517,
    /* TEE_FUNCREF_S */
    3520,
    /* TEE_I32 */
    3520,
    /* TEE_I32_S */
    3523,
    /* TEE_I64 */
    3523,
    /* TEE_I64_S */
    3526,
    /* TEE_V128 */
    3526,
    /* TEE_V128_S */
    3529,
    /* THROW */
    3529,
    /* THROW_S */
    3530,
    /* TRUNC_F32 */
    3531,
    /* TRUNC_F32_S */
    3533,
    /* TRUNC_F32x4 */
    3533,
    /* TRUNC_F32x4_S */
    3535,
    /* TRUNC_F64 */
    3535,
    /* TRUNC_F64_S */
    3537,
    /* TRUNC_F64x2 */
    3537,
    /* TRUNC_F64x2_S */
    3539,
    /* TRY */
    3539,
    /* TRY_S */
    3540,
    /* UNREACHABLE */
    3541,
    /* UNREACHABLE_S */
    3541,
    /* XOR */
    3541,
    /* XOR_I32 */
    3544,
    /* XOR_I32_S */
    3547,
    /* XOR_I64 */
    3547,
    /* XOR_I64_S */
    3550,
    /* XOR_S */
    3550,
    /* anonymous_4063MEMORY_GROW_A32 */
    3550,
    /* anonymous_4063MEMORY_GROW_A32_S */
    3553,
    /* anonymous_4063MEMORY_SIZE_A32 */
    3554,
    /* anonymous_4063MEMORY_SIZE_A32_S */
    3556,
    /* anonymous_4064MEMORY_GROW_A64 */
    3557,
    /* anonymous_4064MEMORY_GROW_A64_S */
    3560,
    /* anonymous_4064MEMORY_SIZE_A64 */
    3561,
    /* anonymous_4064MEMORY_SIZE_A64_S */
    3563,
    /* anonymous_4733DATA_DROP */
    3564,
    /* anonymous_4733DATA_DROP_S */
    3565,
    /* anonymous_4733MEMORY_COPY_A32 */
    3566,
    /* anonymous_4733MEMORY_COPY_A32_S */
    3571,
    /* anonymous_4733MEMORY_FILL_A32 */
    3573,
    /* anonymous_4733MEMORY_FILL_A32_S */
    3577,
    /* anonymous_4733MEMORY_INIT_A32 */
    3578,
    /* anonymous_4733MEMORY_INIT_A32_S */
    3583,
    /* anonymous_4734DATA_DROP */
    3585,
    /* anonymous_4734DATA_DROP_S */
    3586,
    /* anonymous_4734MEMORY_COPY_A64 */
    3587,
    /* anonymous_4734MEMORY_COPY_A64_S */
    3592,
    /* anonymous_4734MEMORY_FILL_A64 */
    3594,
    /* anonymous_4734MEMORY_FILL_A64_S */
    3598,
    /* anonymous_4734MEMORY_INIT_A64 */
    3599,
    /* anonymous_4734MEMORY_INIT_A64_S */
    3604,
    /* convert_low_s_F64x2 */
    3606,
    /* convert_low_s_F64x2_S */
    3608,
    /* convert_low_u_F64x2 */
    3608,
    /* convert_low_u_F64x2_S */
    3610,
    /* demote_zero_F32x4 */
    3610,
    /* demote_zero_F32x4_S */
    3612,
    /* extend_high_s_I16x8 */
    3612,
    /* extend_high_s_I16x8_S */
    3614,
    /* extend_high_s_I32x4 */
    3614,
    /* extend_high_s_I32x4_S */
    3616,
    /* extend_high_s_I64x2 */
    3616,
    /* extend_high_s_I64x2_S */
    3618,
    /* extend_high_u_I16x8 */
    3618,
    /* extend_high_u_I16x8_S */
    3620,
    /* extend_high_u_I32x4 */
    3620,
    /* extend_high_u_I32x4_S */
    3622,
    /* extend_high_u_I64x2 */
    3622,
    /* extend_high_u_I64x2_S */
    3624,
    /* extend_low_s_I16x8 */
    3624,
    /* extend_low_s_I16x8_S */
    3626,
    /* extend_low_s_I32x4 */
    3626,
    /* extend_low_s_I32x4_S */
    3628,
    /* extend_low_s_I64x2 */
    3628,
    /* extend_low_s_I64x2_S */
    3630,
    /* extend_low_u_I16x8 */
    3630,
    /* extend_low_u_I16x8_S */
    3632,
    /* extend_low_u_I32x4 */
    3632,
    /* extend_low_u_I32x4_S */
    3634,
    /* extend_low_u_I64x2 */
    3634,
    /* extend_low_u_I64x2_S */
    3636,
    /* fp_to_sint_I32x4 */
    3636,
    /* fp_to_sint_I32x4_S */
    3638,
    /* fp_to_uint_I32x4 */
    3638,
    /* fp_to_uint_I32x4_S */
    3640,
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    3640,
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    3642,
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    3642,
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    3644,
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    3644,
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    3646,
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    3646,
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    3648,
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    3648,
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    3650,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    3650,
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    3652,
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    3652,
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    3654,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    3654,
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    3656,
    /* promote_low_F64x2 */
    3656,
    /* promote_low_F64x2_S */
    3658,
    /* sint_to_fp_F32x4 */
    3658,
    /* sint_to_fp_F32x4_S */
    3660,
    /* trunc_sat_zero_s_I32x4 */
    3660,
    /* trunc_sat_zero_s_I32x4_S */
    3662,
    /* trunc_sat_zero_u_I32x4 */
    3662,
    /* trunc_sat_zero_u_I32x4_S */
    3664,
    /* uint_to_fp_F32x4 */
    3664,
    /* uint_to_fp_F32x4_S */
    3666,
  };

  using namespace OpTypes;
  static const int8_t OpcodeOperandTypes[] = {
    
    /* PHI */
    -1, 
    /* INLINEASM */
    /* INLINEASM_BR */
    /* CFI_INSTRUCTION */
    i32imm, 
    /* EH_LABEL */
    i32imm, 
    /* GC_LABEL */
    i32imm, 
    /* ANNOTATION_LABEL */
    i32imm, 
    /* KILL */
    /* EXTRACT_SUBREG */
    -1, -1, i32imm, 
    /* INSERT_SUBREG */
    -1, -1, -1, i32imm, 
    /* IMPLICIT_DEF */
    -1, 
    /* SUBREG_TO_REG */
    -1, -1, -1, i32imm, 
    /* COPY_TO_REGCLASS */
    -1, -1, i32imm, 
    /* DBG_VALUE */
    /* DBG_VALUE_LIST */
    /* DBG_INSTR_REF */
    /* DBG_PHI */
    /* DBG_LABEL */
    -1, 
    /* REG_SEQUENCE */
    -1, -1, 
    /* COPY */
    -1, -1, 
    /* BUNDLE */
    /* LIFETIME_START */
    i32imm, 
    /* LIFETIME_END */
    i32imm, 
    /* PSEUDO_PROBE */
    i64imm, i64imm, i8imm, i32imm, 
    /* ARITH_FENCE */
    -1, -1, 
    /* STACKMAP */
    i64imm, i32imm, 
    /* FENTRY_CALL */
    /* PATCHPOINT */
    -1, i64imm, i32imm, -1, i32imm, i32imm, 
    /* LOAD_STACK_GUARD */
    -1, 
    /* PREALLOCATED_SETUP */
    i32imm, 
    /* PREALLOCATED_ARG */
    -1, i32imm, i32imm, 
    /* STATEPOINT */
    /* LOCAL_ESCAPE */
    -1, i32imm, 
    /* FAULTING_OP */
    -1, 
    /* PATCHABLE_OP */
    /* PATCHABLE_FUNCTION_ENTER */
    /* PATCHABLE_RET */
    /* PATCHABLE_FUNCTION_EXIT */
    /* PATCHABLE_TAIL_CALL */
    /* PATCHABLE_EVENT_CALL */
    -1, -1, 
    /* PATCHABLE_TYPED_EVENT_CALL */
    -1, -1, -1, 
    /* ICALL_BRANCH_FUNNEL */
    /* MEMBARRIER */
    /* G_ASSERT_SEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ZEXT */
    type0, type0, untyped_imm_0, 
    /* G_ASSERT_ALIGN */
    type0, type0, untyped_imm_0, 
    /* G_ADD */
    type0, type0, type0, 
    /* G_SUB */
    type0, type0, type0, 
    /* G_MUL */
    type0, type0, type0, 
    /* G_SDIV */
    type0, type0, type0, 
    /* G_UDIV */
    type0, type0, type0, 
    /* G_SREM */
    type0, type0, type0, 
    /* G_UREM */
    type0, type0, type0, 
    /* G_SDIVREM */
    type0, type0, type0, type0, 
    /* G_UDIVREM */
    type0, type0, type0, type0, 
    /* G_AND */
    type0, type0, type0, 
    /* G_OR */
    type0, type0, type0, 
    /* G_XOR */
    type0, type0, type0, 
    /* G_IMPLICIT_DEF */
    type0, 
    /* G_PHI */
    type0, 
    /* G_FRAME_INDEX */
    type0, -1, 
    /* G_GLOBAL_VALUE */
    type0, -1, 
    /* G_CONSTANT_POOL */
    type0, -1, 
    /* G_EXTRACT */
    type0, type1, untyped_imm_0, 
    /* G_UNMERGE_VALUES */
    type0, type1, 
    /* G_INSERT */
    type0, type0, type1, untyped_imm_0, 
    /* G_MERGE_VALUES */
    type0, type1, 
    /* G_BUILD_VECTOR */
    type0, type1, 
    /* G_BUILD_VECTOR_TRUNC */
    type0, type1, 
    /* G_CONCAT_VECTORS */
    type0, type1, 
    /* G_PTRTOINT */
    type0, type1, 
    /* G_INTTOPTR */
    type0, type1, 
    /* G_BITCAST */
    type0, type1, 
    /* G_FREEZE */
    type0, type0, 
    /* G_INTRINSIC_FPTRUNC_ROUND */
    type0, type1, i32imm, 
    /* G_INTRINSIC_TRUNC */
    type0, type0, 
    /* G_INTRINSIC_ROUND */
    type0, type0, 
    /* G_INTRINSIC_LRINT */
    type0, type1, 
    /* G_INTRINSIC_ROUNDEVEN */
    type0, type0, 
    /* G_READCYCLECOUNTER */
    type0, 
    /* G_LOAD */
    type0, ptype1, 
    /* G_SEXTLOAD */
    type0, ptype1, 
    /* G_ZEXTLOAD */
    type0, ptype1, 
    /* G_INDEXED_LOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_SEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_INDEXED_ZEXTLOAD */
    type0, ptype1, ptype1, type2, -1, 
    /* G_STORE */
    type0, ptype1, 
    /* G_INDEXED_STORE */
    ptype0, type1, ptype0, ptype2, -1, 
    /* G_ATOMIC_CMPXCHG_WITH_SUCCESS */
    type0, type1, type2, type0, type0, 
    /* G_ATOMIC_CMPXCHG */
    type0, ptype1, type0, type0, 
    /* G_ATOMICRMW_XCHG */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_ADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_SUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_AND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_NAND */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_OR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_XOR */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_MIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FADD */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FSUB */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMAX */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_FMIN */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UINC_WRAP */
    type0, ptype1, type0, 
    /* G_ATOMICRMW_UDEC_WRAP */
    type0, ptype1, type0, 
    /* G_FENCE */
    i32imm, i32imm, 
    /* G_BRCOND */
    type0, -1, 
    /* G_BRINDIRECT */
    type0, 
    /* G_INVOKE_REGION_START */
    /* G_INTRINSIC */
    -1, 
    /* G_INTRINSIC_W_SIDE_EFFECTS */
    -1, 
    /* G_ANYEXT */
    type0, type1, 
    /* G_TRUNC */
    type0, type1, 
    /* G_CONSTANT */
    type0, -1, 
    /* G_FCONSTANT */
    type0, -1, 
    /* G_VASTART */
    type0, 
    /* G_VAARG */
    type0, type1, -1, 
    /* G_SEXT */
    type0, type1, 
    /* G_SEXT_INREG */
    type0, type0, untyped_imm_0, 
    /* G_ZEXT */
    type0, type1, 
    /* G_SHL */
    type0, type0, type1, 
    /* G_LSHR */
    type0, type0, type1, 
    /* G_ASHR */
    type0, type0, type1, 
    /* G_FSHL */
    type0, type0, type0, type1, 
    /* G_FSHR */
    type0, type0, type0, type1, 
    /* G_ROTR */
    type0, type0, type1, 
    /* G_ROTL */
    type0, type0, type1, 
    /* G_ICMP */
    type0, -1, type1, type1, 
    /* G_FCMP */
    type0, -1, type1, type1, 
    /* G_SELECT */
    type0, type1, type0, type0, 
    /* G_UADDO */
    type0, type1, type0, type0, 
    /* G_UADDE */
    type0, type1, type0, type0, type1, 
    /* G_USUBO */
    type0, type1, type0, type0, 
    /* G_USUBE */
    type0, type1, type0, type0, type1, 
    /* G_SADDO */
    type0, type1, type0, type0, 
    /* G_SADDE */
    type0, type1, type0, type0, type1, 
    /* G_SSUBO */
    type0, type1, type0, type0, 
    /* G_SSUBE */
    type0, type1, type0, type0, type1, 
    /* G_UMULO */
    type0, type1, type0, type0, 
    /* G_SMULO */
    type0, type1, type0, type0, 
    /* G_UMULH */
    type0, type0, type0, 
    /* G_SMULH */
    type0, type0, type0, 
    /* G_UADDSAT */
    type0, type0, type0, 
    /* G_SADDSAT */
    type0, type0, type0, 
    /* G_USUBSAT */
    type0, type0, type0, 
    /* G_SSUBSAT */
    type0, type0, type0, 
    /* G_USHLSAT */
    type0, type0, type1, 
    /* G_SSHLSAT */
    type0, type0, type1, 
    /* G_SMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UMULFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIX */
    type0, type0, type0, untyped_imm_0, 
    /* G_SDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_UDIVFIXSAT */
    type0, type0, type0, untyped_imm_0, 
    /* G_FADD */
    type0, type0, type0, 
    /* G_FSUB */
    type0, type0, type0, 
    /* G_FMUL */
    type0, type0, type0, 
    /* G_FMA */
    type0, type0, type0, type0, 
    /* G_FMAD */
    type0, type0, type0, type0, 
    /* G_FDIV */
    type0, type0, type0, 
    /* G_FREM */
    type0, type0, type0, 
    /* G_FPOW */
    type0, type0, type0, 
    /* G_FPOWI */
    type0, type0, type1, 
    /* G_FEXP */
    type0, type0, 
    /* G_FEXP2 */
    type0, type0, 
    /* G_FLOG */
    type0, type0, 
    /* G_FLOG2 */
    type0, type0, 
    /* G_FLOG10 */
    type0, type0, 
    /* G_FNEG */
    type0, type0, 
    /* G_FPEXT */
    type0, type1, 
    /* G_FPTRUNC */
    type0, type1, 
    /* G_FPTOSI */
    type0, type1, 
    /* G_FPTOUI */
    type0, type1, 
    /* G_SITOFP */
    type0, type1, 
    /* G_UITOFP */
    type0, type1, 
    /* G_FABS */
    type0, type0, 
    /* G_FCOPYSIGN */
    type0, type0, type1, 
    /* G_IS_FPCLASS */
    type0, type1, -1, 
    /* G_FCANONICALIZE */
    type0, type0, 
    /* G_FMINNUM */
    type0, type0, type0, 
    /* G_FMAXNUM */
    type0, type0, type0, 
    /* G_FMINNUM_IEEE */
    type0, type0, type0, 
    /* G_FMAXNUM_IEEE */
    type0, type0, type0, 
    /* G_FMINIMUM */
    type0, type0, type0, 
    /* G_FMAXIMUM */
    type0, type0, type0, 
    /* G_PTR_ADD */
    ptype0, ptype0, type1, 
    /* G_PTRMASK */
    ptype0, ptype0, type1, 
    /* G_SMIN */
    type0, type0, type0, 
    /* G_SMAX */
    type0, type0, type0, 
    /* G_UMIN */
    type0, type0, type0, 
    /* G_UMAX */
    type0, type0, type0, 
    /* G_ABS */
    type0, type0, 
    /* G_LROUND */
    type0, type1, 
    /* G_LLROUND */
    type0, type1, 
    /* G_BR */
    -1, 
    /* G_BRJT */
    ptype0, -1, type1, 
    /* G_INSERT_VECTOR_ELT */
    type0, type0, type1, type2, 
    /* G_EXTRACT_VECTOR_ELT */
    type0, type1, type2, 
    /* G_SHUFFLE_VECTOR */
    type0, type1, type1, -1, 
    /* G_CTTZ */
    type0, type1, 
    /* G_CTTZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTLZ */
    type0, type1, 
    /* G_CTLZ_ZERO_UNDEF */
    type0, type1, 
    /* G_CTPOP */
    type0, type1, 
    /* G_BSWAP */
    type0, type0, 
    /* G_BITREVERSE */
    type0, type0, 
    /* G_FCEIL */
    type0, type0, 
    /* G_FCOS */
    type0, type0, 
    /* G_FSIN */
    type0, type0, 
    /* G_FSQRT */
    type0, type0, 
    /* G_FFLOOR */
    type0, type0, 
    /* G_FRINT */
    type0, type0, 
    /* G_FNEARBYINT */
    type0, type0, 
    /* G_ADDRSPACE_CAST */
    type0, type1, 
    /* G_BLOCK_ADDR */
    type0, -1, 
    /* G_JUMP_TABLE */
    type0, -1, 
    /* G_DYN_STACKALLOC */
    ptype0, type1, i32imm, 
    /* G_STRICT_FADD */
    type0, type0, type0, 
    /* G_STRICT_FSUB */
    type0, type0, type0, 
    /* G_STRICT_FMUL */
    type0, type0, type0, 
    /* G_STRICT_FDIV */
    type0, type0, type0, 
    /* G_STRICT_FREM */
    type0, type0, type0, 
    /* G_STRICT_FMA */
    type0, type0, type0, type0, 
    /* G_STRICT_FSQRT */
    type0, type0, 
    /* G_READ_REGISTER */
    type0, -1, 
    /* G_WRITE_REGISTER */
    -1, type0, 
    /* G_MEMCPY */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMCPY_INLINE */
    ptype0, ptype1, type2, 
    /* G_MEMMOVE */
    ptype0, ptype1, type2, untyped_imm_0, 
    /* G_MEMSET */
    ptype0, type1, type2, untyped_imm_0, 
    /* G_BZERO */
    ptype0, type1, untyped_imm_0, 
    /* G_VECREDUCE_SEQ_FADD */
    type0, type1, type2, 
    /* G_VECREDUCE_SEQ_FMUL */
    type0, type1, type2, 
    /* G_VECREDUCE_FADD */
    type0, type1, 
    /* G_VECREDUCE_FMUL */
    type0, type1, 
    /* G_VECREDUCE_FMAX */
    type0, type1, 
    /* G_VECREDUCE_FMIN */
    type0, type1, 
    /* G_VECREDUCE_ADD */
    type0, type1, 
    /* G_VECREDUCE_MUL */
    type0, type1, 
    /* G_VECREDUCE_AND */
    type0, type1, 
    /* G_VECREDUCE_OR */
    type0, type1, 
    /* G_VECREDUCE_XOR */
    type0, type1, 
    /* G_VECREDUCE_SMAX */
    type0, type1, 
    /* G_VECREDUCE_SMIN */
    type0, type1, 
    /* G_VECREDUCE_UMAX */
    type0, type1, 
    /* G_VECREDUCE_UMIN */
    type0, type1, 
    /* G_SBFX */
    type0, type0, type1, type1, 
    /* G_UBFX */
    type0, type0, type1, type1, 
    /* CALL_PARAMS */
    function32_op, 
    /* CALL_PARAMS_S */
    function32_op, 
    /* CALL_RESULTS */
    /* CALL_RESULTS_S */
    /* CATCHRET */
    bb_op, bb_op, 
    /* CATCHRET_S */
    bb_op, bb_op, 
    /* CLEANUPRET */
    /* CLEANUPRET_S */
    /* COMPILER_FENCE */
    /* COMPILER_FENCE_S */
    /* RET_CALL_RESULTS */
    /* RET_CALL_RESULTS_S */
    /* ABS_F32 */
    F32, F32, 
    /* ABS_F32_S */
    /* ABS_F32x4 */
    V128, V128, 
    /* ABS_F32x4_S */
    /* ABS_F64 */
    F64, F64, 
    /* ABS_F64_S */
    /* ABS_F64x2 */
    V128, V128, 
    /* ABS_F64x2_S */
    /* ABS_I16x8 */
    V128, V128, 
    /* ABS_I16x8_S */
    /* ABS_I32x4 */
    V128, V128, 
    /* ABS_I32x4_S */
    /* ABS_I64x2 */
    V128, V128, 
    /* ABS_I64x2_S */
    /* ABS_I8x16 */
    V128, V128, 
    /* ABS_I8x16_S */
    /* ADD_F32 */
    F32, F32, F32, 
    /* ADD_F32_S */
    /* ADD_F32x4 */
    V128, V128, V128, 
    /* ADD_F32x4_S */
    /* ADD_F64 */
    F64, F64, F64, 
    /* ADD_F64_S */
    /* ADD_F64x2 */
    V128, V128, V128, 
    /* ADD_F64x2_S */
    /* ADD_I16x8 */
    V128, V128, V128, 
    /* ADD_I16x8_S */
    /* ADD_I32 */
    I32, I32, I32, 
    /* ADD_I32_S */
    /* ADD_I32x4 */
    V128, V128, V128, 
    /* ADD_I32x4_S */
    /* ADD_I64 */
    I64, I64, I64, 
    /* ADD_I64_S */
    /* ADD_I64x2 */
    V128, V128, V128, 
    /* ADD_I64x2_S */
    /* ADD_I8x16 */
    V128, V128, V128, 
    /* ADD_I8x16_S */
    /* ADD_SAT_S_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_S_I16x8_S */
    /* ADD_SAT_S_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_S_I8x16_S */
    /* ADD_SAT_U_I16x8 */
    V128, V128, V128, 
    /* ADD_SAT_U_I16x8_S */
    /* ADD_SAT_U_I8x16 */
    V128, V128, V128, 
    /* ADD_SAT_U_I8x16_S */
    /* ADJCALLSTACKDOWN */
    i32imm, i32imm, 
    /* ADJCALLSTACKDOWN_S */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP */
    i32imm, i32imm, 
    /* ADJCALLSTACKUP_S */
    i32imm, i32imm, 
    /* ALLTRUE_I16x8 */
    I32, V128, 
    /* ALLTRUE_I16x8_S */
    /* ALLTRUE_I32x4 */
    I32, V128, 
    /* ALLTRUE_I32x4_S */
    /* ALLTRUE_I64x2 */
    I32, V128, 
    /* ALLTRUE_I64x2_S */
    /* ALLTRUE_I8x16 */
    I32, V128, 
    /* ALLTRUE_I8x16_S */
    /* AND */
    V128, V128, V128, 
    /* ANDNOT */
    V128, V128, V128, 
    /* ANDNOT_S */
    /* AND_I32 */
    I32, I32, I32, 
    /* AND_I32_S */
    /* AND_I64 */
    I64, I64, I64, 
    /* AND_I64_S */
    /* AND_S */
    /* ANYTRUE */
    I32, V128, 
    /* ANYTRUE_S */
    /* ARGUMENT_externref */
    EXTERNREF, i32imm, 
    /* ARGUMENT_externref_S */
    i32imm, 
    /* ARGUMENT_f32 */
    F32, i32imm, 
    /* ARGUMENT_f32_S */
    i32imm, 
    /* ARGUMENT_f64 */
    F64, i32imm, 
    /* ARGUMENT_f64_S */
    i32imm, 
    /* ARGUMENT_funcref */
    FUNCREF, i32imm, 
    /* ARGUMENT_funcref_S */
    i32imm, 
    /* ARGUMENT_i32 */
    I32, i32imm, 
    /* ARGUMENT_i32_S */
    i32imm, 
    /* ARGUMENT_i64 */
    I64, i32imm, 
    /* ARGUMENT_i64_S */
    i32imm, 
    /* ARGUMENT_v16i8 */
    V128, i32imm, 
    /* ARGUMENT_v16i8_S */
    i32imm, 
    /* ARGUMENT_v2f64 */
    V128, i32imm, 
    /* ARGUMENT_v2f64_S */
    i32imm, 
    /* ARGUMENT_v2i64 */
    V128, i32imm, 
    /* ARGUMENT_v2i64_S */
    i32imm, 
    /* ARGUMENT_v4f32 */
    V128, i32imm, 
    /* ARGUMENT_v4f32_S */
    i32imm, 
    /* ARGUMENT_v4i32 */
    V128, i32imm, 
    /* ARGUMENT_v4i32_S */
    i32imm, 
    /* ARGUMENT_v8i16 */
    V128, i32imm, 
    /* ARGUMENT_v8i16_S */
    i32imm, 
    /* ATOMIC_FENCE */
    i8imm, 
    /* ATOMIC_FENCE_S */
    i8imm, 
    /* ATOMIC_LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* ATOMIC_LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* ATOMIC_LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW16_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW16_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW16_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW16_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW16_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW32_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW32_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW32_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW8_U_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW8_U_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW8_U_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW8_U_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW8_U_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_ADD_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_ADD_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_ADD_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_ADD_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_ADD_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_ADD_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_AND_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_AND_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_AND_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_AND_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_AND_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_AND_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, I32, 
    /* ATOMIC_RMW_CMPXCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, I64, 
    /* ATOMIC_RMW_CMPXCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_OR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_OR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_OR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_OR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_OR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_OR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_SUB_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_SUB_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_SUB_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_SUB_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_SUB_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_SUB_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XCHG_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XCHG_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XCHG_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XCHG_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XCHG_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XCHG_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I32_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* ATOMIC_RMW_XOR_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I32_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* ATOMIC_RMW_XOR_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_RMW_XOR_I64_A32 */
    I64, P2Align, offset32_op, I32, I64, 
    /* ATOMIC_RMW_XOR_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_RMW_XOR_I64_A64 */
    I64, P2Align, offset64_op, I64, I64, 
    /* ATOMIC_RMW_XOR_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* ATOMIC_STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* ATOMIC_STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* ATOMIC_STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* ATOMIC_STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* ATOMIC_STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* ATOMIC_STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* AVGR_U_I16x8 */
    V128, V128, V128, 
    /* AVGR_U_I16x8_S */
    /* AVGR_U_I8x16 */
    V128, V128, V128, 
    /* AVGR_U_I8x16_S */
    /* BITMASK_I16x8 */
    I32, V128, 
    /* BITMASK_I16x8_S */
    /* BITMASK_I32x4 */
    I32, V128, 
    /* BITMASK_I32x4_S */
    /* BITMASK_I64x2 */
    I32, V128, 
    /* BITMASK_I64x2_S */
    /* BITMASK_I8x16 */
    I32, V128, 
    /* BITMASK_I8x16_S */
    /* BITSELECT */
    V128, V128, V128, V128, 
    /* BITSELECT_S */
    /* BLOCK */
    Signature, 
    /* BLOCK_S */
    Signature, 
    /* BR */
    bb_op, 
    /* BR_IF */
    bb_op, I32, 
    /* BR_IF_S */
    bb_op, 
    /* BR_S */
    bb_op, 
    /* BR_TABLE_I32 */
    I32, 
    /* BR_TABLE_I32_S */
    brlist, 
    /* BR_TABLE_I64 */
    I64, 
    /* BR_TABLE_I64_S */
    brlist, 
    /* BR_UNLESS */
    bb_op, I32, 
    /* BR_UNLESS_S */
    bb_op, 
    /* CALL */
    function32_op, 
    /* CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* CALL_S */
    function32_op, 
    /* CATCH */
    tag_op, 
    /* CATCH_ALL */
    /* CATCH_ALL_S */
    /* CATCH_S */
    tag_op, 
    /* CEIL_F32 */
    F32, F32, 
    /* CEIL_F32_S */
    /* CEIL_F32x4 */
    V128, V128, 
    /* CEIL_F32x4_S */
    /* CEIL_F64 */
    F64, F64, 
    /* CEIL_F64_S */
    /* CEIL_F64x2 */
    V128, V128, 
    /* CEIL_F64x2_S */
    /* CLZ_I32 */
    I32, I32, 
    /* CLZ_I32_S */
    /* CLZ_I64 */
    I64, I64, 
    /* CLZ_I64_S */
    /* CONST_F32 */
    F32, f32imm_op, 
    /* CONST_F32_S */
    f32imm_op, 
    /* CONST_F64 */
    F64, f64imm_op, 
    /* CONST_F64_S */
    f64imm_op, 
    /* CONST_I32 */
    I32, i32imm_op, 
    /* CONST_I32_S */
    i32imm_op, 
    /* CONST_I64 */
    I64, i64imm_op, 
    /* CONST_I64_S */
    i64imm_op, 
    /* CONST_V128_F32x4 */
    V128, f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F32x4_S */
    f32imm_op, f32imm_op, f32imm_op, f32imm_op, 
    /* CONST_V128_F64x2 */
    V128, f64imm_op, f64imm_op, 
    /* CONST_V128_F64x2_S */
    f64imm_op, f64imm_op, 
    /* CONST_V128_I16x8 */
    V128, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I16x8_S */
    vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, vec_i16imm_op, 
    /* CONST_V128_I32x4 */
    V128, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I32x4_S */
    vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, vec_i32imm_op, 
    /* CONST_V128_I64x2 */
    V128, vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I64x2_S */
    vec_i64imm_op, vec_i64imm_op, 
    /* CONST_V128_I8x16 */
    V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* CONST_V128_I8x16_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* COPYSIGN_F32 */
    F32, F32, F32, 
    /* COPYSIGN_F32_S */
    /* COPYSIGN_F64 */
    F64, F64, F64, 
    /* COPYSIGN_F64_S */
    /* COPY_EXTERNREF */
    EXTERNREF, EXTERNREF, 
    /* COPY_EXTERNREF_S */
    /* COPY_F32 */
    F32, F32, 
    /* COPY_F32_S */
    /* COPY_F64 */
    F64, F64, 
    /* COPY_F64_S */
    /* COPY_FUNCREF */
    FUNCREF, FUNCREF, 
    /* COPY_FUNCREF_S */
    /* COPY_I32 */
    I32, I32, 
    /* COPY_I32_S */
    /* COPY_I64 */
    I64, I64, 
    /* COPY_I64_S */
    /* COPY_V128 */
    V128, V128, 
    /* COPY_V128_S */
    /* CTZ_I32 */
    I32, I32, 
    /* CTZ_I32_S */
    /* CTZ_I64 */
    I64, I64, 
    /* CTZ_I64_S */
    /* DEBUG_UNREACHABLE */
    /* DEBUG_UNREACHABLE_S */
    /* DELEGATE */
    bb_op, 
    /* DELEGATE_S */
    bb_op, 
    /* DIV_F32 */
    F32, F32, F32, 
    /* DIV_F32_S */
    /* DIV_F32x4 */
    V128, V128, V128, 
    /* DIV_F32x4_S */
    /* DIV_F64 */
    F64, F64, F64, 
    /* DIV_F64_S */
    /* DIV_F64x2 */
    V128, V128, V128, 
    /* DIV_F64x2_S */
    /* DIV_S_I32 */
    I32, I32, I32, 
    /* DIV_S_I32_S */
    /* DIV_S_I64 */
    I64, I64, I64, 
    /* DIV_S_I64_S */
    /* DIV_U_I32 */
    I32, I32, I32, 
    /* DIV_U_I32_S */
    /* DIV_U_I64 */
    I64, I64, I64, 
    /* DIV_U_I64_S */
    /* DOT */
    V128, V128, V128, 
    /* DOT_S */
    /* DROP_EXTERNREF */
    EXTERNREF, 
    /* DROP_EXTERNREF_S */
    /* DROP_F32 */
    F32, 
    /* DROP_F32_S */
    /* DROP_F64 */
    F64, 
    /* DROP_F64_S */
    /* DROP_FUNCREF */
    FUNCREF, 
    /* DROP_FUNCREF_S */
    /* DROP_I32 */
    I32, 
    /* DROP_I32_S */
    /* DROP_I64 */
    I64, 
    /* DROP_I64_S */
    /* DROP_V128 */
    V128, 
    /* DROP_V128_S */
    /* ELSE */
    /* ELSE_S */
    /* END */
    /* END_BLOCK */
    /* END_BLOCK_S */
    /* END_FUNCTION */
    /* END_FUNCTION_S */
    /* END_IF */
    /* END_IF_S */
    /* END_LOOP */
    /* END_LOOP_S */
    /* END_S */
    /* END_TRY */
    /* END_TRY_S */
    /* EQZ_I32 */
    I32, I32, 
    /* EQZ_I32_S */
    /* EQZ_I64 */
    I32, I64, 
    /* EQZ_I64_S */
    /* EQ_F32 */
    I32, F32, F32, 
    /* EQ_F32_S */
    /* EQ_F32x4 */
    V128, V128, V128, 
    /* EQ_F32x4_S */
    /* EQ_F64 */
    I32, F64, F64, 
    /* EQ_F64_S */
    /* EQ_F64x2 */
    V128, V128, V128, 
    /* EQ_F64x2_S */
    /* EQ_I16x8 */
    V128, V128, V128, 
    /* EQ_I16x8_S */
    /* EQ_I32 */
    I32, I32, I32, 
    /* EQ_I32_S */
    /* EQ_I32x4 */
    V128, V128, V128, 
    /* EQ_I32x4_S */
    /* EQ_I64 */
    I32, I64, I64, 
    /* EQ_I64_S */
    /* EQ_I64x2 */
    V128, V128, V128, 
    /* EQ_I64x2_S */
    /* EQ_I8x16 */
    V128, V128, V128, 
    /* EQ_I8x16_S */
    /* EXTMUL_HIGH_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I16x8_S */
    /* EXTMUL_HIGH_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I32x4_S */
    /* EXTMUL_HIGH_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_S_I64x2_S */
    /* EXTMUL_HIGH_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I16x8_S */
    /* EXTMUL_HIGH_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I32x4_S */
    /* EXTMUL_HIGH_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_HIGH_U_I64x2_S */
    /* EXTMUL_LOW_S_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I16x8_S */
    /* EXTMUL_LOW_S_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I32x4_S */
    /* EXTMUL_LOW_S_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_S_I64x2_S */
    /* EXTMUL_LOW_U_I16x8 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I16x8_S */
    /* EXTMUL_LOW_U_I32x4 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I32x4_S */
    /* EXTMUL_LOW_U_I64x2 */
    V128, V128, V128, 
    /* EXTMUL_LOW_U_I64x2_S */
    /* EXTRACT_LANE_F32x4 */
    F32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2 */
    F64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_F64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I16x8_u_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4 */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I32x4_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2 */
    I64, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I64x2_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_s_S */
    vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u */
    I32, V128, vec_i8imm_op, 
    /* EXTRACT_LANE_I8x16_u_S */
    vec_i8imm_op, 
    /* F32_CONVERT_S_I32 */
    F32, I32, 
    /* F32_CONVERT_S_I32_S */
    /* F32_CONVERT_S_I64 */
    F32, I64, 
    /* F32_CONVERT_S_I64_S */
    /* F32_CONVERT_U_I32 */
    F32, I32, 
    /* F32_CONVERT_U_I32_S */
    /* F32_CONVERT_U_I64 */
    F32, I64, 
    /* F32_CONVERT_U_I64_S */
    /* F32_DEMOTE_F64 */
    F32, F64, 
    /* F32_DEMOTE_F64_S */
    /* F32_REINTERPRET_I32 */
    F32, I32, 
    /* F32_REINTERPRET_I32_S */
    /* F64_CONVERT_S_I32 */
    F64, I32, 
    /* F64_CONVERT_S_I32_S */
    /* F64_CONVERT_S_I64 */
    F64, I64, 
    /* F64_CONVERT_S_I64_S */
    /* F64_CONVERT_U_I32 */
    F64, I32, 
    /* F64_CONVERT_U_I32_S */
    /* F64_CONVERT_U_I64 */
    F64, I64, 
    /* F64_CONVERT_U_I64_S */
    /* F64_PROMOTE_F32 */
    F64, F32, 
    /* F64_PROMOTE_F32_S */
    /* F64_REINTERPRET_I64 */
    F64, I64, 
    /* F64_REINTERPRET_I64_S */
    /* FALLTHROUGH_RETURN */
    /* FALLTHROUGH_RETURN_S */
    /* FLOOR_F32 */
    F32, F32, 
    /* FLOOR_F32_S */
    /* FLOOR_F32x4 */
    V128, V128, 
    /* FLOOR_F32x4_S */
    /* FLOOR_F64 */
    F64, F64, 
    /* FLOOR_F64_S */
    /* FLOOR_F64x2 */
    V128, V128, 
    /* FLOOR_F64x2_S */
    /* FP_TO_SINT_I32_F32 */
    I32, F32, 
    /* FP_TO_SINT_I32_F32_S */
    /* FP_TO_SINT_I32_F64 */
    I32, F64, 
    /* FP_TO_SINT_I32_F64_S */
    /* FP_TO_SINT_I64_F32 */
    I64, F32, 
    /* FP_TO_SINT_I64_F32_S */
    /* FP_TO_SINT_I64_F64 */
    I64, F64, 
    /* FP_TO_SINT_I64_F64_S */
    /* FP_TO_UINT_I32_F32 */
    I32, F32, 
    /* FP_TO_UINT_I32_F32_S */
    /* FP_TO_UINT_I32_F64 */
    I32, F64, 
    /* FP_TO_UINT_I32_F64_S */
    /* FP_TO_UINT_I64_F32 */
    I64, F32, 
    /* FP_TO_UINT_I64_F32_S */
    /* FP_TO_UINT_I64_F64 */
    I64, F64, 
    /* FP_TO_UINT_I64_F64_S */
    /* GE_F32 */
    I32, F32, F32, 
    /* GE_F32_S */
    /* GE_F32x4 */
    V128, V128, V128, 
    /* GE_F32x4_S */
    /* GE_F64 */
    I32, F64, F64, 
    /* GE_F64_S */
    /* GE_F64x2 */
    V128, V128, V128, 
    /* GE_F64x2_S */
    /* GE_S_I16x8 */
    V128, V128, V128, 
    /* GE_S_I16x8_S */
    /* GE_S_I32 */
    I32, I32, I32, 
    /* GE_S_I32_S */
    /* GE_S_I32x4 */
    V128, V128, V128, 
    /* GE_S_I32x4_S */
    /* GE_S_I64 */
    I32, I64, I64, 
    /* GE_S_I64_S */
    /* GE_S_I64x2 */
    V128, V128, V128, 
    /* GE_S_I64x2_S */
    /* GE_S_I8x16 */
    V128, V128, V128, 
    /* GE_S_I8x16_S */
    /* GE_U_I16x8 */
    V128, V128, V128, 
    /* GE_U_I16x8_S */
    /* GE_U_I32 */
    I32, I32, I32, 
    /* GE_U_I32_S */
    /* GE_U_I32x4 */
    V128, V128, V128, 
    /* GE_U_I32x4_S */
    /* GE_U_I64 */
    I32, I64, I64, 
    /* GE_U_I64_S */
    /* GE_U_I8x16 */
    V128, V128, V128, 
    /* GE_U_I8x16_S */
    /* GLOBAL_GET_EXTERNREF */
    EXTERNREF, global_op32, 
    /* GLOBAL_GET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_GET_F32 */
    F32, global_op32, 
    /* GLOBAL_GET_F32_S */
    global_op32, 
    /* GLOBAL_GET_F64 */
    F64, global_op32, 
    /* GLOBAL_GET_F64_S */
    global_op32, 
    /* GLOBAL_GET_FUNCREF */
    FUNCREF, global_op32, 
    /* GLOBAL_GET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_GET_I32 */
    I32, global_op32, 
    /* GLOBAL_GET_I32_S */
    global_op32, 
    /* GLOBAL_GET_I64 */
    I64, global_op64, 
    /* GLOBAL_GET_I64_S */
    global_op64, 
    /* GLOBAL_GET_V128 */
    V128, global_op32, 
    /* GLOBAL_GET_V128_S */
    global_op32, 
    /* GLOBAL_SET_EXTERNREF */
    global_op32, EXTERNREF, 
    /* GLOBAL_SET_EXTERNREF_S */
    global_op32, 
    /* GLOBAL_SET_F32 */
    global_op32, F32, 
    /* GLOBAL_SET_F32_S */
    global_op32, 
    /* GLOBAL_SET_F64 */
    global_op32, F64, 
    /* GLOBAL_SET_F64_S */
    global_op32, 
    /* GLOBAL_SET_FUNCREF */
    global_op32, FUNCREF, 
    /* GLOBAL_SET_FUNCREF_S */
    global_op32, 
    /* GLOBAL_SET_I32 */
    global_op32, I32, 
    /* GLOBAL_SET_I32_S */
    global_op32, 
    /* GLOBAL_SET_I64 */
    global_op64, I64, 
    /* GLOBAL_SET_I64_S */
    global_op64, 
    /* GLOBAL_SET_V128 */
    global_op32, V128, 
    /* GLOBAL_SET_V128_S */
    global_op32, 
    /* GT_F32 */
    I32, F32, F32, 
    /* GT_F32_S */
    /* GT_F32x4 */
    V128, V128, V128, 
    /* GT_F32x4_S */
    /* GT_F64 */
    I32, F64, F64, 
    /* GT_F64_S */
    /* GT_F64x2 */
    V128, V128, V128, 
    /* GT_F64x2_S */
    /* GT_S_I16x8 */
    V128, V128, V128, 
    /* GT_S_I16x8_S */
    /* GT_S_I32 */
    I32, I32, I32, 
    /* GT_S_I32_S */
    /* GT_S_I32x4 */
    V128, V128, V128, 
    /* GT_S_I32x4_S */
    /* GT_S_I64 */
    I32, I64, I64, 
    /* GT_S_I64_S */
    /* GT_S_I64x2 */
    V128, V128, V128, 
    /* GT_S_I64x2_S */
    /* GT_S_I8x16 */
    V128, V128, V128, 
    /* GT_S_I8x16_S */
    /* GT_U_I16x8 */
    V128, V128, V128, 
    /* GT_U_I16x8_S */
    /* GT_U_I32 */
    I32, I32, I32, 
    /* GT_U_I32_S */
    /* GT_U_I32x4 */
    V128, V128, V128, 
    /* GT_U_I32x4_S */
    /* GT_U_I64 */
    I32, I64, I64, 
    /* GT_U_I64_S */
    /* GT_U_I8x16 */
    V128, V128, V128, 
    /* GT_U_I8x16_S */
    /* I32_EXTEND16_S_I32 */
    I32, I32, 
    /* I32_EXTEND16_S_I32_S */
    /* I32_EXTEND8_S_I32 */
    I32, I32, 
    /* I32_EXTEND8_S_I32_S */
    /* I32_REINTERPRET_F32 */
    I32, F32, 
    /* I32_REINTERPRET_F32_S */
    /* I32_TRUNC_S_F32 */
    I32, F32, 
    /* I32_TRUNC_S_F32_S */
    /* I32_TRUNC_S_F64 */
    I32, F64, 
    /* I32_TRUNC_S_F64_S */
    /* I32_TRUNC_S_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_S_SAT_F32_S */
    /* I32_TRUNC_S_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_S_SAT_F64_S */
    /* I32_TRUNC_U_F32 */
    I32, F32, 
    /* I32_TRUNC_U_F32_S */
    /* I32_TRUNC_U_F64 */
    I32, F64, 
    /* I32_TRUNC_U_F64_S */
    /* I32_TRUNC_U_SAT_F32 */
    I32, F32, 
    /* I32_TRUNC_U_SAT_F32_S */
    /* I32_TRUNC_U_SAT_F64 */
    I32, F64, 
    /* I32_TRUNC_U_SAT_F64_S */
    /* I32_WRAP_I64 */
    I32, I64, 
    /* I32_WRAP_I64_S */
    /* I64_EXTEND16_S_I64 */
    I64, I64, 
    /* I64_EXTEND16_S_I64_S */
    /* I64_EXTEND32_S_I64 */
    I64, I64, 
    /* I64_EXTEND32_S_I64_S */
    /* I64_EXTEND8_S_I64 */
    I64, I64, 
    /* I64_EXTEND8_S_I64_S */
    /* I64_EXTEND_S_I32 */
    I64, I32, 
    /* I64_EXTEND_S_I32_S */
    /* I64_EXTEND_U_I32 */
    I64, I32, 
    /* I64_EXTEND_U_I32_S */
    /* I64_REINTERPRET_F64 */
    I64, F64, 
    /* I64_REINTERPRET_F64_S */
    /* I64_TRUNC_S_F32 */
    I64, F32, 
    /* I64_TRUNC_S_F32_S */
    /* I64_TRUNC_S_F64 */
    I64, F64, 
    /* I64_TRUNC_S_F64_S */
    /* I64_TRUNC_S_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_S_SAT_F32_S */
    /* I64_TRUNC_S_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_S_SAT_F64_S */
    /* I64_TRUNC_U_F32 */
    I64, F32, 
    /* I64_TRUNC_U_F32_S */
    /* I64_TRUNC_U_F64 */
    I64, F64, 
    /* I64_TRUNC_U_F64_S */
    /* I64_TRUNC_U_SAT_F32 */
    I64, F32, 
    /* I64_TRUNC_U_SAT_F32_S */
    /* I64_TRUNC_U_SAT_F64 */
    I64, F64, 
    /* I64_TRUNC_U_SAT_F64_S */
    /* IF */
    Signature, I32, 
    /* IF_S */
    Signature, 
    /* LANESELECT_I16x8 */
    V128, V128, V128, V128, 
    /* LANESELECT_I16x8_S */
    /* LANESELECT_I32x4 */
    V128, V128, V128, V128, 
    /* LANESELECT_I32x4_S */
    /* LANESELECT_I64x2 */
    V128, V128, V128, V128, 
    /* LANESELECT_I64x2_S */
    /* LANESELECT_I8x16 */
    V128, V128, V128, V128, 
    /* LANESELECT_I8x16_S */
    /* LE_F32 */
    I32, F32, F32, 
    /* LE_F32_S */
    /* LE_F32x4 */
    V128, V128, V128, 
    /* LE_F32x4_S */
    /* LE_F64 */
    I32, F64, F64, 
    /* LE_F64_S */
    /* LE_F64x2 */
    V128, V128, V128, 
    /* LE_F64x2_S */
    /* LE_S_I16x8 */
    V128, V128, V128, 
    /* LE_S_I16x8_S */
    /* LE_S_I32 */
    I32, I32, I32, 
    /* LE_S_I32_S */
    /* LE_S_I32x4 */
    V128, V128, V128, 
    /* LE_S_I32x4_S */
    /* LE_S_I64 */
    I32, I64, I64, 
    /* LE_S_I64_S */
    /* LE_S_I64x2 */
    V128, V128, V128, 
    /* LE_S_I64x2_S */
    /* LE_S_I8x16 */
    V128, V128, V128, 
    /* LE_S_I8x16_S */
    /* LE_U_I16x8 */
    V128, V128, V128, 
    /* LE_U_I16x8_S */
    /* LE_U_I32 */
    I32, I32, I32, 
    /* LE_U_I32_S */
    /* LE_U_I32x4 */
    V128, V128, V128, 
    /* LE_U_I32x4_S */
    /* LE_U_I64 */
    I32, I64, I64, 
    /* LE_U_I64_S */
    /* LE_U_I8x16 */
    V128, V128, V128, 
    /* LE_U_I8x16_S */
    /* LOAD16_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD16_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD16_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD16_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD16_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD16_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD16_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD16_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD16_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD32_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD32_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD32_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD32_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD32_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD32_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD64_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD64_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD64_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD64_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_SPLAT_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD8_SPLAT_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_SPLAT_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD8_SPLAT_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_S_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_S_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_S_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_S_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_S_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_S_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD8_U_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD8_U_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD8_U_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD8_U_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD8_U_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD8_U_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_S_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_S_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_S_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_S_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I16x8_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I16x8_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I16x8_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I16x8_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_EXTEND_U_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_EXTEND_U_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_EXTEND_U_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_EXTEND_U_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F32_A32 */
    F32, P2Align, offset32_op, I32, 
    /* LOAD_F32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F32_A64 */
    F32, P2Align, offset64_op, I64, 
    /* LOAD_F32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_F64_A32 */
    F64, P2Align, offset32_op, I32, 
    /* LOAD_F64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_F64_A64 */
    F64, P2Align, offset64_op, I64, 
    /* LOAD_F64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I32_A32 */
    I32, P2Align, offset32_op, I32, 
    /* LOAD_I32_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I32_A64 */
    I32, P2Align, offset64_op, I64, 
    /* LOAD_I32_A64_S */
    P2Align, offset64_op, 
    /* LOAD_I64_A32 */
    I64, P2Align, offset32_op, I32, 
    /* LOAD_I64_A32_S */
    P2Align, offset32_op, 
    /* LOAD_I64_A64 */
    I64, P2Align, offset64_op, I64, 
    /* LOAD_I64_A64_S */
    P2Align, offset64_op, 
    /* LOAD_LANE_I16x8_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I16x8_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I32x4_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I64x2_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A32 */
    V128, P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* LOAD_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* LOAD_LANE_I8x16_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* LOAD_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* LOAD_V128_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_V128_A32_S */
    P2Align, offset32_op, 
    /* LOAD_V128_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_V128_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I32x4_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I32x4_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I32x4_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I32x4_A64_S */
    P2Align, offset64_op, 
    /* LOAD_ZERO_I64x2_A32 */
    V128, P2Align, offset32_op, I32, 
    /* LOAD_ZERO_I64x2_A32_S */
    P2Align, offset32_op, 
    /* LOAD_ZERO_I64x2_A64 */
    V128, P2Align, offset64_op, I64, 
    /* LOAD_ZERO_I64x2_A64_S */
    P2Align, offset64_op, 
    /* LOCAL_GET_EXTERNREF */
    EXTERNREF, local_op, 
    /* LOCAL_GET_EXTERNREF_S */
    local_op, 
    /* LOCAL_GET_F32 */
    F32, local_op, 
    /* LOCAL_GET_F32_S */
    local_op, 
    /* LOCAL_GET_F64 */
    F64, local_op, 
    /* LOCAL_GET_F64_S */
    local_op, 
    /* LOCAL_GET_FUNCREF */
    FUNCREF, local_op, 
    /* LOCAL_GET_FUNCREF_S */
    local_op, 
    /* LOCAL_GET_I32 */
    I32, local_op, 
    /* LOCAL_GET_I32_S */
    local_op, 
    /* LOCAL_GET_I64 */
    I64, local_op, 
    /* LOCAL_GET_I64_S */
    local_op, 
    /* LOCAL_GET_V128 */
    V128, local_op, 
    /* LOCAL_GET_V128_S */
    local_op, 
    /* LOCAL_SET_EXTERNREF */
    local_op, EXTERNREF, 
    /* LOCAL_SET_EXTERNREF_S */
    local_op, 
    /* LOCAL_SET_F32 */
    local_op, F32, 
    /* LOCAL_SET_F32_S */
    local_op, 
    /* LOCAL_SET_F64 */
    local_op, F64, 
    /* LOCAL_SET_F64_S */
    local_op, 
    /* LOCAL_SET_FUNCREF */
    local_op, FUNCREF, 
    /* LOCAL_SET_FUNCREF_S */
    local_op, 
    /* LOCAL_SET_I32 */
    local_op, I32, 
    /* LOCAL_SET_I32_S */
    local_op, 
    /* LOCAL_SET_I64 */
    local_op, I64, 
    /* LOCAL_SET_I64_S */
    local_op, 
    /* LOCAL_SET_V128 */
    local_op, V128, 
    /* LOCAL_SET_V128_S */
    local_op, 
    /* LOCAL_TEE_EXTERNREF */
    EXTERNREF, local_op, EXTERNREF, 
    /* LOCAL_TEE_EXTERNREF_S */
    local_op, 
    /* LOCAL_TEE_F32 */
    F32, local_op, F32, 
    /* LOCAL_TEE_F32_S */
    local_op, 
    /* LOCAL_TEE_F64 */
    F64, local_op, F64, 
    /* LOCAL_TEE_F64_S */
    local_op, 
    /* LOCAL_TEE_FUNCREF */
    FUNCREF, local_op, FUNCREF, 
    /* LOCAL_TEE_FUNCREF_S */
    local_op, 
    /* LOCAL_TEE_I32 */
    I32, local_op, I32, 
    /* LOCAL_TEE_I32_S */
    local_op, 
    /* LOCAL_TEE_I64 */
    I64, local_op, I64, 
    /* LOCAL_TEE_I64_S */
    local_op, 
    /* LOCAL_TEE_V128 */
    V128, local_op, V128, 
    /* LOCAL_TEE_V128_S */
    local_op, 
    /* LOOP */
    Signature, 
    /* LOOP_S */
    Signature, 
    /* LT_F32 */
    I32, F32, F32, 
    /* LT_F32_S */
    /* LT_F32x4 */
    V128, V128, V128, 
    /* LT_F32x4_S */
    /* LT_F64 */
    I32, F64, F64, 
    /* LT_F64_S */
    /* LT_F64x2 */
    V128, V128, V128, 
    /* LT_F64x2_S */
    /* LT_S_I16x8 */
    V128, V128, V128, 
    /* LT_S_I16x8_S */
    /* LT_S_I32 */
    I32, I32, I32, 
    /* LT_S_I32_S */
    /* LT_S_I32x4 */
    V128, V128, V128, 
    /* LT_S_I32x4_S */
    /* LT_S_I64 */
    I32, I64, I64, 
    /* LT_S_I64_S */
    /* LT_S_I64x2 */
    V128, V128, V128, 
    /* LT_S_I64x2_S */
    /* LT_S_I8x16 */
    V128, V128, V128, 
    /* LT_S_I8x16_S */
    /* LT_U_I16x8 */
    V128, V128, V128, 
    /* LT_U_I16x8_S */
    /* LT_U_I32 */
    I32, I32, I32, 
    /* LT_U_I32_S */
    /* LT_U_I32x4 */
    V128, V128, V128, 
    /* LT_U_I32x4_S */
    /* LT_U_I64 */
    I32, I64, I64, 
    /* LT_U_I64_S */
    /* LT_U_I8x16 */
    V128, V128, V128, 
    /* LT_U_I8x16_S */
    /* MADD_F32x4 */
    V128, V128, V128, V128, 
    /* MADD_F32x4_S */
    /* MADD_F64x2 */
    V128, V128, V128, V128, 
    /* MADD_F64x2_S */
    /* MAX_F32 */
    F32, F32, F32, 
    /* MAX_F32_S */
    /* MAX_F32x4 */
    V128, V128, V128, 
    /* MAX_F32x4_S */
    /* MAX_F64 */
    F64, F64, F64, 
    /* MAX_F64_S */
    /* MAX_F64x2 */
    V128, V128, V128, 
    /* MAX_F64x2_S */
    /* MAX_S_I16x8 */
    V128, V128, V128, 
    /* MAX_S_I16x8_S */
    /* MAX_S_I32x4 */
    V128, V128, V128, 
    /* MAX_S_I32x4_S */
    /* MAX_S_I8x16 */
    V128, V128, V128, 
    /* MAX_S_I8x16_S */
    /* MAX_U_I16x8 */
    V128, V128, V128, 
    /* MAX_U_I16x8_S */
    /* MAX_U_I32x4 */
    V128, V128, V128, 
    /* MAX_U_I32x4_S */
    /* MAX_U_I8x16 */
    V128, V128, V128, 
    /* MAX_U_I8x16_S */
    /* MEMORY_ATOMIC_NOTIFY_A32 */
    I32, P2Align, offset32_op, I32, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_NOTIFY_A64 */
    I32, P2Align, offset64_op, I64, I32, 
    /* MEMORY_ATOMIC_NOTIFY_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT32_A32 */
    I32, P2Align, offset32_op, I32, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT32_A64 */
    I32, P2Align, offset64_op, I64, I32, I64, 
    /* MEMORY_ATOMIC_WAIT32_A64_S */
    P2Align, offset64_op, 
    /* MEMORY_ATOMIC_WAIT64_A32 */
    I32, P2Align, offset32_op, I32, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A32_S */
    P2Align, offset32_op, 
    /* MEMORY_ATOMIC_WAIT64_A64 */
    I32, P2Align, offset64_op, I64, I64, I64, 
    /* MEMORY_ATOMIC_WAIT64_A64_S */
    P2Align, offset64_op, 
    /* MIN_F32 */
    F32, F32, F32, 
    /* MIN_F32_S */
    /* MIN_F32x4 */
    V128, V128, V128, 
    /* MIN_F32x4_S */
    /* MIN_F64 */
    F64, F64, F64, 
    /* MIN_F64_S */
    /* MIN_F64x2 */
    V128, V128, V128, 
    /* MIN_F64x2_S */
    /* MIN_S_I16x8 */
    V128, V128, V128, 
    /* MIN_S_I16x8_S */
    /* MIN_S_I32x4 */
    V128, V128, V128, 
    /* MIN_S_I32x4_S */
    /* MIN_S_I8x16 */
    V128, V128, V128, 
    /* MIN_S_I8x16_S */
    /* MIN_U_I16x8 */
    V128, V128, V128, 
    /* MIN_U_I16x8_S */
    /* MIN_U_I32x4 */
    V128, V128, V128, 
    /* MIN_U_I32x4_S */
    /* MIN_U_I8x16 */
    V128, V128, V128, 
    /* MIN_U_I8x16_S */
    /* MUL_F32 */
    F32, F32, F32, 
    /* MUL_F32_S */
    /* MUL_F32x4 */
    V128, V128, V128, 
    /* MUL_F32x4_S */
    /* MUL_F64 */
    F64, F64, F64, 
    /* MUL_F64_S */
    /* MUL_F64x2 */
    V128, V128, V128, 
    /* MUL_F64x2_S */
    /* MUL_I16x8 */
    V128, V128, V128, 
    /* MUL_I16x8_S */
    /* MUL_I32 */
    I32, I32, I32, 
    /* MUL_I32_S */
    /* MUL_I32x4 */
    V128, V128, V128, 
    /* MUL_I32x4_S */
    /* MUL_I64 */
    I64, I64, I64, 
    /* MUL_I64_S */
    /* MUL_I64x2 */
    V128, V128, V128, 
    /* MUL_I64x2_S */
    /* NARROW_S_I16x8 */
    V128, V128, V128, 
    /* NARROW_S_I16x8_S */
    /* NARROW_S_I8x16 */
    V128, V128, V128, 
    /* NARROW_S_I8x16_S */
    /* NARROW_U_I16x8 */
    V128, V128, V128, 
    /* NARROW_U_I16x8_S */
    /* NARROW_U_I8x16 */
    V128, V128, V128, 
    /* NARROW_U_I8x16_S */
    /* NEAREST_F32 */
    F32, F32, 
    /* NEAREST_F32_S */
    /* NEAREST_F32x4 */
    V128, V128, 
    /* NEAREST_F32x4_S */
    /* NEAREST_F64 */
    F64, F64, 
    /* NEAREST_F64_S */
    /* NEAREST_F64x2 */
    V128, V128, 
    /* NEAREST_F64x2_S */
    /* NEG_F32 */
    F32, F32, 
    /* NEG_F32_S */
    /* NEG_F32x4 */
    V128, V128, 
    /* NEG_F32x4_S */
    /* NEG_F64 */
    F64, F64, 
    /* NEG_F64_S */
    /* NEG_F64x2 */
    V128, V128, 
    /* NEG_F64x2_S */
    /* NEG_I16x8 */
    V128, V128, 
    /* NEG_I16x8_S */
    /* NEG_I32x4 */
    V128, V128, 
    /* NEG_I32x4_S */
    /* NEG_I64x2 */
    V128, V128, 
    /* NEG_I64x2_S */
    /* NEG_I8x16 */
    V128, V128, 
    /* NEG_I8x16_S */
    /* NE_F32 */
    I32, F32, F32, 
    /* NE_F32_S */
    /* NE_F32x4 */
    V128, V128, V128, 
    /* NE_F32x4_S */
    /* NE_F64 */
    I32, F64, F64, 
    /* NE_F64_S */
    /* NE_F64x2 */
    V128, V128, V128, 
    /* NE_F64x2_S */
    /* NE_I16x8 */
    V128, V128, V128, 
    /* NE_I16x8_S */
    /* NE_I32 */
    I32, I32, I32, 
    /* NE_I32_S */
    /* NE_I32x4 */
    V128, V128, V128, 
    /* NE_I32x4_S */
    /* NE_I64 */
    I32, I64, I64, 
    /* NE_I64_S */
    /* NE_I64x2 */
    V128, V128, V128, 
    /* NE_I64x2_S */
    /* NE_I8x16 */
    V128, V128, V128, 
    /* NE_I8x16_S */
    /* NMADD_F32x4 */
    V128, V128, V128, V128, 
    /* NMADD_F32x4_S */
    /* NMADD_F64x2 */
    V128, V128, V128, V128, 
    /* NMADD_F64x2_S */
    /* NOP */
    /* NOP_S */
    /* NOT */
    V128, V128, 
    /* NOT_S */
    /* OR */
    V128, V128, V128, 
    /* OR_I32 */
    I32, I32, I32, 
    /* OR_I32_S */
    /* OR_I64 */
    I64, I64, I64, 
    /* OR_I64_S */
    /* OR_S */
    /* PMAX_F32x4 */
    V128, V128, V128, 
    /* PMAX_F32x4_S */
    /* PMAX_F64x2 */
    V128, V128, V128, 
    /* PMAX_F64x2_S */
    /* PMIN_F32x4 */
    V128, V128, V128, 
    /* PMIN_F32x4_S */
    /* PMIN_F64x2 */
    V128, V128, V128, 
    /* PMIN_F64x2_S */
    /* POPCNT_I32 */
    I32, I32, 
    /* POPCNT_I32_S */
    /* POPCNT_I64 */
    I64, I64, 
    /* POPCNT_I64_S */
    /* POPCNT_I8x16 */
    V128, V128, 
    /* POPCNT_I8x16_S */
    /* Q15MULR_SAT_S_I16x8 */
    V128, V128, V128, 
    /* Q15MULR_SAT_S_I16x8_S */
    /* REF_IS_NULL_EXTERNREF */
    I32, EXTERNREF, 
    /* REF_IS_NULL_EXTERNREF_S */
    /* REF_IS_NULL_FUNCREF */
    I32, FUNCREF, 
    /* REF_IS_NULL_FUNCREF_S */
    /* REF_NULL_EXTERNREF */
    EXTERNREF, 
    /* REF_NULL_EXTERNREF_S */
    /* REF_NULL_FUNCREF */
    FUNCREF, 
    /* REF_NULL_FUNCREF_S */
    /* RELAXED_DOT */
    V128, V128, V128, 
    /* RELAXED_DOT_ADD */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_ADD_S */
    /* RELAXED_DOT_BFLOAT */
    V128, V128, V128, V128, 
    /* RELAXED_DOT_BFLOAT_S */
    /* RELAXED_DOT_S */
    /* RELAXED_Q15MULR_S_I16x8 */
    V128, V128, V128, 
    /* RELAXED_Q15MULR_S_I16x8_S */
    /* RELAXED_SWIZZLE */
    V128, V128, V128, 
    /* RELAXED_SWIZZLE_S */
    /* REM_S_I32 */
    I32, I32, I32, 
    /* REM_S_I32_S */
    /* REM_S_I64 */
    I64, I64, I64, 
    /* REM_S_I64_S */
    /* REM_U_I32 */
    I32, I32, I32, 
    /* REM_U_I32_S */
    /* REM_U_I64 */
    I64, I64, I64, 
    /* REM_U_I64_S */
    /* REPLACE_LANE_F32x4 */
    V128, V128, vec_i8imm_op, F32, 
    /* REPLACE_LANE_F32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_F64x2 */
    V128, V128, vec_i8imm_op, F64, 
    /* REPLACE_LANE_F64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I16x8 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I16x8_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I32x4 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I32x4_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I64x2 */
    V128, V128, vec_i8imm_op, I64, 
    /* REPLACE_LANE_I64x2_S */
    vec_i8imm_op, 
    /* REPLACE_LANE_I8x16 */
    V128, V128, vec_i8imm_op, I32, 
    /* REPLACE_LANE_I8x16_S */
    vec_i8imm_op, 
    /* RETHROW */
    i32imm, 
    /* RETHROW_S */
    i32imm, 
    /* RETURN */
    /* RETURN_S */
    /* RET_CALL */
    function32_op, 
    /* RET_CALL_INDIRECT */
    TypeIndex, table32_op, 
    /* RET_CALL_INDIRECT_S */
    TypeIndex, table32_op, 
    /* RET_CALL_S */
    function32_op, 
    /* ROTL_I32 */
    I32, I32, I32, 
    /* ROTL_I32_S */
    /* ROTL_I64 */
    I64, I64, I64, 
    /* ROTL_I64_S */
    /* ROTR_I32 */
    I32, I32, I32, 
    /* ROTR_I32_S */
    /* ROTR_I64 */
    I64, I64, I64, 
    /* ROTR_I64_S */
    /* SELECT_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, I32, 
    /* SELECT_EXTERNREF_S */
    /* SELECT_F32 */
    F32, F32, F32, I32, 
    /* SELECT_F32_S */
    /* SELECT_F64 */
    F64, F64, F64, I32, 
    /* SELECT_F64_S */
    /* SELECT_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, I32, 
    /* SELECT_FUNCREF_S */
    /* SELECT_I32 */
    I32, I32, I32, I32, 
    /* SELECT_I32_S */
    /* SELECT_I64 */
    I64, I64, I64, I32, 
    /* SELECT_I64_S */
    /* SELECT_V128 */
    V128, V128, V128, I32, 
    /* SELECT_V128_S */
    /* SHL_I16x8 */
    V128, V128, I32, 
    /* SHL_I16x8_S */
    /* SHL_I32 */
    I32, I32, I32, 
    /* SHL_I32_S */
    /* SHL_I32x4 */
    V128, V128, I32, 
    /* SHL_I32x4_S */
    /* SHL_I64 */
    I64, I64, I64, 
    /* SHL_I64_S */
    /* SHL_I64x2 */
    V128, V128, I32, 
    /* SHL_I64x2_S */
    /* SHL_I8x16 */
    V128, V128, I32, 
    /* SHL_I8x16_S */
    /* SHR_S_I16x8 */
    V128, V128, I32, 
    /* SHR_S_I16x8_S */
    /* SHR_S_I32 */
    I32, I32, I32, 
    /* SHR_S_I32_S */
    /* SHR_S_I32x4 */
    V128, V128, I32, 
    /* SHR_S_I32x4_S */
    /* SHR_S_I64 */
    I64, I64, I64, 
    /* SHR_S_I64_S */
    /* SHR_S_I64x2 */
    V128, V128, I32, 
    /* SHR_S_I64x2_S */
    /* SHR_S_I8x16 */
    V128, V128, I32, 
    /* SHR_S_I8x16_S */
    /* SHR_U_I16x8 */
    V128, V128, I32, 
    /* SHR_U_I16x8_S */
    /* SHR_U_I32 */
    I32, I32, I32, 
    /* SHR_U_I32_S */
    /* SHR_U_I32x4 */
    V128, V128, I32, 
    /* SHR_U_I32x4_S */
    /* SHR_U_I64 */
    I64, I64, I64, 
    /* SHR_U_I64_S */
    /* SHR_U_I64x2 */
    V128, V128, I32, 
    /* SHR_U_I64x2_S */
    /* SHR_U_I8x16 */
    V128, V128, I32, 
    /* SHR_U_I8x16_S */
    /* SHUFFLE */
    V128, V128, V128, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SHUFFLE_S */
    vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, vec_i8imm_op, 
    /* SIMD_RELAXED_FMAX_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F32x4_S */
    /* SIMD_RELAXED_FMAX_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMAX_F64x2_S */
    /* SIMD_RELAXED_FMIN_F32x4 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F32x4_S */
    /* SIMD_RELAXED_FMIN_F64x2 */
    V128, V128, V128, 
    /* SIMD_RELAXED_FMIN_F64x2_S */
    /* SPLAT_F32x4 */
    V128, F32, 
    /* SPLAT_F32x4_S */
    /* SPLAT_F64x2 */
    V128, F64, 
    /* SPLAT_F64x2_S */
    /* SPLAT_I16x8 */
    V128, I32, 
    /* SPLAT_I16x8_S */
    /* SPLAT_I32x4 */
    V128, I32, 
    /* SPLAT_I32x4_S */
    /* SPLAT_I64x2 */
    V128, I64, 
    /* SPLAT_I64x2_S */
    /* SPLAT_I8x16 */
    V128, I32, 
    /* SPLAT_I8x16_S */
    /* SQRT_F32 */
    F32, F32, 
    /* SQRT_F32_S */
    /* SQRT_F32x4 */
    V128, V128, 
    /* SQRT_F32x4_S */
    /* SQRT_F64 */
    F64, F64, 
    /* SQRT_F64_S */
    /* SQRT_F64x2 */
    V128, V128, 
    /* SQRT_F64x2_S */
    /* STORE16_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE16_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE16_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE16_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE16_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE16_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE16_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE32_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE32_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE32_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE32_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE8_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE8_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE8_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE8_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE8_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE8_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_F32_A32 */
    P2Align, offset32_op, I32, F32, 
    /* STORE_F32_A32_S */
    P2Align, offset32_op, 
    /* STORE_F32_A64 */
    P2Align, offset64_op, I64, F32, 
    /* STORE_F32_A64_S */
    P2Align, offset64_op, 
    /* STORE_F64_A32 */
    P2Align, offset32_op, I32, F64, 
    /* STORE_F64_A32_S */
    P2Align, offset32_op, 
    /* STORE_F64_A64 */
    P2Align, offset64_op, I64, F64, 
    /* STORE_F64_A64_S */
    P2Align, offset64_op, 
    /* STORE_I32_A32 */
    P2Align, offset32_op, I32, I32, 
    /* STORE_I32_A32_S */
    P2Align, offset32_op, 
    /* STORE_I32_A64 */
    P2Align, offset64_op, I64, I32, 
    /* STORE_I32_A64_S */
    P2Align, offset64_op, 
    /* STORE_I64_A32 */
    P2Align, offset32_op, I32, I64, 
    /* STORE_I64_A32_S */
    P2Align, offset32_op, 
    /* STORE_I64_A64 */
    P2Align, offset64_op, I64, I64, 
    /* STORE_I64_A64_S */
    P2Align, offset64_op, 
    /* STORE_LANE_I16x8_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I16x8_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I16x8_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I16x8_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I32x4_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I32x4_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I32x4_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I64x2_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I64x2_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I64x2_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A32 */
    P2Align, offset32_op, vec_i8imm_op, I32, V128, 
    /* STORE_LANE_I8x16_A32_S */
    P2Align, offset32_op, vec_i8imm_op, 
    /* STORE_LANE_I8x16_A64 */
    V128, P2Align, offset64_op, vec_i8imm_op, I64, V128, 
    /* STORE_LANE_I8x16_A64_S */
    P2Align, offset64_op, vec_i8imm_op, 
    /* STORE_V128_A32 */
    P2Align, offset32_op, I32, V128, 
    /* STORE_V128_A32_S */
    P2Align, offset32_op, 
    /* STORE_V128_A64 */
    P2Align, offset64_op, I64, V128, 
    /* STORE_V128_A64_S */
    P2Align, offset64_op, 
    /* SUB_F32 */
    F32, F32, F32, 
    /* SUB_F32_S */
    /* SUB_F32x4 */
    V128, V128, V128, 
    /* SUB_F32x4_S */
    /* SUB_F64 */
    F64, F64, F64, 
    /* SUB_F64_S */
    /* SUB_F64x2 */
    V128, V128, V128, 
    /* SUB_F64x2_S */
    /* SUB_I16x8 */
    V128, V128, V128, 
    /* SUB_I16x8_S */
    /* SUB_I32 */
    I32, I32, I32, 
    /* SUB_I32_S */
    /* SUB_I32x4 */
    V128, V128, V128, 
    /* SUB_I32x4_S */
    /* SUB_I64 */
    I64, I64, I64, 
    /* SUB_I64_S */
    /* SUB_I64x2 */
    V128, V128, V128, 
    /* SUB_I64x2_S */
    /* SUB_I8x16 */
    V128, V128, V128, 
    /* SUB_I8x16_S */
    /* SUB_SAT_S_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_S_I16x8_S */
    /* SUB_SAT_S_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_S_I8x16_S */
    /* SUB_SAT_U_I16x8 */
    V128, V128, V128, 
    /* SUB_SAT_U_I16x8_S */
    /* SUB_SAT_U_I8x16 */
    V128, V128, V128, 
    /* SUB_SAT_U_I8x16_S */
    /* SWIZZLE */
    V128, V128, V128, 
    /* SWIZZLE_S */
    /* TABLE_COPY */
    table32_op, table32_op, I32, I32, I32, 
    /* TABLE_COPY_S */
    table32_op, table32_op, 
    /* TABLE_FILL_EXTERNREF */
    table32_op, I32, EXTERNREF, I32, 
    /* TABLE_FILL_EXTERNREF_S */
    table32_op, 
    /* TABLE_FILL_FUNCREF */
    table32_op, I32, FUNCREF, I32, 
    /* TABLE_FILL_FUNCREF_S */
    table32_op, 
    /* TABLE_GET_EXTERNREF */
    EXTERNREF, table32_op, I32, 
    /* TABLE_GET_EXTERNREF_S */
    table32_op, 
    /* TABLE_GET_FUNCREF */
    FUNCREF, table32_op, I32, 
    /* TABLE_GET_FUNCREF_S */
    table32_op, 
    /* TABLE_GROW_EXTERNREF */
    I32, table32_op, EXTERNREF, I32, 
    /* TABLE_GROW_EXTERNREF_S */
    table32_op, 
    /* TABLE_GROW_FUNCREF */
    I32, table32_op, FUNCREF, I32, 
    /* TABLE_GROW_FUNCREF_S */
    table32_op, 
    /* TABLE_SET_EXTERNREF */
    table32_op, I32, EXTERNREF, 
    /* TABLE_SET_EXTERNREF_S */
    table32_op, 
    /* TABLE_SET_FUNCREF */
    table32_op, I32, FUNCREF, 
    /* TABLE_SET_FUNCREF_S */
    table32_op, 
    /* TABLE_SIZE */
    I32, table32_op, 
    /* TABLE_SIZE_S */
    table32_op, 
    /* TEE_EXTERNREF */
    EXTERNREF, EXTERNREF, EXTERNREF, 
    /* TEE_EXTERNREF_S */
    /* TEE_F32 */
    F32, F32, F32, 
    /* TEE_F32_S */
    /* TEE_F64 */
    F64, F64, F64, 
    /* TEE_F64_S */
    /* TEE_FUNCREF */
    FUNCREF, FUNCREF, FUNCREF, 
    /* TEE_FUNCREF_S */
    /* TEE_I32 */
    I32, I32, I32, 
    /* TEE_I32_S */
    /* TEE_I64 */
    I64, I64, I64, 
    /* TEE_I64_S */
    /* TEE_V128 */
    V128, V128, V128, 
    /* TEE_V128_S */
    /* THROW */
    tag_op, 
    /* THROW_S */
    tag_op, 
    /* TRUNC_F32 */
    F32, F32, 
    /* TRUNC_F32_S */
    /* TRUNC_F32x4 */
    V128, V128, 
    /* TRUNC_F32x4_S */
    /* TRUNC_F64 */
    F64, F64, 
    /* TRUNC_F64_S */
    /* TRUNC_F64x2 */
    V128, V128, 
    /* TRUNC_F64x2_S */
    /* TRY */
    Signature, 
    /* TRY_S */
    Signature, 
    /* UNREACHABLE */
    /* UNREACHABLE_S */
    /* XOR */
    V128, V128, V128, 
    /* XOR_I32 */
    I32, I32, I32, 
    /* XOR_I32_S */
    /* XOR_I64 */
    I64, I64, I64, 
    /* XOR_I64_S */
    /* XOR_S */
    /* anonymous_4063MEMORY_GROW_A32 */
    I32, i32imm, I32, 
    /* anonymous_4063MEMORY_GROW_A32_S */
    i32imm, 
    /* anonymous_4063MEMORY_SIZE_A32 */
    I32, i32imm, 
    /* anonymous_4063MEMORY_SIZE_A32_S */
    i32imm, 
    /* anonymous_4064MEMORY_GROW_A64 */
    I64, i32imm, I64, 
    /* anonymous_4064MEMORY_GROW_A64_S */
    i32imm, 
    /* anonymous_4064MEMORY_SIZE_A64 */
    I64, i32imm, 
    /* anonymous_4064MEMORY_SIZE_A64_S */
    i32imm, 
    /* anonymous_4733DATA_DROP */
    i32imm_op, 
    /* anonymous_4733DATA_DROP_S */
    i32imm_op, 
    /* anonymous_4733MEMORY_COPY_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_4733MEMORY_COPY_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_4733MEMORY_FILL_A32 */
    i32imm_op, I32, I32, I32, 
    /* anonymous_4733MEMORY_FILL_A32_S */
    i32imm_op, 
    /* anonymous_4733MEMORY_INIT_A32 */
    i32imm_op, i32imm_op, I32, I32, I32, 
    /* anonymous_4733MEMORY_INIT_A32_S */
    i32imm_op, i32imm_op, 
    /* anonymous_4734DATA_DROP */
    i32imm_op, 
    /* anonymous_4734DATA_DROP_S */
    i32imm_op, 
    /* anonymous_4734MEMORY_COPY_A64 */
    i32imm_op, i32imm_op, I64, I64, I64, 
    /* anonymous_4734MEMORY_COPY_A64_S */
    i32imm_op, i32imm_op, 
    /* anonymous_4734MEMORY_FILL_A64 */
    i32imm_op, I64, I32, I64, 
    /* anonymous_4734MEMORY_FILL_A64_S */
    i32imm_op, 
    /* anonymous_4734MEMORY_INIT_A64 */
    i32imm_op, i32imm_op, I64, I32, I32, 
    /* anonymous_4734MEMORY_INIT_A64_S */
    i32imm_op, i32imm_op, 
    /* convert_low_s_F64x2 */
    V128, V128, 
    /* convert_low_s_F64x2_S */
    /* convert_low_u_F64x2 */
    V128, V128, 
    /* convert_low_u_F64x2_S */
    /* demote_zero_F32x4 */
    V128, V128, 
    /* demote_zero_F32x4_S */
    /* extend_high_s_I16x8 */
    V128, V128, 
    /* extend_high_s_I16x8_S */
    /* extend_high_s_I32x4 */
    V128, V128, 
    /* extend_high_s_I32x4_S */
    /* extend_high_s_I64x2 */
    V128, V128, 
    /* extend_high_s_I64x2_S */
    /* extend_high_u_I16x8 */
    V128, V128, 
    /* extend_high_u_I16x8_S */
    /* extend_high_u_I32x4 */
    V128, V128, 
    /* extend_high_u_I32x4_S */
    /* extend_high_u_I64x2 */
    V128, V128, 
    /* extend_high_u_I64x2_S */
    /* extend_low_s_I16x8 */
    V128, V128, 
    /* extend_low_s_I16x8_S */
    /* extend_low_s_I32x4 */
    V128, V128, 
    /* extend_low_s_I32x4_S */
    /* extend_low_s_I64x2 */
    V128, V128, 
    /* extend_low_s_I64x2_S */
    /* extend_low_u_I16x8 */
    V128, V128, 
    /* extend_low_u_I16x8_S */
    /* extend_low_u_I32x4 */
    V128, V128, 
    /* extend_low_u_I32x4_S */
    /* extend_low_u_I64x2 */
    V128, V128, 
    /* extend_low_u_I64x2_S */
    /* fp_to_sint_I32x4 */
    V128, V128, 
    /* fp_to_sint_I32x4_S */
    /* fp_to_uint_I32x4 */
    V128, V128, 
    /* fp_to_uint_I32x4_S */
    /* int_wasm_extadd_pairwise_signed_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I16x8_S */
    /* int_wasm_extadd_pairwise_signed_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_signed_I32x4_S */
    /* int_wasm_extadd_pairwise_unsigned_I16x8 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I16x8_S */
    /* int_wasm_extadd_pairwise_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_extadd_pairwise_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_I32x4_S */
    /* int_wasm_relaxed_trunc_signed_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_signed_zero_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_I32x4_S */
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4 */
    V128, V128, 
    /* int_wasm_relaxed_trunc_unsigned_zero_I32x4_S */
    /* promote_low_F64x2 */
    V128, V128, 
    /* promote_low_F64x2_S */
    /* sint_to_fp_F32x4 */
    V128, V128, 
    /* sint_to_fp_F32x4_S */
    /* trunc_sat_zero_s_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_s_I32x4_S */
    /* trunc_sat_zero_u_I32x4 */
    V128, V128, 
    /* trunc_sat_zero_u_I32x4_S */
    /* uint_to_fp_F32x4 */
    V128, V128, 
  };
  return OpcodeOperandTypes[Offsets[Opcode] + OpIdx];
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_OPERAND_TYPE

#ifdef GET_INSTRINFO_MEM_OPERAND_SIZE
#undef GET_INSTRINFO_MEM_OPERAND_SIZE
namespace llvm {
namespace WebAssembly {
LLVM_READONLY
static int getMemOperandSize(int OpType) {
  switch (OpType) {
  default: return 0;
  }
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_MEM_OPERAND_SIZE

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static unsigned
getLogicalOperandSize(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return LogicalOpIdx;
}
LLVM_READONLY static inline unsigned
getLogicalOperandIdx(uint16_t Opcode, uint16_t LogicalOpIdx) {
  auto S = 0U;
  for (auto i = 0U; i < LogicalOpIdx; ++i)
    S += getLogicalOperandSize(Opcode, i);
  return S;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_SIZE_MAP

#ifdef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
#undef GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP
namespace llvm {
namespace WebAssembly {
LLVM_READONLY static int
getLogicalOperandType(uint16_t Opcode, uint16_t LogicalOpIdx) {
  return -1;
}
} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRINFO_LOGICAL_OPERAND_TYPE_MAP

#ifdef GET_INSTRINFO_MC_HELPER_DECLS
#undef GET_INSTRINFO_MC_HELPER_DECLS

namespace llvm {
class MCInst;
class FeatureBitset;

namespace WebAssembly_MC {

void verifyInstructionPredicates(unsigned Opcode, const FeatureBitset &Features);

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_INSTRINFO_MC_HELPER_DECLS

#ifdef GET_INSTRINFO_MC_HELPERS
#undef GET_INSTRINFO_MC_HELPERS

namespace llvm {
namespace WebAssembly_MC {

} // end namespace WebAssembly_MC
} // end namespace llvm

#endif // GET_GENISTRINFO_MC_HELPERS

#ifdef ENABLE_INSTR_PREDICATE_VERIFIER
#undef ENABLE_INSTR_PREDICATE_VERIFIER
#include <sstream>

namespace llvm {
namespace WebAssembly_MC {

// Bits for subtarget features that participate in instruction matching.
enum SubtargetFeatureBits : uint8_t {
  Feature_HasSIMD128Bit = 8,
  Feature_HasRelaxedSIMDBit = 7,
  Feature_HasAtomicsBit = 0,
  Feature_HasMultivalueBit = 4,
  Feature_HasNontrappingFPToIntBit = 5,
  Feature_NotHasNontrappingFPToIntBit = 11,
  Feature_HasSignExtBit = 9,
  Feature_HasTailCallBit = 10,
  Feature_HasExceptionHandlingBit = 2,
  Feature_HasBulkMemoryBit = 1,
  Feature_HasReferenceTypesBit = 6,
  Feature_HasExtendedConstBit = 3,
};

#ifndef NDEBUG
static const char *SubtargetFeatureNames[] = {
  "Feature_HasAtomics",
  "Feature_HasBulkMemory",
  "Feature_HasExceptionHandling",
  "Feature_HasExtendedConst",
  "Feature_HasMultivalue",
  "Feature_HasNontrappingFPToInt",
  "Feature_HasReferenceTypes",
  "Feature_HasRelaxedSIMD",
  "Feature_HasSIMD128",
  "Feature_HasSignExt",
  "Feature_HasTailCall",
  "Feature_NotHasNontrappingFPToInt",
  nullptr
};

#endif // NDEBUG

FeatureBitset computeAvailableFeatures(const FeatureBitset &FB) {
  FeatureBitset Features;
  if (FB[WebAssembly::FeatureSIMD128])
    Features.set(Feature_HasSIMD128Bit);
  if (FB[WebAssembly::FeatureRelaxedSIMD])
    Features.set(Feature_HasRelaxedSIMDBit);
  if (FB[WebAssembly::FeatureAtomics])
    Features.set(Feature_HasAtomicsBit);
  if (FB[WebAssembly::FeatureMultivalue])
    Features.set(Feature_HasMultivalueBit);
  if (FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_HasNontrappingFPToIntBit);
  if (!FB[WebAssembly::FeatureNontrappingFPToInt])
    Features.set(Feature_NotHasNontrappingFPToIntBit);
  if (FB[WebAssembly::FeatureSignExt])
    Features.set(Feature_HasSignExtBit);
  if (FB[WebAssembly::FeatureTailCall])
    Features.set(Feature_HasTailCallBit);
  if (FB[WebAssembly::FeatureExceptionHandling])
    Features.set(Feature_HasExceptionHandlingBit);
  if (FB[WebAssembly::FeatureBulkMemory])
    Features.set(Feature_HasBulkMemoryBit);
  if (FB[WebAssembly::FeatureReferenceTypes])
    Features.set(Feature_HasReferenceTypesBit);
  if (FB[WebAssembly::FeatureExtendedConst])
    Features.set(Feature_HasExtendedConstBit);
  return Features;
}

#ifndef NDEBUG
// Feature bitsets.
enum : uint8_t {
  CEFBS_None,
  CEFBS_HasAtomics,
  CEFBS_HasBulkMemory,
  CEFBS_HasExceptionHandling,
  CEFBS_HasNontrappingFPToInt,
  CEFBS_HasReferenceTypes,
  CEFBS_HasRelaxedSIMD,
  CEFBS_HasSIMD128,
  CEFBS_HasSignExt,
  CEFBS_HasTailCall,
  CEFBS_NotHasNontrappingFPToInt,
};

static constexpr FeatureBitset FeatureBitsets[] = {
  {}, // CEFBS_None
  {Feature_HasAtomicsBit, },
  {Feature_HasBulkMemoryBit, },
  {Feature_HasExceptionHandlingBit, },
  {Feature_HasNontrappingFPToIntBit, },
  {Feature_HasReferenceTypesBit, },
  {Feature_HasRelaxedSIMDBit, },
  {Feature_HasSIMD128Bit, },
  {Feature_HasSignExtBit, },
  {Feature_HasTailCallBit, },
  {Feature_NotHasNontrappingFPToIntBit, },
};
#endif // NDEBUG

void verifyInstructionPredicates(
    unsigned Opcode, const FeatureBitset &Features) {
#ifndef NDEBUG
  static uint8_t RequiredFeaturesRefs[] = {
    CEFBS_None, // PHI = 0
    CEFBS_None, // INLINEASM = 1
    CEFBS_None, // INLINEASM_BR = 2
    CEFBS_None, // CFI_INSTRUCTION = 3
    CEFBS_None, // EH_LABEL = 4
    CEFBS_None, // GC_LABEL = 5
    CEFBS_None, // ANNOTATION_LABEL = 6
    CEFBS_None, // KILL = 7
    CEFBS_None, // EXTRACT_SUBREG = 8
    CEFBS_None, // INSERT_SUBREG = 9
    CEFBS_None, // IMPLICIT_DEF = 10
    CEFBS_None, // SUBREG_TO_REG = 11
    CEFBS_None, // COPY_TO_REGCLASS = 12
    CEFBS_None, // DBG_VALUE = 13
    CEFBS_None, // DBG_VALUE_LIST = 14
    CEFBS_None, // DBG_INSTR_REF = 15
    CEFBS_None, // DBG_PHI = 16
    CEFBS_None, // DBG_LABEL = 17
    CEFBS_None, // REG_SEQUENCE = 18
    CEFBS_None, // COPY = 19
    CEFBS_None, // BUNDLE = 20
    CEFBS_None, // LIFETIME_START = 21
    CEFBS_None, // LIFETIME_END = 22
    CEFBS_None, // PSEUDO_PROBE = 23
    CEFBS_None, // ARITH_FENCE = 24
    CEFBS_None, // STACKMAP = 25
    CEFBS_None, // FENTRY_CALL = 26
    CEFBS_None, // PATCHPOINT = 27
    CEFBS_None, // LOAD_STACK_GUARD = 28
    CEFBS_None, // PREALLOCATED_SETUP = 29
    CEFBS_None, // PREALLOCATED_ARG = 30
    CEFBS_None, // STATEPOINT = 31
    CEFBS_None, // LOCAL_ESCAPE = 32
    CEFBS_None, // FAULTING_OP = 33
    CEFBS_None, // PATCHABLE_OP = 34
    CEFBS_None, // PATCHABLE_FUNCTION_ENTER = 35
    CEFBS_None, // PATCHABLE_RET = 36
    CEFBS_None, // PATCHABLE_FUNCTION_EXIT = 37
    CEFBS_None, // PATCHABLE_TAIL_CALL = 38
    CEFBS_None, // PATCHABLE_EVENT_CALL = 39
    CEFBS_None, // PATCHABLE_TYPED_EVENT_CALL = 40
    CEFBS_None, // ICALL_BRANCH_FUNNEL = 41
    CEFBS_None, // MEMBARRIER = 42
    CEFBS_None, // G_ASSERT_SEXT = 43
    CEFBS_None, // G_ASSERT_ZEXT = 44
    CEFBS_None, // G_ASSERT_ALIGN = 45
    CEFBS_None, // G_ADD = 46
    CEFBS_None, // G_SUB = 47
    CEFBS_None, // G_MUL = 48
    CEFBS_None, // G_SDIV = 49
    CEFBS_None, // G_UDIV = 50
    CEFBS_None, // G_SREM = 51
    CEFBS_None, // G_UREM = 52
    CEFBS_None, // G_SDIVREM = 53
    CEFBS_None, // G_UDIVREM = 54
    CEFBS_None, // G_AND = 55
    CEFBS_None, // G_OR = 56
    CEFBS_None, // G_XOR = 57
    CEFBS_None, // G_IMPLICIT_DEF = 58
    CEFBS_None, // G_PHI = 59
    CEFBS_None, // G_FRAME_INDEX = 60
    CEFBS_None, // G_GLOBAL_VALUE = 61
    CEFBS_None, // G_CONSTANT_POOL = 62
    CEFBS_None, // G_EXTRACT = 63
    CEFBS_None, // G_UNMERGE_VALUES = 64
    CEFBS_None, // G_INSERT = 65
    CEFBS_None, // G_MERGE_VALUES = 66
    CEFBS_None, // G_BUILD_VECTOR = 67
    CEFBS_None, // G_BUILD_VECTOR_TRUNC = 68
    CEFBS_None, // G_CONCAT_VECTORS = 69
    CEFBS_None, // G_PTRTOINT = 70
    CEFBS_None, // G_INTTOPTR = 71
    CEFBS_None, // G_BITCAST = 72
    CEFBS_None, // G_FREEZE = 73
    CEFBS_None, // G_INTRINSIC_FPTRUNC_ROUND = 74
    CEFBS_None, // G_INTRINSIC_TRUNC = 75
    CEFBS_None, // G_INTRINSIC_ROUND = 76
    CEFBS_None, // G_INTRINSIC_LRINT = 77
    CEFBS_None, // G_INTRINSIC_ROUNDEVEN = 78
    CEFBS_None, // G_READCYCLECOUNTER = 79
    CEFBS_None, // G_LOAD = 80
    CEFBS_None, // G_SEXTLOAD = 81
    CEFBS_None, // G_ZEXTLOAD = 82
    CEFBS_None, // G_INDEXED_LOAD = 83
    CEFBS_None, // G_INDEXED_SEXTLOAD = 84
    CEFBS_None, // G_INDEXED_ZEXTLOAD = 85
    CEFBS_None, // G_STORE = 86
    CEFBS_None, // G_INDEXED_STORE = 87
    CEFBS_None, // G_ATOMIC_CMPXCHG_WITH_SUCCESS = 88
    CEFBS_None, // G_ATOMIC_CMPXCHG = 89
    CEFBS_None, // G_ATOMICRMW_XCHG = 90
    CEFBS_None, // G_ATOMICRMW_ADD = 91
    CEFBS_None, // G_ATOMICRMW_SUB = 92
    CEFBS_None, // G_ATOMICRMW_AND = 93
    CEFBS_None, // G_ATOMICRMW_NAND = 94
    CEFBS_None, // G_ATOMICRMW_OR = 95
    CEFBS_None, // G_ATOMICRMW_XOR = 96
    CEFBS_None, // G_ATOMICRMW_MAX = 97
    CEFBS_None, // G_ATOMICRMW_MIN = 98
    CEFBS_None, // G_ATOMICRMW_UMAX = 99
    CEFBS_None, // G_ATOMICRMW_UMIN = 100
    CEFBS_None, // G_ATOMICRMW_FADD = 101
    CEFBS_None, // G_ATOMICRMW_FSUB = 102
    CEFBS_None, // G_ATOMICRMW_FMAX = 103
    CEFBS_None, // G_ATOMICRMW_FMIN = 104
    CEFBS_None, // G_ATOMICRMW_UINC_WRAP = 105
    CEFBS_None, // G_ATOMICRMW_UDEC_WRAP = 106
    CEFBS_None, // G_FENCE = 107
    CEFBS_None, // G_BRCOND = 108
    CEFBS_None, // G_BRINDIRECT = 109
    CEFBS_None, // G_INVOKE_REGION_START = 110
    CEFBS_None, // G_INTRINSIC = 111
    CEFBS_None, // G_INTRINSIC_W_SIDE_EFFECTS = 112
    CEFBS_None, // G_ANYEXT = 113
    CEFBS_None, // G_TRUNC = 114
    CEFBS_None, // G_CONSTANT = 115
    CEFBS_None, // G_FCONSTANT = 116
    CEFBS_None, // G_VASTART = 117
    CEFBS_None, // G_VAARG = 118
    CEFBS_None, // G_SEXT = 119
    CEFBS_None, // G_SEXT_INREG = 120
    CEFBS_None, // G_ZEXT = 121
    CEFBS_None, // G_SHL = 122
    CEFBS_None, // G_LSHR = 123
    CEFBS_None, // G_ASHR = 124
    CEFBS_None, // G_FSHL = 125
    CEFBS_None, // G_FSHR = 126
    CEFBS_None, // G_ROTR = 127
    CEFBS_None, // G_ROTL = 128
    CEFBS_None, // G_ICMP = 129
    CEFBS_None, // G_FCMP = 130
    CEFBS_None, // G_SELECT = 131
    CEFBS_None, // G_UADDO = 132
    CEFBS_None, // G_UADDE = 133
    CEFBS_None, // G_USUBO = 134
    CEFBS_None, // G_USUBE = 135
    CEFBS_None, // G_SADDO = 136
    CEFBS_None, // G_SADDE = 137
    CEFBS_None, // G_SSUBO = 138
    CEFBS_None, // G_SSUBE = 139
    CEFBS_None, // G_UMULO = 140
    CEFBS_None, // G_SMULO = 141
    CEFBS_None, // G_UMULH = 142
    CEFBS_None, // G_SMULH = 143
    CEFBS_None, // G_UADDSAT = 144
    CEFBS_None, // G_SADDSAT = 145
    CEFBS_None, // G_USUBSAT = 146
    CEFBS_None, // G_SSUBSAT = 147
    CEFBS_None, // G_USHLSAT = 148
    CEFBS_None, // G_SSHLSAT = 149
    CEFBS_None, // G_SMULFIX = 150
    CEFBS_None, // G_UMULFIX = 151
    CEFBS_None, // G_SMULFIXSAT = 152
    CEFBS_None, // G_UMULFIXSAT = 153
    CEFBS_None, // G_SDIVFIX = 154
    CEFBS_None, // G_UDIVFIX = 155
    CEFBS_None, // G_SDIVFIXSAT = 156
    CEFBS_None, // G_UDIVFIXSAT = 157
    CEFBS_None, // G_FADD = 158
    CEFBS_None, // G_FSUB = 159
    CEFBS_None, // G_FMUL = 160
    CEFBS_None, // G_FMA = 161
    CEFBS_None, // G_FMAD = 162
    CEFBS_None, // G_FDIV = 163
    CEFBS_None, // G_FREM = 164
    CEFBS_None, // G_FPOW = 165
    CEFBS_None, // G_FPOWI = 166
    CEFBS_None, // G_FEXP = 167
    CEFBS_None, // G_FEXP2 = 168
    CEFBS_None, // G_FLOG = 169
    CEFBS_None, // G_FLOG2 = 170
    CEFBS_None, // G_FLOG10 = 171
    CEFBS_None, // G_FNEG = 172
    CEFBS_None, // G_FPEXT = 173
    CEFBS_None, // G_FPTRUNC = 174
    CEFBS_None, // G_FPTOSI = 175
    CEFBS_None, // G_FPTOUI = 176
    CEFBS_None, // G_SITOFP = 177
    CEFBS_None, // G_UITOFP = 178
    CEFBS_None, // G_FABS = 179
    CEFBS_None, // G_FCOPYSIGN = 180
    CEFBS_None, // G_IS_FPCLASS = 181
    CEFBS_None, // G_FCANONICALIZE = 182
    CEFBS_None, // G_FMINNUM = 183
    CEFBS_None, // G_FMAXNUM = 184
    CEFBS_None, // G_FMINNUM_IEEE = 185
    CEFBS_None, // G_FMAXNUM_IEEE = 186
    CEFBS_None, // G_FMINIMUM = 187
    CEFBS_None, // G_FMAXIMUM = 188
    CEFBS_None, // G_PTR_ADD = 189
    CEFBS_None, // G_PTRMASK = 190
    CEFBS_None, // G_SMIN = 191
    CEFBS_None, // G_SMAX = 192
    CEFBS_None, // G_UMIN = 193
    CEFBS_None, // G_UMAX = 194
    CEFBS_None, // G_ABS = 195
    CEFBS_None, // G_LROUND = 196
    CEFBS_None, // G_LLROUND = 197
    CEFBS_None, // G_BR = 198
    CEFBS_None, // G_BRJT = 199
    CEFBS_None, // G_INSERT_VECTOR_ELT = 200
    CEFBS_None, // G_EXTRACT_VECTOR_ELT = 201
    CEFBS_None, // G_SHUFFLE_VECTOR = 202
    CEFBS_None, // G_CTTZ = 203
    CEFBS_None, // G_CTTZ_ZERO_UNDEF = 204
    CEFBS_None, // G_CTLZ = 205
    CEFBS_None, // G_CTLZ_ZERO_UNDEF = 206
    CEFBS_None, // G_CTPOP = 207
    CEFBS_None, // G_BSWAP = 208
    CEFBS_None, // G_BITREVERSE = 209
    CEFBS_None, // G_FCEIL = 210
    CEFBS_None, // G_FCOS = 211
    CEFBS_None, // G_FSIN = 212
    CEFBS_None, // G_FSQRT = 213
    CEFBS_None, // G_FFLOOR = 214
    CEFBS_None, // G_FRINT = 215
    CEFBS_None, // G_FNEARBYINT = 216
    CEFBS_None, // G_ADDRSPACE_CAST = 217
    CEFBS_None, // G_BLOCK_ADDR = 218
    CEFBS_None, // G_JUMP_TABLE = 219
    CEFBS_None, // G_DYN_STACKALLOC = 220
    CEFBS_None, // G_STRICT_FADD = 221
    CEFBS_None, // G_STRICT_FSUB = 222
    CEFBS_None, // G_STRICT_FMUL = 223
    CEFBS_None, // G_STRICT_FDIV = 224
    CEFBS_None, // G_STRICT_FREM = 225
    CEFBS_None, // G_STRICT_FMA = 226
    CEFBS_None, // G_STRICT_FSQRT = 227
    CEFBS_None, // G_READ_REGISTER = 228
    CEFBS_None, // G_WRITE_REGISTER = 229
    CEFBS_None, // G_MEMCPY = 230
    CEFBS_None, // G_MEMCPY_INLINE = 231
    CEFBS_None, // G_MEMMOVE = 232
    CEFBS_None, // G_MEMSET = 233
    CEFBS_None, // G_BZERO = 234
    CEFBS_None, // G_VECREDUCE_SEQ_FADD = 235
    CEFBS_None, // G_VECREDUCE_SEQ_FMUL = 236
    CEFBS_None, // G_VECREDUCE_FADD = 237
    CEFBS_None, // G_VECREDUCE_FMUL = 238
    CEFBS_None, // G_VECREDUCE_FMAX = 239
    CEFBS_None, // G_VECREDUCE_FMIN = 240
    CEFBS_None, // G_VECREDUCE_ADD = 241
    CEFBS_None, // G_VECREDUCE_MUL = 242
    CEFBS_None, // G_VECREDUCE_AND = 243
    CEFBS_None, // G_VECREDUCE_OR = 244
    CEFBS_None, // G_VECREDUCE_XOR = 245
    CEFBS_None, // G_VECREDUCE_SMAX = 246
    CEFBS_None, // G_VECREDUCE_SMIN = 247
    CEFBS_None, // G_VECREDUCE_UMAX = 248
    CEFBS_None, // G_VECREDUCE_UMIN = 249
    CEFBS_None, // G_SBFX = 250
    CEFBS_None, // G_UBFX = 251
    CEFBS_None, // CALL_PARAMS = 252
    CEFBS_None, // CALL_PARAMS_S = 253
    CEFBS_None, // CALL_RESULTS = 254
    CEFBS_None, // CALL_RESULTS_S = 255
    CEFBS_HasExceptionHandling, // CATCHRET = 256
    CEFBS_HasExceptionHandling, // CATCHRET_S = 257
    CEFBS_HasExceptionHandling, // CLEANUPRET = 258
    CEFBS_HasExceptionHandling, // CLEANUPRET_S = 259
    CEFBS_HasAtomics, // COMPILER_FENCE = 260
    CEFBS_HasAtomics, // COMPILER_FENCE_S = 261
    CEFBS_None, // RET_CALL_RESULTS = 262
    CEFBS_None, // RET_CALL_RESULTS_S = 263
    CEFBS_None, // ABS_F32 = 264
    CEFBS_None, // ABS_F32_S = 265
    CEFBS_HasSIMD128, // ABS_F32x4 = 266
    CEFBS_HasSIMD128, // ABS_F32x4_S = 267
    CEFBS_None, // ABS_F64 = 268
    CEFBS_None, // ABS_F64_S = 269
    CEFBS_HasSIMD128, // ABS_F64x2 = 270
    CEFBS_HasSIMD128, // ABS_F64x2_S = 271
    CEFBS_HasSIMD128, // ABS_I16x8 = 272
    CEFBS_HasSIMD128, // ABS_I16x8_S = 273
    CEFBS_HasSIMD128, // ABS_I32x4 = 274
    CEFBS_HasSIMD128, // ABS_I32x4_S = 275
    CEFBS_HasSIMD128, // ABS_I64x2 = 276
    CEFBS_HasSIMD128, // ABS_I64x2_S = 277
    CEFBS_HasSIMD128, // ABS_I8x16 = 278
    CEFBS_HasSIMD128, // ABS_I8x16_S = 279
    CEFBS_None, // ADD_F32 = 280
    CEFBS_None, // ADD_F32_S = 281
    CEFBS_HasSIMD128, // ADD_F32x4 = 282
    CEFBS_HasSIMD128, // ADD_F32x4_S = 283
    CEFBS_None, // ADD_F64 = 284
    CEFBS_None, // ADD_F64_S = 285
    CEFBS_HasSIMD128, // ADD_F64x2 = 286
    CEFBS_HasSIMD128, // ADD_F64x2_S = 287
    CEFBS_HasSIMD128, // ADD_I16x8 = 288
    CEFBS_HasSIMD128, // ADD_I16x8_S = 289
    CEFBS_None, // ADD_I32 = 290
    CEFBS_None, // ADD_I32_S = 291
    CEFBS_HasSIMD128, // ADD_I32x4 = 292
    CEFBS_HasSIMD128, // ADD_I32x4_S = 293
    CEFBS_None, // ADD_I64 = 294
    CEFBS_None, // ADD_I64_S = 295
    CEFBS_HasSIMD128, // ADD_I64x2 = 296
    CEFBS_HasSIMD128, // ADD_I64x2_S = 297
    CEFBS_HasSIMD128, // ADD_I8x16 = 298
    CEFBS_HasSIMD128, // ADD_I8x16_S = 299
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8 = 300
    CEFBS_HasSIMD128, // ADD_SAT_S_I16x8_S = 301
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16 = 302
    CEFBS_HasSIMD128, // ADD_SAT_S_I8x16_S = 303
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8 = 304
    CEFBS_HasSIMD128, // ADD_SAT_U_I16x8_S = 305
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16 = 306
    CEFBS_HasSIMD128, // ADD_SAT_U_I8x16_S = 307
    CEFBS_None, // ADJCALLSTACKDOWN = 308
    CEFBS_None, // ADJCALLSTACKDOWN_S = 309
    CEFBS_None, // ADJCALLSTACKUP = 310
    CEFBS_None, // ADJCALLSTACKUP_S = 311
    CEFBS_HasSIMD128, // ALLTRUE_I16x8 = 312
    CEFBS_HasSIMD128, // ALLTRUE_I16x8_S = 313
    CEFBS_HasSIMD128, // ALLTRUE_I32x4 = 314
    CEFBS_HasSIMD128, // ALLTRUE_I32x4_S = 315
    CEFBS_HasSIMD128, // ALLTRUE_I64x2 = 316
    CEFBS_HasSIMD128, // ALLTRUE_I64x2_S = 317
    CEFBS_HasSIMD128, // ALLTRUE_I8x16 = 318
    CEFBS_HasSIMD128, // ALLTRUE_I8x16_S = 319
    CEFBS_HasSIMD128, // AND = 320
    CEFBS_HasSIMD128, // ANDNOT = 321
    CEFBS_HasSIMD128, // ANDNOT_S = 322
    CEFBS_None, // AND_I32 = 323
    CEFBS_None, // AND_I32_S = 324
    CEFBS_None, // AND_I64 = 325
    CEFBS_None, // AND_I64_S = 326
    CEFBS_HasSIMD128, // AND_S = 327
    CEFBS_HasSIMD128, // ANYTRUE = 328
    CEFBS_HasSIMD128, // ANYTRUE_S = 329
    CEFBS_None, // ARGUMENT_externref = 330
    CEFBS_None, // ARGUMENT_externref_S = 331
    CEFBS_None, // ARGUMENT_f32 = 332
    CEFBS_None, // ARGUMENT_f32_S = 333
    CEFBS_None, // ARGUMENT_f64 = 334
    CEFBS_None, // ARGUMENT_f64_S = 335
    CEFBS_None, // ARGUMENT_funcref = 336
    CEFBS_None, // ARGUMENT_funcref_S = 337
    CEFBS_None, // ARGUMENT_i32 = 338
    CEFBS_None, // ARGUMENT_i32_S = 339
    CEFBS_None, // ARGUMENT_i64 = 340
    CEFBS_None, // ARGUMENT_i64_S = 341
    CEFBS_None, // ARGUMENT_v16i8 = 342
    CEFBS_None, // ARGUMENT_v16i8_S = 343
    CEFBS_None, // ARGUMENT_v2f64 = 344
    CEFBS_None, // ARGUMENT_v2f64_S = 345
    CEFBS_None, // ARGUMENT_v2i64 = 346
    CEFBS_None, // ARGUMENT_v2i64_S = 347
    CEFBS_None, // ARGUMENT_v4f32 = 348
    CEFBS_None, // ARGUMENT_v4f32_S = 349
    CEFBS_None, // ARGUMENT_v4i32 = 350
    CEFBS_None, // ARGUMENT_v4i32_S = 351
    CEFBS_None, // ARGUMENT_v8i16 = 352
    CEFBS_None, // ARGUMENT_v8i16_S = 353
    CEFBS_HasAtomics, // ATOMIC_FENCE = 354
    CEFBS_HasAtomics, // ATOMIC_FENCE_S = 355
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32 = 356
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A32_S = 357
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64 = 358
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I32_A64_S = 359
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32 = 360
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A32_S = 361
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64 = 362
    CEFBS_HasAtomics, // ATOMIC_LOAD16_U_I64_A64_S = 363
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32 = 364
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A32_S = 365
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64 = 366
    CEFBS_HasAtomics, // ATOMIC_LOAD32_U_I64_A64_S = 367
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32 = 368
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A32_S = 369
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64 = 370
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I32_A64_S = 371
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32 = 372
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A32_S = 373
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64 = 374
    CEFBS_HasAtomics, // ATOMIC_LOAD8_U_I64_A64_S = 375
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32 = 376
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A32_S = 377
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64 = 378
    CEFBS_HasAtomics, // ATOMIC_LOAD_I32_A64_S = 379
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32 = 380
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A32_S = 381
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64 = 382
    CEFBS_HasAtomics, // ATOMIC_LOAD_I64_A64_S = 383
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32 = 384
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A32_S = 385
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64 = 386
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I32_A64_S = 387
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32 = 388
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A32_S = 389
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64 = 390
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_ADD_I64_A64_S = 391
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32 = 392
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A32_S = 393
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64 = 394
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I32_A64_S = 395
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32 = 396
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A32_S = 397
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64 = 398
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_AND_I64_A64_S = 399
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32 = 400
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A32_S = 401
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64 = 402
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I32_A64_S = 403
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32 = 404
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A32_S = 405
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64 = 406
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_CMPXCHG_I64_A64_S = 407
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32 = 408
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A32_S = 409
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64 = 410
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I32_A64_S = 411
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32 = 412
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A32_S = 413
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64 = 414
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_OR_I64_A64_S = 415
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32 = 416
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A32_S = 417
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64 = 418
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I32_A64_S = 419
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32 = 420
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A32_S = 421
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64 = 422
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_SUB_I64_A64_S = 423
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32 = 424
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A32_S = 425
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64 = 426
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I32_A64_S = 427
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32 = 428
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A32_S = 429
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64 = 430
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XCHG_I64_A64_S = 431
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32 = 432
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A32_S = 433
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64 = 434
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I32_A64_S = 435
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32 = 436
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A32_S = 437
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64 = 438
    CEFBS_HasAtomics, // ATOMIC_RMW16_U_XOR_I64_A64_S = 439
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32 = 440
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A32_S = 441
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64 = 442
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_ADD_I64_A64_S = 443
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32 = 444
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A32_S = 445
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64 = 446
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_AND_I64_A64_S = 447
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32 = 448
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A32_S = 449
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64 = 450
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_CMPXCHG_I64_A64_S = 451
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32 = 452
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A32_S = 453
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64 = 454
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_OR_I64_A64_S = 455
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32 = 456
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A32_S = 457
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64 = 458
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_SUB_I64_A64_S = 459
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32 = 460
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A32_S = 461
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64 = 462
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XCHG_I64_A64_S = 463
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32 = 464
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A32_S = 465
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64 = 466
    CEFBS_HasAtomics, // ATOMIC_RMW32_U_XOR_I64_A64_S = 467
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32 = 468
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A32_S = 469
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64 = 470
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I32_A64_S = 471
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32 = 472
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A32_S = 473
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64 = 474
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_ADD_I64_A64_S = 475
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32 = 476
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A32_S = 477
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64 = 478
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I32_A64_S = 479
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32 = 480
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A32_S = 481
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64 = 482
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_AND_I64_A64_S = 483
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32 = 484
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A32_S = 485
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64 = 486
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I32_A64_S = 487
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32 = 488
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A32_S = 489
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64 = 490
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_CMPXCHG_I64_A64_S = 491
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32 = 492
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A32_S = 493
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64 = 494
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I32_A64_S = 495
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32 = 496
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A32_S = 497
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64 = 498
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_OR_I64_A64_S = 499
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32 = 500
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A32_S = 501
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64 = 502
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I32_A64_S = 503
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32 = 504
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A32_S = 505
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64 = 506
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_SUB_I64_A64_S = 507
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32 = 508
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A32_S = 509
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64 = 510
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I32_A64_S = 511
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32 = 512
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A32_S = 513
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64 = 514
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XCHG_I64_A64_S = 515
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32 = 516
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A32_S = 517
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64 = 518
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I32_A64_S = 519
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32 = 520
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A32_S = 521
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64 = 522
    CEFBS_HasAtomics, // ATOMIC_RMW8_U_XOR_I64_A64_S = 523
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32 = 524
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A32_S = 525
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64 = 526
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I32_A64_S = 527
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32 = 528
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A32_S = 529
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64 = 530
    CEFBS_HasAtomics, // ATOMIC_RMW_ADD_I64_A64_S = 531
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32 = 532
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A32_S = 533
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64 = 534
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I32_A64_S = 535
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32 = 536
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A32_S = 537
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64 = 538
    CEFBS_HasAtomics, // ATOMIC_RMW_AND_I64_A64_S = 539
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32 = 540
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A32_S = 541
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64 = 542
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I32_A64_S = 543
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32 = 544
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A32_S = 545
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64 = 546
    CEFBS_HasAtomics, // ATOMIC_RMW_CMPXCHG_I64_A64_S = 547
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32 = 548
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A32_S = 549
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64 = 550
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I32_A64_S = 551
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32 = 552
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A32_S = 553
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64 = 554
    CEFBS_HasAtomics, // ATOMIC_RMW_OR_I64_A64_S = 555
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32 = 556
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A32_S = 557
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64 = 558
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I32_A64_S = 559
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32 = 560
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A32_S = 561
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64 = 562
    CEFBS_HasAtomics, // ATOMIC_RMW_SUB_I64_A64_S = 563
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32 = 564
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A32_S = 565
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64 = 566
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I32_A64_S = 567
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32 = 568
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A32_S = 569
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64 = 570
    CEFBS_HasAtomics, // ATOMIC_RMW_XCHG_I64_A64_S = 571
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32 = 572
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A32_S = 573
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64 = 574
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I32_A64_S = 575
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32 = 576
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A32_S = 577
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64 = 578
    CEFBS_HasAtomics, // ATOMIC_RMW_XOR_I64_A64_S = 579
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32 = 580
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A32_S = 581
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64 = 582
    CEFBS_HasAtomics, // ATOMIC_STORE16_I32_A64_S = 583
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32 = 584
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A32_S = 585
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64 = 586
    CEFBS_HasAtomics, // ATOMIC_STORE16_I64_A64_S = 587
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32 = 588
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A32_S = 589
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64 = 590
    CEFBS_HasAtomics, // ATOMIC_STORE32_I64_A64_S = 591
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32 = 592
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A32_S = 593
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64 = 594
    CEFBS_HasAtomics, // ATOMIC_STORE8_I32_A64_S = 595
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32 = 596
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A32_S = 597
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64 = 598
    CEFBS_HasAtomics, // ATOMIC_STORE8_I64_A64_S = 599
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32 = 600
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A32_S = 601
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64 = 602
    CEFBS_HasAtomics, // ATOMIC_STORE_I32_A64_S = 603
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32 = 604
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A32_S = 605
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64 = 606
    CEFBS_HasAtomics, // ATOMIC_STORE_I64_A64_S = 607
    CEFBS_HasSIMD128, // AVGR_U_I16x8 = 608
    CEFBS_HasSIMD128, // AVGR_U_I16x8_S = 609
    CEFBS_HasSIMD128, // AVGR_U_I8x16 = 610
    CEFBS_HasSIMD128, // AVGR_U_I8x16_S = 611
    CEFBS_HasSIMD128, // BITMASK_I16x8 = 612
    CEFBS_HasSIMD128, // BITMASK_I16x8_S = 613
    CEFBS_HasSIMD128, // BITMASK_I32x4 = 614
    CEFBS_HasSIMD128, // BITMASK_I32x4_S = 615
    CEFBS_HasSIMD128, // BITMASK_I64x2 = 616
    CEFBS_HasSIMD128, // BITMASK_I64x2_S = 617
    CEFBS_HasSIMD128, // BITMASK_I8x16 = 618
    CEFBS_HasSIMD128, // BITMASK_I8x16_S = 619
    CEFBS_HasSIMD128, // BITSELECT = 620
    CEFBS_HasSIMD128, // BITSELECT_S = 621
    CEFBS_None, // BLOCK = 622
    CEFBS_None, // BLOCK_S = 623
    CEFBS_None, // BR = 624
    CEFBS_None, // BR_IF = 625
    CEFBS_None, // BR_IF_S = 626
    CEFBS_None, // BR_S = 627
    CEFBS_None, // BR_TABLE_I32 = 628
    CEFBS_None, // BR_TABLE_I32_S = 629
    CEFBS_None, // BR_TABLE_I64 = 630
    CEFBS_None, // BR_TABLE_I64_S = 631
    CEFBS_None, // BR_UNLESS = 632
    CEFBS_None, // BR_UNLESS_S = 633
    CEFBS_None, // CALL = 634
    CEFBS_None, // CALL_INDIRECT = 635
    CEFBS_None, // CALL_INDIRECT_S = 636
    CEFBS_None, // CALL_S = 637
    CEFBS_HasExceptionHandling, // CATCH = 638
    CEFBS_HasExceptionHandling, // CATCH_ALL = 639
    CEFBS_HasExceptionHandling, // CATCH_ALL_S = 640
    CEFBS_HasExceptionHandling, // CATCH_S = 641
    CEFBS_None, // CEIL_F32 = 642
    CEFBS_None, // CEIL_F32_S = 643
    CEFBS_HasSIMD128, // CEIL_F32x4 = 644
    CEFBS_HasSIMD128, // CEIL_F32x4_S = 645
    CEFBS_None, // CEIL_F64 = 646
    CEFBS_None, // CEIL_F64_S = 647
    CEFBS_HasSIMD128, // CEIL_F64x2 = 648
    CEFBS_HasSIMD128, // CEIL_F64x2_S = 649
    CEFBS_None, // CLZ_I32 = 650
    CEFBS_None, // CLZ_I32_S = 651
    CEFBS_None, // CLZ_I64 = 652
    CEFBS_None, // CLZ_I64_S = 653
    CEFBS_None, // CONST_F32 = 654
    CEFBS_None, // CONST_F32_S = 655
    CEFBS_None, // CONST_F64 = 656
    CEFBS_None, // CONST_F64_S = 657
    CEFBS_None, // CONST_I32 = 658
    CEFBS_None, // CONST_I32_S = 659
    CEFBS_None, // CONST_I64 = 660
    CEFBS_None, // CONST_I64_S = 661
    CEFBS_HasSIMD128, // CONST_V128_F32x4 = 662
    CEFBS_HasSIMD128, // CONST_V128_F32x4_S = 663
    CEFBS_HasSIMD128, // CONST_V128_F64x2 = 664
    CEFBS_HasSIMD128, // CONST_V128_F64x2_S = 665
    CEFBS_HasSIMD128, // CONST_V128_I16x8 = 666
    CEFBS_HasSIMD128, // CONST_V128_I16x8_S = 667
    CEFBS_HasSIMD128, // CONST_V128_I32x4 = 668
    CEFBS_HasSIMD128, // CONST_V128_I32x4_S = 669
    CEFBS_HasSIMD128, // CONST_V128_I64x2 = 670
    CEFBS_HasSIMD128, // CONST_V128_I64x2_S = 671
    CEFBS_HasSIMD128, // CONST_V128_I8x16 = 672
    CEFBS_HasSIMD128, // CONST_V128_I8x16_S = 673
    CEFBS_None, // COPYSIGN_F32 = 674
    CEFBS_None, // COPYSIGN_F32_S = 675
    CEFBS_None, // COPYSIGN_F64 = 676
    CEFBS_None, // COPYSIGN_F64_S = 677
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF = 678
    CEFBS_HasReferenceTypes, // COPY_EXTERNREF_S = 679
    CEFBS_None, // COPY_F32 = 680
    CEFBS_None, // COPY_F32_S = 681
    CEFBS_None, // COPY_F64 = 682
    CEFBS_None, // COPY_F64_S = 683
    CEFBS_HasReferenceTypes, // COPY_FUNCREF = 684
    CEFBS_HasReferenceTypes, // COPY_FUNCREF_S = 685
    CEFBS_None, // COPY_I32 = 686
    CEFBS_None, // COPY_I32_S = 687
    CEFBS_None, // COPY_I64 = 688
    CEFBS_None, // COPY_I64_S = 689
    CEFBS_HasSIMD128, // COPY_V128 = 690
    CEFBS_HasSIMD128, // COPY_V128_S = 691
    CEFBS_None, // CTZ_I32 = 692
    CEFBS_None, // CTZ_I32_S = 693
    CEFBS_None, // CTZ_I64 = 694
    CEFBS_None, // CTZ_I64_S = 695
    CEFBS_None, // DEBUG_UNREACHABLE = 696
    CEFBS_None, // DEBUG_UNREACHABLE_S = 697
    CEFBS_HasExceptionHandling, // DELEGATE = 698
    CEFBS_HasExceptionHandling, // DELEGATE_S = 699
    CEFBS_None, // DIV_F32 = 700
    CEFBS_None, // DIV_F32_S = 701
    CEFBS_HasSIMD128, // DIV_F32x4 = 702
    CEFBS_HasSIMD128, // DIV_F32x4_S = 703
    CEFBS_None, // DIV_F64 = 704
    CEFBS_None, // DIV_F64_S = 705
    CEFBS_HasSIMD128, // DIV_F64x2 = 706
    CEFBS_HasSIMD128, // DIV_F64x2_S = 707
    CEFBS_None, // DIV_S_I32 = 708
    CEFBS_None, // DIV_S_I32_S = 709
    CEFBS_None, // DIV_S_I64 = 710
    CEFBS_None, // DIV_S_I64_S = 711
    CEFBS_None, // DIV_U_I32 = 712
    CEFBS_None, // DIV_U_I32_S = 713
    CEFBS_None, // DIV_U_I64 = 714
    CEFBS_None, // DIV_U_I64_S = 715
    CEFBS_HasSIMD128, // DOT = 716
    CEFBS_HasSIMD128, // DOT_S = 717
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF = 718
    CEFBS_HasReferenceTypes, // DROP_EXTERNREF_S = 719
    CEFBS_None, // DROP_F32 = 720
    CEFBS_None, // DROP_F32_S = 721
    CEFBS_None, // DROP_F64 = 722
    CEFBS_None, // DROP_F64_S = 723
    CEFBS_HasReferenceTypes, // DROP_FUNCREF = 724
    CEFBS_HasReferenceTypes, // DROP_FUNCREF_S = 725
    CEFBS_None, // DROP_I32 = 726
    CEFBS_None, // DROP_I32_S = 727
    CEFBS_None, // DROP_I64 = 728
    CEFBS_None, // DROP_I64_S = 729
    CEFBS_HasSIMD128, // DROP_V128 = 730
    CEFBS_HasSIMD128, // DROP_V128_S = 731
    CEFBS_None, // ELSE = 732
    CEFBS_None, // ELSE_S = 733
    CEFBS_None, // END = 734
    CEFBS_None, // END_BLOCK = 735
    CEFBS_None, // END_BLOCK_S = 736
    CEFBS_None, // END_FUNCTION = 737
    CEFBS_None, // END_FUNCTION_S = 738
    CEFBS_None, // END_IF = 739
    CEFBS_None, // END_IF_S = 740
    CEFBS_None, // END_LOOP = 741
    CEFBS_None, // END_LOOP_S = 742
    CEFBS_None, // END_S = 743
    CEFBS_HasExceptionHandling, // END_TRY = 744
    CEFBS_HasExceptionHandling, // END_TRY_S = 745
    CEFBS_None, // EQZ_I32 = 746
    CEFBS_None, // EQZ_I32_S = 747
    CEFBS_None, // EQZ_I64 = 748
    CEFBS_None, // EQZ_I64_S = 749
    CEFBS_None, // EQ_F32 = 750
    CEFBS_None, // EQ_F32_S = 751
    CEFBS_HasSIMD128, // EQ_F32x4 = 752
    CEFBS_HasSIMD128, // EQ_F32x4_S = 753
    CEFBS_None, // EQ_F64 = 754
    CEFBS_None, // EQ_F64_S = 755
    CEFBS_HasSIMD128, // EQ_F64x2 = 756
    CEFBS_HasSIMD128, // EQ_F64x2_S = 757
    CEFBS_HasSIMD128, // EQ_I16x8 = 758
    CEFBS_HasSIMD128, // EQ_I16x8_S = 759
    CEFBS_None, // EQ_I32 = 760
    CEFBS_None, // EQ_I32_S = 761
    CEFBS_HasSIMD128, // EQ_I32x4 = 762
    CEFBS_HasSIMD128, // EQ_I32x4_S = 763
    CEFBS_None, // EQ_I64 = 764
    CEFBS_None, // EQ_I64_S = 765
    CEFBS_HasSIMD128, // EQ_I64x2 = 766
    CEFBS_HasSIMD128, // EQ_I64x2_S = 767
    CEFBS_HasSIMD128, // EQ_I8x16 = 768
    CEFBS_HasSIMD128, // EQ_I8x16_S = 769
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8 = 770
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I16x8_S = 771
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4 = 772
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I32x4_S = 773
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2 = 774
    CEFBS_HasSIMD128, // EXTMUL_HIGH_S_I64x2_S = 775
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8 = 776
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I16x8_S = 777
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4 = 778
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I32x4_S = 779
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2 = 780
    CEFBS_HasSIMD128, // EXTMUL_HIGH_U_I64x2_S = 781
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8 = 782
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I16x8_S = 783
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4 = 784
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I32x4_S = 785
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2 = 786
    CEFBS_HasSIMD128, // EXTMUL_LOW_S_I64x2_S = 787
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8 = 788
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I16x8_S = 789
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4 = 790
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I32x4_S = 791
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2 = 792
    CEFBS_HasSIMD128, // EXTMUL_LOW_U_I64x2_S = 793
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4 = 794
    CEFBS_HasSIMD128, // EXTRACT_LANE_F32x4_S = 795
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2 = 796
    CEFBS_HasSIMD128, // EXTRACT_LANE_F64x2_S = 797
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s = 798
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_s_S = 799
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u = 800
    CEFBS_HasSIMD128, // EXTRACT_LANE_I16x8_u_S = 801
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4 = 802
    CEFBS_HasSIMD128, // EXTRACT_LANE_I32x4_S = 803
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2 = 804
    CEFBS_HasSIMD128, // EXTRACT_LANE_I64x2_S = 805
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s = 806
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_s_S = 807
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u = 808
    CEFBS_HasSIMD128, // EXTRACT_LANE_I8x16_u_S = 809
    CEFBS_None, // F32_CONVERT_S_I32 = 810
    CEFBS_None, // F32_CONVERT_S_I32_S = 811
    CEFBS_None, // F32_CONVERT_S_I64 = 812
    CEFBS_None, // F32_CONVERT_S_I64_S = 813
    CEFBS_None, // F32_CONVERT_U_I32 = 814
    CEFBS_None, // F32_CONVERT_U_I32_S = 815
    CEFBS_None, // F32_CONVERT_U_I64 = 816
    CEFBS_None, // F32_CONVERT_U_I64_S = 817
    CEFBS_None, // F32_DEMOTE_F64 = 818
    CEFBS_None, // F32_DEMOTE_F64_S = 819
    CEFBS_None, // F32_REINTERPRET_I32 = 820
    CEFBS_None, // F32_REINTERPRET_I32_S = 821
    CEFBS_None, // F64_CONVERT_S_I32 = 822
    CEFBS_None, // F64_CONVERT_S_I32_S = 823
    CEFBS_None, // F64_CONVERT_S_I64 = 824
    CEFBS_None, // F64_CONVERT_S_I64_S = 825
    CEFBS_None, // F64_CONVERT_U_I32 = 826
    CEFBS_None, // F64_CONVERT_U_I32_S = 827
    CEFBS_None, // F64_CONVERT_U_I64 = 828
    CEFBS_None, // F64_CONVERT_U_I64_S = 829
    CEFBS_None, // F64_PROMOTE_F32 = 830
    CEFBS_None, // F64_PROMOTE_F32_S = 831
    CEFBS_None, // F64_REINTERPRET_I64 = 832
    CEFBS_None, // F64_REINTERPRET_I64_S = 833
    CEFBS_None, // FALLTHROUGH_RETURN = 834
    CEFBS_None, // FALLTHROUGH_RETURN_S = 835
    CEFBS_None, // FLOOR_F32 = 836
    CEFBS_None, // FLOOR_F32_S = 837
    CEFBS_HasSIMD128, // FLOOR_F32x4 = 838
    CEFBS_HasSIMD128, // FLOOR_F32x4_S = 839
    CEFBS_None, // FLOOR_F64 = 840
    CEFBS_None, // FLOOR_F64_S = 841
    CEFBS_HasSIMD128, // FLOOR_F64x2 = 842
    CEFBS_HasSIMD128, // FLOOR_F64x2_S = 843
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32 = 844
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F32_S = 845
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64 = 846
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I32_F64_S = 847
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32 = 848
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F32_S = 849
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64 = 850
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_SINT_I64_F64_S = 851
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32 = 852
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F32_S = 853
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64 = 854
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I32_F64_S = 855
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32 = 856
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F32_S = 857
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64 = 858
    CEFBS_NotHasNontrappingFPToInt, // FP_TO_UINT_I64_F64_S = 859
    CEFBS_None, // GE_F32 = 860
    CEFBS_None, // GE_F32_S = 861
    CEFBS_HasSIMD128, // GE_F32x4 = 862
    CEFBS_HasSIMD128, // GE_F32x4_S = 863
    CEFBS_None, // GE_F64 = 864
    CEFBS_None, // GE_F64_S = 865
    CEFBS_HasSIMD128, // GE_F64x2 = 866
    CEFBS_HasSIMD128, // GE_F64x2_S = 867
    CEFBS_HasSIMD128, // GE_S_I16x8 = 868
    CEFBS_HasSIMD128, // GE_S_I16x8_S = 869
    CEFBS_None, // GE_S_I32 = 870
    CEFBS_None, // GE_S_I32_S = 871
    CEFBS_HasSIMD128, // GE_S_I32x4 = 872
    CEFBS_HasSIMD128, // GE_S_I32x4_S = 873
    CEFBS_None, // GE_S_I64 = 874
    CEFBS_None, // GE_S_I64_S = 875
    CEFBS_HasSIMD128, // GE_S_I64x2 = 876
    CEFBS_HasSIMD128, // GE_S_I64x2_S = 877
    CEFBS_HasSIMD128, // GE_S_I8x16 = 878
    CEFBS_HasSIMD128, // GE_S_I8x16_S = 879
    CEFBS_HasSIMD128, // GE_U_I16x8 = 880
    CEFBS_HasSIMD128, // GE_U_I16x8_S = 881
    CEFBS_None, // GE_U_I32 = 882
    CEFBS_None, // GE_U_I32_S = 883
    CEFBS_HasSIMD128, // GE_U_I32x4 = 884
    CEFBS_HasSIMD128, // GE_U_I32x4_S = 885
    CEFBS_None, // GE_U_I64 = 886
    CEFBS_None, // GE_U_I64_S = 887
    CEFBS_HasSIMD128, // GE_U_I8x16 = 888
    CEFBS_HasSIMD128, // GE_U_I8x16_S = 889
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF = 890
    CEFBS_HasReferenceTypes, // GLOBAL_GET_EXTERNREF_S = 891
    CEFBS_None, // GLOBAL_GET_F32 = 892
    CEFBS_None, // GLOBAL_GET_F32_S = 893
    CEFBS_None, // GLOBAL_GET_F64 = 894
    CEFBS_None, // GLOBAL_GET_F64_S = 895
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF = 896
    CEFBS_HasReferenceTypes, // GLOBAL_GET_FUNCREF_S = 897
    CEFBS_None, // GLOBAL_GET_I32 = 898
    CEFBS_None, // GLOBAL_GET_I32_S = 899
    CEFBS_None, // GLOBAL_GET_I64 = 900
    CEFBS_None, // GLOBAL_GET_I64_S = 901
    CEFBS_HasSIMD128, // GLOBAL_GET_V128 = 902
    CEFBS_HasSIMD128, // GLOBAL_GET_V128_S = 903
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF = 904
    CEFBS_HasReferenceTypes, // GLOBAL_SET_EXTERNREF_S = 905
    CEFBS_None, // GLOBAL_SET_F32 = 906
    CEFBS_None, // GLOBAL_SET_F32_S = 907
    CEFBS_None, // GLOBAL_SET_F64 = 908
    CEFBS_None, // GLOBAL_SET_F64_S = 909
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF = 910
    CEFBS_HasReferenceTypes, // GLOBAL_SET_FUNCREF_S = 911
    CEFBS_None, // GLOBAL_SET_I32 = 912
    CEFBS_None, // GLOBAL_SET_I32_S = 913
    CEFBS_None, // GLOBAL_SET_I64 = 914
    CEFBS_None, // GLOBAL_SET_I64_S = 915
    CEFBS_HasSIMD128, // GLOBAL_SET_V128 = 916
    CEFBS_HasSIMD128, // GLOBAL_SET_V128_S = 917
    CEFBS_None, // GT_F32 = 918
    CEFBS_None, // GT_F32_S = 919
    CEFBS_HasSIMD128, // GT_F32x4 = 920
    CEFBS_HasSIMD128, // GT_F32x4_S = 921
    CEFBS_None, // GT_F64 = 922
    CEFBS_None, // GT_F64_S = 923
    CEFBS_HasSIMD128, // GT_F64x2 = 924
    CEFBS_HasSIMD128, // GT_F64x2_S = 925
    CEFBS_HasSIMD128, // GT_S_I16x8 = 926
    CEFBS_HasSIMD128, // GT_S_I16x8_S = 927
    CEFBS_None, // GT_S_I32 = 928
    CEFBS_None, // GT_S_I32_S = 929
    CEFBS_HasSIMD128, // GT_S_I32x4 = 930
    CEFBS_HasSIMD128, // GT_S_I32x4_S = 931
    CEFBS_None, // GT_S_I64 = 932
    CEFBS_None, // GT_S_I64_S = 933
    CEFBS_HasSIMD128, // GT_S_I64x2 = 934
    CEFBS_HasSIMD128, // GT_S_I64x2_S = 935
    CEFBS_HasSIMD128, // GT_S_I8x16 = 936
    CEFBS_HasSIMD128, // GT_S_I8x16_S = 937
    CEFBS_HasSIMD128, // GT_U_I16x8 = 938
    CEFBS_HasSIMD128, // GT_U_I16x8_S = 939
    CEFBS_None, // GT_U_I32 = 940
    CEFBS_None, // GT_U_I32_S = 941
    CEFBS_HasSIMD128, // GT_U_I32x4 = 942
    CEFBS_HasSIMD128, // GT_U_I32x4_S = 943
    CEFBS_None, // GT_U_I64 = 944
    CEFBS_None, // GT_U_I64_S = 945
    CEFBS_HasSIMD128, // GT_U_I8x16 = 946
    CEFBS_HasSIMD128, // GT_U_I8x16_S = 947
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32 = 948
    CEFBS_HasSignExt, // I32_EXTEND16_S_I32_S = 949
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32 = 950
    CEFBS_HasSignExt, // I32_EXTEND8_S_I32_S = 951
    CEFBS_None, // I32_REINTERPRET_F32 = 952
    CEFBS_None, // I32_REINTERPRET_F32_S = 953
    CEFBS_None, // I32_TRUNC_S_F32 = 954
    CEFBS_None, // I32_TRUNC_S_F32_S = 955
    CEFBS_None, // I32_TRUNC_S_F64 = 956
    CEFBS_None, // I32_TRUNC_S_F64_S = 957
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32 = 958
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F32_S = 959
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64 = 960
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_S_SAT_F64_S = 961
    CEFBS_None, // I32_TRUNC_U_F32 = 962
    CEFBS_None, // I32_TRUNC_U_F32_S = 963
    CEFBS_None, // I32_TRUNC_U_F64 = 964
    CEFBS_None, // I32_TRUNC_U_F64_S = 965
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32 = 966
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F32_S = 967
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64 = 968
    CEFBS_HasNontrappingFPToInt, // I32_TRUNC_U_SAT_F64_S = 969
    CEFBS_None, // I32_WRAP_I64 = 970
    CEFBS_None, // I32_WRAP_I64_S = 971
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64 = 972
    CEFBS_HasSignExt, // I64_EXTEND16_S_I64_S = 973
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64 = 974
    CEFBS_HasSignExt, // I64_EXTEND32_S_I64_S = 975
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64 = 976
    CEFBS_HasSignExt, // I64_EXTEND8_S_I64_S = 977
    CEFBS_None, // I64_EXTEND_S_I32 = 978
    CEFBS_None, // I64_EXTEND_S_I32_S = 979
    CEFBS_None, // I64_EXTEND_U_I32 = 980
    CEFBS_None, // I64_EXTEND_U_I32_S = 981
    CEFBS_None, // I64_REINTERPRET_F64 = 982
    CEFBS_None, // I64_REINTERPRET_F64_S = 983
    CEFBS_None, // I64_TRUNC_S_F32 = 984
    CEFBS_None, // I64_TRUNC_S_F32_S = 985
    CEFBS_None, // I64_TRUNC_S_F64 = 986
    CEFBS_None, // I64_TRUNC_S_F64_S = 987
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32 = 988
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F32_S = 989
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64 = 990
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_S_SAT_F64_S = 991
    CEFBS_None, // I64_TRUNC_U_F32 = 992
    CEFBS_None, // I64_TRUNC_U_F32_S = 993
    CEFBS_None, // I64_TRUNC_U_F64 = 994
    CEFBS_None, // I64_TRUNC_U_F64_S = 995
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32 = 996
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F32_S = 997
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64 = 998
    CEFBS_HasNontrappingFPToInt, // I64_TRUNC_U_SAT_F64_S = 999
    CEFBS_None, // IF = 1000
    CEFBS_None, // IF_S = 1001
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8 = 1002
    CEFBS_HasRelaxedSIMD, // LANESELECT_I16x8_S = 1003
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4 = 1004
    CEFBS_HasRelaxedSIMD, // LANESELECT_I32x4_S = 1005
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2 = 1006
    CEFBS_HasRelaxedSIMD, // LANESELECT_I64x2_S = 1007
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16 = 1008
    CEFBS_HasRelaxedSIMD, // LANESELECT_I8x16_S = 1009
    CEFBS_None, // LE_F32 = 1010
    CEFBS_None, // LE_F32_S = 1011
    CEFBS_HasSIMD128, // LE_F32x4 = 1012
    CEFBS_HasSIMD128, // LE_F32x4_S = 1013
    CEFBS_None, // LE_F64 = 1014
    CEFBS_None, // LE_F64_S = 1015
    CEFBS_HasSIMD128, // LE_F64x2 = 1016
    CEFBS_HasSIMD128, // LE_F64x2_S = 1017
    CEFBS_HasSIMD128, // LE_S_I16x8 = 1018
    CEFBS_HasSIMD128, // LE_S_I16x8_S = 1019
    CEFBS_None, // LE_S_I32 = 1020
    CEFBS_None, // LE_S_I32_S = 1021
    CEFBS_HasSIMD128, // LE_S_I32x4 = 1022
    CEFBS_HasSIMD128, // LE_S_I32x4_S = 1023
    CEFBS_None, // LE_S_I64 = 1024
    CEFBS_None, // LE_S_I64_S = 1025
    CEFBS_HasSIMD128, // LE_S_I64x2 = 1026
    CEFBS_HasSIMD128, // LE_S_I64x2_S = 1027
    CEFBS_HasSIMD128, // LE_S_I8x16 = 1028
    CEFBS_HasSIMD128, // LE_S_I8x16_S = 1029
    CEFBS_HasSIMD128, // LE_U_I16x8 = 1030
    CEFBS_HasSIMD128, // LE_U_I16x8_S = 1031
    CEFBS_None, // LE_U_I32 = 1032
    CEFBS_None, // LE_U_I32_S = 1033
    CEFBS_HasSIMD128, // LE_U_I32x4 = 1034
    CEFBS_HasSIMD128, // LE_U_I32x4_S = 1035
    CEFBS_None, // LE_U_I64 = 1036
    CEFBS_None, // LE_U_I64_S = 1037
    CEFBS_HasSIMD128, // LE_U_I8x16 = 1038
    CEFBS_HasSIMD128, // LE_U_I8x16_S = 1039
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32 = 1040
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A32_S = 1041
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64 = 1042
    CEFBS_HasSIMD128, // LOAD16_SPLAT_A64_S = 1043
    CEFBS_None, // LOAD16_S_I32_A32 = 1044
    CEFBS_None, // LOAD16_S_I32_A32_S = 1045
    CEFBS_None, // LOAD16_S_I32_A64 = 1046
    CEFBS_None, // LOAD16_S_I32_A64_S = 1047
    CEFBS_None, // LOAD16_S_I64_A32 = 1048
    CEFBS_None, // LOAD16_S_I64_A32_S = 1049
    CEFBS_None, // LOAD16_S_I64_A64 = 1050
    CEFBS_None, // LOAD16_S_I64_A64_S = 1051
    CEFBS_None, // LOAD16_U_I32_A32 = 1052
    CEFBS_None, // LOAD16_U_I32_A32_S = 1053
    CEFBS_None, // LOAD16_U_I32_A64 = 1054
    CEFBS_None, // LOAD16_U_I32_A64_S = 1055
    CEFBS_None, // LOAD16_U_I64_A32 = 1056
    CEFBS_None, // LOAD16_U_I64_A32_S = 1057
    CEFBS_None, // LOAD16_U_I64_A64 = 1058
    CEFBS_None, // LOAD16_U_I64_A64_S = 1059
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32 = 1060
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A32_S = 1061
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64 = 1062
    CEFBS_HasSIMD128, // LOAD32_SPLAT_A64_S = 1063
    CEFBS_None, // LOAD32_S_I64_A32 = 1064
    CEFBS_None, // LOAD32_S_I64_A32_S = 1065
    CEFBS_None, // LOAD32_S_I64_A64 = 1066
    CEFBS_None, // LOAD32_S_I64_A64_S = 1067
    CEFBS_None, // LOAD32_U_I64_A32 = 1068
    CEFBS_None, // LOAD32_U_I64_A32_S = 1069
    CEFBS_None, // LOAD32_U_I64_A64 = 1070
    CEFBS_None, // LOAD32_U_I64_A64_S = 1071
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32 = 1072
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A32_S = 1073
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64 = 1074
    CEFBS_HasSIMD128, // LOAD64_SPLAT_A64_S = 1075
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32 = 1076
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A32_S = 1077
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64 = 1078
    CEFBS_HasSIMD128, // LOAD8_SPLAT_A64_S = 1079
    CEFBS_None, // LOAD8_S_I32_A32 = 1080
    CEFBS_None, // LOAD8_S_I32_A32_S = 1081
    CEFBS_None, // LOAD8_S_I32_A64 = 1082
    CEFBS_None, // LOAD8_S_I32_A64_S = 1083
    CEFBS_None, // LOAD8_S_I64_A32 = 1084
    CEFBS_None, // LOAD8_S_I64_A32_S = 1085
    CEFBS_None, // LOAD8_S_I64_A64 = 1086
    CEFBS_None, // LOAD8_S_I64_A64_S = 1087
    CEFBS_None, // LOAD8_U_I32_A32 = 1088
    CEFBS_None, // LOAD8_U_I32_A32_S = 1089
    CEFBS_None, // LOAD8_U_I32_A64 = 1090
    CEFBS_None, // LOAD8_U_I32_A64_S = 1091
    CEFBS_None, // LOAD8_U_I64_A32 = 1092
    CEFBS_None, // LOAD8_U_I64_A32_S = 1093
    CEFBS_None, // LOAD8_U_I64_A64 = 1094
    CEFBS_None, // LOAD8_U_I64_A64_S = 1095
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32 = 1096
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A32_S = 1097
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64 = 1098
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I16x8_A64_S = 1099
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32 = 1100
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A32_S = 1101
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64 = 1102
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I32x4_A64_S = 1103
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32 = 1104
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A32_S = 1105
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64 = 1106
    CEFBS_HasSIMD128, // LOAD_EXTEND_S_I64x2_A64_S = 1107
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32 = 1108
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A32_S = 1109
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64 = 1110
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I16x8_A64_S = 1111
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32 = 1112
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A32_S = 1113
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64 = 1114
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I32x4_A64_S = 1115
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32 = 1116
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A32_S = 1117
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64 = 1118
    CEFBS_HasSIMD128, // LOAD_EXTEND_U_I64x2_A64_S = 1119
    CEFBS_None, // LOAD_F32_A32 = 1120
    CEFBS_None, // LOAD_F32_A32_S = 1121
    CEFBS_None, // LOAD_F32_A64 = 1122
    CEFBS_None, // LOAD_F32_A64_S = 1123
    CEFBS_None, // LOAD_F64_A32 = 1124
    CEFBS_None, // LOAD_F64_A32_S = 1125
    CEFBS_None, // LOAD_F64_A64 = 1126
    CEFBS_None, // LOAD_F64_A64_S = 1127
    CEFBS_None, // LOAD_I32_A32 = 1128
    CEFBS_None, // LOAD_I32_A32_S = 1129
    CEFBS_None, // LOAD_I32_A64 = 1130
    CEFBS_None, // LOAD_I32_A64_S = 1131
    CEFBS_None, // LOAD_I64_A32 = 1132
    CEFBS_None, // LOAD_I64_A32_S = 1133
    CEFBS_None, // LOAD_I64_A64 = 1134
    CEFBS_None, // LOAD_I64_A64_S = 1135
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32 = 1136
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A32_S = 1137
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64 = 1138
    CEFBS_HasSIMD128, // LOAD_LANE_I16x8_A64_S = 1139
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32 = 1140
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A32_S = 1141
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64 = 1142
    CEFBS_HasSIMD128, // LOAD_LANE_I32x4_A64_S = 1143
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32 = 1144
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A32_S = 1145
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64 = 1146
    CEFBS_HasSIMD128, // LOAD_LANE_I64x2_A64_S = 1147
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32 = 1148
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A32_S = 1149
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64 = 1150
    CEFBS_HasSIMD128, // LOAD_LANE_I8x16_A64_S = 1151
    CEFBS_HasSIMD128, // LOAD_V128_A32 = 1152
    CEFBS_HasSIMD128, // LOAD_V128_A32_S = 1153
    CEFBS_HasSIMD128, // LOAD_V128_A64 = 1154
    CEFBS_HasSIMD128, // LOAD_V128_A64_S = 1155
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32 = 1156
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A32_S = 1157
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64 = 1158
    CEFBS_HasSIMD128, // LOAD_ZERO_I32x4_A64_S = 1159
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32 = 1160
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A32_S = 1161
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64 = 1162
    CEFBS_HasSIMD128, // LOAD_ZERO_I64x2_A64_S = 1163
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF = 1164
    CEFBS_HasReferenceTypes, // LOCAL_GET_EXTERNREF_S = 1165
    CEFBS_None, // LOCAL_GET_F32 = 1166
    CEFBS_None, // LOCAL_GET_F32_S = 1167
    CEFBS_None, // LOCAL_GET_F64 = 1168
    CEFBS_None, // LOCAL_GET_F64_S = 1169
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF = 1170
    CEFBS_HasReferenceTypes, // LOCAL_GET_FUNCREF_S = 1171
    CEFBS_None, // LOCAL_GET_I32 = 1172
    CEFBS_None, // LOCAL_GET_I32_S = 1173
    CEFBS_None, // LOCAL_GET_I64 = 1174
    CEFBS_None, // LOCAL_GET_I64_S = 1175
    CEFBS_HasSIMD128, // LOCAL_GET_V128 = 1176
    CEFBS_HasSIMD128, // LOCAL_GET_V128_S = 1177
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF = 1178
    CEFBS_HasReferenceTypes, // LOCAL_SET_EXTERNREF_S = 1179
    CEFBS_None, // LOCAL_SET_F32 = 1180
    CEFBS_None, // LOCAL_SET_F32_S = 1181
    CEFBS_None, // LOCAL_SET_F64 = 1182
    CEFBS_None, // LOCAL_SET_F64_S = 1183
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF = 1184
    CEFBS_HasReferenceTypes, // LOCAL_SET_FUNCREF_S = 1185
    CEFBS_None, // LOCAL_SET_I32 = 1186
    CEFBS_None, // LOCAL_SET_I32_S = 1187
    CEFBS_None, // LOCAL_SET_I64 = 1188
    CEFBS_None, // LOCAL_SET_I64_S = 1189
    CEFBS_HasSIMD128, // LOCAL_SET_V128 = 1190
    CEFBS_HasSIMD128, // LOCAL_SET_V128_S = 1191
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF = 1192
    CEFBS_HasReferenceTypes, // LOCAL_TEE_EXTERNREF_S = 1193
    CEFBS_None, // LOCAL_TEE_F32 = 1194
    CEFBS_None, // LOCAL_TEE_F32_S = 1195
    CEFBS_None, // LOCAL_TEE_F64 = 1196
    CEFBS_None, // LOCAL_TEE_F64_S = 1197
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF = 1198
    CEFBS_HasReferenceTypes, // LOCAL_TEE_FUNCREF_S = 1199
    CEFBS_None, // LOCAL_TEE_I32 = 1200
    CEFBS_None, // LOCAL_TEE_I32_S = 1201
    CEFBS_None, // LOCAL_TEE_I64 = 1202
    CEFBS_None, // LOCAL_TEE_I64_S = 1203
    CEFBS_HasSIMD128, // LOCAL_TEE_V128 = 1204
    CEFBS_HasSIMD128, // LOCAL_TEE_V128_S = 1205
    CEFBS_None, // LOOP = 1206
    CEFBS_None, // LOOP_S = 1207
    CEFBS_None, // LT_F32 = 1208
    CEFBS_None, // LT_F32_S = 1209
    CEFBS_HasSIMD128, // LT_F32x4 = 1210
    CEFBS_HasSIMD128, // LT_F32x4_S = 1211
    CEFBS_None, // LT_F64 = 1212
    CEFBS_None, // LT_F64_S = 1213
    CEFBS_HasSIMD128, // LT_F64x2 = 1214
    CEFBS_HasSIMD128, // LT_F64x2_S = 1215
    CEFBS_HasSIMD128, // LT_S_I16x8 = 1216
    CEFBS_HasSIMD128, // LT_S_I16x8_S = 1217
    CEFBS_None, // LT_S_I32 = 1218
    CEFBS_None, // LT_S_I32_S = 1219
    CEFBS_HasSIMD128, // LT_S_I32x4 = 1220
    CEFBS_HasSIMD128, // LT_S_I32x4_S = 1221
    CEFBS_None, // LT_S_I64 = 1222
    CEFBS_None, // LT_S_I64_S = 1223
    CEFBS_HasSIMD128, // LT_S_I64x2 = 1224
    CEFBS_HasSIMD128, // LT_S_I64x2_S = 1225
    CEFBS_HasSIMD128, // LT_S_I8x16 = 1226
    CEFBS_HasSIMD128, // LT_S_I8x16_S = 1227
    CEFBS_HasSIMD128, // LT_U_I16x8 = 1228
    CEFBS_HasSIMD128, // LT_U_I16x8_S = 1229
    CEFBS_None, // LT_U_I32 = 1230
    CEFBS_None, // LT_U_I32_S = 1231
    CEFBS_HasSIMD128, // LT_U_I32x4 = 1232
    CEFBS_HasSIMD128, // LT_U_I32x4_S = 1233
    CEFBS_None, // LT_U_I64 = 1234
    CEFBS_None, // LT_U_I64_S = 1235
    CEFBS_HasSIMD128, // LT_U_I8x16 = 1236
    CEFBS_HasSIMD128, // LT_U_I8x16_S = 1237
    CEFBS_HasRelaxedSIMD, // MADD_F32x4 = 1238
    CEFBS_HasRelaxedSIMD, // MADD_F32x4_S = 1239
    CEFBS_HasRelaxedSIMD, // MADD_F64x2 = 1240
    CEFBS_HasRelaxedSIMD, // MADD_F64x2_S = 1241
    CEFBS_None, // MAX_F32 = 1242
    CEFBS_None, // MAX_F32_S = 1243
    CEFBS_HasSIMD128, // MAX_F32x4 = 1244
    CEFBS_HasSIMD128, // MAX_F32x4_S = 1245
    CEFBS_None, // MAX_F64 = 1246
    CEFBS_None, // MAX_F64_S = 1247
    CEFBS_HasSIMD128, // MAX_F64x2 = 1248
    CEFBS_HasSIMD128, // MAX_F64x2_S = 1249
    CEFBS_HasSIMD128, // MAX_S_I16x8 = 1250
    CEFBS_HasSIMD128, // MAX_S_I16x8_S = 1251
    CEFBS_HasSIMD128, // MAX_S_I32x4 = 1252
    CEFBS_HasSIMD128, // MAX_S_I32x4_S = 1253
    CEFBS_HasSIMD128, // MAX_S_I8x16 = 1254
    CEFBS_HasSIMD128, // MAX_S_I8x16_S = 1255
    CEFBS_HasSIMD128, // MAX_U_I16x8 = 1256
    CEFBS_HasSIMD128, // MAX_U_I16x8_S = 1257
    CEFBS_HasSIMD128, // MAX_U_I32x4 = 1258
    CEFBS_HasSIMD128, // MAX_U_I32x4_S = 1259
    CEFBS_HasSIMD128, // MAX_U_I8x16 = 1260
    CEFBS_HasSIMD128, // MAX_U_I8x16_S = 1261
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32 = 1262
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A32_S = 1263
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64 = 1264
    CEFBS_HasAtomics, // MEMORY_ATOMIC_NOTIFY_A64_S = 1265
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32 = 1266
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A32_S = 1267
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64 = 1268
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT32_A64_S = 1269
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32 = 1270
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A32_S = 1271
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64 = 1272
    CEFBS_HasAtomics, // MEMORY_ATOMIC_WAIT64_A64_S = 1273
    CEFBS_None, // MIN_F32 = 1274
    CEFBS_None, // MIN_F32_S = 1275
    CEFBS_HasSIMD128, // MIN_F32x4 = 1276
    CEFBS_HasSIMD128, // MIN_F32x4_S = 1277
    CEFBS_None, // MIN_F64 = 1278
    CEFBS_None, // MIN_F64_S = 1279
    CEFBS_HasSIMD128, // MIN_F64x2 = 1280
    CEFBS_HasSIMD128, // MIN_F64x2_S = 1281
    CEFBS_HasSIMD128, // MIN_S_I16x8 = 1282
    CEFBS_HasSIMD128, // MIN_S_I16x8_S = 1283
    CEFBS_HasSIMD128, // MIN_S_I32x4 = 1284
    CEFBS_HasSIMD128, // MIN_S_I32x4_S = 1285
    CEFBS_HasSIMD128, // MIN_S_I8x16 = 1286
    CEFBS_HasSIMD128, // MIN_S_I8x16_S = 1287
    CEFBS_HasSIMD128, // MIN_U_I16x8 = 1288
    CEFBS_HasSIMD128, // MIN_U_I16x8_S = 1289
    CEFBS_HasSIMD128, // MIN_U_I32x4 = 1290
    CEFBS_HasSIMD128, // MIN_U_I32x4_S = 1291
    CEFBS_HasSIMD128, // MIN_U_I8x16 = 1292
    CEFBS_HasSIMD128, // MIN_U_I8x16_S = 1293
    CEFBS_None, // MUL_F32 = 1294
    CEFBS_None, // MUL_F32_S = 1295
    CEFBS_HasSIMD128, // MUL_F32x4 = 1296
    CEFBS_HasSIMD128, // MUL_F32x4_S = 1297
    CEFBS_None, // MUL_F64 = 1298
    CEFBS_None, // MUL_F64_S = 1299
    CEFBS_HasSIMD128, // MUL_F64x2 = 1300
    CEFBS_HasSIMD128, // MUL_F64x2_S = 1301
    CEFBS_HasSIMD128, // MUL_I16x8 = 1302
    CEFBS_HasSIMD128, // MUL_I16x8_S = 1303
    CEFBS_None, // MUL_I32 = 1304
    CEFBS_None, // MUL_I32_S = 1305
    CEFBS_HasSIMD128, // MUL_I32x4 = 1306
    CEFBS_HasSIMD128, // MUL_I32x4_S = 1307
    CEFBS_None, // MUL_I64 = 1308
    CEFBS_None, // MUL_I64_S = 1309
    CEFBS_HasSIMD128, // MUL_I64x2 = 1310
    CEFBS_HasSIMD128, // MUL_I64x2_S = 1311
    CEFBS_HasSIMD128, // NARROW_S_I16x8 = 1312
    CEFBS_HasSIMD128, // NARROW_S_I16x8_S = 1313
    CEFBS_HasSIMD128, // NARROW_S_I8x16 = 1314
    CEFBS_HasSIMD128, // NARROW_S_I8x16_S = 1315
    CEFBS_HasSIMD128, // NARROW_U_I16x8 = 1316
    CEFBS_HasSIMD128, // NARROW_U_I16x8_S = 1317
    CEFBS_HasSIMD128, // NARROW_U_I8x16 = 1318
    CEFBS_HasSIMD128, // NARROW_U_I8x16_S = 1319
    CEFBS_None, // NEAREST_F32 = 1320
    CEFBS_None, // NEAREST_F32_S = 1321
    CEFBS_HasSIMD128, // NEAREST_F32x4 = 1322
    CEFBS_HasSIMD128, // NEAREST_F32x4_S = 1323
    CEFBS_None, // NEAREST_F64 = 1324
    CEFBS_None, // NEAREST_F64_S = 1325
    CEFBS_HasSIMD128, // NEAREST_F64x2 = 1326
    CEFBS_HasSIMD128, // NEAREST_F64x2_S = 1327
    CEFBS_None, // NEG_F32 = 1328
    CEFBS_None, // NEG_F32_S = 1329
    CEFBS_HasSIMD128, // NEG_F32x4 = 1330
    CEFBS_HasSIMD128, // NEG_F32x4_S = 1331
    CEFBS_None, // NEG_F64 = 1332
    CEFBS_None, // NEG_F64_S = 1333
    CEFBS_HasSIMD128, // NEG_F64x2 = 1334
    CEFBS_HasSIMD128, // NEG_F64x2_S = 1335
    CEFBS_HasSIMD128, // NEG_I16x8 = 1336
    CEFBS_HasSIMD128, // NEG_I16x8_S = 1337
    CEFBS_HasSIMD128, // NEG_I32x4 = 1338
    CEFBS_HasSIMD128, // NEG_I32x4_S = 1339
    CEFBS_HasSIMD128, // NEG_I64x2 = 1340
    CEFBS_HasSIMD128, // NEG_I64x2_S = 1341
    CEFBS_HasSIMD128, // NEG_I8x16 = 1342
    CEFBS_HasSIMD128, // NEG_I8x16_S = 1343
    CEFBS_None, // NE_F32 = 1344
    CEFBS_None, // NE_F32_S = 1345
    CEFBS_HasSIMD128, // NE_F32x4 = 1346
    CEFBS_HasSIMD128, // NE_F32x4_S = 1347
    CEFBS_None, // NE_F64 = 1348
    CEFBS_None, // NE_F64_S = 1349
    CEFBS_HasSIMD128, // NE_F64x2 = 1350
    CEFBS_HasSIMD128, // NE_F64x2_S = 1351
    CEFBS_HasSIMD128, // NE_I16x8 = 1352
    CEFBS_HasSIMD128, // NE_I16x8_S = 1353
    CEFBS_None, // NE_I32 = 1354
    CEFBS_None, // NE_I32_S = 1355
    CEFBS_HasSIMD128, // NE_I32x4 = 1356
    CEFBS_HasSIMD128, // NE_I32x4_S = 1357
    CEFBS_None, // NE_I64 = 1358
    CEFBS_None, // NE_I64_S = 1359
    CEFBS_HasSIMD128, // NE_I64x2 = 1360
    CEFBS_HasSIMD128, // NE_I64x2_S = 1361
    CEFBS_HasSIMD128, // NE_I8x16 = 1362
    CEFBS_HasSIMD128, // NE_I8x16_S = 1363
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4 = 1364
    CEFBS_HasRelaxedSIMD, // NMADD_F32x4_S = 1365
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2 = 1366
    CEFBS_HasRelaxedSIMD, // NMADD_F64x2_S = 1367
    CEFBS_None, // NOP = 1368
    CEFBS_None, // NOP_S = 1369
    CEFBS_HasSIMD128, // NOT = 1370
    CEFBS_HasSIMD128, // NOT_S = 1371
    CEFBS_HasSIMD128, // OR = 1372
    CEFBS_None, // OR_I32 = 1373
    CEFBS_None, // OR_I32_S = 1374
    CEFBS_None, // OR_I64 = 1375
    CEFBS_None, // OR_I64_S = 1376
    CEFBS_HasSIMD128, // OR_S = 1377
    CEFBS_HasSIMD128, // PMAX_F32x4 = 1378
    CEFBS_HasSIMD128, // PMAX_F32x4_S = 1379
    CEFBS_HasSIMD128, // PMAX_F64x2 = 1380
    CEFBS_HasSIMD128, // PMAX_F64x2_S = 1381
    CEFBS_HasSIMD128, // PMIN_F32x4 = 1382
    CEFBS_HasSIMD128, // PMIN_F32x4_S = 1383
    CEFBS_HasSIMD128, // PMIN_F64x2 = 1384
    CEFBS_HasSIMD128, // PMIN_F64x2_S = 1385
    CEFBS_None, // POPCNT_I32 = 1386
    CEFBS_None, // POPCNT_I32_S = 1387
    CEFBS_None, // POPCNT_I64 = 1388
    CEFBS_None, // POPCNT_I64_S = 1389
    CEFBS_HasSIMD128, // POPCNT_I8x16 = 1390
    CEFBS_HasSIMD128, // POPCNT_I8x16_S = 1391
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8 = 1392
    CEFBS_HasSIMD128, // Q15MULR_SAT_S_I16x8_S = 1393
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF = 1394
    CEFBS_HasReferenceTypes, // REF_IS_NULL_EXTERNREF_S = 1395
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF = 1396
    CEFBS_HasReferenceTypes, // REF_IS_NULL_FUNCREF_S = 1397
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF = 1398
    CEFBS_HasReferenceTypes, // REF_NULL_EXTERNREF_S = 1399
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF = 1400
    CEFBS_HasReferenceTypes, // REF_NULL_FUNCREF_S = 1401
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT = 1402
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD = 1403
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_ADD_S = 1404
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT = 1405
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_BFLOAT_S = 1406
    CEFBS_HasRelaxedSIMD, // RELAXED_DOT_S = 1407
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8 = 1408
    CEFBS_HasRelaxedSIMD, // RELAXED_Q15MULR_S_I16x8_S = 1409
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE = 1410
    CEFBS_HasRelaxedSIMD, // RELAXED_SWIZZLE_S = 1411
    CEFBS_None, // REM_S_I32 = 1412
    CEFBS_None, // REM_S_I32_S = 1413
    CEFBS_None, // REM_S_I64 = 1414
    CEFBS_None, // REM_S_I64_S = 1415
    CEFBS_None, // REM_U_I32 = 1416
    CEFBS_None, // REM_U_I32_S = 1417
    CEFBS_None, // REM_U_I64 = 1418
    CEFBS_None, // REM_U_I64_S = 1419
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4 = 1420
    CEFBS_HasSIMD128, // REPLACE_LANE_F32x4_S = 1421
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2 = 1422
    CEFBS_HasSIMD128, // REPLACE_LANE_F64x2_S = 1423
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8 = 1424
    CEFBS_HasSIMD128, // REPLACE_LANE_I16x8_S = 1425
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4 = 1426
    CEFBS_HasSIMD128, // REPLACE_LANE_I32x4_S = 1427
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2 = 1428
    CEFBS_HasSIMD128, // REPLACE_LANE_I64x2_S = 1429
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16 = 1430
    CEFBS_HasSIMD128, // REPLACE_LANE_I8x16_S = 1431
    CEFBS_HasExceptionHandling, // RETHROW = 1432
    CEFBS_HasExceptionHandling, // RETHROW_S = 1433
    CEFBS_None, // RETURN = 1434
    CEFBS_None, // RETURN_S = 1435
    CEFBS_HasTailCall, // RET_CALL = 1436
    CEFBS_HasTailCall, // RET_CALL_INDIRECT = 1437
    CEFBS_HasTailCall, // RET_CALL_INDIRECT_S = 1438
    CEFBS_HasTailCall, // RET_CALL_S = 1439
    CEFBS_None, // ROTL_I32 = 1440
    CEFBS_None, // ROTL_I32_S = 1441
    CEFBS_None, // ROTL_I64 = 1442
    CEFBS_None, // ROTL_I64_S = 1443
    CEFBS_None, // ROTR_I32 = 1444
    CEFBS_None, // ROTR_I32_S = 1445
    CEFBS_None, // ROTR_I64 = 1446
    CEFBS_None, // ROTR_I64_S = 1447
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF = 1448
    CEFBS_HasReferenceTypes, // SELECT_EXTERNREF_S = 1449
    CEFBS_None, // SELECT_F32 = 1450
    CEFBS_None, // SELECT_F32_S = 1451
    CEFBS_None, // SELECT_F64 = 1452
    CEFBS_None, // SELECT_F64_S = 1453
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF = 1454
    CEFBS_HasReferenceTypes, // SELECT_FUNCREF_S = 1455
    CEFBS_None, // SELECT_I32 = 1456
    CEFBS_None, // SELECT_I32_S = 1457
    CEFBS_None, // SELECT_I64 = 1458
    CEFBS_None, // SELECT_I64_S = 1459
    CEFBS_None, // SELECT_V128 = 1460
    CEFBS_None, // SELECT_V128_S = 1461
    CEFBS_HasSIMD128, // SHL_I16x8 = 1462
    CEFBS_HasSIMD128, // SHL_I16x8_S = 1463
    CEFBS_None, // SHL_I32 = 1464
    CEFBS_None, // SHL_I32_S = 1465
    CEFBS_HasSIMD128, // SHL_I32x4 = 1466
    CEFBS_HasSIMD128, // SHL_I32x4_S = 1467
    CEFBS_None, // SHL_I64 = 1468
    CEFBS_None, // SHL_I64_S = 1469
    CEFBS_HasSIMD128, // SHL_I64x2 = 1470
    CEFBS_HasSIMD128, // SHL_I64x2_S = 1471
    CEFBS_HasSIMD128, // SHL_I8x16 = 1472
    CEFBS_HasSIMD128, // SHL_I8x16_S = 1473
    CEFBS_HasSIMD128, // SHR_S_I16x8 = 1474
    CEFBS_HasSIMD128, // SHR_S_I16x8_S = 1475
    CEFBS_None, // SHR_S_I32 = 1476
    CEFBS_None, // SHR_S_I32_S = 1477
    CEFBS_HasSIMD128, // SHR_S_I32x4 = 1478
    CEFBS_HasSIMD128, // SHR_S_I32x4_S = 1479
    CEFBS_None, // SHR_S_I64 = 1480
    CEFBS_None, // SHR_S_I64_S = 1481
    CEFBS_HasSIMD128, // SHR_S_I64x2 = 1482
    CEFBS_HasSIMD128, // SHR_S_I64x2_S = 1483
    CEFBS_HasSIMD128, // SHR_S_I8x16 = 1484
    CEFBS_HasSIMD128, // SHR_S_I8x16_S = 1485
    CEFBS_HasSIMD128, // SHR_U_I16x8 = 1486
    CEFBS_HasSIMD128, // SHR_U_I16x8_S = 1487
    CEFBS_None, // SHR_U_I32 = 1488
    CEFBS_None, // SHR_U_I32_S = 1489
    CEFBS_HasSIMD128, // SHR_U_I32x4 = 1490
    CEFBS_HasSIMD128, // SHR_U_I32x4_S = 1491
    CEFBS_None, // SHR_U_I64 = 1492
    CEFBS_None, // SHR_U_I64_S = 1493
    CEFBS_HasSIMD128, // SHR_U_I64x2 = 1494
    CEFBS_HasSIMD128, // SHR_U_I64x2_S = 1495
    CEFBS_HasSIMD128, // SHR_U_I8x16 = 1496
    CEFBS_HasSIMD128, // SHR_U_I8x16_S = 1497
    CEFBS_HasSIMD128, // SHUFFLE = 1498
    CEFBS_HasSIMD128, // SHUFFLE_S = 1499
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4 = 1500
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F32x4_S = 1501
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2 = 1502
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMAX_F64x2_S = 1503
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4 = 1504
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F32x4_S = 1505
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2 = 1506
    CEFBS_HasRelaxedSIMD, // SIMD_RELAXED_FMIN_F64x2_S = 1507
    CEFBS_HasSIMD128, // SPLAT_F32x4 = 1508
    CEFBS_HasSIMD128, // SPLAT_F32x4_S = 1509
    CEFBS_HasSIMD128, // SPLAT_F64x2 = 1510
    CEFBS_HasSIMD128, // SPLAT_F64x2_S = 1511
    CEFBS_HasSIMD128, // SPLAT_I16x8 = 1512
    CEFBS_HasSIMD128, // SPLAT_I16x8_S = 1513
    CEFBS_HasSIMD128, // SPLAT_I32x4 = 1514
    CEFBS_HasSIMD128, // SPLAT_I32x4_S = 1515
    CEFBS_HasSIMD128, // SPLAT_I64x2 = 1516
    CEFBS_HasSIMD128, // SPLAT_I64x2_S = 1517
    CEFBS_HasSIMD128, // SPLAT_I8x16 = 1518
    CEFBS_HasSIMD128, // SPLAT_I8x16_S = 1519
    CEFBS_None, // SQRT_F32 = 1520
    CEFBS_None, // SQRT_F32_S = 1521
    CEFBS_HasSIMD128, // SQRT_F32x4 = 1522
    CEFBS_HasSIMD128, // SQRT_F32x4_S = 1523
    CEFBS_None, // SQRT_F64 = 1524
    CEFBS_None, // SQRT_F64_S = 1525
    CEFBS_HasSIMD128, // SQRT_F64x2 = 1526
    CEFBS_HasSIMD128, // SQRT_F64x2_S = 1527
    CEFBS_None, // STORE16_I32_A32 = 1528
    CEFBS_None, // STORE16_I32_A32_S = 1529
    CEFBS_None, // STORE16_I32_A64 = 1530
    CEFBS_None, // STORE16_I32_A64_S = 1531
    CEFBS_None, // STORE16_I64_A32 = 1532
    CEFBS_None, // STORE16_I64_A32_S = 1533
    CEFBS_None, // STORE16_I64_A64 = 1534
    CEFBS_None, // STORE16_I64_A64_S = 1535
    CEFBS_None, // STORE32_I64_A32 = 1536
    CEFBS_None, // STORE32_I64_A32_S = 1537
    CEFBS_None, // STORE32_I64_A64 = 1538
    CEFBS_None, // STORE32_I64_A64_S = 1539
    CEFBS_None, // STORE8_I32_A32 = 1540
    CEFBS_None, // STORE8_I32_A32_S = 1541
    CEFBS_None, // STORE8_I32_A64 = 1542
    CEFBS_None, // STORE8_I32_A64_S = 1543
    CEFBS_None, // STORE8_I64_A32 = 1544
    CEFBS_None, // STORE8_I64_A32_S = 1545
    CEFBS_None, // STORE8_I64_A64 = 1546
    CEFBS_None, // STORE8_I64_A64_S = 1547
    CEFBS_None, // STORE_F32_A32 = 1548
    CEFBS_None, // STORE_F32_A32_S = 1549
    CEFBS_None, // STORE_F32_A64 = 1550
    CEFBS_None, // STORE_F32_A64_S = 1551
    CEFBS_None, // STORE_F64_A32 = 1552
    CEFBS_None, // STORE_F64_A32_S = 1553
    CEFBS_None, // STORE_F64_A64 = 1554
    CEFBS_None, // STORE_F64_A64_S = 1555
    CEFBS_None, // STORE_I32_A32 = 1556
    CEFBS_None, // STORE_I32_A32_S = 1557
    CEFBS_None, // STORE_I32_A64 = 1558
    CEFBS_None, // STORE_I32_A64_S = 1559
    CEFBS_None, // STORE_I64_A32 = 1560
    CEFBS_None, // STORE_I64_A32_S = 1561
    CEFBS_None, // STORE_I64_A64 = 1562
    CEFBS_None, // STORE_I64_A64_S = 1563
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32 = 1564
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A32_S = 1565
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64 = 1566
    CEFBS_HasSIMD128, // STORE_LANE_I16x8_A64_S = 1567
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32 = 1568
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A32_S = 1569
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64 = 1570
    CEFBS_HasSIMD128, // STORE_LANE_I32x4_A64_S = 1571
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32 = 1572
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A32_S = 1573
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64 = 1574
    CEFBS_HasSIMD128, // STORE_LANE_I64x2_A64_S = 1575
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32 = 1576
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A32_S = 1577
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64 = 1578
    CEFBS_HasSIMD128, // STORE_LANE_I8x16_A64_S = 1579
    CEFBS_HasSIMD128, // STORE_V128_A32 = 1580
    CEFBS_HasSIMD128, // STORE_V128_A32_S = 1581
    CEFBS_HasSIMD128, // STORE_V128_A64 = 1582
    CEFBS_HasSIMD128, // STORE_V128_A64_S = 1583
    CEFBS_None, // SUB_F32 = 1584
    CEFBS_None, // SUB_F32_S = 1585
    CEFBS_HasSIMD128, // SUB_F32x4 = 1586
    CEFBS_HasSIMD128, // SUB_F32x4_S = 1587
    CEFBS_None, // SUB_F64 = 1588
    CEFBS_None, // SUB_F64_S = 1589
    CEFBS_HasSIMD128, // SUB_F64x2 = 1590
    CEFBS_HasSIMD128, // SUB_F64x2_S = 1591
    CEFBS_HasSIMD128, // SUB_I16x8 = 1592
    CEFBS_HasSIMD128, // SUB_I16x8_S = 1593
    CEFBS_None, // SUB_I32 = 1594
    CEFBS_None, // SUB_I32_S = 1595
    CEFBS_HasSIMD128, // SUB_I32x4 = 1596
    CEFBS_HasSIMD128, // SUB_I32x4_S = 1597
    CEFBS_None, // SUB_I64 = 1598
    CEFBS_None, // SUB_I64_S = 1599
    CEFBS_HasSIMD128, // SUB_I64x2 = 1600
    CEFBS_HasSIMD128, // SUB_I64x2_S = 1601
    CEFBS_HasSIMD128, // SUB_I8x16 = 1602
    CEFBS_HasSIMD128, // SUB_I8x16_S = 1603
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8 = 1604
    CEFBS_HasSIMD128, // SUB_SAT_S_I16x8_S = 1605
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16 = 1606
    CEFBS_HasSIMD128, // SUB_SAT_S_I8x16_S = 1607
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8 = 1608
    CEFBS_HasSIMD128, // SUB_SAT_U_I16x8_S = 1609
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16 = 1610
    CEFBS_HasSIMD128, // SUB_SAT_U_I8x16_S = 1611
    CEFBS_HasSIMD128, // SWIZZLE = 1612
    CEFBS_HasSIMD128, // SWIZZLE_S = 1613
    CEFBS_HasReferenceTypes, // TABLE_COPY = 1614
    CEFBS_HasReferenceTypes, // TABLE_COPY_S = 1615
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF = 1616
    CEFBS_HasReferenceTypes, // TABLE_FILL_EXTERNREF_S = 1617
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF = 1618
    CEFBS_HasReferenceTypes, // TABLE_FILL_FUNCREF_S = 1619
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF = 1620
    CEFBS_HasReferenceTypes, // TABLE_GET_EXTERNREF_S = 1621
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF = 1622
    CEFBS_HasReferenceTypes, // TABLE_GET_FUNCREF_S = 1623
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF = 1624
    CEFBS_HasReferenceTypes, // TABLE_GROW_EXTERNREF_S = 1625
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF = 1626
    CEFBS_HasReferenceTypes, // TABLE_GROW_FUNCREF_S = 1627
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF = 1628
    CEFBS_HasReferenceTypes, // TABLE_SET_EXTERNREF_S = 1629
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF = 1630
    CEFBS_HasReferenceTypes, // TABLE_SET_FUNCREF_S = 1631
    CEFBS_HasReferenceTypes, // TABLE_SIZE = 1632
    CEFBS_HasReferenceTypes, // TABLE_SIZE_S = 1633
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF = 1634
    CEFBS_HasReferenceTypes, // TEE_EXTERNREF_S = 1635
    CEFBS_None, // TEE_F32 = 1636
    CEFBS_None, // TEE_F32_S = 1637
    CEFBS_None, // TEE_F64 = 1638
    CEFBS_None, // TEE_F64_S = 1639
    CEFBS_HasReferenceTypes, // TEE_FUNCREF = 1640
    CEFBS_HasReferenceTypes, // TEE_FUNCREF_S = 1641
    CEFBS_None, // TEE_I32 = 1642
    CEFBS_None, // TEE_I32_S = 1643
    CEFBS_None, // TEE_I64 = 1644
    CEFBS_None, // TEE_I64_S = 1645
    CEFBS_HasSIMD128, // TEE_V128 = 1646
    CEFBS_HasSIMD128, // TEE_V128_S = 1647
    CEFBS_HasExceptionHandling, // THROW = 1648
    CEFBS_HasExceptionHandling, // THROW_S = 1649
    CEFBS_None, // TRUNC_F32 = 1650
    CEFBS_None, // TRUNC_F32_S = 1651
    CEFBS_HasSIMD128, // TRUNC_F32x4 = 1652
    CEFBS_HasSIMD128, // TRUNC_F32x4_S = 1653
    CEFBS_None, // TRUNC_F64 = 1654
    CEFBS_None, // TRUNC_F64_S = 1655
    CEFBS_HasSIMD128, // TRUNC_F64x2 = 1656
    CEFBS_HasSIMD128, // TRUNC_F64x2_S = 1657
    CEFBS_HasExceptionHandling, // TRY = 1658
    CEFBS_HasExceptionHandling, // TRY_S = 1659
    CEFBS_None, // UNREACHABLE = 1660
    CEFBS_None, // UNREACHABLE_S = 1661
    CEFBS_HasSIMD128, // XOR = 1662
    CEFBS_None, // XOR_I32 = 1663
    CEFBS_None, // XOR_I32_S = 1664
    CEFBS_None, // XOR_I64 = 1665
    CEFBS_None, // XOR_I64_S = 1666
    CEFBS_HasSIMD128, // XOR_S = 1667
    CEFBS_None, // anonymous_4063MEMORY_GROW_A32 = 1668
    CEFBS_None, // anonymous_4063MEMORY_GROW_A32_S = 1669
    CEFBS_None, // anonymous_4063MEMORY_SIZE_A32 = 1670
    CEFBS_None, // anonymous_4063MEMORY_SIZE_A32_S = 1671
    CEFBS_None, // anonymous_4064MEMORY_GROW_A64 = 1672
    CEFBS_None, // anonymous_4064MEMORY_GROW_A64_S = 1673
    CEFBS_None, // anonymous_4064MEMORY_SIZE_A64 = 1674
    CEFBS_None, // anonymous_4064MEMORY_SIZE_A64_S = 1675
    CEFBS_HasBulkMemory, // anonymous_4733DATA_DROP = 1676
    CEFBS_HasBulkMemory, // anonymous_4733DATA_DROP_S = 1677
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_COPY_A32 = 1678
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_COPY_A32_S = 1679
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_FILL_A32 = 1680
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_FILL_A32_S = 1681
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_INIT_A32 = 1682
    CEFBS_HasBulkMemory, // anonymous_4733MEMORY_INIT_A32_S = 1683
    CEFBS_HasBulkMemory, // anonymous_4734DATA_DROP = 1684
    CEFBS_HasBulkMemory, // anonymous_4734DATA_DROP_S = 1685
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_COPY_A64 = 1686
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_COPY_A64_S = 1687
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_FILL_A64 = 1688
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_FILL_A64_S = 1689
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_INIT_A64 = 1690
    CEFBS_HasBulkMemory, // anonymous_4734MEMORY_INIT_A64_S = 1691
    CEFBS_HasSIMD128, // convert_low_s_F64x2 = 1692
    CEFBS_HasSIMD128, // convert_low_s_F64x2_S = 1693
    CEFBS_HasSIMD128, // convert_low_u_F64x2 = 1694
    CEFBS_HasSIMD128, // convert_low_u_F64x2_S = 1695
    CEFBS_HasSIMD128, // demote_zero_F32x4 = 1696
    CEFBS_HasSIMD128, // demote_zero_F32x4_S = 1697
    CEFBS_HasSIMD128, // extend_high_s_I16x8 = 1698
    CEFBS_HasSIMD128, // extend_high_s_I16x8_S = 1699
    CEFBS_HasSIMD128, // extend_high_s_I32x4 = 1700
    CEFBS_HasSIMD128, // extend_high_s_I32x4_S = 1701
    CEFBS_HasSIMD128, // extend_high_s_I64x2 = 1702
    CEFBS_HasSIMD128, // extend_high_s_I64x2_S = 1703
    CEFBS_HasSIMD128, // extend_high_u_I16x8 = 1704
    CEFBS_HasSIMD128, // extend_high_u_I16x8_S = 1705
    CEFBS_HasSIMD128, // extend_high_u_I32x4 = 1706
    CEFBS_HasSIMD128, // extend_high_u_I32x4_S = 1707
    CEFBS_HasSIMD128, // extend_high_u_I64x2 = 1708
    CEFBS_HasSIMD128, // extend_high_u_I64x2_S = 1709
    CEFBS_HasSIMD128, // extend_low_s_I16x8 = 1710
    CEFBS_HasSIMD128, // extend_low_s_I16x8_S = 1711
    CEFBS_HasSIMD128, // extend_low_s_I32x4 = 1712
    CEFBS_HasSIMD128, // extend_low_s_I32x4_S = 1713
    CEFBS_HasSIMD128, // extend_low_s_I64x2 = 1714
    CEFBS_HasSIMD128, // extend_low_s_I64x2_S = 1715
    CEFBS_HasSIMD128, // extend_low_u_I16x8 = 1716
    CEFBS_HasSIMD128, // extend_low_u_I16x8_S = 1717
    CEFBS_HasSIMD128, // extend_low_u_I32x4 = 1718
    CEFBS_HasSIMD128, // extend_low_u_I32x4_S = 1719
    CEFBS_HasSIMD128, // extend_low_u_I64x2 = 1720
    CEFBS_HasSIMD128, // extend_low_u_I64x2_S = 1721
    CEFBS_HasSIMD128, // fp_to_sint_I32x4 = 1722
    CEFBS_HasSIMD128, // fp_to_sint_I32x4_S = 1723
    CEFBS_HasSIMD128, // fp_to_uint_I32x4 = 1724
    CEFBS_HasSIMD128, // fp_to_uint_I32x4_S = 1725
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8 = 1726
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I16x8_S = 1727
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4 = 1728
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_signed_I32x4_S = 1729
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8 = 1730
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I16x8_S = 1731
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4 = 1732
    CEFBS_HasSIMD128, // int_wasm_extadd_pairwise_unsigned_I32x4_S = 1733
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4 = 1734
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_I32x4_S = 1735
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4 = 1736
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_signed_zero_I32x4_S = 1737
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4 = 1738
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_I32x4_S = 1739
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4 = 1740
    CEFBS_HasRelaxedSIMD, // int_wasm_relaxed_trunc_unsigned_zero_I32x4_S = 1741
    CEFBS_HasSIMD128, // promote_low_F64x2 = 1742
    CEFBS_HasSIMD128, // promote_low_F64x2_S = 1743
    CEFBS_HasSIMD128, // sint_to_fp_F32x4 = 1744
    CEFBS_HasSIMD128, // sint_to_fp_F32x4_S = 1745
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4 = 1746
    CEFBS_HasSIMD128, // trunc_sat_zero_s_I32x4_S = 1747
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4 = 1748
    CEFBS_HasSIMD128, // trunc_sat_zero_u_I32x4_S = 1749
    CEFBS_HasSIMD128, // uint_to_fp_F32x4 = 1750
    CEFBS_HasSIMD128, // uint_to_fp_F32x4_S = 1751
  };

  assert(Opcode < 1752);
  FeatureBitset AvailableFeatures = computeAvailableFeatures(Features);
  const FeatureBitset &RequiredFeatures = FeatureBitsets[RequiredFeaturesRefs[Opcode]];
  FeatureBitset MissingFeatures =
      (AvailableFeatures & RequiredFeatures) ^
      RequiredFeatures;
  if (MissingFeatures.any()) {
    std::ostringstream Msg;
    Msg << "Attempting to emit " << &WebAssemblyInstrNameData[WebAssemblyInstrNameIndices[Opcode]]
        << " instruction but the ";
    for (unsigned i = 0, e = MissingFeatures.size(); i != e; ++i)
      if (MissingFeatures.test(i))
        Msg << SubtargetFeatureNames[i] << " ";
    Msg << "predicate(s) are not met";
    report_fatal_error(Msg.str().c_str());
  }
#endif // NDEBUG
}
} // end namespace WebAssembly_MC
} // end namespace llvm
#endif // ENABLE_INSTR_PREDICATE_VERIFIER

#ifdef GET_INSTRMAP_INFO
#undef GET_INSTRMAP_INFO
namespace llvm {

namespace WebAssembly {

enum IsWasm64 {
	IsWasm64_1
};

enum StackBased {
	StackBased_0,
	StackBased_1
};

// getRegisterOpcode
LLVM_READONLY
int getRegisterOpcode(uint16_t Opcode) {
static const uint16_t getRegisterOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS_S, WebAssembly::CALL_PARAMS },
  { WebAssembly::CALL_RESULTS_S, WebAssembly::CALL_RESULTS },
  { WebAssembly::CATCHRET_S, WebAssembly::CATCHRET },
  { WebAssembly::CLEANUPRET_S, WebAssembly::CLEANUPRET },
  { WebAssembly::COMPILER_FENCE_S, WebAssembly::COMPILER_FENCE },
  { WebAssembly::RET_CALL_RESULTS_S, WebAssembly::RET_CALL_RESULTS },
  { WebAssembly::ABS_F32_S, WebAssembly::ABS_F32 },
  { WebAssembly::ABS_F32x4_S, WebAssembly::ABS_F32x4 },
  { WebAssembly::ABS_F64_S, WebAssembly::ABS_F64 },
  { WebAssembly::ABS_F64x2_S, WebAssembly::ABS_F64x2 },
  { WebAssembly::ABS_I16x8_S, WebAssembly::ABS_I16x8 },
  { WebAssembly::ABS_I32x4_S, WebAssembly::ABS_I32x4 },
  { WebAssembly::ABS_I64x2_S, WebAssembly::ABS_I64x2 },
  { WebAssembly::ABS_I8x16_S, WebAssembly::ABS_I8x16 },
  { WebAssembly::ADD_F32_S, WebAssembly::ADD_F32 },
  { WebAssembly::ADD_F32x4_S, WebAssembly::ADD_F32x4 },
  { WebAssembly::ADD_F64_S, WebAssembly::ADD_F64 },
  { WebAssembly::ADD_F64x2_S, WebAssembly::ADD_F64x2 },
  { WebAssembly::ADD_I16x8_S, WebAssembly::ADD_I16x8 },
  { WebAssembly::ADD_I32_S, WebAssembly::ADD_I32 },
  { WebAssembly::ADD_I32x4_S, WebAssembly::ADD_I32x4 },
  { WebAssembly::ADD_I64_S, WebAssembly::ADD_I64 },
  { WebAssembly::ADD_I64x2_S, WebAssembly::ADD_I64x2 },
  { WebAssembly::ADD_I8x16_S, WebAssembly::ADD_I8x16 },
  { WebAssembly::ADD_SAT_S_I16x8_S, WebAssembly::ADD_SAT_S_I16x8 },
  { WebAssembly::ADD_SAT_S_I8x16_S, WebAssembly::ADD_SAT_S_I8x16 },
  { WebAssembly::ADD_SAT_U_I16x8_S, WebAssembly::ADD_SAT_U_I16x8 },
  { WebAssembly::ADD_SAT_U_I8x16_S, WebAssembly::ADD_SAT_U_I8x16 },
  { WebAssembly::ADJCALLSTACKDOWN_S, WebAssembly::ADJCALLSTACKDOWN },
  { WebAssembly::ADJCALLSTACKUP_S, WebAssembly::ADJCALLSTACKUP },
  { WebAssembly::ALLTRUE_I16x8_S, WebAssembly::ALLTRUE_I16x8 },
  { WebAssembly::ALLTRUE_I32x4_S, WebAssembly::ALLTRUE_I32x4 },
  { WebAssembly::ALLTRUE_I64x2_S, WebAssembly::ALLTRUE_I64x2 },
  { WebAssembly::ALLTRUE_I8x16_S, WebAssembly::ALLTRUE_I8x16 },
  { WebAssembly::ANDNOT_S, WebAssembly::ANDNOT },
  { WebAssembly::AND_I32_S, WebAssembly::AND_I32 },
  { WebAssembly::AND_I64_S, WebAssembly::AND_I64 },
  { WebAssembly::AND_S, WebAssembly::AND },
  { WebAssembly::ANYTRUE_S, WebAssembly::ANYTRUE },
  { WebAssembly::ARGUMENT_externref_S, WebAssembly::ARGUMENT_externref },
  { WebAssembly::ARGUMENT_f32_S, WebAssembly::ARGUMENT_f32 },
  { WebAssembly::ARGUMENT_f64_S, WebAssembly::ARGUMENT_f64 },
  { WebAssembly::ARGUMENT_funcref_S, WebAssembly::ARGUMENT_funcref },
  { WebAssembly::ARGUMENT_i32_S, WebAssembly::ARGUMENT_i32 },
  { WebAssembly::ARGUMENT_i64_S, WebAssembly::ARGUMENT_i64 },
  { WebAssembly::ARGUMENT_v16i8_S, WebAssembly::ARGUMENT_v16i8 },
  { WebAssembly::ARGUMENT_v2f64_S, WebAssembly::ARGUMENT_v2f64 },
  { WebAssembly::ARGUMENT_v2i64_S, WebAssembly::ARGUMENT_v2i64 },
  { WebAssembly::ARGUMENT_v4f32_S, WebAssembly::ARGUMENT_v4f32 },
  { WebAssembly::ARGUMENT_v4i32_S, WebAssembly::ARGUMENT_v4i32 },
  { WebAssembly::ARGUMENT_v8i16_S, WebAssembly::ARGUMENT_v8i16 },
  { WebAssembly::ATOMIC_FENCE_S, WebAssembly::ATOMIC_FENCE },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A32 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A32 },
  { WebAssembly::ATOMIC_LOAD_I32_A64_S, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A32 },
  { WebAssembly::ATOMIC_LOAD_I64_A64_S, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A32 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64_S, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A32 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64_S, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64_S, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64_S, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A32 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A32 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A32 },
  { WebAssembly::ATOMIC_STORE16_I32_A64_S, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A32 },
  { WebAssembly::ATOMIC_STORE16_I64_A64_S, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A32 },
  { WebAssembly::ATOMIC_STORE32_I64_A64_S, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A32 },
  { WebAssembly::ATOMIC_STORE8_I32_A64_S, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A32 },
  { WebAssembly::ATOMIC_STORE8_I64_A64_S, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A32 },
  { WebAssembly::ATOMIC_STORE_I32_A64_S, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A32 },
  { WebAssembly::ATOMIC_STORE_I64_A64_S, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::AVGR_U_I16x8_S, WebAssembly::AVGR_U_I16x8 },
  { WebAssembly::AVGR_U_I8x16_S, WebAssembly::AVGR_U_I8x16 },
  { WebAssembly::BITMASK_I16x8_S, WebAssembly::BITMASK_I16x8 },
  { WebAssembly::BITMASK_I32x4_S, WebAssembly::BITMASK_I32x4 },
  { WebAssembly::BITMASK_I64x2_S, WebAssembly::BITMASK_I64x2 },
  { WebAssembly::BITMASK_I8x16_S, WebAssembly::BITMASK_I8x16 },
  { WebAssembly::BITSELECT_S, WebAssembly::BITSELECT },
  { WebAssembly::BLOCK_S, WebAssembly::BLOCK },
  { WebAssembly::BR_IF_S, WebAssembly::BR_IF },
  { WebAssembly::BR_S, WebAssembly::BR },
  { WebAssembly::BR_TABLE_I32_S, WebAssembly::BR_TABLE_I32 },
  { WebAssembly::BR_TABLE_I64_S, WebAssembly::BR_TABLE_I64 },
  { WebAssembly::BR_UNLESS_S, WebAssembly::BR_UNLESS },
  { WebAssembly::CALL_INDIRECT_S, WebAssembly::CALL_INDIRECT },
  { WebAssembly::CALL_S, WebAssembly::CALL },
  { WebAssembly::CATCH_ALL_S, WebAssembly::CATCH_ALL },
  { WebAssembly::CATCH_S, WebAssembly::CATCH },
  { WebAssembly::CEIL_F32_S, WebAssembly::CEIL_F32 },
  { WebAssembly::CEIL_F32x4_S, WebAssembly::CEIL_F32x4 },
  { WebAssembly::CEIL_F64_S, WebAssembly::CEIL_F64 },
  { WebAssembly::CEIL_F64x2_S, WebAssembly::CEIL_F64x2 },
  { WebAssembly::CLZ_I32_S, WebAssembly::CLZ_I32 },
  { WebAssembly::CLZ_I64_S, WebAssembly::CLZ_I64 },
  { WebAssembly::CONST_F32_S, WebAssembly::CONST_F32 },
  { WebAssembly::CONST_F64_S, WebAssembly::CONST_F64 },
  { WebAssembly::CONST_I32_S, WebAssembly::CONST_I32 },
  { WebAssembly::CONST_I64_S, WebAssembly::CONST_I64 },
  { WebAssembly::CONST_V128_F32x4_S, WebAssembly::CONST_V128_F32x4 },
  { WebAssembly::CONST_V128_F64x2_S, WebAssembly::CONST_V128_F64x2 },
  { WebAssembly::CONST_V128_I16x8_S, WebAssembly::CONST_V128_I16x8 },
  { WebAssembly::CONST_V128_I32x4_S, WebAssembly::CONST_V128_I32x4 },
  { WebAssembly::CONST_V128_I64x2_S, WebAssembly::CONST_V128_I64x2 },
  { WebAssembly::CONST_V128_I8x16_S, WebAssembly::CONST_V128_I8x16 },
  { WebAssembly::COPYSIGN_F32_S, WebAssembly::COPYSIGN_F32 },
  { WebAssembly::COPYSIGN_F64_S, WebAssembly::COPYSIGN_F64 },
  { WebAssembly::COPY_EXTERNREF_S, WebAssembly::COPY_EXTERNREF },
  { WebAssembly::COPY_F32_S, WebAssembly::COPY_F32 },
  { WebAssembly::COPY_F64_S, WebAssembly::COPY_F64 },
  { WebAssembly::COPY_FUNCREF_S, WebAssembly::COPY_FUNCREF },
  { WebAssembly::COPY_I32_S, WebAssembly::COPY_I32 },
  { WebAssembly::COPY_I64_S, WebAssembly::COPY_I64 },
  { WebAssembly::COPY_V128_S, WebAssembly::COPY_V128 },
  { WebAssembly::CTZ_I32_S, WebAssembly::CTZ_I32 },
  { WebAssembly::CTZ_I64_S, WebAssembly::CTZ_I64 },
  { WebAssembly::DEBUG_UNREACHABLE_S, WebAssembly::DEBUG_UNREACHABLE },
  { WebAssembly::DELEGATE_S, WebAssembly::DELEGATE },
  { WebAssembly::DIV_F32_S, WebAssembly::DIV_F32 },
  { WebAssembly::DIV_F32x4_S, WebAssembly::DIV_F32x4 },
  { WebAssembly::DIV_F64_S, WebAssembly::DIV_F64 },
  { WebAssembly::DIV_F64x2_S, WebAssembly::DIV_F64x2 },
  { WebAssembly::DIV_S_I32_S, WebAssembly::DIV_S_I32 },
  { WebAssembly::DIV_S_I64_S, WebAssembly::DIV_S_I64 },
  { WebAssembly::DIV_U_I32_S, WebAssembly::DIV_U_I32 },
  { WebAssembly::DIV_U_I64_S, WebAssembly::DIV_U_I64 },
  { WebAssembly::DOT_S, WebAssembly::DOT },
  { WebAssembly::DROP_EXTERNREF_S, WebAssembly::DROP_EXTERNREF },
  { WebAssembly::DROP_F32_S, WebAssembly::DROP_F32 },
  { WebAssembly::DROP_F64_S, WebAssembly::DROP_F64 },
  { WebAssembly::DROP_FUNCREF_S, WebAssembly::DROP_FUNCREF },
  { WebAssembly::DROP_I32_S, WebAssembly::DROP_I32 },
  { WebAssembly::DROP_I64_S, WebAssembly::DROP_I64 },
  { WebAssembly::DROP_V128_S, WebAssembly::DROP_V128 },
  { WebAssembly::ELSE_S, WebAssembly::ELSE },
  { WebAssembly::END_BLOCK_S, WebAssembly::END_BLOCK },
  { WebAssembly::END_FUNCTION_S, WebAssembly::END_FUNCTION },
  { WebAssembly::END_IF_S, WebAssembly::END_IF },
  { WebAssembly::END_LOOP_S, WebAssembly::END_LOOP },
  { WebAssembly::END_S, WebAssembly::END },
  { WebAssembly::END_TRY_S, WebAssembly::END_TRY },
  { WebAssembly::EQZ_I32_S, WebAssembly::EQZ_I32 },
  { WebAssembly::EQZ_I64_S, WebAssembly::EQZ_I64 },
  { WebAssembly::EQ_F32_S, WebAssembly::EQ_F32 },
  { WebAssembly::EQ_F32x4_S, WebAssembly::EQ_F32x4 },
  { WebAssembly::EQ_F64_S, WebAssembly::EQ_F64 },
  { WebAssembly::EQ_F64x2_S, WebAssembly::EQ_F64x2 },
  { WebAssembly::EQ_I16x8_S, WebAssembly::EQ_I16x8 },
  { WebAssembly::EQ_I32_S, WebAssembly::EQ_I32 },
  { WebAssembly::EQ_I32x4_S, WebAssembly::EQ_I32x4 },
  { WebAssembly::EQ_I64_S, WebAssembly::EQ_I64 },
  { WebAssembly::EQ_I64x2_S, WebAssembly::EQ_I64x2 },
  { WebAssembly::EQ_I8x16_S, WebAssembly::EQ_I8x16 },
  { WebAssembly::EXTMUL_HIGH_S_I16x8_S, WebAssembly::EXTMUL_HIGH_S_I16x8 },
  { WebAssembly::EXTMUL_HIGH_S_I32x4_S, WebAssembly::EXTMUL_HIGH_S_I32x4 },
  { WebAssembly::EXTMUL_HIGH_S_I64x2_S, WebAssembly::EXTMUL_HIGH_S_I64x2 },
  { WebAssembly::EXTMUL_HIGH_U_I16x8_S, WebAssembly::EXTMUL_HIGH_U_I16x8 },
  { WebAssembly::EXTMUL_HIGH_U_I32x4_S, WebAssembly::EXTMUL_HIGH_U_I32x4 },
  { WebAssembly::EXTMUL_HIGH_U_I64x2_S, WebAssembly::EXTMUL_HIGH_U_I64x2 },
  { WebAssembly::EXTMUL_LOW_S_I16x8_S, WebAssembly::EXTMUL_LOW_S_I16x8 },
  { WebAssembly::EXTMUL_LOW_S_I32x4_S, WebAssembly::EXTMUL_LOW_S_I32x4 },
  { WebAssembly::EXTMUL_LOW_S_I64x2_S, WebAssembly::EXTMUL_LOW_S_I64x2 },
  { WebAssembly::EXTMUL_LOW_U_I16x8_S, WebAssembly::EXTMUL_LOW_U_I16x8 },
  { WebAssembly::EXTMUL_LOW_U_I32x4_S, WebAssembly::EXTMUL_LOW_U_I32x4 },
  { WebAssembly::EXTMUL_LOW_U_I64x2_S, WebAssembly::EXTMUL_LOW_U_I64x2 },
  { WebAssembly::EXTRACT_LANE_F32x4_S, WebAssembly::EXTRACT_LANE_F32x4 },
  { WebAssembly::EXTRACT_LANE_F64x2_S, WebAssembly::EXTRACT_LANE_F64x2 },
  { WebAssembly::EXTRACT_LANE_I16x8_s_S, WebAssembly::EXTRACT_LANE_I16x8_s },
  { WebAssembly::EXTRACT_LANE_I16x8_u_S, WebAssembly::EXTRACT_LANE_I16x8_u },
  { WebAssembly::EXTRACT_LANE_I32x4_S, WebAssembly::EXTRACT_LANE_I32x4 },
  { WebAssembly::EXTRACT_LANE_I64x2_S, WebAssembly::EXTRACT_LANE_I64x2 },
  { WebAssembly::EXTRACT_LANE_I8x16_s_S, WebAssembly::EXTRACT_LANE_I8x16_s },
  { WebAssembly::EXTRACT_LANE_I8x16_u_S, WebAssembly::EXTRACT_LANE_I8x16_u },
  { WebAssembly::F32_CONVERT_S_I32_S, WebAssembly::F32_CONVERT_S_I32 },
  { WebAssembly::F32_CONVERT_S_I64_S, WebAssembly::F32_CONVERT_S_I64 },
  { WebAssembly::F32_CONVERT_U_I32_S, WebAssembly::F32_CONVERT_U_I32 },
  { WebAssembly::F32_CONVERT_U_I64_S, WebAssembly::F32_CONVERT_U_I64 },
  { WebAssembly::F32_DEMOTE_F64_S, WebAssembly::F32_DEMOTE_F64 },
  { WebAssembly::F32_REINTERPRET_I32_S, WebAssembly::F32_REINTERPRET_I32 },
  { WebAssembly::F64_CONVERT_S_I32_S, WebAssembly::F64_CONVERT_S_I32 },
  { WebAssembly::F64_CONVERT_S_I64_S, WebAssembly::F64_CONVERT_S_I64 },
  { WebAssembly::F64_CONVERT_U_I32_S, WebAssembly::F64_CONVERT_U_I32 },
  { WebAssembly::F64_CONVERT_U_I64_S, WebAssembly::F64_CONVERT_U_I64 },
  { WebAssembly::F64_PROMOTE_F32_S, WebAssembly::F64_PROMOTE_F32 },
  { WebAssembly::F64_REINTERPRET_I64_S, WebAssembly::F64_REINTERPRET_I64 },
  { WebAssembly::FALLTHROUGH_RETURN_S, WebAssembly::FALLTHROUGH_RETURN },
  { WebAssembly::FLOOR_F32_S, WebAssembly::FLOOR_F32 },
  { WebAssembly::FLOOR_F32x4_S, WebAssembly::FLOOR_F32x4 },
  { WebAssembly::FLOOR_F64_S, WebAssembly::FLOOR_F64 },
  { WebAssembly::FLOOR_F64x2_S, WebAssembly::FLOOR_F64x2 },
  { WebAssembly::FP_TO_SINT_I32_F32_S, WebAssembly::FP_TO_SINT_I32_F32 },
  { WebAssembly::FP_TO_SINT_I32_F64_S, WebAssembly::FP_TO_SINT_I32_F64 },
  { WebAssembly::FP_TO_SINT_I64_F32_S, WebAssembly::FP_TO_SINT_I64_F32 },
  { WebAssembly::FP_TO_SINT_I64_F64_S, WebAssembly::FP_TO_SINT_I64_F64 },
  { WebAssembly::FP_TO_UINT_I32_F32_S, WebAssembly::FP_TO_UINT_I32_F32 },
  { WebAssembly::FP_TO_UINT_I32_F64_S, WebAssembly::FP_TO_UINT_I32_F64 },
  { WebAssembly::FP_TO_UINT_I64_F32_S, WebAssembly::FP_TO_UINT_I64_F32 },
  { WebAssembly::FP_TO_UINT_I64_F64_S, WebAssembly::FP_TO_UINT_I64_F64 },
  { WebAssembly::GE_F32_S, WebAssembly::GE_F32 },
  { WebAssembly::GE_F32x4_S, WebAssembly::GE_F32x4 },
  { WebAssembly::GE_F64_S, WebAssembly::GE_F64 },
  { WebAssembly::GE_F64x2_S, WebAssembly::GE_F64x2 },
  { WebAssembly::GE_S_I16x8_S, WebAssembly::GE_S_I16x8 },
  { WebAssembly::GE_S_I32_S, WebAssembly::GE_S_I32 },
  { WebAssembly::GE_S_I32x4_S, WebAssembly::GE_S_I32x4 },
  { WebAssembly::GE_S_I64_S, WebAssembly::GE_S_I64 },
  { WebAssembly::GE_S_I64x2_S, WebAssembly::GE_S_I64x2 },
  { WebAssembly::GE_S_I8x16_S, WebAssembly::GE_S_I8x16 },
  { WebAssembly::GE_U_I16x8_S, WebAssembly::GE_U_I16x8 },
  { WebAssembly::GE_U_I32_S, WebAssembly::GE_U_I32 },
  { WebAssembly::GE_U_I32x4_S, WebAssembly::GE_U_I32x4 },
  { WebAssembly::GE_U_I64_S, WebAssembly::GE_U_I64 },
  { WebAssembly::GE_U_I8x16_S, WebAssembly::GE_U_I8x16 },
  { WebAssembly::GLOBAL_GET_EXTERNREF_S, WebAssembly::GLOBAL_GET_EXTERNREF },
  { WebAssembly::GLOBAL_GET_F32_S, WebAssembly::GLOBAL_GET_F32 },
  { WebAssembly::GLOBAL_GET_F64_S, WebAssembly::GLOBAL_GET_F64 },
  { WebAssembly::GLOBAL_GET_FUNCREF_S, WebAssembly::GLOBAL_GET_FUNCREF },
  { WebAssembly::GLOBAL_GET_I32_S, WebAssembly::GLOBAL_GET_I32 },
  { WebAssembly::GLOBAL_GET_I64_S, WebAssembly::GLOBAL_GET_I64 },
  { WebAssembly::GLOBAL_GET_V128_S, WebAssembly::GLOBAL_GET_V128 },
  { WebAssembly::GLOBAL_SET_EXTERNREF_S, WebAssembly::GLOBAL_SET_EXTERNREF },
  { WebAssembly::GLOBAL_SET_F32_S, WebAssembly::GLOBAL_SET_F32 },
  { WebAssembly::GLOBAL_SET_F64_S, WebAssembly::GLOBAL_SET_F64 },
  { WebAssembly::GLOBAL_SET_FUNCREF_S, WebAssembly::GLOBAL_SET_FUNCREF },
  { WebAssembly::GLOBAL_SET_I32_S, WebAssembly::GLOBAL_SET_I32 },
  { WebAssembly::GLOBAL_SET_I64_S, WebAssembly::GLOBAL_SET_I64 },
  { WebAssembly::GLOBAL_SET_V128_S, WebAssembly::GLOBAL_SET_V128 },
  { WebAssembly::GT_F32_S, WebAssembly::GT_F32 },
  { WebAssembly::GT_F32x4_S, WebAssembly::GT_F32x4 },
  { WebAssembly::GT_F64_S, WebAssembly::GT_F64 },
  { WebAssembly::GT_F64x2_S, WebAssembly::GT_F64x2 },
  { WebAssembly::GT_S_I16x8_S, WebAssembly::GT_S_I16x8 },
  { WebAssembly::GT_S_I32_S, WebAssembly::GT_S_I32 },
  { WebAssembly::GT_S_I32x4_S, WebAssembly::GT_S_I32x4 },
  { WebAssembly::GT_S_I64_S, WebAssembly::GT_S_I64 },
  { WebAssembly::GT_S_I64x2_S, WebAssembly::GT_S_I64x2 },
  { WebAssembly::GT_S_I8x16_S, WebAssembly::GT_S_I8x16 },
  { WebAssembly::GT_U_I16x8_S, WebAssembly::GT_U_I16x8 },
  { WebAssembly::GT_U_I32_S, WebAssembly::GT_U_I32 },
  { WebAssembly::GT_U_I32x4_S, WebAssembly::GT_U_I32x4 },
  { WebAssembly::GT_U_I64_S, WebAssembly::GT_U_I64 },
  { WebAssembly::GT_U_I8x16_S, WebAssembly::GT_U_I8x16 },
  { WebAssembly::I32_EXTEND16_S_I32_S, WebAssembly::I32_EXTEND16_S_I32 },
  { WebAssembly::I32_EXTEND8_S_I32_S, WebAssembly::I32_EXTEND8_S_I32 },
  { WebAssembly::I32_REINTERPRET_F32_S, WebAssembly::I32_REINTERPRET_F32 },
  { WebAssembly::I32_TRUNC_S_F32_S, WebAssembly::I32_TRUNC_S_F32 },
  { WebAssembly::I32_TRUNC_S_F64_S, WebAssembly::I32_TRUNC_S_F64 },
  { WebAssembly::I32_TRUNC_S_SAT_F32_S, WebAssembly::I32_TRUNC_S_SAT_F32 },
  { WebAssembly::I32_TRUNC_S_SAT_F64_S, WebAssembly::I32_TRUNC_S_SAT_F64 },
  { WebAssembly::I32_TRUNC_U_F32_S, WebAssembly::I32_TRUNC_U_F32 },
  { WebAssembly::I32_TRUNC_U_F64_S, WebAssembly::I32_TRUNC_U_F64 },
  { WebAssembly::I32_TRUNC_U_SAT_F32_S, WebAssembly::I32_TRUNC_U_SAT_F32 },
  { WebAssembly::I32_TRUNC_U_SAT_F64_S, WebAssembly::I32_TRUNC_U_SAT_F64 },
  { WebAssembly::I32_WRAP_I64_S, WebAssembly::I32_WRAP_I64 },
  { WebAssembly::I64_EXTEND16_S_I64_S, WebAssembly::I64_EXTEND16_S_I64 },
  { WebAssembly::I64_EXTEND32_S_I64_S, WebAssembly::I64_EXTEND32_S_I64 },
  { WebAssembly::I64_EXTEND8_S_I64_S, WebAssembly::I64_EXTEND8_S_I64 },
  { WebAssembly::I64_EXTEND_S_I32_S, WebAssembly::I64_EXTEND_S_I32 },
  { WebAssembly::I64_EXTEND_U_I32_S, WebAssembly::I64_EXTEND_U_I32 },
  { WebAssembly::I64_REINTERPRET_F64_S, WebAssembly::I64_REINTERPRET_F64 },
  { WebAssembly::I64_TRUNC_S_F32_S, WebAssembly::I64_TRUNC_S_F32 },
  { WebAssembly::I64_TRUNC_S_F64_S, WebAssembly::I64_TRUNC_S_F64 },
  { WebAssembly::I64_TRUNC_S_SAT_F32_S, WebAssembly::I64_TRUNC_S_SAT_F32 },
  { WebAssembly::I64_TRUNC_S_SAT_F64_S, WebAssembly::I64_TRUNC_S_SAT_F64 },
  { WebAssembly::I64_TRUNC_U_F32_S, WebAssembly::I64_TRUNC_U_F32 },
  { WebAssembly::I64_TRUNC_U_F64_S, WebAssembly::I64_TRUNC_U_F64 },
  { WebAssembly::I64_TRUNC_U_SAT_F32_S, WebAssembly::I64_TRUNC_U_SAT_F32 },
  { WebAssembly::I64_TRUNC_U_SAT_F64_S, WebAssembly::I64_TRUNC_U_SAT_F64 },
  { WebAssembly::IF_S, WebAssembly::IF },
  { WebAssembly::LANESELECT_I16x8_S, WebAssembly::LANESELECT_I16x8 },
  { WebAssembly::LANESELECT_I32x4_S, WebAssembly::LANESELECT_I32x4 },
  { WebAssembly::LANESELECT_I64x2_S, WebAssembly::LANESELECT_I64x2 },
  { WebAssembly::LANESELECT_I8x16_S, WebAssembly::LANESELECT_I8x16 },
  { WebAssembly::LE_F32_S, WebAssembly::LE_F32 },
  { WebAssembly::LE_F32x4_S, WebAssembly::LE_F32x4 },
  { WebAssembly::LE_F64_S, WebAssembly::LE_F64 },
  { WebAssembly::LE_F64x2_S, WebAssembly::LE_F64x2 },
  { WebAssembly::LE_S_I16x8_S, WebAssembly::LE_S_I16x8 },
  { WebAssembly::LE_S_I32_S, WebAssembly::LE_S_I32 },
  { WebAssembly::LE_S_I32x4_S, WebAssembly::LE_S_I32x4 },
  { WebAssembly::LE_S_I64_S, WebAssembly::LE_S_I64 },
  { WebAssembly::LE_S_I64x2_S, WebAssembly::LE_S_I64x2 },
  { WebAssembly::LE_S_I8x16_S, WebAssembly::LE_S_I8x16 },
  { WebAssembly::LE_U_I16x8_S, WebAssembly::LE_U_I16x8 },
  { WebAssembly::LE_U_I32_S, WebAssembly::LE_U_I32 },
  { WebAssembly::LE_U_I32x4_S, WebAssembly::LE_U_I32x4 },
  { WebAssembly::LE_U_I64_S, WebAssembly::LE_U_I64 },
  { WebAssembly::LE_U_I8x16_S, WebAssembly::LE_U_I8x16 },
  { WebAssembly::LOAD16_SPLAT_A32_S, WebAssembly::LOAD16_SPLAT_A32 },
  { WebAssembly::LOAD16_SPLAT_A64_S, WebAssembly::LOAD16_SPLAT_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A32 },
  { WebAssembly::LOAD16_S_I32_A64_S, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A32 },
  { WebAssembly::LOAD16_S_I64_A64_S, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A32 },
  { WebAssembly::LOAD16_U_I32_A64_S, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A32 },
  { WebAssembly::LOAD16_U_I64_A64_S, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD32_SPLAT_A32_S, WebAssembly::LOAD32_SPLAT_A32 },
  { WebAssembly::LOAD32_SPLAT_A64_S, WebAssembly::LOAD32_SPLAT_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A32 },
  { WebAssembly::LOAD32_S_I64_A64_S, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A32 },
  { WebAssembly::LOAD32_U_I64_A64_S, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD64_SPLAT_A32_S, WebAssembly::LOAD64_SPLAT_A32 },
  { WebAssembly::LOAD64_SPLAT_A64_S, WebAssembly::LOAD64_SPLAT_A64 },
  { WebAssembly::LOAD8_SPLAT_A32_S, WebAssembly::LOAD8_SPLAT_A32 },
  { WebAssembly::LOAD8_SPLAT_A64_S, WebAssembly::LOAD8_SPLAT_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A32 },
  { WebAssembly::LOAD8_S_I32_A64_S, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A32 },
  { WebAssembly::LOAD8_S_I64_A64_S, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A32 },
  { WebAssembly::LOAD8_U_I32_A64_S, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A32 },
  { WebAssembly::LOAD8_U_I64_A64_S, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32_S, WebAssembly::LOAD_EXTEND_S_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64_S, WebAssembly::LOAD_EXTEND_S_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32_S, WebAssembly::LOAD_EXTEND_S_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64_S, WebAssembly::LOAD_EXTEND_S_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32_S, WebAssembly::LOAD_EXTEND_S_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64_S, WebAssembly::LOAD_EXTEND_S_I64x2_A64 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32_S, WebAssembly::LOAD_EXTEND_U_I16x8_A32 },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64_S, WebAssembly::LOAD_EXTEND_U_I16x8_A64 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32_S, WebAssembly::LOAD_EXTEND_U_I32x4_A32 },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64_S, WebAssembly::LOAD_EXTEND_U_I32x4_A64 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32_S, WebAssembly::LOAD_EXTEND_U_I64x2_A32 },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64_S, WebAssembly::LOAD_EXTEND_U_I64x2_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A32 },
  { WebAssembly::LOAD_F32_A64_S, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A32 },
  { WebAssembly::LOAD_F64_A64_S, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A32 },
  { WebAssembly::LOAD_I32_A64_S, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A32 },
  { WebAssembly::LOAD_I64_A64_S, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_LANE_I16x8_A32_S, WebAssembly::LOAD_LANE_I16x8_A32 },
  { WebAssembly::LOAD_LANE_I16x8_A64_S, WebAssembly::LOAD_LANE_I16x8_A64 },
  { WebAssembly::LOAD_LANE_I32x4_A32_S, WebAssembly::LOAD_LANE_I32x4_A32 },
  { WebAssembly::LOAD_LANE_I32x4_A64_S, WebAssembly::LOAD_LANE_I32x4_A64 },
  { WebAssembly::LOAD_LANE_I64x2_A32_S, WebAssembly::LOAD_LANE_I64x2_A32 },
  { WebAssembly::LOAD_LANE_I64x2_A64_S, WebAssembly::LOAD_LANE_I64x2_A64 },
  { WebAssembly::LOAD_LANE_I8x16_A32_S, WebAssembly::LOAD_LANE_I8x16_A32 },
  { WebAssembly::LOAD_LANE_I8x16_A64_S, WebAssembly::LOAD_LANE_I8x16_A64 },
  { WebAssembly::LOAD_V128_A32_S, WebAssembly::LOAD_V128_A32 },
  { WebAssembly::LOAD_V128_A64_S, WebAssembly::LOAD_V128_A64 },
  { WebAssembly::LOAD_ZERO_I32x4_A32_S, WebAssembly::LOAD_ZERO_I32x4_A32 },
  { WebAssembly::LOAD_ZERO_I32x4_A64_S, WebAssembly::LOAD_ZERO_I32x4_A64 },
  { WebAssembly::LOAD_ZERO_I64x2_A32_S, WebAssembly::LOAD_ZERO_I64x2_A32 },
  { WebAssembly::LOAD_ZERO_I64x2_A64_S, WebAssembly::LOAD_ZERO_I64x2_A64 },
  { WebAssembly::LOCAL_GET_EXTERNREF_S, WebAssembly::LOCAL_GET_EXTERNREF },
  { WebAssembly::LOCAL_GET_F32_S, WebAssembly::LOCAL_GET_F32 },
  { WebAssembly::LOCAL_GET_F64_S, WebAssembly::LOCAL_GET_F64 },
  { WebAssembly::LOCAL_GET_FUNCREF_S, WebAssembly::LOCAL_GET_FUNCREF },
  { WebAssembly::LOCAL_GET_I32_S, WebAssembly::LOCAL_GET_I32 },
  { WebAssembly::LOCAL_GET_I64_S, WebAssembly::LOCAL_GET_I64 },
  { WebAssembly::LOCAL_GET_V128_S, WebAssembly::LOCAL_GET_V128 },
  { WebAssembly::LOCAL_SET_EXTERNREF_S, WebAssembly::LOCAL_SET_EXTERNREF },
  { WebAssembly::LOCAL_SET_F32_S, WebAssembly::LOCAL_SET_F32 },
  { WebAssembly::LOCAL_SET_F64_S, WebAssembly::LOCAL_SET_F64 },
  { WebAssembly::LOCAL_SET_FUNCREF_S, WebAssembly::LOCAL_SET_FUNCREF },
  { WebAssembly::LOCAL_SET_I32_S, WebAssembly::LOCAL_SET_I32 },
  { WebAssembly::LOCAL_SET_I64_S, WebAssembly::LOCAL_SET_I64 },
  { WebAssembly::LOCAL_SET_V128_S, WebAssembly::LOCAL_SET_V128 },
  { WebAssembly::LOCAL_TEE_EXTERNREF_S, WebAssembly::LOCAL_TEE_EXTERNREF },
  { WebAssembly::LOCAL_TEE_F32_S, WebAssembly::LOCAL_TEE_F32 },
  { WebAssembly::LOCAL_TEE_F64_S, WebAssembly::LOCAL_TEE_F64 },
  { WebAssembly::LOCAL_TEE_FUNCREF_S, WebAssembly::LOCAL_TEE_FUNCREF },
  { WebAssembly::LOCAL_TEE_I32_S, WebAssembly::LOCAL_TEE_I32 },
  { WebAssembly::LOCAL_TEE_I64_S, WebAssembly::LOCAL_TEE_I64 },
  { WebAssembly::LOCAL_TEE_V128_S, WebAssembly::LOCAL_TEE_V128 },
  { WebAssembly::LOOP_S, WebAssembly::LOOP },
  { WebAssembly::LT_F32_S, WebAssembly::LT_F32 },
  { WebAssembly::LT_F32x4_S, WebAssembly::LT_F32x4 },
  { WebAssembly::LT_F64_S, WebAssembly::LT_F64 },
  { WebAssembly::LT_F64x2_S, WebAssembly::LT_F64x2 },
  { WebAssembly::LT_S_I16x8_S, WebAssembly::LT_S_I16x8 },
  { WebAssembly::LT_S_I32_S, WebAssembly::LT_S_I32 },
  { WebAssembly::LT_S_I32x4_S, WebAssembly::LT_S_I32x4 },
  { WebAssembly::LT_S_I64_S, WebAssembly::LT_S_I64 },
  { WebAssembly::LT_S_I64x2_S, WebAssembly::LT_S_I64x2 },
  { WebAssembly::LT_S_I8x16_S, WebAssembly::LT_S_I8x16 },
  { WebAssembly::LT_U_I16x8_S, WebAssembly::LT_U_I16x8 },
  { WebAssembly::LT_U_I32_S, WebAssembly::LT_U_I32 },
  { WebAssembly::LT_U_I32x4_S, WebAssembly::LT_U_I32x4 },
  { WebAssembly::LT_U_I64_S, WebAssembly::LT_U_I64 },
  { WebAssembly::LT_U_I8x16_S, WebAssembly::LT_U_I8x16 },
  { WebAssembly::MADD_F32x4_S, WebAssembly::MADD_F32x4 },
  { WebAssembly::MADD_F64x2_S, WebAssembly::MADD_F64x2 },
  { WebAssembly::MAX_F32_S, WebAssembly::MAX_F32 },
  { WebAssembly::MAX_F32x4_S, WebAssembly::MAX_F32x4 },
  { WebAssembly::MAX_F64_S, WebAssembly::MAX_F64 },
  { WebAssembly::MAX_F64x2_S, WebAssembly::MAX_F64x2 },
  { WebAssembly::MAX_S_I16x8_S, WebAssembly::MAX_S_I16x8 },
  { WebAssembly::MAX_S_I32x4_S, WebAssembly::MAX_S_I32x4 },
  { WebAssembly::MAX_S_I8x16_S, WebAssembly::MAX_S_I8x16 },
  { WebAssembly::MAX_U_I16x8_S, WebAssembly::MAX_U_I16x8 },
  { WebAssembly::MAX_U_I32x4_S, WebAssembly::MAX_U_I32x4 },
  { WebAssembly::MAX_U_I8x16_S, WebAssembly::MAX_U_I8x16 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A32 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MIN_F32_S, WebAssembly::MIN_F32 },
  { WebAssembly::MIN_F32x4_S, WebAssembly::MIN_F32x4 },
  { WebAssembly::MIN_F64_S, WebAssembly::MIN_F64 },
  { WebAssembly::MIN_F64x2_S, WebAssembly::MIN_F64x2 },
  { WebAssembly::MIN_S_I16x8_S, WebAssembly::MIN_S_I16x8 },
  { WebAssembly::MIN_S_I32x4_S, WebAssembly::MIN_S_I32x4 },
  { WebAssembly::MIN_S_I8x16_S, WebAssembly::MIN_S_I8x16 },
  { WebAssembly::MIN_U_I16x8_S, WebAssembly::MIN_U_I16x8 },
  { WebAssembly::MIN_U_I32x4_S, WebAssembly::MIN_U_I32x4 },
  { WebAssembly::MIN_U_I8x16_S, WebAssembly::MIN_U_I8x16 },
  { WebAssembly::MUL_F32_S, WebAssembly::MUL_F32 },
  { WebAssembly::MUL_F32x4_S, WebAssembly::MUL_F32x4 },
  { WebAssembly::MUL_F64_S, WebAssembly::MUL_F64 },
  { WebAssembly::MUL_F64x2_S, WebAssembly::MUL_F64x2 },
  { WebAssembly::MUL_I16x8_S, WebAssembly::MUL_I16x8 },
  { WebAssembly::MUL_I32_S, WebAssembly::MUL_I32 },
  { WebAssembly::MUL_I32x4_S, WebAssembly::MUL_I32x4 },
  { WebAssembly::MUL_I64_S, WebAssembly::MUL_I64 },
  { WebAssembly::MUL_I64x2_S, WebAssembly::MUL_I64x2 },
  { WebAssembly::NARROW_S_I16x8_S, WebAssembly::NARROW_S_I16x8 },
  { WebAssembly::NARROW_S_I8x16_S, WebAssembly::NARROW_S_I8x16 },
  { WebAssembly::NARROW_U_I16x8_S, WebAssembly::NARROW_U_I16x8 },
  { WebAssembly::NARROW_U_I8x16_S, WebAssembly::NARROW_U_I8x16 },
  { WebAssembly::NEAREST_F32_S, WebAssembly::NEAREST_F32 },
  { WebAssembly::NEAREST_F32x4_S, WebAssembly::NEAREST_F32x4 },
  { WebAssembly::NEAREST_F64_S, WebAssembly::NEAREST_F64 },
  { WebAssembly::NEAREST_F64x2_S, WebAssembly::NEAREST_F64x2 },
  { WebAssembly::NEG_F32_S, WebAssembly::NEG_F32 },
  { WebAssembly::NEG_F32x4_S, WebAssembly::NEG_F32x4 },
  { WebAssembly::NEG_F64_S, WebAssembly::NEG_F64 },
  { WebAssembly::NEG_F64x2_S, WebAssembly::NEG_F64x2 },
  { WebAssembly::NEG_I16x8_S, WebAssembly::NEG_I16x8 },
  { WebAssembly::NEG_I32x4_S, WebAssembly::NEG_I32x4 },
  { WebAssembly::NEG_I64x2_S, WebAssembly::NEG_I64x2 },
  { WebAssembly::NEG_I8x16_S, WebAssembly::NEG_I8x16 },
  { WebAssembly::NE_F32_S, WebAssembly::NE_F32 },
  { WebAssembly::NE_F32x4_S, WebAssembly::NE_F32x4 },
  { WebAssembly::NE_F64_S, WebAssembly::NE_F64 },
  { WebAssembly::NE_F64x2_S, WebAssembly::NE_F64x2 },
  { WebAssembly::NE_I16x8_S, WebAssembly::NE_I16x8 },
  { WebAssembly::NE_I32_S, WebAssembly::NE_I32 },
  { WebAssembly::NE_I32x4_S, WebAssembly::NE_I32x4 },
  { WebAssembly::NE_I64_S, WebAssembly::NE_I64 },
  { WebAssembly::NE_I64x2_S, WebAssembly::NE_I64x2 },
  { WebAssembly::NE_I8x16_S, WebAssembly::NE_I8x16 },
  { WebAssembly::NMADD_F32x4_S, WebAssembly::NMADD_F32x4 },
  { WebAssembly::NMADD_F64x2_S, WebAssembly::NMADD_F64x2 },
  { WebAssembly::NOP_S, WebAssembly::NOP },
  { WebAssembly::NOT_S, WebAssembly::NOT },
  { WebAssembly::OR_I32_S, WebAssembly::OR_I32 },
  { WebAssembly::OR_I64_S, WebAssembly::OR_I64 },
  { WebAssembly::OR_S, WebAssembly::OR },
  { WebAssembly::PMAX_F32x4_S, WebAssembly::PMAX_F32x4 },
  { WebAssembly::PMAX_F64x2_S, WebAssembly::PMAX_F64x2 },
  { WebAssembly::PMIN_F32x4_S, WebAssembly::PMIN_F32x4 },
  { WebAssembly::PMIN_F64x2_S, WebAssembly::PMIN_F64x2 },
  { WebAssembly::POPCNT_I32_S, WebAssembly::POPCNT_I32 },
  { WebAssembly::POPCNT_I64_S, WebAssembly::POPCNT_I64 },
  { WebAssembly::POPCNT_I8x16_S, WebAssembly::POPCNT_I8x16 },
  { WebAssembly::Q15MULR_SAT_S_I16x8_S, WebAssembly::Q15MULR_SAT_S_I16x8 },
  { WebAssembly::REF_IS_NULL_EXTERNREF_S, WebAssembly::REF_IS_NULL_EXTERNREF },
  { WebAssembly::REF_IS_NULL_FUNCREF_S, WebAssembly::REF_IS_NULL_FUNCREF },
  { WebAssembly::REF_NULL_EXTERNREF_S, WebAssembly::REF_NULL_EXTERNREF },
  { WebAssembly::REF_NULL_FUNCREF_S, WebAssembly::REF_NULL_FUNCREF },
  { WebAssembly::RELAXED_DOT_ADD_S, WebAssembly::RELAXED_DOT_ADD },
  { WebAssembly::RELAXED_DOT_BFLOAT_S, WebAssembly::RELAXED_DOT_BFLOAT },
  { WebAssembly::RELAXED_DOT_S, WebAssembly::RELAXED_DOT },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8_S, WebAssembly::RELAXED_Q15MULR_S_I16x8 },
  { WebAssembly::RELAXED_SWIZZLE_S, WebAssembly::RELAXED_SWIZZLE },
  { WebAssembly::REM_S_I32_S, WebAssembly::REM_S_I32 },
  { WebAssembly::REM_S_I64_S, WebAssembly::REM_S_I64 },
  { WebAssembly::REM_U_I32_S, WebAssembly::REM_U_I32 },
  { WebAssembly::REM_U_I64_S, WebAssembly::REM_U_I64 },
  { WebAssembly::REPLACE_LANE_F32x4_S, WebAssembly::REPLACE_LANE_F32x4 },
  { WebAssembly::REPLACE_LANE_F64x2_S, WebAssembly::REPLACE_LANE_F64x2 },
  { WebAssembly::REPLACE_LANE_I16x8_S, WebAssembly::REPLACE_LANE_I16x8 },
  { WebAssembly::REPLACE_LANE_I32x4_S, WebAssembly::REPLACE_LANE_I32x4 },
  { WebAssembly::REPLACE_LANE_I64x2_S, WebAssembly::REPLACE_LANE_I64x2 },
  { WebAssembly::REPLACE_LANE_I8x16_S, WebAssembly::REPLACE_LANE_I8x16 },
  { WebAssembly::RETHROW_S, WebAssembly::RETHROW },
  { WebAssembly::RETURN_S, WebAssembly::RETURN },
  { WebAssembly::RET_CALL_INDIRECT_S, WebAssembly::RET_CALL_INDIRECT },
  { WebAssembly::RET_CALL_S, WebAssembly::RET_CALL },
  { WebAssembly::ROTL_I32_S, WebAssembly::ROTL_I32 },
  { WebAssembly::ROTL_I64_S, WebAssembly::ROTL_I64 },
  { WebAssembly::ROTR_I32_S, WebAssembly::ROTR_I32 },
  { WebAssembly::ROTR_I64_S, WebAssembly::ROTR_I64 },
  { WebAssembly::SELECT_EXTERNREF_S, WebAssembly::SELECT_EXTERNREF },
  { WebAssembly::SELECT_F32_S, WebAssembly::SELECT_F32 },
  { WebAssembly::SELECT_F64_S, WebAssembly::SELECT_F64 },
  { WebAssembly::SELECT_FUNCREF_S, WebAssembly::SELECT_FUNCREF },
  { WebAssembly::SELECT_I32_S, WebAssembly::SELECT_I32 },
  { WebAssembly::SELECT_I64_S, WebAssembly::SELECT_I64 },
  { WebAssembly::SELECT_V128_S, WebAssembly::SELECT_V128 },
  { WebAssembly::SHL_I16x8_S, WebAssembly::SHL_I16x8 },
  { WebAssembly::SHL_I32_S, WebAssembly::SHL_I32 },
  { WebAssembly::SHL_I32x4_S, WebAssembly::SHL_I32x4 },
  { WebAssembly::SHL_I64_S, WebAssembly::SHL_I64 },
  { WebAssembly::SHL_I64x2_S, WebAssembly::SHL_I64x2 },
  { WebAssembly::SHL_I8x16_S, WebAssembly::SHL_I8x16 },
  { WebAssembly::SHR_S_I16x8_S, WebAssembly::SHR_S_I16x8 },
  { WebAssembly::SHR_S_I32_S, WebAssembly::SHR_S_I32 },
  { WebAssembly::SHR_S_I32x4_S, WebAssembly::SHR_S_I32x4 },
  { WebAssembly::SHR_S_I64_S, WebAssembly::SHR_S_I64 },
  { WebAssembly::SHR_S_I64x2_S, WebAssembly::SHR_S_I64x2 },
  { WebAssembly::SHR_S_I8x16_S, WebAssembly::SHR_S_I8x16 },
  { WebAssembly::SHR_U_I16x8_S, WebAssembly::SHR_U_I16x8 },
  { WebAssembly::SHR_U_I32_S, WebAssembly::SHR_U_I32 },
  { WebAssembly::SHR_U_I32x4_S, WebAssembly::SHR_U_I32x4 },
  { WebAssembly::SHR_U_I64_S, WebAssembly::SHR_U_I64 },
  { WebAssembly::SHR_U_I64x2_S, WebAssembly::SHR_U_I64x2 },
  { WebAssembly::SHR_U_I8x16_S, WebAssembly::SHR_U_I8x16 },
  { WebAssembly::SHUFFLE_S, WebAssembly::SHUFFLE },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4_S, WebAssembly::SIMD_RELAXED_FMAX_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2_S, WebAssembly::SIMD_RELAXED_FMAX_F64x2 },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4_S, WebAssembly::SIMD_RELAXED_FMIN_F32x4 },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2_S, WebAssembly::SIMD_RELAXED_FMIN_F64x2 },
  { WebAssembly::SPLAT_F32x4_S, WebAssembly::SPLAT_F32x4 },
  { WebAssembly::SPLAT_F64x2_S, WebAssembly::SPLAT_F64x2 },
  { WebAssembly::SPLAT_I16x8_S, WebAssembly::SPLAT_I16x8 },
  { WebAssembly::SPLAT_I32x4_S, WebAssembly::SPLAT_I32x4 },
  { WebAssembly::SPLAT_I64x2_S, WebAssembly::SPLAT_I64x2 },
  { WebAssembly::SPLAT_I8x16_S, WebAssembly::SPLAT_I8x16 },
  { WebAssembly::SQRT_F32_S, WebAssembly::SQRT_F32 },
  { WebAssembly::SQRT_F32x4_S, WebAssembly::SQRT_F32x4 },
  { WebAssembly::SQRT_F64_S, WebAssembly::SQRT_F64 },
  { WebAssembly::SQRT_F64x2_S, WebAssembly::SQRT_F64x2 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A32 },
  { WebAssembly::STORE16_I32_A64_S, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A32 },
  { WebAssembly::STORE16_I64_A64_S, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A32 },
  { WebAssembly::STORE32_I64_A64_S, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A32 },
  { WebAssembly::STORE8_I32_A64_S, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A32 },
  { WebAssembly::STORE8_I64_A64_S, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A32 },
  { WebAssembly::STORE_F32_A64_S, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A32 },
  { WebAssembly::STORE_F64_A64_S, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A32 },
  { WebAssembly::STORE_I32_A64_S, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A32 },
  { WebAssembly::STORE_I64_A64_S, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_LANE_I16x8_A32_S, WebAssembly::STORE_LANE_I16x8_A32 },
  { WebAssembly::STORE_LANE_I16x8_A64_S, WebAssembly::STORE_LANE_I16x8_A64 },
  { WebAssembly::STORE_LANE_I32x4_A32_S, WebAssembly::STORE_LANE_I32x4_A32 },
  { WebAssembly::STORE_LANE_I32x4_A64_S, WebAssembly::STORE_LANE_I32x4_A64 },
  { WebAssembly::STORE_LANE_I64x2_A32_S, WebAssembly::STORE_LANE_I64x2_A32 },
  { WebAssembly::STORE_LANE_I64x2_A64_S, WebAssembly::STORE_LANE_I64x2_A64 },
  { WebAssembly::STORE_LANE_I8x16_A32_S, WebAssembly::STORE_LANE_I8x16_A32 },
  { WebAssembly::STORE_LANE_I8x16_A64_S, WebAssembly::STORE_LANE_I8x16_A64 },
  { WebAssembly::STORE_V128_A32_S, WebAssembly::STORE_V128_A32 },
  { WebAssembly::STORE_V128_A64_S, WebAssembly::STORE_V128_A64 },
  { WebAssembly::SUB_F32_S, WebAssembly::SUB_F32 },
  { WebAssembly::SUB_F32x4_S, WebAssembly::SUB_F32x4 },
  { WebAssembly::SUB_F64_S, WebAssembly::SUB_F64 },
  { WebAssembly::SUB_F64x2_S, WebAssembly::SUB_F64x2 },
  { WebAssembly::SUB_I16x8_S, WebAssembly::SUB_I16x8 },
  { WebAssembly::SUB_I32_S, WebAssembly::SUB_I32 },
  { WebAssembly::SUB_I32x4_S, WebAssembly::SUB_I32x4 },
  { WebAssembly::SUB_I64_S, WebAssembly::SUB_I64 },
  { WebAssembly::SUB_I64x2_S, WebAssembly::SUB_I64x2 },
  { WebAssembly::SUB_I8x16_S, WebAssembly::SUB_I8x16 },
  { WebAssembly::SUB_SAT_S_I16x8_S, WebAssembly::SUB_SAT_S_I16x8 },
  { WebAssembly::SUB_SAT_S_I8x16_S, WebAssembly::SUB_SAT_S_I8x16 },
  { WebAssembly::SUB_SAT_U_I16x8_S, WebAssembly::SUB_SAT_U_I16x8 },
  { WebAssembly::SUB_SAT_U_I8x16_S, WebAssembly::SUB_SAT_U_I8x16 },
  { WebAssembly::SWIZZLE_S, WebAssembly::SWIZZLE },
  { WebAssembly::TABLE_COPY_S, WebAssembly::TABLE_COPY },
  { WebAssembly::TABLE_FILL_EXTERNREF_S, WebAssembly::TABLE_FILL_EXTERNREF },
  { WebAssembly::TABLE_FILL_FUNCREF_S, WebAssembly::TABLE_FILL_FUNCREF },
  { WebAssembly::TABLE_GET_EXTERNREF_S, WebAssembly::TABLE_GET_EXTERNREF },
  { WebAssembly::TABLE_GET_FUNCREF_S, WebAssembly::TABLE_GET_FUNCREF },
  { WebAssembly::TABLE_GROW_EXTERNREF_S, WebAssembly::TABLE_GROW_EXTERNREF },
  { WebAssembly::TABLE_GROW_FUNCREF_S, WebAssembly::TABLE_GROW_FUNCREF },
  { WebAssembly::TABLE_SET_EXTERNREF_S, WebAssembly::TABLE_SET_EXTERNREF },
  { WebAssembly::TABLE_SET_FUNCREF_S, WebAssembly::TABLE_SET_FUNCREF },
  { WebAssembly::TABLE_SIZE_S, WebAssembly::TABLE_SIZE },
  { WebAssembly::TEE_EXTERNREF_S, WebAssembly::TEE_EXTERNREF },
  { WebAssembly::TEE_F32_S, WebAssembly::TEE_F32 },
  { WebAssembly::TEE_F64_S, WebAssembly::TEE_F64 },
  { WebAssembly::TEE_FUNCREF_S, WebAssembly::TEE_FUNCREF },
  { WebAssembly::TEE_I32_S, WebAssembly::TEE_I32 },
  { WebAssembly::TEE_I64_S, WebAssembly::TEE_I64 },
  { WebAssembly::TEE_V128_S, WebAssembly::TEE_V128 },
  { WebAssembly::THROW_S, WebAssembly::THROW },
  { WebAssembly::TRUNC_F32_S, WebAssembly::TRUNC_F32 },
  { WebAssembly::TRUNC_F32x4_S, WebAssembly::TRUNC_F32x4 },
  { WebAssembly::TRUNC_F64_S, WebAssembly::TRUNC_F64 },
  { WebAssembly::TRUNC_F64x2_S, WebAssembly::TRUNC_F64x2 },
  { WebAssembly::TRY_S, WebAssembly::TRY },
  { WebAssembly::UNREACHABLE_S, WebAssembly::UNREACHABLE },
  { WebAssembly::XOR_I32_S, WebAssembly::XOR_I32 },
  { WebAssembly::XOR_I64_S, WebAssembly::XOR_I64 },
  { WebAssembly::XOR_S, WebAssembly::XOR },
  { WebAssembly::anonymous_4063MEMORY_GROW_A32_S, WebAssembly::anonymous_4063MEMORY_GROW_A32 },
  { WebAssembly::anonymous_4063MEMORY_SIZE_A32_S, WebAssembly::anonymous_4063MEMORY_SIZE_A32 },
  { WebAssembly::anonymous_4064MEMORY_GROW_A64_S, WebAssembly::anonymous_4064MEMORY_GROW_A64 },
  { WebAssembly::anonymous_4064MEMORY_SIZE_A64_S, WebAssembly::anonymous_4064MEMORY_SIZE_A64 },
  { WebAssembly::anonymous_4733DATA_DROP_S, WebAssembly::anonymous_4733DATA_DROP },
  { WebAssembly::anonymous_4733MEMORY_COPY_A32_S, WebAssembly::anonymous_4733MEMORY_COPY_A32 },
  { WebAssembly::anonymous_4733MEMORY_FILL_A32_S, WebAssembly::anonymous_4733MEMORY_FILL_A32 },
  { WebAssembly::anonymous_4733MEMORY_INIT_A32_S, WebAssembly::anonymous_4733MEMORY_INIT_A32 },
  { WebAssembly::anonymous_4734DATA_DROP_S, WebAssembly::anonymous_4734DATA_DROP },
  { WebAssembly::anonymous_4734MEMORY_COPY_A64_S, WebAssembly::anonymous_4734MEMORY_COPY_A64 },
  { WebAssembly::anonymous_4734MEMORY_FILL_A64_S, WebAssembly::anonymous_4734MEMORY_FILL_A64 },
  { WebAssembly::anonymous_4734MEMORY_INIT_A64_S, WebAssembly::anonymous_4734MEMORY_INIT_A64 },
  { WebAssembly::convert_low_s_F64x2_S, WebAssembly::convert_low_s_F64x2 },
  { WebAssembly::convert_low_u_F64x2_S, WebAssembly::convert_low_u_F64x2 },
  { WebAssembly::demote_zero_F32x4_S, WebAssembly::demote_zero_F32x4 },
  { WebAssembly::extend_high_s_I16x8_S, WebAssembly::extend_high_s_I16x8 },
  { WebAssembly::extend_high_s_I32x4_S, WebAssembly::extend_high_s_I32x4 },
  { WebAssembly::extend_high_s_I64x2_S, WebAssembly::extend_high_s_I64x2 },
  { WebAssembly::extend_high_u_I16x8_S, WebAssembly::extend_high_u_I16x8 },
  { WebAssembly::extend_high_u_I32x4_S, WebAssembly::extend_high_u_I32x4 },
  { WebAssembly::extend_high_u_I64x2_S, WebAssembly::extend_high_u_I64x2 },
  { WebAssembly::extend_low_s_I16x8_S, WebAssembly::extend_low_s_I16x8 },
  { WebAssembly::extend_low_s_I32x4_S, WebAssembly::extend_low_s_I32x4 },
  { WebAssembly::extend_low_s_I64x2_S, WebAssembly::extend_low_s_I64x2 },
  { WebAssembly::extend_low_u_I16x8_S, WebAssembly::extend_low_u_I16x8 },
  { WebAssembly::extend_low_u_I32x4_S, WebAssembly::extend_low_u_I32x4 },
  { WebAssembly::extend_low_u_I64x2_S, WebAssembly::extend_low_u_I64x2 },
  { WebAssembly::fp_to_sint_I32x4_S, WebAssembly::fp_to_sint_I32x4 },
  { WebAssembly::fp_to_uint_I32x4_S, WebAssembly::fp_to_uint_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8 },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4 },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4 },
  { WebAssembly::promote_low_F64x2_S, WebAssembly::promote_low_F64x2 },
  { WebAssembly::sint_to_fp_F32x4_S, WebAssembly::sint_to_fp_F32x4 },
  { WebAssembly::trunc_sat_zero_s_I32x4_S, WebAssembly::trunc_sat_zero_s_I32x4 },
  { WebAssembly::trunc_sat_zero_u_I32x4_S, WebAssembly::trunc_sat_zero_u_I32x4 },
  { WebAssembly::uint_to_fp_F32x4_S, WebAssembly::uint_to_fp_F32x4 },
}; // End of getRegisterOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getRegisterOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getRegisterOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getRegisterOpcodeTable[mid][1];
}

// getStackOpcode
LLVM_READONLY
int getStackOpcode(uint16_t Opcode) {
static const uint16_t getStackOpcodeTable[][2] = {
  { WebAssembly::CALL_PARAMS, WebAssembly::CALL_PARAMS_S },
  { WebAssembly::CALL_RESULTS, WebAssembly::CALL_RESULTS_S },
  { WebAssembly::CATCHRET, WebAssembly::CATCHRET_S },
  { WebAssembly::CLEANUPRET, WebAssembly::CLEANUPRET_S },
  { WebAssembly::COMPILER_FENCE, WebAssembly::COMPILER_FENCE_S },
  { WebAssembly::RET_CALL_RESULTS, WebAssembly::RET_CALL_RESULTS_S },
  { WebAssembly::ABS_F32, WebAssembly::ABS_F32_S },
  { WebAssembly::ABS_F32x4, WebAssembly::ABS_F32x4_S },
  { WebAssembly::ABS_F64, WebAssembly::ABS_F64_S },
  { WebAssembly::ABS_F64x2, WebAssembly::ABS_F64x2_S },
  { WebAssembly::ABS_I16x8, WebAssembly::ABS_I16x8_S },
  { WebAssembly::ABS_I32x4, WebAssembly::ABS_I32x4_S },
  { WebAssembly::ABS_I64x2, WebAssembly::ABS_I64x2_S },
  { WebAssembly::ABS_I8x16, WebAssembly::ABS_I8x16_S },
  { WebAssembly::ADD_F32, WebAssembly::ADD_F32_S },
  { WebAssembly::ADD_F32x4, WebAssembly::ADD_F32x4_S },
  { WebAssembly::ADD_F64, WebAssembly::ADD_F64_S },
  { WebAssembly::ADD_F64x2, WebAssembly::ADD_F64x2_S },
  { WebAssembly::ADD_I16x8, WebAssembly::ADD_I16x8_S },
  { WebAssembly::ADD_I32, WebAssembly::ADD_I32_S },
  { WebAssembly::ADD_I32x4, WebAssembly::ADD_I32x4_S },
  { WebAssembly::ADD_I64, WebAssembly::ADD_I64_S },
  { WebAssembly::ADD_I64x2, WebAssembly::ADD_I64x2_S },
  { WebAssembly::ADD_I8x16, WebAssembly::ADD_I8x16_S },
  { WebAssembly::ADD_SAT_S_I16x8, WebAssembly::ADD_SAT_S_I16x8_S },
  { WebAssembly::ADD_SAT_S_I8x16, WebAssembly::ADD_SAT_S_I8x16_S },
  { WebAssembly::ADD_SAT_U_I16x8, WebAssembly::ADD_SAT_U_I16x8_S },
  { WebAssembly::ADD_SAT_U_I8x16, WebAssembly::ADD_SAT_U_I8x16_S },
  { WebAssembly::ADJCALLSTACKDOWN, WebAssembly::ADJCALLSTACKDOWN_S },
  { WebAssembly::ADJCALLSTACKUP, WebAssembly::ADJCALLSTACKUP_S },
  { WebAssembly::ALLTRUE_I16x8, WebAssembly::ALLTRUE_I16x8_S },
  { WebAssembly::ALLTRUE_I32x4, WebAssembly::ALLTRUE_I32x4_S },
  { WebAssembly::ALLTRUE_I64x2, WebAssembly::ALLTRUE_I64x2_S },
  { WebAssembly::ALLTRUE_I8x16, WebAssembly::ALLTRUE_I8x16_S },
  { WebAssembly::AND, WebAssembly::AND_S },
  { WebAssembly::ANDNOT, WebAssembly::ANDNOT_S },
  { WebAssembly::AND_I32, WebAssembly::AND_I32_S },
  { WebAssembly::AND_I64, WebAssembly::AND_I64_S },
  { WebAssembly::ANYTRUE, WebAssembly::ANYTRUE_S },
  { WebAssembly::ARGUMENT_externref, WebAssembly::ARGUMENT_externref_S },
  { WebAssembly::ARGUMENT_f32, WebAssembly::ARGUMENT_f32_S },
  { WebAssembly::ARGUMENT_f64, WebAssembly::ARGUMENT_f64_S },
  { WebAssembly::ARGUMENT_funcref, WebAssembly::ARGUMENT_funcref_S },
  { WebAssembly::ARGUMENT_i32, WebAssembly::ARGUMENT_i32_S },
  { WebAssembly::ARGUMENT_i64, WebAssembly::ARGUMENT_i64_S },
  { WebAssembly::ARGUMENT_v16i8, WebAssembly::ARGUMENT_v16i8_S },
  { WebAssembly::ARGUMENT_v2f64, WebAssembly::ARGUMENT_v2f64_S },
  { WebAssembly::ARGUMENT_v2i64, WebAssembly::ARGUMENT_v2i64_S },
  { WebAssembly::ARGUMENT_v4f32, WebAssembly::ARGUMENT_v4f32_S },
  { WebAssembly::ARGUMENT_v4i32, WebAssembly::ARGUMENT_v4i32_S },
  { WebAssembly::ARGUMENT_v8i16, WebAssembly::ARGUMENT_v8i16_S },
  { WebAssembly::ATOMIC_FENCE, WebAssembly::ATOMIC_FENCE_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A64, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A64, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A64, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A64, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A64, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A32_S },
  { WebAssembly::ATOMIC_LOAD_I32_A64, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A32_S },
  { WebAssembly::ATOMIC_LOAD_I64_A64, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A64, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A64, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A64, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A64, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A64, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A64, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A64, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A64, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A64, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A64, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A64, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A64, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A64, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A64, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A64, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A64, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A64, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A64, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A64, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A64, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A64, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A32_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A64, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A32_S },
  { WebAssembly::ATOMIC_STORE16_I32_A64, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A32_S },
  { WebAssembly::ATOMIC_STORE16_I64_A64, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A32_S },
  { WebAssembly::ATOMIC_STORE32_I64_A64, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A32_S },
  { WebAssembly::ATOMIC_STORE8_I32_A64, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A32_S },
  { WebAssembly::ATOMIC_STORE8_I64_A64, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A32_S },
  { WebAssembly::ATOMIC_STORE_I32_A64, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A32_S },
  { WebAssembly::ATOMIC_STORE_I64_A64, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::AVGR_U_I16x8, WebAssembly::AVGR_U_I16x8_S },
  { WebAssembly::AVGR_U_I8x16, WebAssembly::AVGR_U_I8x16_S },
  { WebAssembly::BITMASK_I16x8, WebAssembly::BITMASK_I16x8_S },
  { WebAssembly::BITMASK_I32x4, WebAssembly::BITMASK_I32x4_S },
  { WebAssembly::BITMASK_I64x2, WebAssembly::BITMASK_I64x2_S },
  { WebAssembly::BITMASK_I8x16, WebAssembly::BITMASK_I8x16_S },
  { WebAssembly::BITSELECT, WebAssembly::BITSELECT_S },
  { WebAssembly::BLOCK, WebAssembly::BLOCK_S },
  { WebAssembly::BR, WebAssembly::BR_S },
  { WebAssembly::BR_IF, WebAssembly::BR_IF_S },
  { WebAssembly::BR_TABLE_I32, WebAssembly::BR_TABLE_I32_S },
  { WebAssembly::BR_TABLE_I64, WebAssembly::BR_TABLE_I64_S },
  { WebAssembly::BR_UNLESS, WebAssembly::BR_UNLESS_S },
  { WebAssembly::CALL, WebAssembly::CALL_S },
  { WebAssembly::CALL_INDIRECT, WebAssembly::CALL_INDIRECT_S },
  { WebAssembly::CATCH, WebAssembly::CATCH_S },
  { WebAssembly::CATCH_ALL, WebAssembly::CATCH_ALL_S },
  { WebAssembly::CEIL_F32, WebAssembly::CEIL_F32_S },
  { WebAssembly::CEIL_F32x4, WebAssembly::CEIL_F32x4_S },
  { WebAssembly::CEIL_F64, WebAssembly::CEIL_F64_S },
  { WebAssembly::CEIL_F64x2, WebAssembly::CEIL_F64x2_S },
  { WebAssembly::CLZ_I32, WebAssembly::CLZ_I32_S },
  { WebAssembly::CLZ_I64, WebAssembly::CLZ_I64_S },
  { WebAssembly::CONST_F32, WebAssembly::CONST_F32_S },
  { WebAssembly::CONST_F64, WebAssembly::CONST_F64_S },
  { WebAssembly::CONST_I32, WebAssembly::CONST_I32_S },
  { WebAssembly::CONST_I64, WebAssembly::CONST_I64_S },
  { WebAssembly::CONST_V128_F32x4, WebAssembly::CONST_V128_F32x4_S },
  { WebAssembly::CONST_V128_F64x2, WebAssembly::CONST_V128_F64x2_S },
  { WebAssembly::CONST_V128_I16x8, WebAssembly::CONST_V128_I16x8_S },
  { WebAssembly::CONST_V128_I32x4, WebAssembly::CONST_V128_I32x4_S },
  { WebAssembly::CONST_V128_I64x2, WebAssembly::CONST_V128_I64x2_S },
  { WebAssembly::CONST_V128_I8x16, WebAssembly::CONST_V128_I8x16_S },
  { WebAssembly::COPYSIGN_F32, WebAssembly::COPYSIGN_F32_S },
  { WebAssembly::COPYSIGN_F64, WebAssembly::COPYSIGN_F64_S },
  { WebAssembly::COPY_EXTERNREF, WebAssembly::COPY_EXTERNREF_S },
  { WebAssembly::COPY_F32, WebAssembly::COPY_F32_S },
  { WebAssembly::COPY_F64, WebAssembly::COPY_F64_S },
  { WebAssembly::COPY_FUNCREF, WebAssembly::COPY_FUNCREF_S },
  { WebAssembly::COPY_I32, WebAssembly::COPY_I32_S },
  { WebAssembly::COPY_I64, WebAssembly::COPY_I64_S },
  { WebAssembly::COPY_V128, WebAssembly::COPY_V128_S },
  { WebAssembly::CTZ_I32, WebAssembly::CTZ_I32_S },
  { WebAssembly::CTZ_I64, WebAssembly::CTZ_I64_S },
  { WebAssembly::DEBUG_UNREACHABLE, WebAssembly::DEBUG_UNREACHABLE_S },
  { WebAssembly::DELEGATE, WebAssembly::DELEGATE_S },
  { WebAssembly::DIV_F32, WebAssembly::DIV_F32_S },
  { WebAssembly::DIV_F32x4, WebAssembly::DIV_F32x4_S },
  { WebAssembly::DIV_F64, WebAssembly::DIV_F64_S },
  { WebAssembly::DIV_F64x2, WebAssembly::DIV_F64x2_S },
  { WebAssembly::DIV_S_I32, WebAssembly::DIV_S_I32_S },
  { WebAssembly::DIV_S_I64, WebAssembly::DIV_S_I64_S },
  { WebAssembly::DIV_U_I32, WebAssembly::DIV_U_I32_S },
  { WebAssembly::DIV_U_I64, WebAssembly::DIV_U_I64_S },
  { WebAssembly::DOT, WebAssembly::DOT_S },
  { WebAssembly::DROP_EXTERNREF, WebAssembly::DROP_EXTERNREF_S },
  { WebAssembly::DROP_F32, WebAssembly::DROP_F32_S },
  { WebAssembly::DROP_F64, WebAssembly::DROP_F64_S },
  { WebAssembly::DROP_FUNCREF, WebAssembly::DROP_FUNCREF_S },
  { WebAssembly::DROP_I32, WebAssembly::DROP_I32_S },
  { WebAssembly::DROP_I64, WebAssembly::DROP_I64_S },
  { WebAssembly::DROP_V128, WebAssembly::DROP_V128_S },
  { WebAssembly::ELSE, WebAssembly::ELSE_S },
  { WebAssembly::END, WebAssembly::END_S },
  { WebAssembly::END_BLOCK, WebAssembly::END_BLOCK_S },
  { WebAssembly::END_FUNCTION, WebAssembly::END_FUNCTION_S },
  { WebAssembly::END_IF, WebAssembly::END_IF_S },
  { WebAssembly::END_LOOP, WebAssembly::END_LOOP_S },
  { WebAssembly::END_TRY, WebAssembly::END_TRY_S },
  { WebAssembly::EQZ_I32, WebAssembly::EQZ_I32_S },
  { WebAssembly::EQZ_I64, WebAssembly::EQZ_I64_S },
  { WebAssembly::EQ_F32, WebAssembly::EQ_F32_S },
  { WebAssembly::EQ_F32x4, WebAssembly::EQ_F32x4_S },
  { WebAssembly::EQ_F64, WebAssembly::EQ_F64_S },
  { WebAssembly::EQ_F64x2, WebAssembly::EQ_F64x2_S },
  { WebAssembly::EQ_I16x8, WebAssembly::EQ_I16x8_S },
  { WebAssembly::EQ_I32, WebAssembly::EQ_I32_S },
  { WebAssembly::EQ_I32x4, WebAssembly::EQ_I32x4_S },
  { WebAssembly::EQ_I64, WebAssembly::EQ_I64_S },
  { WebAssembly::EQ_I64x2, WebAssembly::EQ_I64x2_S },
  { WebAssembly::EQ_I8x16, WebAssembly::EQ_I8x16_S },
  { WebAssembly::EXTMUL_HIGH_S_I16x8, WebAssembly::EXTMUL_HIGH_S_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_S_I32x4, WebAssembly::EXTMUL_HIGH_S_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_S_I64x2, WebAssembly::EXTMUL_HIGH_S_I64x2_S },
  { WebAssembly::EXTMUL_HIGH_U_I16x8, WebAssembly::EXTMUL_HIGH_U_I16x8_S },
  { WebAssembly::EXTMUL_HIGH_U_I32x4, WebAssembly::EXTMUL_HIGH_U_I32x4_S },
  { WebAssembly::EXTMUL_HIGH_U_I64x2, WebAssembly::EXTMUL_HIGH_U_I64x2_S },
  { WebAssembly::EXTMUL_LOW_S_I16x8, WebAssembly::EXTMUL_LOW_S_I16x8_S },
  { WebAssembly::EXTMUL_LOW_S_I32x4, WebAssembly::EXTMUL_LOW_S_I32x4_S },
  { WebAssembly::EXTMUL_LOW_S_I64x2, WebAssembly::EXTMUL_LOW_S_I64x2_S },
  { WebAssembly::EXTMUL_LOW_U_I16x8, WebAssembly::EXTMUL_LOW_U_I16x8_S },
  { WebAssembly::EXTMUL_LOW_U_I32x4, WebAssembly::EXTMUL_LOW_U_I32x4_S },
  { WebAssembly::EXTMUL_LOW_U_I64x2, WebAssembly::EXTMUL_LOW_U_I64x2_S },
  { WebAssembly::EXTRACT_LANE_F32x4, WebAssembly::EXTRACT_LANE_F32x4_S },
  { WebAssembly::EXTRACT_LANE_F64x2, WebAssembly::EXTRACT_LANE_F64x2_S },
  { WebAssembly::EXTRACT_LANE_I16x8_s, WebAssembly::EXTRACT_LANE_I16x8_s_S },
  { WebAssembly::EXTRACT_LANE_I16x8_u, WebAssembly::EXTRACT_LANE_I16x8_u_S },
  { WebAssembly::EXTRACT_LANE_I32x4, WebAssembly::EXTRACT_LANE_I32x4_S },
  { WebAssembly::EXTRACT_LANE_I64x2, WebAssembly::EXTRACT_LANE_I64x2_S },
  { WebAssembly::EXTRACT_LANE_I8x16_s, WebAssembly::EXTRACT_LANE_I8x16_s_S },
  { WebAssembly::EXTRACT_LANE_I8x16_u, WebAssembly::EXTRACT_LANE_I8x16_u_S },
  { WebAssembly::F32_CONVERT_S_I32, WebAssembly::F32_CONVERT_S_I32_S },
  { WebAssembly::F32_CONVERT_S_I64, WebAssembly::F32_CONVERT_S_I64_S },
  { WebAssembly::F32_CONVERT_U_I32, WebAssembly::F32_CONVERT_U_I32_S },
  { WebAssembly::F32_CONVERT_U_I64, WebAssembly::F32_CONVERT_U_I64_S },
  { WebAssembly::F32_DEMOTE_F64, WebAssembly::F32_DEMOTE_F64_S },
  { WebAssembly::F32_REINTERPRET_I32, WebAssembly::F32_REINTERPRET_I32_S },
  { WebAssembly::F64_CONVERT_S_I32, WebAssembly::F64_CONVERT_S_I32_S },
  { WebAssembly::F64_CONVERT_S_I64, WebAssembly::F64_CONVERT_S_I64_S },
  { WebAssembly::F64_CONVERT_U_I32, WebAssembly::F64_CONVERT_U_I32_S },
  { WebAssembly::F64_CONVERT_U_I64, WebAssembly::F64_CONVERT_U_I64_S },
  { WebAssembly::F64_PROMOTE_F32, WebAssembly::F64_PROMOTE_F32_S },
  { WebAssembly::F64_REINTERPRET_I64, WebAssembly::F64_REINTERPRET_I64_S },
  { WebAssembly::FALLTHROUGH_RETURN, WebAssembly::FALLTHROUGH_RETURN_S },
  { WebAssembly::FLOOR_F32, WebAssembly::FLOOR_F32_S },
  { WebAssembly::FLOOR_F32x4, WebAssembly::FLOOR_F32x4_S },
  { WebAssembly::FLOOR_F64, WebAssembly::FLOOR_F64_S },
  { WebAssembly::FLOOR_F64x2, WebAssembly::FLOOR_F64x2_S },
  { WebAssembly::FP_TO_SINT_I32_F32, WebAssembly::FP_TO_SINT_I32_F32_S },
  { WebAssembly::FP_TO_SINT_I32_F64, WebAssembly::FP_TO_SINT_I32_F64_S },
  { WebAssembly::FP_TO_SINT_I64_F32, WebAssembly::FP_TO_SINT_I64_F32_S },
  { WebAssembly::FP_TO_SINT_I64_F64, WebAssembly::FP_TO_SINT_I64_F64_S },
  { WebAssembly::FP_TO_UINT_I32_F32, WebAssembly::FP_TO_UINT_I32_F32_S },
  { WebAssembly::FP_TO_UINT_I32_F64, WebAssembly::FP_TO_UINT_I32_F64_S },
  { WebAssembly::FP_TO_UINT_I64_F32, WebAssembly::FP_TO_UINT_I64_F32_S },
  { WebAssembly::FP_TO_UINT_I64_F64, WebAssembly::FP_TO_UINT_I64_F64_S },
  { WebAssembly::GE_F32, WebAssembly::GE_F32_S },
  { WebAssembly::GE_F32x4, WebAssembly::GE_F32x4_S },
  { WebAssembly::GE_F64, WebAssembly::GE_F64_S },
  { WebAssembly::GE_F64x2, WebAssembly::GE_F64x2_S },
  { WebAssembly::GE_S_I16x8, WebAssembly::GE_S_I16x8_S },
  { WebAssembly::GE_S_I32, WebAssembly::GE_S_I32_S },
  { WebAssembly::GE_S_I32x4, WebAssembly::GE_S_I32x4_S },
  { WebAssembly::GE_S_I64, WebAssembly::GE_S_I64_S },
  { WebAssembly::GE_S_I64x2, WebAssembly::GE_S_I64x2_S },
  { WebAssembly::GE_S_I8x16, WebAssembly::GE_S_I8x16_S },
  { WebAssembly::GE_U_I16x8, WebAssembly::GE_U_I16x8_S },
  { WebAssembly::GE_U_I32, WebAssembly::GE_U_I32_S },
  { WebAssembly::GE_U_I32x4, WebAssembly::GE_U_I32x4_S },
  { WebAssembly::GE_U_I64, WebAssembly::GE_U_I64_S },
  { WebAssembly::GE_U_I8x16, WebAssembly::GE_U_I8x16_S },
  { WebAssembly::GLOBAL_GET_EXTERNREF, WebAssembly::GLOBAL_GET_EXTERNREF_S },
  { WebAssembly::GLOBAL_GET_F32, WebAssembly::GLOBAL_GET_F32_S },
  { WebAssembly::GLOBAL_GET_F64, WebAssembly::GLOBAL_GET_F64_S },
  { WebAssembly::GLOBAL_GET_FUNCREF, WebAssembly::GLOBAL_GET_FUNCREF_S },
  { WebAssembly::GLOBAL_GET_I32, WebAssembly::GLOBAL_GET_I32_S },
  { WebAssembly::GLOBAL_GET_I64, WebAssembly::GLOBAL_GET_I64_S },
  { WebAssembly::GLOBAL_GET_V128, WebAssembly::GLOBAL_GET_V128_S },
  { WebAssembly::GLOBAL_SET_EXTERNREF, WebAssembly::GLOBAL_SET_EXTERNREF_S },
  { WebAssembly::GLOBAL_SET_F32, WebAssembly::GLOBAL_SET_F32_S },
  { WebAssembly::GLOBAL_SET_F64, WebAssembly::GLOBAL_SET_F64_S },
  { WebAssembly::GLOBAL_SET_FUNCREF, WebAssembly::GLOBAL_SET_FUNCREF_S },
  { WebAssembly::GLOBAL_SET_I32, WebAssembly::GLOBAL_SET_I32_S },
  { WebAssembly::GLOBAL_SET_I64, WebAssembly::GLOBAL_SET_I64_S },
  { WebAssembly::GLOBAL_SET_V128, WebAssembly::GLOBAL_SET_V128_S },
  { WebAssembly::GT_F32, WebAssembly::GT_F32_S },
  { WebAssembly::GT_F32x4, WebAssembly::GT_F32x4_S },
  { WebAssembly::GT_F64, WebAssembly::GT_F64_S },
  { WebAssembly::GT_F64x2, WebAssembly::GT_F64x2_S },
  { WebAssembly::GT_S_I16x8, WebAssembly::GT_S_I16x8_S },
  { WebAssembly::GT_S_I32, WebAssembly::GT_S_I32_S },
  { WebAssembly::GT_S_I32x4, WebAssembly::GT_S_I32x4_S },
  { WebAssembly::GT_S_I64, WebAssembly::GT_S_I64_S },
  { WebAssembly::GT_S_I64x2, WebAssembly::GT_S_I64x2_S },
  { WebAssembly::GT_S_I8x16, WebAssembly::GT_S_I8x16_S },
  { WebAssembly::GT_U_I16x8, WebAssembly::GT_U_I16x8_S },
  { WebAssembly::GT_U_I32, WebAssembly::GT_U_I32_S },
  { WebAssembly::GT_U_I32x4, WebAssembly::GT_U_I32x4_S },
  { WebAssembly::GT_U_I64, WebAssembly::GT_U_I64_S },
  { WebAssembly::GT_U_I8x16, WebAssembly::GT_U_I8x16_S },
  { WebAssembly::I32_EXTEND16_S_I32, WebAssembly::I32_EXTEND16_S_I32_S },
  { WebAssembly::I32_EXTEND8_S_I32, WebAssembly::I32_EXTEND8_S_I32_S },
  { WebAssembly::I32_REINTERPRET_F32, WebAssembly::I32_REINTERPRET_F32_S },
  { WebAssembly::I32_TRUNC_S_F32, WebAssembly::I32_TRUNC_S_F32_S },
  { WebAssembly::I32_TRUNC_S_F64, WebAssembly::I32_TRUNC_S_F64_S },
  { WebAssembly::I32_TRUNC_S_SAT_F32, WebAssembly::I32_TRUNC_S_SAT_F32_S },
  { WebAssembly::I32_TRUNC_S_SAT_F64, WebAssembly::I32_TRUNC_S_SAT_F64_S },
  { WebAssembly::I32_TRUNC_U_F32, WebAssembly::I32_TRUNC_U_F32_S },
  { WebAssembly::I32_TRUNC_U_F64, WebAssembly::I32_TRUNC_U_F64_S },
  { WebAssembly::I32_TRUNC_U_SAT_F32, WebAssembly::I32_TRUNC_U_SAT_F32_S },
  { WebAssembly::I32_TRUNC_U_SAT_F64, WebAssembly::I32_TRUNC_U_SAT_F64_S },
  { WebAssembly::I32_WRAP_I64, WebAssembly::I32_WRAP_I64_S },
  { WebAssembly::I64_EXTEND16_S_I64, WebAssembly::I64_EXTEND16_S_I64_S },
  { WebAssembly::I64_EXTEND32_S_I64, WebAssembly::I64_EXTEND32_S_I64_S },
  { WebAssembly::I64_EXTEND8_S_I64, WebAssembly::I64_EXTEND8_S_I64_S },
  { WebAssembly::I64_EXTEND_S_I32, WebAssembly::I64_EXTEND_S_I32_S },
  { WebAssembly::I64_EXTEND_U_I32, WebAssembly::I64_EXTEND_U_I32_S },
  { WebAssembly::I64_REINTERPRET_F64, WebAssembly::I64_REINTERPRET_F64_S },
  { WebAssembly::I64_TRUNC_S_F32, WebAssembly::I64_TRUNC_S_F32_S },
  { WebAssembly::I64_TRUNC_S_F64, WebAssembly::I64_TRUNC_S_F64_S },
  { WebAssembly::I64_TRUNC_S_SAT_F32, WebAssembly::I64_TRUNC_S_SAT_F32_S },
  { WebAssembly::I64_TRUNC_S_SAT_F64, WebAssembly::I64_TRUNC_S_SAT_F64_S },
  { WebAssembly::I64_TRUNC_U_F32, WebAssembly::I64_TRUNC_U_F32_S },
  { WebAssembly::I64_TRUNC_U_F64, WebAssembly::I64_TRUNC_U_F64_S },
  { WebAssembly::I64_TRUNC_U_SAT_F32, WebAssembly::I64_TRUNC_U_SAT_F32_S },
  { WebAssembly::I64_TRUNC_U_SAT_F64, WebAssembly::I64_TRUNC_U_SAT_F64_S },
  { WebAssembly::IF, WebAssembly::IF_S },
  { WebAssembly::LANESELECT_I16x8, WebAssembly::LANESELECT_I16x8_S },
  { WebAssembly::LANESELECT_I32x4, WebAssembly::LANESELECT_I32x4_S },
  { WebAssembly::LANESELECT_I64x2, WebAssembly::LANESELECT_I64x2_S },
  { WebAssembly::LANESELECT_I8x16, WebAssembly::LANESELECT_I8x16_S },
  { WebAssembly::LE_F32, WebAssembly::LE_F32_S },
  { WebAssembly::LE_F32x4, WebAssembly::LE_F32x4_S },
  { WebAssembly::LE_F64, WebAssembly::LE_F64_S },
  { WebAssembly::LE_F64x2, WebAssembly::LE_F64x2_S },
  { WebAssembly::LE_S_I16x8, WebAssembly::LE_S_I16x8_S },
  { WebAssembly::LE_S_I32, WebAssembly::LE_S_I32_S },
  { WebAssembly::LE_S_I32x4, WebAssembly::LE_S_I32x4_S },
  { WebAssembly::LE_S_I64, WebAssembly::LE_S_I64_S },
  { WebAssembly::LE_S_I64x2, WebAssembly::LE_S_I64x2_S },
  { WebAssembly::LE_S_I8x16, WebAssembly::LE_S_I8x16_S },
  { WebAssembly::LE_U_I16x8, WebAssembly::LE_U_I16x8_S },
  { WebAssembly::LE_U_I32, WebAssembly::LE_U_I32_S },
  { WebAssembly::LE_U_I32x4, WebAssembly::LE_U_I32x4_S },
  { WebAssembly::LE_U_I64, WebAssembly::LE_U_I64_S },
  { WebAssembly::LE_U_I8x16, WebAssembly::LE_U_I8x16_S },
  { WebAssembly::LOAD16_SPLAT_A32, WebAssembly::LOAD16_SPLAT_A32_S },
  { WebAssembly::LOAD16_SPLAT_A64, WebAssembly::LOAD16_SPLAT_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A32_S },
  { WebAssembly::LOAD16_S_I32_A64, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A32_S },
  { WebAssembly::LOAD16_S_I64_A64, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A32_S },
  { WebAssembly::LOAD16_U_I32_A64, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A32_S },
  { WebAssembly::LOAD16_U_I64_A64, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_SPLAT_A32, WebAssembly::LOAD32_SPLAT_A32_S },
  { WebAssembly::LOAD32_SPLAT_A64, WebAssembly::LOAD32_SPLAT_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A32_S },
  { WebAssembly::LOAD32_S_I64_A64, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A32_S },
  { WebAssembly::LOAD32_U_I64_A64, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD64_SPLAT_A32, WebAssembly::LOAD64_SPLAT_A32_S },
  { WebAssembly::LOAD64_SPLAT_A64, WebAssembly::LOAD64_SPLAT_A64_S },
  { WebAssembly::LOAD8_SPLAT_A32, WebAssembly::LOAD8_SPLAT_A32_S },
  { WebAssembly::LOAD8_SPLAT_A64, WebAssembly::LOAD8_SPLAT_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A32_S },
  { WebAssembly::LOAD8_S_I32_A64, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A32_S },
  { WebAssembly::LOAD8_S_I64_A64, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A32_S },
  { WebAssembly::LOAD8_U_I32_A64, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A32_S },
  { WebAssembly::LOAD8_U_I64_A64, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A32, WebAssembly::LOAD_EXTEND_S_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I16x8_A64, WebAssembly::LOAD_EXTEND_S_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A32, WebAssembly::LOAD_EXTEND_S_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I32x4_A64, WebAssembly::LOAD_EXTEND_S_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A32, WebAssembly::LOAD_EXTEND_S_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_S_I64x2_A64, WebAssembly::LOAD_EXTEND_S_I64x2_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A32, WebAssembly::LOAD_EXTEND_U_I16x8_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I16x8_A64, WebAssembly::LOAD_EXTEND_U_I16x8_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A32, WebAssembly::LOAD_EXTEND_U_I32x4_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I32x4_A64, WebAssembly::LOAD_EXTEND_U_I32x4_A64_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A32, WebAssembly::LOAD_EXTEND_U_I64x2_A32_S },
  { WebAssembly::LOAD_EXTEND_U_I64x2_A64, WebAssembly::LOAD_EXTEND_U_I64x2_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A32_S },
  { WebAssembly::LOAD_F32_A64, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A32_S },
  { WebAssembly::LOAD_F64_A64, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A32_S },
  { WebAssembly::LOAD_I32_A64, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A32_S },
  { WebAssembly::LOAD_I64_A64, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::LOAD_LANE_I16x8_A32, WebAssembly::LOAD_LANE_I16x8_A32_S },
  { WebAssembly::LOAD_LANE_I16x8_A64, WebAssembly::LOAD_LANE_I16x8_A64_S },
  { WebAssembly::LOAD_LANE_I32x4_A32, WebAssembly::LOAD_LANE_I32x4_A32_S },
  { WebAssembly::LOAD_LANE_I32x4_A64, WebAssembly::LOAD_LANE_I32x4_A64_S },
  { WebAssembly::LOAD_LANE_I64x2_A32, WebAssembly::LOAD_LANE_I64x2_A32_S },
  { WebAssembly::LOAD_LANE_I64x2_A64, WebAssembly::LOAD_LANE_I64x2_A64_S },
  { WebAssembly::LOAD_LANE_I8x16_A32, WebAssembly::LOAD_LANE_I8x16_A32_S },
  { WebAssembly::LOAD_LANE_I8x16_A64, WebAssembly::LOAD_LANE_I8x16_A64_S },
  { WebAssembly::LOAD_V128_A32, WebAssembly::LOAD_V128_A32_S },
  { WebAssembly::LOAD_V128_A64, WebAssembly::LOAD_V128_A64_S },
  { WebAssembly::LOAD_ZERO_I32x4_A32, WebAssembly::LOAD_ZERO_I32x4_A32_S },
  { WebAssembly::LOAD_ZERO_I32x4_A64, WebAssembly::LOAD_ZERO_I32x4_A64_S },
  { WebAssembly::LOAD_ZERO_I64x2_A32, WebAssembly::LOAD_ZERO_I64x2_A32_S },
  { WebAssembly::LOAD_ZERO_I64x2_A64, WebAssembly::LOAD_ZERO_I64x2_A64_S },
  { WebAssembly::LOCAL_GET_EXTERNREF, WebAssembly::LOCAL_GET_EXTERNREF_S },
  { WebAssembly::LOCAL_GET_F32, WebAssembly::LOCAL_GET_F32_S },
  { WebAssembly::LOCAL_GET_F64, WebAssembly::LOCAL_GET_F64_S },
  { WebAssembly::LOCAL_GET_FUNCREF, WebAssembly::LOCAL_GET_FUNCREF_S },
  { WebAssembly::LOCAL_GET_I32, WebAssembly::LOCAL_GET_I32_S },
  { WebAssembly::LOCAL_GET_I64, WebAssembly::LOCAL_GET_I64_S },
  { WebAssembly::LOCAL_GET_V128, WebAssembly::LOCAL_GET_V128_S },
  { WebAssembly::LOCAL_SET_EXTERNREF, WebAssembly::LOCAL_SET_EXTERNREF_S },
  { WebAssembly::LOCAL_SET_F32, WebAssembly::LOCAL_SET_F32_S },
  { WebAssembly::LOCAL_SET_F64, WebAssembly::LOCAL_SET_F64_S },
  { WebAssembly::LOCAL_SET_FUNCREF, WebAssembly::LOCAL_SET_FUNCREF_S },
  { WebAssembly::LOCAL_SET_I32, WebAssembly::LOCAL_SET_I32_S },
  { WebAssembly::LOCAL_SET_I64, WebAssembly::LOCAL_SET_I64_S },
  { WebAssembly::LOCAL_SET_V128, WebAssembly::LOCAL_SET_V128_S },
  { WebAssembly::LOCAL_TEE_EXTERNREF, WebAssembly::LOCAL_TEE_EXTERNREF_S },
  { WebAssembly::LOCAL_TEE_F32, WebAssembly::LOCAL_TEE_F32_S },
  { WebAssembly::LOCAL_TEE_F64, WebAssembly::LOCAL_TEE_F64_S },
  { WebAssembly::LOCAL_TEE_FUNCREF, WebAssembly::LOCAL_TEE_FUNCREF_S },
  { WebAssembly::LOCAL_TEE_I32, WebAssembly::LOCAL_TEE_I32_S },
  { WebAssembly::LOCAL_TEE_I64, WebAssembly::LOCAL_TEE_I64_S },
  { WebAssembly::LOCAL_TEE_V128, WebAssembly::LOCAL_TEE_V128_S },
  { WebAssembly::LOOP, WebAssembly::LOOP_S },
  { WebAssembly::LT_F32, WebAssembly::LT_F32_S },
  { WebAssembly::LT_F32x4, WebAssembly::LT_F32x4_S },
  { WebAssembly::LT_F64, WebAssembly::LT_F64_S },
  { WebAssembly::LT_F64x2, WebAssembly::LT_F64x2_S },
  { WebAssembly::LT_S_I16x8, WebAssembly::LT_S_I16x8_S },
  { WebAssembly::LT_S_I32, WebAssembly::LT_S_I32_S },
  { WebAssembly::LT_S_I32x4, WebAssembly::LT_S_I32x4_S },
  { WebAssembly::LT_S_I64, WebAssembly::LT_S_I64_S },
  { WebAssembly::LT_S_I64x2, WebAssembly::LT_S_I64x2_S },
  { WebAssembly::LT_S_I8x16, WebAssembly::LT_S_I8x16_S },
  { WebAssembly::LT_U_I16x8, WebAssembly::LT_U_I16x8_S },
  { WebAssembly::LT_U_I32, WebAssembly::LT_U_I32_S },
  { WebAssembly::LT_U_I32x4, WebAssembly::LT_U_I32x4_S },
  { WebAssembly::LT_U_I64, WebAssembly::LT_U_I64_S },
  { WebAssembly::LT_U_I8x16, WebAssembly::LT_U_I8x16_S },
  { WebAssembly::MADD_F32x4, WebAssembly::MADD_F32x4_S },
  { WebAssembly::MADD_F64x2, WebAssembly::MADD_F64x2_S },
  { WebAssembly::MAX_F32, WebAssembly::MAX_F32_S },
  { WebAssembly::MAX_F32x4, WebAssembly::MAX_F32x4_S },
  { WebAssembly::MAX_F64, WebAssembly::MAX_F64_S },
  { WebAssembly::MAX_F64x2, WebAssembly::MAX_F64x2_S },
  { WebAssembly::MAX_S_I16x8, WebAssembly::MAX_S_I16x8_S },
  { WebAssembly::MAX_S_I32x4, WebAssembly::MAX_S_I32x4_S },
  { WebAssembly::MAX_S_I8x16, WebAssembly::MAX_S_I8x16_S },
  { WebAssembly::MAX_U_I16x8, WebAssembly::MAX_U_I16x8_S },
  { WebAssembly::MAX_U_I32x4, WebAssembly::MAX_U_I32x4_S },
  { WebAssembly::MAX_U_I8x16, WebAssembly::MAX_U_I8x16_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A64, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A64, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A64, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::MIN_F32, WebAssembly::MIN_F32_S },
  { WebAssembly::MIN_F32x4, WebAssembly::MIN_F32x4_S },
  { WebAssembly::MIN_F64, WebAssembly::MIN_F64_S },
  { WebAssembly::MIN_F64x2, WebAssembly::MIN_F64x2_S },
  { WebAssembly::MIN_S_I16x8, WebAssembly::MIN_S_I16x8_S },
  { WebAssembly::MIN_S_I32x4, WebAssembly::MIN_S_I32x4_S },
  { WebAssembly::MIN_S_I8x16, WebAssembly::MIN_S_I8x16_S },
  { WebAssembly::MIN_U_I16x8, WebAssembly::MIN_U_I16x8_S },
  { WebAssembly::MIN_U_I32x4, WebAssembly::MIN_U_I32x4_S },
  { WebAssembly::MIN_U_I8x16, WebAssembly::MIN_U_I8x16_S },
  { WebAssembly::MUL_F32, WebAssembly::MUL_F32_S },
  { WebAssembly::MUL_F32x4, WebAssembly::MUL_F32x4_S },
  { WebAssembly::MUL_F64, WebAssembly::MUL_F64_S },
  { WebAssembly::MUL_F64x2, WebAssembly::MUL_F64x2_S },
  { WebAssembly::MUL_I16x8, WebAssembly::MUL_I16x8_S },
  { WebAssembly::MUL_I32, WebAssembly::MUL_I32_S },
  { WebAssembly::MUL_I32x4, WebAssembly::MUL_I32x4_S },
  { WebAssembly::MUL_I64, WebAssembly::MUL_I64_S },
  { WebAssembly::MUL_I64x2, WebAssembly::MUL_I64x2_S },
  { WebAssembly::NARROW_S_I16x8, WebAssembly::NARROW_S_I16x8_S },
  { WebAssembly::NARROW_S_I8x16, WebAssembly::NARROW_S_I8x16_S },
  { WebAssembly::NARROW_U_I16x8, WebAssembly::NARROW_U_I16x8_S },
  { WebAssembly::NARROW_U_I8x16, WebAssembly::NARROW_U_I8x16_S },
  { WebAssembly::NEAREST_F32, WebAssembly::NEAREST_F32_S },
  { WebAssembly::NEAREST_F32x4, WebAssembly::NEAREST_F32x4_S },
  { WebAssembly::NEAREST_F64, WebAssembly::NEAREST_F64_S },
  { WebAssembly::NEAREST_F64x2, WebAssembly::NEAREST_F64x2_S },
  { WebAssembly::NEG_F32, WebAssembly::NEG_F32_S },
  { WebAssembly::NEG_F32x4, WebAssembly::NEG_F32x4_S },
  { WebAssembly::NEG_F64, WebAssembly::NEG_F64_S },
  { WebAssembly::NEG_F64x2, WebAssembly::NEG_F64x2_S },
  { WebAssembly::NEG_I16x8, WebAssembly::NEG_I16x8_S },
  { WebAssembly::NEG_I32x4, WebAssembly::NEG_I32x4_S },
  { WebAssembly::NEG_I64x2, WebAssembly::NEG_I64x2_S },
  { WebAssembly::NEG_I8x16, WebAssembly::NEG_I8x16_S },
  { WebAssembly::NE_F32, WebAssembly::NE_F32_S },
  { WebAssembly::NE_F32x4, WebAssembly::NE_F32x4_S },
  { WebAssembly::NE_F64, WebAssembly::NE_F64_S },
  { WebAssembly::NE_F64x2, WebAssembly::NE_F64x2_S },
  { WebAssembly::NE_I16x8, WebAssembly::NE_I16x8_S },
  { WebAssembly::NE_I32, WebAssembly::NE_I32_S },
  { WebAssembly::NE_I32x4, WebAssembly::NE_I32x4_S },
  { WebAssembly::NE_I64, WebAssembly::NE_I64_S },
  { WebAssembly::NE_I64x2, WebAssembly::NE_I64x2_S },
  { WebAssembly::NE_I8x16, WebAssembly::NE_I8x16_S },
  { WebAssembly::NMADD_F32x4, WebAssembly::NMADD_F32x4_S },
  { WebAssembly::NMADD_F64x2, WebAssembly::NMADD_F64x2_S },
  { WebAssembly::NOP, WebAssembly::NOP_S },
  { WebAssembly::NOT, WebAssembly::NOT_S },
  { WebAssembly::OR, WebAssembly::OR_S },
  { WebAssembly::OR_I32, WebAssembly::OR_I32_S },
  { WebAssembly::OR_I64, WebAssembly::OR_I64_S },
  { WebAssembly::PMAX_F32x4, WebAssembly::PMAX_F32x4_S },
  { WebAssembly::PMAX_F64x2, WebAssembly::PMAX_F64x2_S },
  { WebAssembly::PMIN_F32x4, WebAssembly::PMIN_F32x4_S },
  { WebAssembly::PMIN_F64x2, WebAssembly::PMIN_F64x2_S },
  { WebAssembly::POPCNT_I32, WebAssembly::POPCNT_I32_S },
  { WebAssembly::POPCNT_I64, WebAssembly::POPCNT_I64_S },
  { WebAssembly::POPCNT_I8x16, WebAssembly::POPCNT_I8x16_S },
  { WebAssembly::Q15MULR_SAT_S_I16x8, WebAssembly::Q15MULR_SAT_S_I16x8_S },
  { WebAssembly::REF_IS_NULL_EXTERNREF, WebAssembly::REF_IS_NULL_EXTERNREF_S },
  { WebAssembly::REF_IS_NULL_FUNCREF, WebAssembly::REF_IS_NULL_FUNCREF_S },
  { WebAssembly::REF_NULL_EXTERNREF, WebAssembly::REF_NULL_EXTERNREF_S },
  { WebAssembly::REF_NULL_FUNCREF, WebAssembly::REF_NULL_FUNCREF_S },
  { WebAssembly::RELAXED_DOT, WebAssembly::RELAXED_DOT_S },
  { WebAssembly::RELAXED_DOT_ADD, WebAssembly::RELAXED_DOT_ADD_S },
  { WebAssembly::RELAXED_DOT_BFLOAT, WebAssembly::RELAXED_DOT_BFLOAT_S },
  { WebAssembly::RELAXED_Q15MULR_S_I16x8, WebAssembly::RELAXED_Q15MULR_S_I16x8_S },
  { WebAssembly::RELAXED_SWIZZLE, WebAssembly::RELAXED_SWIZZLE_S },
  { WebAssembly::REM_S_I32, WebAssembly::REM_S_I32_S },
  { WebAssembly::REM_S_I64, WebAssembly::REM_S_I64_S },
  { WebAssembly::REM_U_I32, WebAssembly::REM_U_I32_S },
  { WebAssembly::REM_U_I64, WebAssembly::REM_U_I64_S },
  { WebAssembly::REPLACE_LANE_F32x4, WebAssembly::REPLACE_LANE_F32x4_S },
  { WebAssembly::REPLACE_LANE_F64x2, WebAssembly::REPLACE_LANE_F64x2_S },
  { WebAssembly::REPLACE_LANE_I16x8, WebAssembly::REPLACE_LANE_I16x8_S },
  { WebAssembly::REPLACE_LANE_I32x4, WebAssembly::REPLACE_LANE_I32x4_S },
  { WebAssembly::REPLACE_LANE_I64x2, WebAssembly::REPLACE_LANE_I64x2_S },
  { WebAssembly::REPLACE_LANE_I8x16, WebAssembly::REPLACE_LANE_I8x16_S },
  { WebAssembly::RETHROW, WebAssembly::RETHROW_S },
  { WebAssembly::RETURN, WebAssembly::RETURN_S },
  { WebAssembly::RET_CALL, WebAssembly::RET_CALL_S },
  { WebAssembly::RET_CALL_INDIRECT, WebAssembly::RET_CALL_INDIRECT_S },
  { WebAssembly::ROTL_I32, WebAssembly::ROTL_I32_S },
  { WebAssembly::ROTL_I64, WebAssembly::ROTL_I64_S },
  { WebAssembly::ROTR_I32, WebAssembly::ROTR_I32_S },
  { WebAssembly::ROTR_I64, WebAssembly::ROTR_I64_S },
  { WebAssembly::SELECT_EXTERNREF, WebAssembly::SELECT_EXTERNREF_S },
  { WebAssembly::SELECT_F32, WebAssembly::SELECT_F32_S },
  { WebAssembly::SELECT_F64, WebAssembly::SELECT_F64_S },
  { WebAssembly::SELECT_FUNCREF, WebAssembly::SELECT_FUNCREF_S },
  { WebAssembly::SELECT_I32, WebAssembly::SELECT_I32_S },
  { WebAssembly::SELECT_I64, WebAssembly::SELECT_I64_S },
  { WebAssembly::SELECT_V128, WebAssembly::SELECT_V128_S },
  { WebAssembly::SHL_I16x8, WebAssembly::SHL_I16x8_S },
  { WebAssembly::SHL_I32, WebAssembly::SHL_I32_S },
  { WebAssembly::SHL_I32x4, WebAssembly::SHL_I32x4_S },
  { WebAssembly::SHL_I64, WebAssembly::SHL_I64_S },
  { WebAssembly::SHL_I64x2, WebAssembly::SHL_I64x2_S },
  { WebAssembly::SHL_I8x16, WebAssembly::SHL_I8x16_S },
  { WebAssembly::SHR_S_I16x8, WebAssembly::SHR_S_I16x8_S },
  { WebAssembly::SHR_S_I32, WebAssembly::SHR_S_I32_S },
  { WebAssembly::SHR_S_I32x4, WebAssembly::SHR_S_I32x4_S },
  { WebAssembly::SHR_S_I64, WebAssembly::SHR_S_I64_S },
  { WebAssembly::SHR_S_I64x2, WebAssembly::SHR_S_I64x2_S },
  { WebAssembly::SHR_S_I8x16, WebAssembly::SHR_S_I8x16_S },
  { WebAssembly::SHR_U_I16x8, WebAssembly::SHR_U_I16x8_S },
  { WebAssembly::SHR_U_I32, WebAssembly::SHR_U_I32_S },
  { WebAssembly::SHR_U_I32x4, WebAssembly::SHR_U_I32x4_S },
  { WebAssembly::SHR_U_I64, WebAssembly::SHR_U_I64_S },
  { WebAssembly::SHR_U_I64x2, WebAssembly::SHR_U_I64x2_S },
  { WebAssembly::SHR_U_I8x16, WebAssembly::SHR_U_I8x16_S },
  { WebAssembly::SHUFFLE, WebAssembly::SHUFFLE_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F32x4, WebAssembly::SIMD_RELAXED_FMAX_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMAX_F64x2, WebAssembly::SIMD_RELAXED_FMAX_F64x2_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F32x4, WebAssembly::SIMD_RELAXED_FMIN_F32x4_S },
  { WebAssembly::SIMD_RELAXED_FMIN_F64x2, WebAssembly::SIMD_RELAXED_FMIN_F64x2_S },
  { WebAssembly::SPLAT_F32x4, WebAssembly::SPLAT_F32x4_S },
  { WebAssembly::SPLAT_F64x2, WebAssembly::SPLAT_F64x2_S },
  { WebAssembly::SPLAT_I16x8, WebAssembly::SPLAT_I16x8_S },
  { WebAssembly::SPLAT_I32x4, WebAssembly::SPLAT_I32x4_S },
  { WebAssembly::SPLAT_I64x2, WebAssembly::SPLAT_I64x2_S },
  { WebAssembly::SPLAT_I8x16, WebAssembly::SPLAT_I8x16_S },
  { WebAssembly::SQRT_F32, WebAssembly::SQRT_F32_S },
  { WebAssembly::SQRT_F32x4, WebAssembly::SQRT_F32x4_S },
  { WebAssembly::SQRT_F64, WebAssembly::SQRT_F64_S },
  { WebAssembly::SQRT_F64x2, WebAssembly::SQRT_F64x2_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A32_S },
  { WebAssembly::STORE16_I32_A64, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A32_S },
  { WebAssembly::STORE16_I64_A64, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A32_S },
  { WebAssembly::STORE32_I64_A64, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A32_S },
  { WebAssembly::STORE8_I32_A64, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A32_S },
  { WebAssembly::STORE8_I64_A64, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A32_S },
  { WebAssembly::STORE_F32_A64, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A32_S },
  { WebAssembly::STORE_F64_A64, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A32_S },
  { WebAssembly::STORE_I32_A64, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A32_S },
  { WebAssembly::STORE_I64_A64, WebAssembly::STORE_I64_A64_S },
  { WebAssembly::STORE_LANE_I16x8_A32, WebAssembly::STORE_LANE_I16x8_A32_S },
  { WebAssembly::STORE_LANE_I16x8_A64, WebAssembly::STORE_LANE_I16x8_A64_S },
  { WebAssembly::STORE_LANE_I32x4_A32, WebAssembly::STORE_LANE_I32x4_A32_S },
  { WebAssembly::STORE_LANE_I32x4_A64, WebAssembly::STORE_LANE_I32x4_A64_S },
  { WebAssembly::STORE_LANE_I64x2_A32, WebAssembly::STORE_LANE_I64x2_A32_S },
  { WebAssembly::STORE_LANE_I64x2_A64, WebAssembly::STORE_LANE_I64x2_A64_S },
  { WebAssembly::STORE_LANE_I8x16_A32, WebAssembly::STORE_LANE_I8x16_A32_S },
  { WebAssembly::STORE_LANE_I8x16_A64, WebAssembly::STORE_LANE_I8x16_A64_S },
  { WebAssembly::STORE_V128_A32, WebAssembly::STORE_V128_A32_S },
  { WebAssembly::STORE_V128_A64, WebAssembly::STORE_V128_A64_S },
  { WebAssembly::SUB_F32, WebAssembly::SUB_F32_S },
  { WebAssembly::SUB_F32x4, WebAssembly::SUB_F32x4_S },
  { WebAssembly::SUB_F64, WebAssembly::SUB_F64_S },
  { WebAssembly::SUB_F64x2, WebAssembly::SUB_F64x2_S },
  { WebAssembly::SUB_I16x8, WebAssembly::SUB_I16x8_S },
  { WebAssembly::SUB_I32, WebAssembly::SUB_I32_S },
  { WebAssembly::SUB_I32x4, WebAssembly::SUB_I32x4_S },
  { WebAssembly::SUB_I64, WebAssembly::SUB_I64_S },
  { WebAssembly::SUB_I64x2, WebAssembly::SUB_I64x2_S },
  { WebAssembly::SUB_I8x16, WebAssembly::SUB_I8x16_S },
  { WebAssembly::SUB_SAT_S_I16x8, WebAssembly::SUB_SAT_S_I16x8_S },
  { WebAssembly::SUB_SAT_S_I8x16, WebAssembly::SUB_SAT_S_I8x16_S },
  { WebAssembly::SUB_SAT_U_I16x8, WebAssembly::SUB_SAT_U_I16x8_S },
  { WebAssembly::SUB_SAT_U_I8x16, WebAssembly::SUB_SAT_U_I8x16_S },
  { WebAssembly::SWIZZLE, WebAssembly::SWIZZLE_S },
  { WebAssembly::TABLE_COPY, WebAssembly::TABLE_COPY_S },
  { WebAssembly::TABLE_FILL_EXTERNREF, WebAssembly::TABLE_FILL_EXTERNREF_S },
  { WebAssembly::TABLE_FILL_FUNCREF, WebAssembly::TABLE_FILL_FUNCREF_S },
  { WebAssembly::TABLE_GET_EXTERNREF, WebAssembly::TABLE_GET_EXTERNREF_S },
  { WebAssembly::TABLE_GET_FUNCREF, WebAssembly::TABLE_GET_FUNCREF_S },
  { WebAssembly::TABLE_GROW_EXTERNREF, WebAssembly::TABLE_GROW_EXTERNREF_S },
  { WebAssembly::TABLE_GROW_FUNCREF, WebAssembly::TABLE_GROW_FUNCREF_S },
  { WebAssembly::TABLE_SET_EXTERNREF, WebAssembly::TABLE_SET_EXTERNREF_S },
  { WebAssembly::TABLE_SET_FUNCREF, WebAssembly::TABLE_SET_FUNCREF_S },
  { WebAssembly::TABLE_SIZE, WebAssembly::TABLE_SIZE_S },
  { WebAssembly::TEE_EXTERNREF, WebAssembly::TEE_EXTERNREF_S },
  { WebAssembly::TEE_F32, WebAssembly::TEE_F32_S },
  { WebAssembly::TEE_F64, WebAssembly::TEE_F64_S },
  { WebAssembly::TEE_FUNCREF, WebAssembly::TEE_FUNCREF_S },
  { WebAssembly::TEE_I32, WebAssembly::TEE_I32_S },
  { WebAssembly::TEE_I64, WebAssembly::TEE_I64_S },
  { WebAssembly::TEE_V128, WebAssembly::TEE_V128_S },
  { WebAssembly::THROW, WebAssembly::THROW_S },
  { WebAssembly::TRUNC_F32, WebAssembly::TRUNC_F32_S },
  { WebAssembly::TRUNC_F32x4, WebAssembly::TRUNC_F32x4_S },
  { WebAssembly::TRUNC_F64, WebAssembly::TRUNC_F64_S },
  { WebAssembly::TRUNC_F64x2, WebAssembly::TRUNC_F64x2_S },
  { WebAssembly::TRY, WebAssembly::TRY_S },
  { WebAssembly::UNREACHABLE, WebAssembly::UNREACHABLE_S },
  { WebAssembly::XOR, WebAssembly::XOR_S },
  { WebAssembly::XOR_I32, WebAssembly::XOR_I32_S },
  { WebAssembly::XOR_I64, WebAssembly::XOR_I64_S },
  { WebAssembly::anonymous_4063MEMORY_GROW_A32, WebAssembly::anonymous_4063MEMORY_GROW_A32_S },
  { WebAssembly::anonymous_4063MEMORY_SIZE_A32, WebAssembly::anonymous_4063MEMORY_SIZE_A32_S },
  { WebAssembly::anonymous_4064MEMORY_GROW_A64, WebAssembly::anonymous_4064MEMORY_GROW_A64_S },
  { WebAssembly::anonymous_4064MEMORY_SIZE_A64, WebAssembly::anonymous_4064MEMORY_SIZE_A64_S },
  { WebAssembly::anonymous_4733DATA_DROP, WebAssembly::anonymous_4733DATA_DROP_S },
  { WebAssembly::anonymous_4733MEMORY_COPY_A32, WebAssembly::anonymous_4733MEMORY_COPY_A32_S },
  { WebAssembly::anonymous_4733MEMORY_FILL_A32, WebAssembly::anonymous_4733MEMORY_FILL_A32_S },
  { WebAssembly::anonymous_4733MEMORY_INIT_A32, WebAssembly::anonymous_4733MEMORY_INIT_A32_S },
  { WebAssembly::anonymous_4734DATA_DROP, WebAssembly::anonymous_4734DATA_DROP_S },
  { WebAssembly::anonymous_4734MEMORY_COPY_A64, WebAssembly::anonymous_4734MEMORY_COPY_A64_S },
  { WebAssembly::anonymous_4734MEMORY_FILL_A64, WebAssembly::anonymous_4734MEMORY_FILL_A64_S },
  { WebAssembly::anonymous_4734MEMORY_INIT_A64, WebAssembly::anonymous_4734MEMORY_INIT_A64_S },
  { WebAssembly::convert_low_s_F64x2, WebAssembly::convert_low_s_F64x2_S },
  { WebAssembly::convert_low_u_F64x2, WebAssembly::convert_low_u_F64x2_S },
  { WebAssembly::demote_zero_F32x4, WebAssembly::demote_zero_F32x4_S },
  { WebAssembly::extend_high_s_I16x8, WebAssembly::extend_high_s_I16x8_S },
  { WebAssembly::extend_high_s_I32x4, WebAssembly::extend_high_s_I32x4_S },
  { WebAssembly::extend_high_s_I64x2, WebAssembly::extend_high_s_I64x2_S },
  { WebAssembly::extend_high_u_I16x8, WebAssembly::extend_high_u_I16x8_S },
  { WebAssembly::extend_high_u_I32x4, WebAssembly::extend_high_u_I32x4_S },
  { WebAssembly::extend_high_u_I64x2, WebAssembly::extend_high_u_I64x2_S },
  { WebAssembly::extend_low_s_I16x8, WebAssembly::extend_low_s_I16x8_S },
  { WebAssembly::extend_low_s_I32x4, WebAssembly::extend_low_s_I32x4_S },
  { WebAssembly::extend_low_s_I64x2, WebAssembly::extend_low_s_I64x2_S },
  { WebAssembly::extend_low_u_I16x8, WebAssembly::extend_low_u_I16x8_S },
  { WebAssembly::extend_low_u_I32x4, WebAssembly::extend_low_u_I32x4_S },
  { WebAssembly::extend_low_u_I64x2, WebAssembly::extend_low_u_I64x2_S },
  { WebAssembly::fp_to_sint_I32x4, WebAssembly::fp_to_sint_I32x4_S },
  { WebAssembly::fp_to_uint_I32x4, WebAssembly::fp_to_uint_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I16x8, WebAssembly::int_wasm_extadd_pairwise_signed_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_signed_I32x4, WebAssembly::int_wasm_extadd_pairwise_signed_I32x4_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8, WebAssembly::int_wasm_extadd_pairwise_unsigned_I16x8_S },
  { WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4, WebAssembly::int_wasm_extadd_pairwise_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_signed_zero_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_I32x4_S },
  { WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4, WebAssembly::int_wasm_relaxed_trunc_unsigned_zero_I32x4_S },
  { WebAssembly::promote_low_F64x2, WebAssembly::promote_low_F64x2_S },
  { WebAssembly::sint_to_fp_F32x4, WebAssembly::sint_to_fp_F32x4_S },
  { WebAssembly::trunc_sat_zero_s_I32x4, WebAssembly::trunc_sat_zero_s_I32x4_S },
  { WebAssembly::trunc_sat_zero_u_I32x4, WebAssembly::trunc_sat_zero_u_I32x4_S },
  { WebAssembly::uint_to_fp_F32x4, WebAssembly::uint_to_fp_F32x4_S },
}; // End of getStackOpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 750;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getStackOpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getStackOpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getStackOpcodeTable[mid][1];
}

// getWasm64Opcode
LLVM_READONLY
int getWasm64Opcode(uint16_t Opcode) {
static const uint16_t getWasm64OpcodeTable[][2] = {
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32, WebAssembly::ATOMIC_LOAD16_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I32_A32_S, WebAssembly::ATOMIC_LOAD16_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32, WebAssembly::ATOMIC_LOAD16_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD16_U_I64_A32_S, WebAssembly::ATOMIC_LOAD16_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32, WebAssembly::ATOMIC_LOAD32_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD32_U_I64_A32_S, WebAssembly::ATOMIC_LOAD32_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32, WebAssembly::ATOMIC_LOAD8_U_I32_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I32_A32_S, WebAssembly::ATOMIC_LOAD8_U_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32, WebAssembly::ATOMIC_LOAD8_U_I64_A64 },
  { WebAssembly::ATOMIC_LOAD8_U_I64_A32_S, WebAssembly::ATOMIC_LOAD8_U_I64_A64_S },
  { WebAssembly::ATOMIC_LOAD_I32_A32, WebAssembly::ATOMIC_LOAD_I32_A64 },
  { WebAssembly::ATOMIC_LOAD_I32_A32_S, WebAssembly::ATOMIC_LOAD_I32_A64_S },
  { WebAssembly::ATOMIC_LOAD_I64_A32, WebAssembly::ATOMIC_LOAD_I64_A64 },
  { WebAssembly::ATOMIC_LOAD_I64_A32_S, WebAssembly::ATOMIC_LOAD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW16_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW16_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW32_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW32_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_AND_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_OR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW8_U_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW8_U_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32, WebAssembly::ATOMIC_RMW_ADD_I32_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I32_A32_S, WebAssembly::ATOMIC_RMW_ADD_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32, WebAssembly::ATOMIC_RMW_ADD_I64_A64 },
  { WebAssembly::ATOMIC_RMW_ADD_I64_A32_S, WebAssembly::ATOMIC_RMW_ADD_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32, WebAssembly::ATOMIC_RMW_AND_I32_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I32_A32_S, WebAssembly::ATOMIC_RMW_AND_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32, WebAssembly::ATOMIC_RMW_AND_I64_A64 },
  { WebAssembly::ATOMIC_RMW_AND_I64_A32_S, WebAssembly::ATOMIC_RMW_AND_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_CMPXCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32, WebAssembly::ATOMIC_RMW_OR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I32_A32_S, WebAssembly::ATOMIC_RMW_OR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32, WebAssembly::ATOMIC_RMW_OR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_OR_I64_A32_S, WebAssembly::ATOMIC_RMW_OR_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32, WebAssembly::ATOMIC_RMW_SUB_I32_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I32_A32_S, WebAssembly::ATOMIC_RMW_SUB_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32, WebAssembly::ATOMIC_RMW_SUB_I64_A64 },
  { WebAssembly::ATOMIC_RMW_SUB_I64_A32_S, WebAssembly::ATOMIC_RMW_SUB_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32, WebAssembly::ATOMIC_RMW_XCHG_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I32_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32, WebAssembly::ATOMIC_RMW_XCHG_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XCHG_I64_A32_S, WebAssembly::ATOMIC_RMW_XCHG_I64_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32, WebAssembly::ATOMIC_RMW_XOR_I32_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I32_A32_S, WebAssembly::ATOMIC_RMW_XOR_I32_A64_S },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32, WebAssembly::ATOMIC_RMW_XOR_I64_A64 },
  { WebAssembly::ATOMIC_RMW_XOR_I64_A32_S, WebAssembly::ATOMIC_RMW_XOR_I64_A64_S },
  { WebAssembly::ATOMIC_STORE16_I32_A32, WebAssembly::ATOMIC_STORE16_I32_A64 },
  { WebAssembly::ATOMIC_STORE16_I32_A32_S, WebAssembly::ATOMIC_STORE16_I32_A64_S },
  { WebAssembly::ATOMIC_STORE16_I64_A32, WebAssembly::ATOMIC_STORE16_I64_A64 },
  { WebAssembly::ATOMIC_STORE16_I64_A32_S, WebAssembly::ATOMIC_STORE16_I64_A64_S },
  { WebAssembly::ATOMIC_STORE32_I64_A32, WebAssembly::ATOMIC_STORE32_I64_A64 },
  { WebAssembly::ATOMIC_STORE32_I64_A32_S, WebAssembly::ATOMIC_STORE32_I64_A64_S },
  { WebAssembly::ATOMIC_STORE8_I32_A32, WebAssembly::ATOMIC_STORE8_I32_A64 },
  { WebAssembly::ATOMIC_STORE8_I32_A32_S, WebAssembly::ATOMIC_STORE8_I32_A64_S },
  { WebAssembly::ATOMIC_STORE8_I64_A32, WebAssembly::ATOMIC_STORE8_I64_A64 },
  { WebAssembly::ATOMIC_STORE8_I64_A32_S, WebAssembly::ATOMIC_STORE8_I64_A64_S },
  { WebAssembly::ATOMIC_STORE_I32_A32, WebAssembly::ATOMIC_STORE_I32_A64 },
  { WebAssembly::ATOMIC_STORE_I32_A32_S, WebAssembly::ATOMIC_STORE_I32_A64_S },
  { WebAssembly::ATOMIC_STORE_I64_A32, WebAssembly::ATOMIC_STORE_I64_A64 },
  { WebAssembly::ATOMIC_STORE_I64_A32_S, WebAssembly::ATOMIC_STORE_I64_A64_S },
  { WebAssembly::LOAD16_S_I32_A32, WebAssembly::LOAD16_S_I32_A64 },
  { WebAssembly::LOAD16_S_I32_A32_S, WebAssembly::LOAD16_S_I32_A64_S },
  { WebAssembly::LOAD16_S_I64_A32, WebAssembly::LOAD16_S_I64_A64 },
  { WebAssembly::LOAD16_S_I64_A32_S, WebAssembly::LOAD16_S_I64_A64_S },
  { WebAssembly::LOAD16_U_I32_A32, WebAssembly::LOAD16_U_I32_A64 },
  { WebAssembly::LOAD16_U_I32_A32_S, WebAssembly::LOAD16_U_I32_A64_S },
  { WebAssembly::LOAD16_U_I64_A32, WebAssembly::LOAD16_U_I64_A64 },
  { WebAssembly::LOAD16_U_I64_A32_S, WebAssembly::LOAD16_U_I64_A64_S },
  { WebAssembly::LOAD32_S_I64_A32, WebAssembly::LOAD32_S_I64_A64 },
  { WebAssembly::LOAD32_S_I64_A32_S, WebAssembly::LOAD32_S_I64_A64_S },
  { WebAssembly::LOAD32_U_I64_A32, WebAssembly::LOAD32_U_I64_A64 },
  { WebAssembly::LOAD32_U_I64_A32_S, WebAssembly::LOAD32_U_I64_A64_S },
  { WebAssembly::LOAD8_S_I32_A32, WebAssembly::LOAD8_S_I32_A64 },
  { WebAssembly::LOAD8_S_I32_A32_S, WebAssembly::LOAD8_S_I32_A64_S },
  { WebAssembly::LOAD8_S_I64_A32, WebAssembly::LOAD8_S_I64_A64 },
  { WebAssembly::LOAD8_S_I64_A32_S, WebAssembly::LOAD8_S_I64_A64_S },
  { WebAssembly::LOAD8_U_I32_A32, WebAssembly::LOAD8_U_I32_A64 },
  { WebAssembly::LOAD8_U_I32_A32_S, WebAssembly::LOAD8_U_I32_A64_S },
  { WebAssembly::LOAD8_U_I64_A32, WebAssembly::LOAD8_U_I64_A64 },
  { WebAssembly::LOAD8_U_I64_A32_S, WebAssembly::LOAD8_U_I64_A64_S },
  { WebAssembly::LOAD_F32_A32, WebAssembly::LOAD_F32_A64 },
  { WebAssembly::LOAD_F32_A32_S, WebAssembly::LOAD_F32_A64_S },
  { WebAssembly::LOAD_F64_A32, WebAssembly::LOAD_F64_A64 },
  { WebAssembly::LOAD_F64_A32_S, WebAssembly::LOAD_F64_A64_S },
  { WebAssembly::LOAD_I32_A32, WebAssembly::LOAD_I32_A64 },
  { WebAssembly::LOAD_I32_A32_S, WebAssembly::LOAD_I32_A64_S },
  { WebAssembly::LOAD_I64_A32, WebAssembly::LOAD_I64_A64 },
  { WebAssembly::LOAD_I64_A32_S, WebAssembly::LOAD_I64_A64_S },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64 },
  { WebAssembly::MEMORY_ATOMIC_NOTIFY_A32_S, WebAssembly::MEMORY_ATOMIC_NOTIFY_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32, WebAssembly::MEMORY_ATOMIC_WAIT32_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT32_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT32_A64_S },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32, WebAssembly::MEMORY_ATOMIC_WAIT64_A64 },
  { WebAssembly::MEMORY_ATOMIC_WAIT64_A32_S, WebAssembly::MEMORY_ATOMIC_WAIT64_A64_S },
  { WebAssembly::STORE16_I32_A32, WebAssembly::STORE16_I32_A64 },
  { WebAssembly::STORE16_I32_A32_S, WebAssembly::STORE16_I32_A64_S },
  { WebAssembly::STORE16_I64_A32, WebAssembly::STORE16_I64_A64 },
  { WebAssembly::STORE16_I64_A32_S, WebAssembly::STORE16_I64_A64_S },
  { WebAssembly::STORE32_I64_A32, WebAssembly::STORE32_I64_A64 },
  { WebAssembly::STORE32_I64_A32_S, WebAssembly::STORE32_I64_A64_S },
  { WebAssembly::STORE8_I32_A32, WebAssembly::STORE8_I32_A64 },
  { WebAssembly::STORE8_I32_A32_S, WebAssembly::STORE8_I32_A64_S },
  { WebAssembly::STORE8_I64_A32, WebAssembly::STORE8_I64_A64 },
  { WebAssembly::STORE8_I64_A32_S, WebAssembly::STORE8_I64_A64_S },
  { WebAssembly::STORE_F32_A32, WebAssembly::STORE_F32_A64 },
  { WebAssembly::STORE_F32_A32_S, WebAssembly::STORE_F32_A64_S },
  { WebAssembly::STORE_F64_A32, WebAssembly::STORE_F64_A64 },
  { WebAssembly::STORE_F64_A32_S, WebAssembly::STORE_F64_A64_S },
  { WebAssembly::STORE_I32_A32, WebAssembly::STORE_I32_A64 },
  { WebAssembly::STORE_I32_A32_S, WebAssembly::STORE_I32_A64_S },
  { WebAssembly::STORE_I64_A32, WebAssembly::STORE_I64_A64 },
  { WebAssembly::STORE_I64_A32_S, WebAssembly::STORE_I64_A64_S },
}; // End of getWasm64OpcodeTable

  unsigned mid;
  unsigned start = 0;
  unsigned end = 178;
  while (start < end) {
    mid = start + (end - start) / 2;
    if (Opcode == getWasm64OpcodeTable[mid][0]) {
      break;
    }
    if (Opcode < getWasm64OpcodeTable[mid][0])
      end = mid;
    else
      start = mid + 1;
  }
  if (start == end)
    return -1; // Instruction doesn't exist in this table.

  return getWasm64OpcodeTable[mid][1];
}

} // end namespace WebAssembly
} // end namespace llvm
#endif // GET_INSTRMAP_INFO

